<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CallbackBehaviorAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845520565d708e2a5336dbde4b105a86c836c7c5eda53.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0565d708e2a5336dbde4b105a86c836c7c5eda53</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>Configures a callback service implementation in a client application.</source>
          <target state="translated">設定在用戶端應用程式中的回呼服務實作。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> attribute to configure or extend the execution behavior of a callback contract implementation in a client application.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 屬性，即可設定或擴充用戶端應用程式中回呼合約實作的執行行為。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>This attribute performs the same function for the callback class as the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute with the exception of instancing behavior and transaction settings.</source>
          <target state="translated">這個屬性對回呼類別執行的函式相同於 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 屬性，而執行個體化行為和交易設定則為其例外。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> must be applied to the class that implements the callback contract.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 必須套用至實作回呼合約的類別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>If applied to a non-duplex contract implementation an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown at runtime.</source>
          <target state="translated">如果套用至非雙工合約實作，便會在執行階段擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 例外狀況。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>You can also use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> attribute for the callback operation implementations.</source>
          <target state="translated">您也可以對回呼作業實作使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>However, if <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> is used on a callback operation, the <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property must be <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None&gt;</ph> or an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown at runtime.</source>
          <target state="translated">然而，如果 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> 是用在回呼作業上，<ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> 屬性必須是 <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None&gt;</ph>，否則會在執行階段擲回 <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph> 例外狀況。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The following properties are available:</source>
          <target state="translated">同時會提供下列屬性：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> property automatically closes the session when the channel is closed and the callback has finished processing any remaining messages.</source>
          <target state="translated">當通道關閉，而且回呼已完成處理任何剩餘的訊息時，<ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> 屬性便會自動關閉工作階段。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> property controls the internal threading model, enabling support for reentrant or multithreaded callback objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> 屬性會控制內部執行緒模型，以便支援可重新進入 (Reentrant) 或多執行緒回呼的物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> property enables the runtime to ignore extra serialization information that is not required to process the message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> 屬性會讓執行階段略過不是處理訊息時所需要的額外序列化資訊。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property specifies whether unhandled exceptions in a service are returned to the service as SOAP faults for debugging purposes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 屬性會指定服務中未處理的例外狀況，是否會因應偵錯用途而當做 SOAP 錯誤傳回至服務。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> property limits on the number of items in an object graph that are serialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> 屬性會限制物件圖形中已序列化項目的數目。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel%2A&gt;</ph> property specifies the transaction isolation level that the contract supports.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel%2A&gt;</ph> 屬性會指定合約支援的交易隔離等級。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout%2A&gt;</ph> property specifies the time period within which a transaction must complete or it aborts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout%2A&gt;</ph> 屬性會指定交易必須在該段期間完成、否則就會中止的時間間隔。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> property indicates whether to synchronize inbound method calls automatically using the current <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> 屬性會指出是否要使用目前的 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> 物件，自動同步處理傳入方法呼叫。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property informs the system whether it should confirm that SOAP headers marked as <ph id="ph2">`MustUnderstand`</ph> have, in fact, been understood.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性會通知系統是否要確認已實際瞭解標示為 <ph id="ph2">`MustUnderstand`</ph> 的 SOAP 標頭。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.CallbackBehaviorAttribute">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> on a callback object that uses the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object to determine which thread to marshal to, the <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to enforce message validation, and the <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property to return exceptions as <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects to the service for debugging purposes.</source>
          <target state="translated">下列程式碼範例會顯示回呼物件 (它使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 物件判斷要封送處理的執行緒) 的 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph>、可執行訊息驗證的 <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性，以及可將例外狀況當做 <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 物件傳回服務以進行偵錯的 <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.CallbackBehaviorAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.CallbackBehaviorAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source>The default settings for the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> are:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 的預設設定為：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> 屬性為 <ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> 已設為 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> 屬性為 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 為 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> 為 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性為 <ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> on a callback object that uses the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object to determine which thread to marshal to, the <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to enforce message validation, and the <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property to return exceptions as <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects to the service for debugging purposes.</source>
          <target state="translated">下列程式碼範例會顯示回呼物件 (它使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 物件判斷要封送處理的執行緒) 的 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph>、可執行訊息驗證的 <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性，以及可將例外狀況當做 <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 物件傳回服務以進行偵錯的 <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
          <source>Specifies whether to automatically close a session when a service closes a duplex session.</source>
          <target state="translated">指定是否要在服務關閉雙工工作階段時自動關閉工作階段。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if duplex callback objects automatically close a session when the service closes a duplex session; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果雙工回呼物件會在服務關閉雙工工作階段時自動關閉工作階段，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
          <source>By default, when a service closes a duplex session and the callback has finished processing any remaining messages, the callback closes the session.</source>
          <target state="translated">根據預設，當服務關閉雙工工作階段且回呼已完成處理任何剩餘的訊息時，回呼便會關閉工作階段。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> to <ph id="ph2">`false`</ph> prevents the client from automatically closing the session.</source>
          <target state="translated">將 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> 設定為 <ph id="ph2">`false`</ph>，可防止用戶端自動關閉工作階段。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.</source>
          <target state="translated">取得或設定服務是支援單一執行緒、多重執行緒或可重新進入的呼叫。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> values; the default is <ph id="ph2">&lt;see cref="F:System.ServiceModel.ConcurrencyMode.Single" /&gt;</ph>.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> 值，預設值為 <ph id="ph2">&lt;see cref="F:System.ServiceModel.ConcurrencyMode.Single" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>This property indicates whether an instance of a callback object supports one thread or multiple threads that execute concurrently, and if single-threaded, whether reentrancy is supported.</source>
          <target state="translated">這個屬性會指出回呼物件的執行個體是支援單一執行緒或同時執行的多重執行緒，以及在遇到單一執行緒時，是否會支援重新進入。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> to <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph> instructs the system to restrict instances of the service to one thread of execution at a time, which frees you from dealing with threading issues.</source>
          <target state="translated">將 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> 設定為 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>，便會指示系統要將服務的執行個體限制為一次執行一個執行緒，這樣您就不需要處理執行緒問題。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>This is the default value.</source>
          <target state="translated">這是預設值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>A value of <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph> means that service objects can be executed by multiple threads at any one time.</source>
          <target state="translated">值為 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph> 時，表示服務物件可在任何時間由多個執行緒執行。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>In this case, you must ensure thread safety and state consistency.</source>
          <target state="translated">在這種情況下，您必須確定執行緒安全和狀態一致性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph> also restricts access to a single thread at a time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph> 也會限制存取單一執行緒一次。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>However, it enables calls out from an executing service method to return and reenter the executing service.</source>
          <target state="translated">然而，它允許從執行中的服務方法對外呼叫，以便傳回並重新進入執行中的服務。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>A reentrant call can execute on a different managed thread, but in this case the original thread is blocked for the duration of the reentrant call.</source>
          <target state="translated">可重新進入的呼叫會在不同的 Managed 執行緒上執行，不過在這種情況中，原始執行緒在可重新進入呼叫期間會遭到封鎖。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>Generally, if a message arrives for an instance that violates its concurrency mode, the message waits until the instance is available, or until it times out.</source>
          <target state="translated">一般來說，如果違反其並行模式的執行個體有訊息到達，該訊息會等到執行個體可供使用為止，或等到它逾時為止。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>In addition, if the <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> is set to <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph> and a reentrant call is blocked while waiting for the instance to be freed, the system detects the deadlock and throws an exception.</source>
          <target state="translated">此外，如果 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> 設定為 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>，且可重新進入的呼叫在等待釋放執行個體時遭到封鎖，系統就會偵測到此死結並擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> concurrency, see <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A?displayProperty=nameWithType&gt;</ph> and <bpt id="p1">[</bpt>Sessions, Instancing, and Concurrency<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 並行存取，請參閱<ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A?displayProperty=nameWithType&gt;</ph>和<bpt id="p1">[</bpt>工作階段、 執行個體，以及並行<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> values.</source>
          <target state="translated">該值不是其中一個 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>Gets or sets a value that specifies whether to send unknown serialization data onto the wire.</source>
          <target state="translated">取得或設定值，這個值會指定是否要將未知的序列化資料傳送到網路上。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if unknown serialization data is never sent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果絕不傳送未知的序列化資料，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>If a type implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface, it stores any extra data it does not know about that comes over the wire when deserializing into that type.</source>
          <target state="translated">當型別實作 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 介面時，在還原序列化成為該型別時，該介面會儲存來自網路而它所不知道的任何額外資訊。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>For example, if a type <ph id="ph1">`Person`</ph> has members <ph id="ph2">`FirstName`</ph> and <ph id="ph3">`LastName`</ph>, and an element called <ph id="ph4">`PhoneNumber`</ph> comes in, it is stored.</source>
          <target state="translated">例如，如果型別 <ph id="ph1">`Person`</ph> 具有成員 <ph id="ph2">`FirstName`</ph> 和 <ph id="ph3">`LastName`</ph>，這時若有個 <ph id="ph4">`PhoneNumber`</ph> 的項目進入，該項目便會被儲存起來。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>When later serializing the type, <ph id="ph1">`PhoneNumber`</ph> is re-emitted.</source>
          <target state="translated">當稍後序列化此型別時，<ph id="ph1">`PhoneNumber`</ph> 就會重新發出。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>The problem is that the schema for <ph id="ph1">`Person`</ph> exported by that service only has <ph id="ph2">`FirstName`</ph> and <ph id="ph3">`LastName`</ph>, so <ph id="ph4">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> generates a schema-invalid instance.</source>
          <target state="translated">這時候的問題是由該服務匯出的 <ph id="ph1">`Person`</ph> 的結構描述只有 <ph id="ph2">`FirstName`</ph> 和 <ph id="ph3">`LastName`</ph>，因此 <ph id="ph4">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 會產生結構描述無效的執行個體。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>If strict schema compliance is important, you can set <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> to <ph id="ph2">`true`</ph> to turn this re-emitting behavior off.</source>
          <target state="translated">如果嚴格的結構描述相容性很重要，您可以將 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> 設定為 <ph id="ph2">`true`</ph>，以便關閉這個重新發出的行為。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>Regardless of the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> setting, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> always processes known data (both in and out) and does not throw exceptions when extra data comes in.</source>
          <target state="translated">不論 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> 設定為何，<ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 永遠會處理已知資料 (傳入及傳出)，而且不會在額外資料進入時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
          <source>You can use the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> element to set this property in a client application configuration file.</source>
          <target state="translated">您可以使用<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept>中用戶端應用程式組態檔設定這個屬性的項目。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> and sent as a fault message.</source>
          <target state="translated">取得或設定值，指定一般未處理的執行例外狀況 (要轉換為型別 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>)，並傳送為錯誤訊息。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Set this to <ph id="ph1">&lt;see langword="true" /&gt;</ph> only during development to troubleshoot a service.</source>
          <target state="translated">請只在開發期間將這個項目設定為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，以針對服務進行疑難排解。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if unhandled exceptions are to be returned as SOAP faults; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果未處理的例外狀況要當做 SOAP 錯誤傳回，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id="ph2">`true`</ph> to enable exception information to flow back to services for debugging purposes when possible.</source>
          <target state="translated">將 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 設定為 <ph id="ph2">`true`</ph>，即可讓例外狀況資訊在可能情況下流回服務，以供偵錯之用。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>This is a development-only feature and should not be employed in deployed services.</source>
          <target state="translated">這是開發階段專用的功能，因此不可以用在已部署的服務中。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>These faults appear to the calling service as <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects.</source>
          <target state="translated">這些錯誤會以 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 物件呈現給發出呼叫的服務。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id="ph2">`true`</ph> enables services to obtain information about internal client callback exceptions; it is only recommended as a way of temporarily debugging a duplex client application.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph>至<ph id="ph2">`true`</ph>可讓服務取得有關內部用戶端回呼例外狀況，建議只在暫時偵錯雙工用戶端應用程式的方式。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> on a callback object that uses the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object to determine which thread to marshal to, the <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to enforce message validation, and the <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property to return exceptions as <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects to the service for debugging purposes.</source>
          <target state="translated">下列程式碼範例會顯示回呼物件 (它使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 物件判斷要封送處理的執行緒) 的 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph>、可執行訊息驗證的 <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性，以及可將例外狀況當做 <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 物件傳回服務以進行偵錯的 <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
          <source>Gets or sets the maximum number of items allowed in a serialized object.</source>
          <target state="translated">取得或設定已序列化之物件中允許的項目數目上限。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
          <source>The maximum number of items allowed in an object.</source>
          <target state="translated">物件中允許的項目數目上限。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> property set a limit on the number of items in an object graph that are serialized.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> 屬性，即可設定物件圖形中已序列化項目的數目限制。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
          <source>You can also use the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer.md)</ept> element to set this value in a client application configuration file.</source>
          <target state="translated">您也可以使用<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer.md)</ept>要將此值設定在用戶端應用程式組態檔項目。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The collection of binding parameters that are configured.</source>
          <target state="translated">所設定之繫結參數的集合。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Configures the binding elements to support the callback behavior.</source>
          <target state="translated">設定繫結項目以支援回呼行為。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint configured by the attribute.</source>
          <target state="translated">由此屬性設定的端點。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Configures the client runtime to support the callback object.</source>
          <target state="translated">設定用戶端執行階段以支援回呼物件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint to be modified.</source>
          <target state="translated">要修改的端點。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Implementation of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /&gt;</ph> method.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>This implementation has no effect.</source>
          <target state="translated">這個實作沒有任何作用。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint to be validated.</source>
          <target state="translated">要驗證的端點。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Validates the endpoint description prior to building the runtime.</source>
          <target state="translated">在建置執行階段之前驗證端點描述。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
          <source>Specifies the transaction isolation level.</source>
          <target state="translated">指定異動隔離等級。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> value that specifies the transaction isolation level.</source>
          <target state="translated">指定交易隔離等級的 <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Transactions.IsolationLevel.Unspecified" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Transactions.IsolationLevel.Unspecified" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
          <source>The isolation level in which your transaction runs determines how data is treated when changes are made in other transactions and how long your transaction must hold locks to protect against these changes.</source>
          <target state="translated">異動所執行的隔離等級會決定其他異動變更時如何處理資料，並且決定異動必須保持鎖定的時間長度，以免受到這些變更影響。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
          <source>For example, the default value, <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.Unspecified&gt;</ph>, specifies that no updating or inserting can occur until the transaction is complete.</source>
          <target state="translated">例如，預設值 <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.Unspecified&gt;</ph> 會指定在交易完成之前，不會發生任何更新或插入。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> values.</source>
          <target state="translated">該值不是其中一個 <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
          <source>Gets or sets the period within which a transaction must complete.</source>
          <target state="translated">取得或設定交易必須完成的期間。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> object that represents the time within which transactions must complete or be automatically aborted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 物件，代表交易必須在期間完成、否則會自動中止的時間。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
          <source>This value is typically set in an application configuration file.</source>
          <target state="translated">這個值通常是設定在應用程式組態檔中。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</source>
          <target state="translated">取得或設定值，這個值會指定是否使用目前的同步處理內容來選擇執行的執行緒。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all calls to the service must run on the thread specified by the <ph id="ph2">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果所有對服務的呼叫都必須在 <ph id="ph2">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> 指定的執行緒上執行，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>Use this property to provide the user interface thread affinity that some applications require.</source>
          <target state="translated">使用這個屬性，即可提供部分應用程式所需要的使用者介面執行緒相似性。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>For example, a Windows Forms application may be registered as a singleton service object.</source>
          <target state="translated">例如，Windows Forms 應用程式可能會註冊為單一服務物件。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>In this case, all calls into the service must run on the Windows Forms thread.</source>
          <target state="translated">在這種情況中，所有對服務的呼叫都必須在 Windows Forms 執行緒上執行。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>The default case, in which <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, synchronizes all calls to the service to run on the user interface thread.</source>
          <target state="translated">在預設的情況中，<ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> 是設定為 <ph id="ph2">`true`</ph>，並將對服務的所有呼叫同步處理成都在使用者介面執行緒上執行。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>Note that the thread used is the current synchronization thread when <ph id="ph1">&lt;xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.DuplexClientBase%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">請注意，當呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> 或 <ph id="ph2">&lt;xref:System.ServiceModel.DuplexClientBase%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> 時，所使用的執行緒是目前的同步處理執行緒。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>In the case of an Windows Forms application, this means that these calls should occur after a call to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如果是 Windows Forms 應用程式，這一點表示這些呼叫應該在呼叫 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> 方法之後發生。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> on a callback object that uses the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object to determine which thread to marshal to, the <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to enforce message validation, and the <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property to return exceptions as <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects to the service for debugging purposes.</source>
          <target state="translated">下列程式碼範例會顯示回呼物件 (它使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 物件判斷要封送處理的執行緒) 的 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph>、可執行訊息驗證的 <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性，以及可將例外狀況當做 <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 物件傳回服務以進行偵錯的 <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>Gets or sets a value that specifies whether the system or the application enforces SOAP <ph id="ph1">&lt;see langword="MustUnderstand" /&gt;</ph> header processing.</source>
          <target state="translated">取得或設定值，這個值會指定系統或應用程式是否會強制執行 SOAP <ph id="ph1">&lt;see langword="MustUnderstand" /&gt;</ph> 標頭處理。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the system is to perform SOAP header <ph id="ph2">&lt;see langword="MustUnderstand" /&gt;</ph> processing; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>, which indicates that the application performs this processing.</source>
          <target state="translated">如果系統要執行 SOAP 標頭 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 處理，則為 <ph id="ph2">&lt;see langword="MustUnderstand" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，表示應用程式會執行這項處理。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to turn off the enforced validation of arriving message headers.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性，即可關閉對抵達之訊息標頭的強制驗證。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>In normal execution, message headers are compared against the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A&gt;</ph> property to confirm that arriving headers are explicitly handled by the callback object runtime.</source>
          <target state="translated">在正常的執行中，訊息標頭會與 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A&gt;</ph> 屬性進行比較，以確認回呼物件執行階段已明確處理到達的標頭。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>Set this to <ph id="ph1">`false`</ph> to disable this checking.</source>
          <target state="translated">將此屬性設定為 <ph id="ph1">`false`</ph>，即可停用這項檢查。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>When set to <ph id="ph1">`false`</ph>, the application must check for headers marked with MustUnderstand="true" and return a fault if one or more of them were not understood.</source>
          <target state="translated">如果是設定為 <ph id="ph1">`false`</ph>，應用程式就必須檢查標示為 MustUnderstand="true" 的標頭，並在無法瞭解其中一或多個標頭時傳回錯誤。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>This is useful when the callback is supposed to accept any incoming SOAP messages (for example, when using typed or untyped messages) and perform custom header processing.</source>
          <target state="translated">當回呼應該接受任何傳入的 SOAP 訊息 (例如，使用具型別或不具型別的訊息時) 以及執行自訂標頭處理時，這種設定會十分有用。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> on a callback object that uses the <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object to determine which thread to marshal to, the <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to enforce message validation, and the <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property to return exceptions as <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects to the service for debugging purposes.</source>
          <target state="translated">下列程式碼範例會顯示回呼物件 (它使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute&gt;</ph> 物件判斷要封送處理的執行緒) 的 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph>、可執行訊息驗證的 <ph id="ph3">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 屬性，以及可將例外狀況當做 <ph id="ph4">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 物件傳回服務以進行偵錯的 <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>