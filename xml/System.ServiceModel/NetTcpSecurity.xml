<Type Name="NetTcpSecurity" FullName="System.ServiceModel.NetTcpSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85c62b96a523ffd367ee33776770f5a765f8aa0e" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52907667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NetTcpSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetTcpSecurity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetTcpSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetTcpSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetTcpSecurity sealed" />
  <TypeSignature Language="F#" Value="type NetTcpSecurity = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定以 <see cref="T:System.ServiceModel.NetTcpBinding" /> 設定之端點所用的傳輸層級與訊息層級安全性型別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個標準繫結提供了控制傳輸安全性需求的參數。 這些參數通常會包含安全性模式，此模式會指定是否採用訊息層級或傳輸層級安全性，以及選擇用戶端認證型別。 根據這些參數所代表的選取選項，會以適當安全性來建構通道堆疊。  
  
 由 Windows Communication Foundation (WCF) 提供的系統提供繫結，是設計成符合某些最常見案例需求的一組繫結。 這些每個繫結程序都允許特定目標案例的安全性需求規格。  
  
 <xref:System.ServiceModel.NetTcpSecurity> 提供 <xref:System.ServiceModel.NetTcpBinding> 的安全性規格。 這是一個安全、可靠且最佳的繫結，適用於跨電腦通訊。 根據預設，它會產生執行階段通訊堆疊，可支援 TCP 訊息傳遞、Windows 安全性 (提供訊息安全性與驗證)、WS-ReliableMessaging (提升可靠性) 以及二進位訊息編碼。  
  
 此類別由 <xref:System.ServiceModel.NetTcpBinding> 所產生，並可由名為 <xref:System.ServiceModel.NetTcpBinding.Security%2A> 的唯讀屬性存取。 由於這是唯讀屬性，因此您無法變更傳回的物件。 如果想要控制 <xref:System.ServiceModel.NetTcpSecurity> 物件的建立，可以從 <xref:System.ServiceModel.NetTcpBinding> 衍生類別。  
  
   
  
## Examples  
 下列程式碼會示範如何從 <xref:System.ServiceModel.NetTcpSecurity> 擷取 <xref:System.ServiceModel.NetTcpBinding> 物件，並印出它包含的多項設定︰  
  
 [!code-csharp[S_UE_TcpSecurity#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_tcpsecurity/cs/service.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetTcpSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetTcpSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.NetTcpSecurity" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MessageSecurityOverTcp Message { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.MessageSecurityOverTcp Message" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpSecurity.Message" />
      <MemberSignature Language="VB.NET" Value="Public Property Message As MessageSecurityOverTcp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MessageSecurityOverTcp ^ Message { System::ServiceModel::MessageSecurityOverTcp ^ get(); void set(System::ServiceModel::MessageSecurityOverTcp ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.ServiceModel.MessageSecurityOverTcp with get, set" Usage="System.ServiceModel.NetTcpSecurity.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MessageSecurityOverTcp</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得以 <see cref="T:System.ServiceModel.NetTcpBinding" /> 設定之服務的訊息層級安全性需求的型別。</summary>
        <value>
          <see cref="T:System.ServiceModel.MessageSecurityOverTcp" />，代表端點的訊息層級安全性需求的型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.NetTcpSecurity.Message%2A> 會使用訊息層級安全性來達成 SOAP 訊息的完整性與機密性，以及通訊對等兩端的交互驗證。 如果繫結上選取了這個安全性模式，通道堆疊會以訊息安全性繫結項目進行設定，且 SOAP 訊息的安全性會符合 WS-Security* 標準。  
  
   
  
## Examples  
 [!code-csharp[S_UE_TcpSecurity#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_tcpsecurity/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.SecurityMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.SecurityMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpSecurity.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As SecurityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::SecurityMode Mode { System::ServiceModel::SecurityMode get(); void set(System::ServiceModel::SecurityMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.ServiceModel.SecurityMode with get, set" Usage="System.ServiceModel.NetTcpSecurity.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SecurityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定以 <see cref="T:System.ServiceModel.NetTcpBinding" /> 設定的端點是否使用訊息層級安全性與傳輸層級安全性。</summary>
        <value>
          <see cref="T:System.ServiceModel.SecurityMode" /> 的值，這個值表示端點是否使用訊息層級安全性與傳輸層級安全性。 預設值是 <see cref="F:System.ServiceModel.SecurityMode.Transport" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 安全性模式決定了端點所需的安全性類型。 Windows Communication Foundation (WCF) 安全性提供各種不同的機制，用來保護系統提供繫結所設定的訊息傳輸。 每個繫結都支援這些安全性模式的子集。 該模式決定訊息傳輸安全性功能 (完整性、機密性與驗證) 需要哪些機制。  
  
   
  
## Examples  
 [!code-csharp[S_UE_TcpSecurity#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_tcpsecurity/cs/service.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">未定義此值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Transport">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TcpTransportSecurity Transport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TcpTransportSecurity Transport" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpSecurity.Transport" />
      <MemberSignature Language="VB.NET" Value="Public Property Transport As TcpTransportSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TcpTransportSecurity ^ Transport { System::ServiceModel::TcpTransportSecurity ^ get(); void set(System::ServiceModel::TcpTransportSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transport : System.ServiceModel.TcpTransportSecurity with get, set" Usage="System.ServiceModel.NetTcpSecurity.Transport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TcpTransportSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得以 <see cref="T:System.ServiceModel.NetTcpBinding" /> 設定之端點的訊息層級安全性需求的型別。</summary>
        <value>
          <see cref="T:System.ServiceModel.TcpTransportSecurity" />，代表端點的傳輸層級安全性需求的型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.NetTcpSecurity.Transport%2A> 安全性來達成 SOAP 訊息的完整性與機密性，以及交互驗證。 如果繫結上選取了這個安全性模式，通道堆疊會以安全性傳輸進行設定，且 SOAP 訊息會使用傳輸安全性 (如 TCP 上的 HTTPS 或 SSL) 保護。  
  
   
  
## Examples  
 [!code-csharp[S_UE_TcpSecurity#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_tcpsecurity/cs/service.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>