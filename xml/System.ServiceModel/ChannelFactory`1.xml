<Type Name="ChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.ChannelFactory&lt;TChannel&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="711810d81e1dc7ea837deb72bc2fadd813233db1" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51321359" /></Metadata><TypeSignature Language="C#" Value="public class ChannelFactory&lt;TChannel&gt; : System.ServiceModel.ChannelFactory, System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelFactory`1&lt;TChannel&gt; extends System.ServiceModel.ChannelFactory implements class System.ServiceModel.Channels.IChannelFactory, class System.ServiceModel.Channels.IChannelFactory`1&lt;!TChannel&gt;, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ChannelFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelFactory(Of TChannel)&#xA;Inherits ChannelFactory&#xA;Implements IChannelFactory(Of TChannel)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA;public ref class ChannelFactory : System::ServiceModel::ChannelFactory, System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt;" />
  <TypeSignature Language="F#" Value="type ChannelFactory&lt;'Channel&gt; = class&#xA;    inherit ChannelFactory&#xA;    interface IChannelFactory&lt;'Channel&gt;&#xA;    interface IChannelFactory&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.ChannelFactory</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel"><span data-ttu-id="1575d-101">由通道處理站產生的通道型別。</span><span class="sxs-lookup"><span data-stu-id="1575d-101">The type of channel produced by the channel factory.</span></span> <span data-ttu-id="1575d-102">這個型別必須是 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IRequestChannel" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-102">This type must be either <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</span></span></typeparam>
    <summary><span data-ttu-id="1575d-103">此處理站可建立不同型別的通道，用戶端使用這些通道將訊息傳送給各種已設定的服務端點。</span><span class="sxs-lookup"><span data-stu-id="1575d-103">A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-104">此泛型類別可啟用其中需要建立通道處理站的更進階案例，以用來建立多種通道型別。</span><span class="sxs-lookup"><span data-stu-id="1575d-104">This generic class enables more advanced scenarios where there is a requirement to create a channel factory that can be used to create more than one type of channel.</span></span>  
  
 <span data-ttu-id="1575d-105">以程式設計的方式加入行為時，行為會加入至 `Behaviors` 上的適當 <xref:System.ServiceModel.ChannelFactory> 屬性，再建立任何通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-105">When adding behaviors programmatically, the behavior is added to the appropriate `Behaviors` property on the <xref:System.ServiceModel.ChannelFactory> prior to the creation of any channel.</span></span> <span data-ttu-id="1575d-106">如需程式碼範例，請參閱「範例」一節。</span><span class="sxs-lookup"><span data-stu-id="1575d-106">See the example section for a code sample.</span></span>  
  
 <span data-ttu-id="1575d-107">使用此型別的用戶端或呼叫應用程式 (例如，中間層應用程式也是用戶端應用程式)，除了效能需求之外，常常也有複雜的狀態管理需求。</span><span class="sxs-lookup"><span data-stu-id="1575d-107">Frequently client or calling applications (for example, middle-tier applications are client applications, too) using this type also have complex state management needs as well as performance needs.</span></span> <span data-ttu-id="1575d-108">如需有關這些案例的詳細資訊，請參閱[中介層用戶端應用程式](~/docs/framework/wcf/feature-details/middle-tier-client-applications.md)。</span><span class="sxs-lookup"><span data-stu-id="1575d-108">For more information about these scenarios, please see [Middle-Tier Client Applications](~/docs/framework/wcf/feature-details/middle-tier-client-applications.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1575d-109">下列範例說明如何建立通道處理站，並使用它建立並管理通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-109">The following sample shows how to create a channel factory and use it to create and manage channels.</span></span>  
  
 [!code-csharp[S_UEChannels#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#21)]  
  
 <span data-ttu-id="1575d-110">下列程式碼範例會示範如何以程式設計的方式插入用戶端行為，再由處理站建立通道物件。</span><span class="sxs-lookup"><span data-stu-id="1575d-110">The following code example shows how to insert programmatically a client behavior prior to the creation of the channel object by the factory.</span></span>  
  
 [!code-csharp[ChannelFactoryBehaviors#10](~/samples/snippets/csharp/VS_Snippets_CFX/channelfactorybehaviors/cs/client.cs#10)]
 [!code-vb[ChannelFactoryBehaviors#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/channelfactorybehaviors/vb/client.vb#10)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1575d-111">此型別具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="1575d-111">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1575d-112">初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-112">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1575d-113">初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-113">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1575d-114">這個範例將說明如何以 <xref:System.ServiceModel.ChannelFactory%601> 介面建立 `IRequestChannel` 類別的新物件。</span><span class="sxs-lookup"><span data-stu-id="1575d-114">This example shows how to create a new object of the <xref:System.ServiceModel.ChannelFactory%601> class with the `IRequestChannel` interface.</span></span>  
  
 [!code-csharp[S_UEChannels#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelFactory (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelFactory(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; : System.ServiceModel.Channels.Binding -&gt; System.ServiceModel.ChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; binding" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="1575d-115">由處理站產生的通道所指定的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-115">The <see cref="T:System.ServiceModel.Channels.Binding" /> specified for the channels produced by the factory.</span></span></param>
        <summary><span data-ttu-id="1575d-116">初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-116">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-117">當您要以程式設計的方式傳遞繫結資訊而非使用應用程式組態檔時，請使用此建構函式。</span><span class="sxs-lookup"><span data-stu-id="1575d-117">Use this constructor when you want to pass the binding information programmatically rather than using an application configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelFactory (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelFactory(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; : System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.ChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; endpoint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1575d-118">由處理站所產生的通道之 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-118">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> for the channels produced by the factory.</span></span></param>
        <summary><span data-ttu-id="1575d-119">初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體，以使用指定端點來產生通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-119">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class that produces channels with a specified endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-120">當您要以程式設計的方式傳遞服務端點資訊而非使用應用程式組態檔時，請使用此建構函式。</span><span class="sxs-lookup"><span data-stu-id="1575d-120">Use this constructor when you want to pass the service endpoint information programmatically rather than using an application configuration file.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#25](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-121"><paramref name="endpoint" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-121">The <paramref name="endpoint" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelFactory (string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpointConfigurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelFactory(System::String ^ endpointConfigurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; : string -&gt; System.ServiceModel.ChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; endpointConfigurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpointConfigurationName"><span data-ttu-id="1575d-122">用於端點的組態名稱。</span><span class="sxs-lookup"><span data-stu-id="1575d-122">The configuration name used for the endpoint.</span></span></param>
        <summary><span data-ttu-id="1575d-123">使用指定的端點組態名稱，來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-123">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified endpoint configuration name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-124">當應用程式組態檔的目標端點超過一個時，請使用此建構函式。</span><span class="sxs-lookup"><span data-stu-id="1575d-124">Use this constructor when there is more than one target endpoint in the application configuration file.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-125"><paramref name="endpointConfigurationName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-125"><paramref name="endpointConfigurationName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelFactory (Type channelType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type channelType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (channelType As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelFactory(Type ^ channelType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; : Type -&gt; System.ServiceModel.ChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; channelType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channelType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="channelType"><span data-ttu-id="1575d-126">由處理站所產生的通道之 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-126">The <see cref="T:System.Type" /> of channel produced by the factory.</span></span></param>
        <summary><span data-ttu-id="1575d-127">初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-127">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-128">當您要以程式設計的方式傳遞通道型別資訊而非使用應用程式組態檔時，請使用此建構函式。</span><span class="sxs-lookup"><span data-stu-id="1575d-128">Use this constructor when you want to pass the channel type information programmatically rather than using an application configuration file.</span></span> <span data-ttu-id="1575d-129">`channelType` 參數必須是介面。</span><span class="sxs-lookup"><span data-stu-id="1575d-129">The `channelType` parameter must be an interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-130"><paramref name="channelType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-130">The <paramref name="channelType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1575d-131"><paramref name="channelType" /> 是類別或值型別，不是介面。</span><span class="sxs-lookup"><span data-stu-id="1575d-131">The <paramref name="channelType" /> is a class or value type and is not an interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelFactory (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelFactory(System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; : System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.ChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; (binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="1575d-132">用於設定端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-132">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</span></span></param>
        <param name="remoteAddress"><span data-ttu-id="1575d-133">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-133">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-134">使用指定的繫結與端點位址，來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-134">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified binding and endpoint address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-135">當您要以程式設計的方式傳遞繫結與位址資訊而非使用應用程式組態檔時，請使用此建構函式。</span><span class="sxs-lookup"><span data-stu-id="1575d-135">Use this constructor when you want to pass the binding and address information programmatically rather than using an application configuration file.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#26](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-136"><paramref name="binding" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-136">The <paramref name="binding" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelFactory (System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelFactory(System::ServiceModel::Channels::Binding ^ binding, System::String ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; : System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.ChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; (binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="1575d-137">用於設定端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-137">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</span></span></param>
        <param name="remoteAddress"><span data-ttu-id="1575d-138">提供服務位置的位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-138">The address that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-139">使用指定的繫結與遠端位址，來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-139">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified binding and remote address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-140">當您要以字串傳遞遠端位址的資訊，而非使用型別物件時，請使用此建構函式。</span><span class="sxs-lookup"><span data-stu-id="1575d-140">Use this constructor when you want to pass the information about the remote address information with a string rather than as a typed object.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#29](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-141"><paramref name="remoteAddress" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-141"><paramref name="remoteAddress" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelFactory (string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpointConfigurationName As String, remoteAddress As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelFactory(System::String ^ endpointConfigurationName, System::ServiceModel::EndpointAddress ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; : string * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.ChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.ChannelFactory&lt;'Channel&gt; (endpointConfigurationName, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="endpointConfigurationName"><span data-ttu-id="1575d-142">用於端點的組態名稱。</span><span class="sxs-lookup"><span data-stu-id="1575d-142">The configuration name used for the endpoint.</span></span></param>
        <param name="remoteAddress"><span data-ttu-id="1575d-143">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-143">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-144">以指定的端點組態名稱與遠端位址，來初始化 <see cref="T:System.ServiceModel.ChannelFactory`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1575d-144">Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class associated with a specified name for the endpoint configuration and remote address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-145"><paramref name="endpointConfigurationName" /> 或 <paramref name="remoteAddress" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-145"><paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1575d-146">建立指向指定之端點位址的指定型別通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-146">Creates a channel of a specified type to a specified endpoint address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-147">建立 `TChannel` 型別的通道 (類別的泛型參數)。</span><span class="sxs-lookup"><span data-stu-id="1575d-147">Creates a channel of type `TChannel`, the generic parameter for the class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel () As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel();" />
      <MemberSignature Language="F#" Value="member this.CreateChannel : unit -&gt; 'Channel" Usage="channelFactory.CreateChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1575d-148">建立指向指定之端點位址的指定型別通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-148">Creates a channel of a specified type to a specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="1575d-149">由處理站所建立之 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-149">The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1575d-150">建立 `TChannel` 型別的通道 (類別的泛型參數)。</span><span class="sxs-lookup"><span data-stu-id="1575d-150">Creates a channel of type `TChannel`, the generic parameter for the class.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#30](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (address As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress -&gt; 'Channel&#xA;override this.CreateChannel : System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="channelFactory.CreateChannel address" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="1575d-151">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-151">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-152">建立用來傳送訊息至指定端點位址的服務的通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-152">Creates a channel that is used to send messages to a service at a specific endpoint address.</span></span></summary>
        <returns><span data-ttu-id="1575d-153">由處理站所建立之 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-153">The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#27](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-154"><paramref name="address" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-154"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="protected static TChannel CreateChannel (string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig !TChannel CreateChannel(string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateChannel (endpointConfigurationName As String) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static TChannel CreateChannel(System::String ^ endpointConfigurationName);" />
      <MemberSignature Language="F#" Value="static member CreateChannel : string -&gt; 'Channel" Usage="System.ServiceModel.ChannelFactory&lt;'Channel&gt;.CreateChannel endpointConfigurationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpointConfigurationName"><span data-ttu-id="1575d-155">該服務所用的端點組態名稱。</span><span class="sxs-lookup"><span data-stu-id="1575d-155">The name of the endpoint configuration used for the service.</span></span></param>
        <summary><span data-ttu-id="1575d-156">建立用來傳送訊息至指定端點位址的服務的通道，此服務的端點採用特定方式設定。</span><span class="sxs-lookup"><span data-stu-id="1575d-156">Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.</span></span></summary>
        <returns><span data-ttu-id="1575d-157">由處理站所建立之 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-157">The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1575d-158"><see cref="T:System.ServiceModel.ChannelFactory" /> 有其不支援的雙工操作。</span><span class="sxs-lookup"><span data-stu-id="1575d-158">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public virtual TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateChannel (address As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ address, Uri ^ via);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel&#xA;override this.CreateChannel : System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="channelFactory.CreateChannel (address, via)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="1575d-159">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-159">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <param name="via"><span data-ttu-id="1575d-160">包含通道傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-160">The <see cref="T:System.Uri" /> that contains the transport address to which the channel sends messages.</span></span></param>
        <summary><span data-ttu-id="1575d-161">建立一個透過指定傳輸位址將訊息傳送至指定端點位址的服務的通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-161">Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.</span></span></summary>
        <returns><span data-ttu-id="1575d-162">由處理站所建立之 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-162">The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#28](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1575d-163"><paramref name="address" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-163"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1575d-164"><see cref="T:System.ServiceModel.ChannelFactory" /> 有其不支援的雙工操作。</span><span class="sxs-lookup"><span data-stu-id="1575d-164">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ endpointAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress address);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress address) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ address);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member CreateChannel : System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="System.ServiceModel.ChannelFactory&lt;'Channel&gt;.CreateChannel (binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" Index="0" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="1575d-165">用於設定端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-165">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</span></span></param>
        <param name="endpointAddress"><span data-ttu-id="1575d-166">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-166">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <param name="address"><span data-ttu-id="1575d-167">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-167">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-168">建立用來傳送訊息至服務端點之指定型別的通道，此服務端點採用指定的繫結設定。</span><span class="sxs-lookup"><span data-stu-id="1575d-168">Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.</span></span></summary>
        <returns><span data-ttu-id="1575d-169">由處理站所建立之 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-169">The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#31](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1575d-170"><see cref="T:System.ServiceModel.ChannelFactory" /> 有其不支援的雙工操作。</span><span class="sxs-lookup"><span data-stu-id="1575d-170">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress, class System.Uri via) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ endpointAddress, Uri ^ via);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress address, Uri via);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ address, Uri ^ via);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member CreateChannel : System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="System.ServiceModel.ChannelFactory&lt;'Channel&gt;.CreateChannel (binding, address, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" Index="0" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="via" Type="System.Uri" Index="2" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="1575d-171">用於設定端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-171">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</span></span></param>
        <param name="endpointAddress"><span data-ttu-id="1575d-172">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-172">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <param name="address"><span data-ttu-id="1575d-173">提供服務位置的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-173">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <param name="via"><span data-ttu-id="1575d-174">包含通道傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-174">The <see cref="T:System.Uri" /> that contains the transport address to which the channel sends messages.</span></span></param>
        <summary><span data-ttu-id="1575d-175">建立用來傳送訊息至服務端點之指定型別的通道，在指定傳輸位址的此服務端點採用指定的繫結設定。</span><span class="sxs-lookup"><span data-stu-id="1575d-175">Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.</span></span></summary>
        <returns><span data-ttu-id="1575d-176">由處理站所建立之 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-176">The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#33](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1575d-177"><see cref="T:System.ServiceModel.ChannelFactory" /> 有其不支援的雙工操作。</span><span class="sxs-lookup"><span data-stu-id="1575d-177">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChannelWithActAsToken">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1575d-178">建立用來將訊息傳送至具有扮演安全性權杖之服務的通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-178">Creates a channel that is used to send messages to a service with an act as security token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannelWithActAsToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithActAsToken(class System.IdentityModel.Tokens.SecurityToken actAsToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithActAsToken (actAsToken As SecurityToken) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithActAsToken(System::IdentityModel::Tokens::SecurityToken ^ actAsToken);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithActAsToken : System.IdentityModel.Tokens.SecurityToken -&gt; 'Channel" Usage="channelFactory.CreateChannelWithActAsToken actAsToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actAsToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="actAsToken"><span data-ttu-id="1575d-179">安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="1575d-179">The security token.</span></span></param>
        <summary><span data-ttu-id="1575d-180">建立用來將訊息傳送至具有扮演安全性權杖之服務的通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-180">Creates a channel that is used to send messages to a service with an act as security token.</span></span></summary>
        <returns><span data-ttu-id="1575d-181">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-181">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannelWithActAsToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithActAsToken(class System.IdentityModel.Tokens.SecurityToken actAsToken, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithActAsToken (actAsToken As SecurityToken, address As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithActAsToken(System::IdentityModel::Tokens::SecurityToken ^ actAsToken, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithActAsToken : System.IdentityModel.Tokens.SecurityToken * System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="channelFactory.CreateChannelWithActAsToken (actAsToken, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actAsToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="actAsToken"><span data-ttu-id="1575d-182">安全性權杖</span><span class="sxs-lookup"><span data-stu-id="1575d-182">The security token</span></span></param>
        <param name="address"><span data-ttu-id="1575d-183">提供服務位置的端點位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-183">The endpoint address that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-184">用來將訊息傳送至位於特定端點位址做為安全性權杖之服務的建立通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-184">Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address.</span></span></summary>
        <returns><span data-ttu-id="1575d-185">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-185">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannelWithActAsToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken, System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithActAsToken(class System.IdentityModel.Tokens.SecurityToken actAsToken, class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithActAsToken (actAsToken As SecurityToken, address As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithActAsToken(System::IdentityModel::Tokens::SecurityToken ^ actAsToken, System::ServiceModel::EndpointAddress ^ address, Uri ^ via);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithActAsToken : System.IdentityModel.Tokens.SecurityToken * System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="channelFactory.CreateChannelWithActAsToken (actAsToken, address, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actAsToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="actAsToken"><span data-ttu-id="1575d-186">安全性權杖</span><span class="sxs-lookup"><span data-stu-id="1575d-186">The security token</span></span></param>
        <param name="address"><span data-ttu-id="1575d-187">提供服務位置的端點位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-187">The endpoint address that provides the location of the service.</span></span></param>
        <param name="via"><span data-ttu-id="1575d-188">通道傳送訊息的目標傳輸位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-188">The transport address to which the channel sends messages.</span></span></param>
        <summary><span data-ttu-id="1575d-189">建立一個通道，這個通道可用來透過指定傳輸位址將訊息傳送至指定端點位址上做為安全性權杖的服務。</span><span class="sxs-lookup"><span data-stu-id="1575d-189">Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address through a specified transport address.</span></span></summary>
        <returns><span data-ttu-id="1575d-190">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-190">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChannelWithIssuedToken">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1575d-191">用來將訊息傳送至具有已簽發安全性權杖之服務的建立通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-191">Creates a channel that is used to send messages to a service with an issued security token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannelWithIssuedToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithIssuedToken(class System.IdentityModel.Tokens.SecurityToken issuedToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithIssuedToken (issuedToken As SecurityToken) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithIssuedToken(System::IdentityModel::Tokens::SecurityToken ^ issuedToken);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithIssuedToken : System.IdentityModel.Tokens.SecurityToken -&gt; 'Channel" Usage="channelFactory.CreateChannelWithIssuedToken issuedToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="issuedToken"><span data-ttu-id="1575d-192">發出的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="1575d-192">The issued security token.</span></span></param>
        <summary><span data-ttu-id="1575d-193">用來將訊息傳送至具有已簽發安全性權杖之服務的建立通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-193">Creates a channel that is used to send messages to a service with an issued security token.</span></span></summary>
        <returns><span data-ttu-id="1575d-194">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-194">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannelWithIssuedToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithIssuedToken(class System.IdentityModel.Tokens.SecurityToken issuedToken, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithIssuedToken (issuedToken As SecurityToken, address As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithIssuedToken(System::IdentityModel::Tokens::SecurityToken ^ issuedToken, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithIssuedToken : System.IdentityModel.Tokens.SecurityToken * System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="channelFactory.CreateChannelWithIssuedToken (issuedToken, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="issuedToken"><span data-ttu-id="1575d-195">發出的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="1575d-195">The issued security token.</span></span></param>
        <param name="address"><span data-ttu-id="1575d-196">提供服務位置的端點位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-196">The endpoint address that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-197">用來將訊息傳送至位於特定端點位址具有發行的安全性權杖之服務的建立通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-197">Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address.</span></span></summary>
        <returns><span data-ttu-id="1575d-198">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-198">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannelWithIssuedToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken, System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithIssuedToken(class System.IdentityModel.Tokens.SecurityToken issuedToken, class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithIssuedToken (issuedToken As SecurityToken, address As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithIssuedToken(System::IdentityModel::Tokens::SecurityToken ^ issuedToken, System::ServiceModel::EndpointAddress ^ address, Uri ^ via);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithIssuedToken : System.IdentityModel.Tokens.SecurityToken * System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="channelFactory.CreateChannelWithIssuedToken (issuedToken, address, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="issuedToken"><span data-ttu-id="1575d-199">發出的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="1575d-199">The issued security token.</span></span></param>
        <param name="address"><span data-ttu-id="1575d-200">提供服務位置的端點位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-200">The endpoint address that provides the location of the service.</span></span></param>
        <param name="via"><span data-ttu-id="1575d-201">通道傳送訊息的目標傳輸位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-201">The transport address to which the channel sends messages.</span></span></param>
        <summary><span data-ttu-id="1575d-202">建立一個通道，這個通道可用來透過指定傳輸位址將訊息傳送至指定端點位址上具有發行之安全性權杖的服務。</span><span class="sxs-lookup"><span data-stu-id="1575d-202">Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address through a specified transport address.</span></span></summary>
        <returns><span data-ttu-id="1575d-203">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-203">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChannelWithOnBehalfOfToken">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1575d-204">用來將訊息傳送至具有代表安全性權杖之服務的建立通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-204">Creates a channel that is used to send messages to a service with an on behalf of security token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannelWithOnBehalfOfToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithOnBehalfOfToken(class System.IdentityModel.Tokens.SecurityToken onBehalfOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithOnBehalfOfToken (onBehalfOf As SecurityToken) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithOnBehalfOfToken(System::IdentityModel::Tokens::SecurityToken ^ onBehalfOf);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithOnBehalfOfToken : System.IdentityModel.Tokens.SecurityToken -&gt; 'Channel" Usage="channelFactory.CreateChannelWithOnBehalfOfToken onBehalfOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onBehalfOf" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="onBehalfOf"><span data-ttu-id="1575d-205">安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="1575d-205">The security token.</span></span></param>
        <summary><span data-ttu-id="1575d-206">用來將訊息傳送至具有代表安全性權杖之服務的建立通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-206">Creates a channel that is used to send messages to a service with an on behalf of security token.</span></span></summary>
        <returns><span data-ttu-id="1575d-207">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-207">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannelWithOnBehalfOfToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithOnBehalfOfToken(class System.IdentityModel.Tokens.SecurityToken onBehalfOf, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithOnBehalfOfToken (onBehalfOf As SecurityToken, address As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithOnBehalfOfToken(System::IdentityModel::Tokens::SecurityToken ^ onBehalfOf, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithOnBehalfOfToken : System.IdentityModel.Tokens.SecurityToken * System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="channelFactory.CreateChannelWithOnBehalfOfToken (onBehalfOf, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onBehalfOf" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="onBehalfOf"><span data-ttu-id="1575d-208">安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="1575d-208">The security token.</span></span></param>
        <param name="address"><span data-ttu-id="1575d-209">提供服務位置的端點位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-209">The endpoint address that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="1575d-210">用來將訊息傳送至位於特定端點位址具有代表安全性權杖之服務的建立通道。</span><span class="sxs-lookup"><span data-stu-id="1575d-210">Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address.</span></span></summary>
        <returns><span data-ttu-id="1575d-211">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-211">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannelWithOnBehalfOfToken">
      <MemberSignature Language="C#" Value="public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf, System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannelWithOnBehalfOfToken(class System.IdentityModel.Tokens.SecurityToken onBehalfOf, class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannelWithOnBehalfOfToken (onBehalfOf As SecurityToken, address As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannelWithOnBehalfOfToken(System::IdentityModel::Tokens::SecurityToken ^ onBehalfOf, System::ServiceModel::EndpointAddress ^ address, Uri ^ via);" />
      <MemberSignature Language="F#" Value="member this.CreateChannelWithOnBehalfOfToken : System.IdentityModel.Tokens.SecurityToken * System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="channelFactory.CreateChannelWithOnBehalfOfToken (onBehalfOf, address, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onBehalfOf" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="onBehalfOf"><span data-ttu-id="1575d-212">安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="1575d-212">The security token.</span></span></param>
        <param name="address"><span data-ttu-id="1575d-213">提供服務位置的端點位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-213">The endpoint address that provides the location of the service.</span></span></param>
        <param name="via"><span data-ttu-id="1575d-214">通道傳送訊息的目標傳輸位址。</span><span class="sxs-lookup"><span data-stu-id="1575d-214">The transport address to which the channel sends messages.</span></span></param>
        <summary><span data-ttu-id="1575d-215">建立一個通道，這個通道可用來透過指定傳輸位址將訊息傳送至指定端點位址上代表安全性權杖的服務。</span><span class="sxs-lookup"><span data-stu-id="1575d-215">Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address through a specified transport address.</span></span></summary>
        <returns><span data-ttu-id="1575d-216">建立的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="1575d-216">The created channel factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceEndpoint CreateDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceEndpoint CreateDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription () As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceEndpoint ^ CreateDescription();" />
      <MemberSignature Language="F#" Value="override this.CreateDescription : unit -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="channelFactory.CreateDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1575d-217">建立服務端點的說明。</span><span class="sxs-lookup"><span data-stu-id="1575d-217">Creates a description of the service endpoint.</span></span></summary>
        <returns><span data-ttu-id="1575d-218">服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="1575d-218">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the service.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1575d-219">此回呼合約為 <see langword="null" />，但服務端點需要非 <see langword="null" /> 的回呼合約。</span><span class="sxs-lookup"><span data-stu-id="1575d-219">The callback contract is <see langword="null" /> but the service endpoint requires one that is non-<see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>