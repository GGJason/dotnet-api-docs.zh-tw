<Type Name="FederatedMessageSecurityOverHttp" FullName="System.ServiceModel.FederatedMessageSecurityOverHttp">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b252907155a82244d21a81a05ba20ad5f1f834a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36411744" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FederatedMessageSecurityOverHttp" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FederatedMessageSecurityOverHttp extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.FederatedMessageSecurityOverHttp" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FederatedMessageSecurityOverHttp" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederatedMessageSecurityOverHttp sealed" />
  <TypeSignature Language="F#" Value="type FederatedMessageSecurityOverHttp = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7bf02-101">設定 <see langword="WSFederationHttpBinding" /> 繫結的訊息層級安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7bf02-101">Configures the message-level security of the <see langword="WSFederationHttpBinding" /> binding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-102">此類別包含的屬性，可控制用戶端與服務之間多種不同觀點的安全性組態，包括該服務希望用戶端從哪個簽發者收到聯合認證的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="7bf02-102">This class contains properties that provide control over various aspects of the security configuration between the client and the service, including details related to the issuer from which the service expects the client to retrieve a federated credential.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FederatedMessageSecurityOverHttp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FederatedMessageSecurityOverHttp();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-103">初始化 <see cref="T:System.ServiceModel.FederatedMessageSecurityOverHttp" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-103">Initializes a new instance of the <see cref="T:System.ServiceModel.FederatedMessageSecurityOverHttp" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmSuite">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Property AlgorithmSuite As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityAlgorithmSuite ^ AlgorithmSuite { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); void set(System::ServiceModel::Security::SecurityAlgorithmSuite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-104">取得及設定指定訊息加密 (Encryption) 與金鑰包裝演算法的演算法組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-104">Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-105">
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-105">A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
          <span data-ttu-id="7bf02-106">預設值為 <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-106">The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-107">傳回的 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> 物件含有許多可用來指定在特定情況下使用之安全性演算法的屬性。</span><span class="sxs-lookup"><span data-stu-id="7bf02-107">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> object that is returned contains numerous properties that specify security algorithms to use in specific conditions.</span></span> <span data-ttu-id="7bf02-108">它還會描述服務的各種安全性功能。</span><span class="sxs-lookup"><span data-stu-id="7bf02-108">It also describes various security capabilities of the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-109">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-109">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#5](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#5)]
 [!code-vb[WSFederationHttpSecurity#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7bf02-110">值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-110">The value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimTypeRequirements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&gt; ClaimTypeRequirements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Security.Tokens.ClaimTypeRequirement&gt; ClaimTypeRequirements" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimTypeRequirements As Collection(Of ClaimTypeRequirement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Security::Tokens::ClaimTypeRequirement ^&gt; ^ ClaimTypeRequirements { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Security::Tokens::ClaimTypeRequirement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimTypeRequirements : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&gt;" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-111">取得此繫結的 <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> 執行個體集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-111">Gets a collection of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> instances for this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-112">型別為 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的 <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-112">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />.</span>
          </span>
          <span data-ttu-id="7bf02-113">預設為空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-113">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-114">服務會使用這個屬性傳回的集合，以指定發行的權杖中必要與選用的宣告，用戶端會使用此權杖存取服務。</span><span class="sxs-lookup"><span data-stu-id="7bf02-114">The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service.</span></span> <span data-ttu-id="7bf02-115">如果啟用 WSDL 發行，但 WCF 不要求發行的權杖中含有指定的宣告型別，則服務會在中繼資料公開需要的宣告型別。</span><span class="sxs-lookup"><span data-stu-id="7bf02-115">The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.</span></span>  <span data-ttu-id="7bf02-116">如果服務希望強制需要的宣告型別要出現，應使用授權原則。</span><span class="sxs-lookup"><span data-stu-id="7bf02-116">Services wishing to enforce required claim types are present should do using authorization policy.</span></span>  
  
 <span data-ttu-id="7bf02-117">在聯合用戶端上，此集合包含必要與選用宣告的清單，用戶端要求發行的權杖時，此清單會傳送給安全性權杖服務。</span><span class="sxs-lookup"><span data-stu-id="7bf02-117">On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the client’s request for an issued token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-118">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-118">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#11](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#11)]
 [!code-vb[WSFederationHttpSecurity#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EstablishSecurityContext">
      <MemberSignature Language="C#" Value="public bool EstablishSecurityContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EstablishSecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Property EstablishSecurityContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EstablishSecurityContext { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EstablishSecurityContext : bool with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-119">取得或設定某個安全性內容是否需要放置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-119">Gets or sets whether a security context requires being put into place.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-120">如果安全性內容需要放置，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-120">
              <see langword="true" /> if security context requires placing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuedKeyType">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyType IssuedKeyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IdentityModel.Tokens.SecurityKeyType IssuedKeyType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuedKeyType As SecurityKeyType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyType IssuedKeyType { System::IdentityModel::Tokens::SecurityKeyType get(); void set(System::IdentityModel::Tokens::SecurityKeyType value); };" />
      <MemberSignature Language="F#" Value="member this.IssuedKeyType : System.IdentityModel.Tokens.SecurityKeyType with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-121">指定要發行的金鑰類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-121">Specifies the type of key to be issued.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-122">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-122">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.</span>
          </span>
          <span data-ttu-id="7bf02-123">預設值為 <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-123">The default is <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-124"><xref:System.IdentityModel.Tokens.SecurityKeyType> 的有效值為 <xref:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey> 與 <xref:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey>。</span><span class="sxs-lookup"><span data-stu-id="7bf02-124">Valid values of <xref:System.IdentityModel.Tokens.SecurityKeyType> are <xref:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey> and <xref:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-125">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-125">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#7](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#7)]
 [!code-vb[WSFederationHttpSecurity#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7bf02-126">此值不是有效的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-126">The value is not a valid <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IssuedTokenType">
      <MemberSignature Language="C#" Value="public string IssuedTokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IssuedTokenType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuedTokenType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IssuedTokenType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IssuedTokenType : string with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-127">指定安全性權杖服務所應發行的權杖類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-127">Specifies the type of token which should be issued by the security token service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-128">要發行的權杖類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-128">The type of token to be issued.</span>
          </span>
          <span data-ttu-id="7bf02-129">預設為 <see langword="null" />，會讓 WCF 從 STS 要求 SAML 安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-129">The default is <see langword="null" />, which causes WCF to request a SAML security token from the STS.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-130">此屬性表示服務預期的權杖類型，並控制服務要建立哪一種 SecurityTokenAuthenticator。</span><span class="sxs-lookup"><span data-stu-id="7bf02-130">This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service.</span></span> <span data-ttu-id="7bf02-131">用戶端會在發行權杖的要求中，控制傳送給安全性權杖服務的類型。</span><span class="sxs-lookup"><span data-stu-id="7bf02-131">On the client it controls the type which is sent to the security token service in the client’s request for an issued token.</span></span>  
  
 <span data-ttu-id="7bf02-132">IssuedTokenType 通常採用 URI 形式。</span><span class="sxs-lookup"><span data-stu-id="7bf02-132">The IssuedTokenType typically takes the form of a URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-133">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-133">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#4](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#4)]
 [!code-vb[WSFederationHttpSecurity#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress IssuerAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress IssuerAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuerAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ IssuerAddress { System::ServiceModel::EndpointAddress ^ get(); void set(System::ServiceModel::EndpointAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IssuerAddress : System.ServiceModel.EndpointAddress with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-134">取得或設定安全性權杖服務的端點位址，此服務會發行服務的認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-134">Gets or sets the endpoint address of the security token service that issues credentials for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-135">安全性權杖服務的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-135">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the security token service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-136">此位址便是安全性權杖服務的端點，此服務會發行服務的認證。</span><span class="sxs-lookup"><span data-stu-id="7bf02-136">This address is used as the endpoint for the security token service that issues credentials for the service.</span></span> <span data-ttu-id="7bf02-137">如果 WSDL 已啟用但無法做為其他用途，服務會在中繼資料公開簽發者位址。</span><span class="sxs-lookup"><span data-stu-id="7bf02-137">Services expose the issuer address in metadata if WSDL is enabled but make no other use of it.</span></span> <span data-ttu-id="7bf02-138">用戶端使用簽發者位址與安全性權杖服務通訊。</span><span class="sxs-lookup"><span data-stu-id="7bf02-138">Clients use the issuer address to communicate with the security token service.</span></span> <span data-ttu-id="7bf02-139">如果 IssuerAddress 為 null，則用戶端會改用 IssuedTokenClientCredential 上的 LocalIssuerAddress 與 LocalIssuerBinding 屬性所指定的安全性權杖服務。</span><span class="sxs-lookup"><span data-stu-id="7bf02-139">If the IssuerAddress is null clients may fall back to using the security token service specified via the LocalIssuerAddress and LocalIssuerBinding properties on IssuedTokenClientCredential.</span></span>  
  
 <span data-ttu-id="7bf02-140">在某些情況下，如果 ClientCredentials.SupportInteractive 為 true，則將此值設為 `null` 或用戶端上的 WS-AddressingIdentity 匿名 URI，會使 CardSpace 啟動。</span><span class="sxs-lookup"><span data-stu-id="7bf02-140">Setting this value to `null` or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-141">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-141">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#8)]
 [!code-vb[WSFederationHttpSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding IssuerBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding IssuerBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuerBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ IssuerBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IssuerBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-142">取得或設定用戶端與安全性權杖服務通訊時所用的繫結 (安全性權杖服務的端點位址為 <see cref="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-142">Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <see cref="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-143">用戶端與安全性權杖服務通訊時所用的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-143">The <see cref="T:System.ServiceModel.Channels.Binding" /> to be used by the client when communicating with the security token service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-144">這個屬性是用來指定用戶端所用的繫結，在取得服務認證時，用戶端與安全性權杖服務之間會使用此繫結。</span><span class="sxs-lookup"><span data-stu-id="7bf02-144">This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.</span></span>  
  
 <span data-ttu-id="7bf02-145">請注意，由於這個屬性只是供用戶端取用，所以不需要置於服務中。</span><span class="sxs-lookup"><span data-stu-id="7bf02-145">Note that this property does not need to be populated on the service, since it is only consumed by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-146">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-146">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#9](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#9)]
 [!code-vb[WSFederationHttpSecurity#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerMetadataAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress IssuerMetadataAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress IssuerMetadataAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuerMetadataAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ IssuerMetadataAddress { System::ServiceModel::EndpointAddress ^ get(); void set(System::ServiceModel::EndpointAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IssuerMetadataAddress : System.ServiceModel.EndpointAddress with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-147">取得或設定端點位址，用來與超出範圍的安全性權杖服務進行通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-147">Gets or sets the endpoint address for communicating with the security token service out of band.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-148">用來與超出範圍的安全性權杖服務進行通訊的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-148">The <see cref="T:System.ServiceModel.Channels.Binding" /> to be used when communicating with the security token service out of band.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-149">此位址便是安全性權杖服務的端點，此服務發行超出範圍的服務認證。</span><span class="sxs-lookup"><span data-stu-id="7bf02-149">This address is used as the endpoint for the security token service that issues credentials for the service out of band.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-150">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-150">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#10](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#10)]
 [!code-vb[WSFederationHttpSecurity#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NegotiateServiceCredential">
      <MemberSignature Language="C#" Value="public bool NegotiateServiceCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NegotiateServiceCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property NegotiateServiceCredential As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NegotiateServiceCredential { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NegotiateServiceCredential : bool with get, set" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-151">指定訊息層級 SSL 交涉是否完成，以取得服務憑證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-151">Specifies whether a message level SSL negotiation is done to obtain the service’s certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-152">如果服務憑證已交涉則為 <see langword="true" />，如果服務憑證可超出範圍取得則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-152">
              <see langword="true" /> if the service certificate is negotiated; <see langword="false" /> if the service certificate is available out of band.</span>
          </span>
          <span data-ttu-id="7bf02-153">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-153">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-154">此屬性表示用戶端與服務之間是否自動交涉服務憑證。</span><span class="sxs-lookup"><span data-stu-id="7bf02-154">This property indicates whether the service certificate is negotiated automatically between the client and the service.</span></span> <span data-ttu-id="7bf02-155">如果此屬性為 `true`，則會發生此種交涉。</span><span class="sxs-lookup"><span data-stu-id="7bf02-155">If this property is `true`, then such negotiation occurs.</span></span> <span data-ttu-id="7bf02-156">如果此屬性為 `false`，則與服務通訊前，必須在用戶端指定服務憑證。</span><span class="sxs-lookup"><span data-stu-id="7bf02-156">If this property is `false`, then the service certificate must be specified at the client before communication with the service can occur.</span></span>  
  
 <span data-ttu-id="7bf02-157">服務一定要指定憑證。</span><span class="sxs-lookup"><span data-stu-id="7bf02-157">Services must always specify a certificate.</span></span>  
  
 <span data-ttu-id="7bf02-158">如果此屬性為 true，則在要求安全性權杖服務 (以 IssuerAddress 與 IssuerBinding 屬性，或 LocalIssuerAddress 與 LocalIssuerBinding 屬性指定) 發出安全性權杖之前，會先進行服務憑證的訊息層級 SSL 交涉。</span><span class="sxs-lookup"><span data-stu-id="7bf02-158">If this property is true, the message level SSL negotiation for the service certificate occurs before the security token service specified via the IssuerAddress and IssuerBinding properties (or LocalIssuerAddress and LocalIssuerBinding properties) is requested to issue a security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bf02-159">下列程式碼示範如何從繫結存取這個屬性並加以設定。</span><span class="sxs-lookup"><span data-stu-id="7bf02-159">The following code shows how to access this property from the binding, and set it.</span></span>  
  
 [!code-csharp[WSFederationHttpSecurity#6](~/samples/snippets/csharp/VS_Snippets_CFX/wsfederationhttpsecurity/cs/source.cs#6)]
 [!code-vb[WSFederationHttpSecurity#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wsfederationhttpsecurity/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAlgorithmSuite">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAlgorithmSuite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAlgorithmSuite () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAlgorithmSuite();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAlgorithmSuite : unit -&gt; bool" Usage="federatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-160">傳回要用於保護 SOAP 層級之訊息的演算法套件是否應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-160">Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7bf02-161">如果演算法套件應該序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-161">
              <see langword="true" /> if the algorithm suite should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeClaimTypeRequirements">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeClaimTypeRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeClaimTypeRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeClaimTypeRequirements () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeClaimTypeRequirements();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeClaimTypeRequirements : unit -&gt; bool" Usage="federatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-162">傳回指示任何現有的宣告型別需求可以序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-162">Returns that any existing claim type requirements can be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7bf02-163">如果有需求可以序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-163">
              <see langword="true" /> if there are requirements to serialize; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeEstablishSecurityContext">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeEstablishSecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeEstablishSecurityContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeEstablishSecurityContext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeEstablishSecurityContext();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeEstablishSecurityContext : unit -&gt; bool" Usage="federatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-164">傳回指示安全性內容是否已非預設，因此應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-164">Returns an indication whether the security context is not the default and therefore should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7bf02-165">如果內容應該序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-165">
              <see langword="true" /> if the context should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIssuedKeyType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIssuedKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeIssuedKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeIssuedKeyType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeIssuedKeyType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeIssuedKeyType : unit -&gt; bool" Usage="federatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-166">傳回指示核發金鑰型別是否已非預設，因此應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-166">Returns an indication whether the issued key type is not the default and therefore should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7bf02-167">如果應該序列化型別，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-167">
              <see langword="true" /> if the type should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeNegotiateServiceCredential">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeNegotiateServiceCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeNegotiateServiceCredential() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeNegotiateServiceCredential () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeNegotiateServiceCredential();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeNegotiateServiceCredential : unit -&gt; bool" Usage="federatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-168">傳回指示交涉服務認證的處理是否已非預設處理，因此應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-168">Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7bf02-169">如果應序列化處理序，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-169">
              <see langword="true" /> if the process should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTokenRequestParameters">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTokenRequestParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTokenRequestParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTokenRequestParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTokenRequestParameters();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTokenRequestParameters : unit -&gt; bool" Usage="federatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-170">傳回指示任何現有的權杖要求參數可以序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-170">Returns an indication that any existing token request parameters can be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7bf02-171">如果有參數要序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-171">
              <see langword="true" /> if there are parameters to be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenRequestParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Xml.XmlElement&gt; TokenRequestParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Xml.XmlElement&gt; TokenRequestParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenRequestParameters As Collection(Of XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Xml::XmlElement ^&gt; ^ TokenRequestParameters { System::Collections::ObjectModel::Collection&lt;System::Xml::XmlElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenRequestParameters : System.Collections.ObjectModel.Collection&lt;System.Xml.XmlElement&gt;" Usage="System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Xml.XmlElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bf02-172">取得在要求權杖時，傳送給安全性權杖服務的訊息本文 XML 項目集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-172">Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7bf02-173">型別為 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bf02-173">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bf02-174">此屬性傳回的集合，可用來指定要求權杖時，傳送給安全性權杖服務的訊息本文 XML 額外項目。</span><span class="sxs-lookup"><span data-stu-id="7bf02-174">The collection returned by this property can be used to specify additional XML elements to be sent in the message body to the security token service when requesting a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>