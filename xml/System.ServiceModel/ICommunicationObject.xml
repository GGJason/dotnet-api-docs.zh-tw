<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="864e880f75f69ec7b5b1eaad2fa2a42f3c1377ea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30520332" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b6905-101">定義系統中所有通訊導向物件 (包括通道、通道管理員、處理站、接聽程式、發送器和服務主機) 的基本狀態機器合約。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b6905-101">Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-102"><xref:System.ServiceModel.ICommunicationObject> 介面會定義︰</span><span class="sxs-lookup"><span data-stu-id="b6905-102">The <xref:System.ServiceModel.ICommunicationObject> interface defines:</span></span>  
  
-   <span data-ttu-id="b6905-103">用來起始狀態轉換的一組開啟、關閉與中止方法︰</span><span class="sxs-lookup"><span data-stu-id="b6905-103">A set of open, close and abort methods for initiating state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   <span data-ttu-id="b6905-104">開啟與關閉方法的非同步版本︰</span><span class="sxs-lookup"><span data-stu-id="b6905-104">Asynchronous versions of the open and close methods:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   <span data-ttu-id="b6905-105">提供狀態轉換通知的一組事件︰</span><span class="sxs-lookup"><span data-stu-id="b6905-105">A set of events that provide notifications of state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   <span data-ttu-id="b6905-106">用來檢查物件狀態的通用 <xref:System.ServiceModel.ICommunicationObject.State%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="b6905-106">A common <xref:System.ServiceModel.ICommunicationObject.State%2A> property for inspecting the state of an object</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b6905-107">導致通訊物件立即從目前的狀態轉換為已關閉狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-107">Causes a communication object to transition immediately from its current state into the closed state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-108">這個方法表示應該忽略任何未完成的工作，或在傳回前強制終止。</span><span class="sxs-lookup"><span data-stu-id="b6905-108">This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</span></span> <span data-ttu-id="b6905-109">您可以使用 <xref:System.ServiceModel.ICommunicationObject.Abort%2A> 方法來取消任何未處理的作業，包括未處理的 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="b6905-109">The <xref:System.ServiceModel.ICommunicationObject.Abort%2A> method can be used to cancel any outstanding operations, including outstanding calls to <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 <span data-ttu-id="b6905-110">若要正常地將 <xref:System.ServiceModel.ICommunicationObject> 從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態，請呼叫 <xref:System.ServiceModel.ICommunicationObject.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="b6905-110">To gracefully transition an <xref:System.ServiceModel.ICommunicationObject> from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state call <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-111">開始非同步作業以關閉通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-111">Begins an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-112">這個方法會讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-112">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span>  
  
 <span data-ttu-id="b6905-113">有明確逾時或無明確逾時的版本都會提供。</span><span class="sxs-lookup"><span data-stu-id="b6905-113">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="b6905-114">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-114">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b6905-115">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-115">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-116">開始非同步作業以關閉通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-116">Begins an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b6905-117">參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-117">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-118">這個方法會讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從任何狀態 (除了 <xref:System.ServiceModel.CommunicationState.Opened> 狀態以外) 轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-118">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="b6905-119"><xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法可讓任何未完成的工作在傳回前完成 </span><span class="sxs-lookup"><span data-stu-id="b6905-119">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b6905-120">(例如，完成傳送任何經過緩衝處理的訊息)。</span><span class="sxs-lookup"><span data-stu-id="b6905-120">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b6905-121">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-121">
              <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-122">經過預設的逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-122">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b6905-123">
            <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-123">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="b6905-124">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-124">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b6905-125">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-125">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-126">開始非同步作業，關閉有已指定逾時的通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-126">Begins an asynchronous operation to close a communication object with a specified timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b6905-127">參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-128">這個方法可在指定時間間隔內，讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-128">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state with in a specified interval of time.</span></span> <span data-ttu-id="b6905-129"><xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法可讓任何未完成的工作在傳回前完成 </span><span class="sxs-lookup"><span data-stu-id="b6905-129">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b6905-130">(例如，完成傳送任何經過緩衝處理的訊息)。</span><span class="sxs-lookup"><span data-stu-id="b6905-130">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b6905-131">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-131">
              <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-132">經過指定的逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-132">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-133">開始非同步作業以關閉通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-133">Begins an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-134"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 方法會讓 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Opened> 狀態結束或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="b6905-134">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until its transition to the <xref:System.ServiceModel.CommunicationState.Opened> state is completed or fails.</span></span>  
  
 <span data-ttu-id="b6905-135">有明確逾時或無明確逾時的版本都會提供。</span><span class="sxs-lookup"><span data-stu-id="b6905-135">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="b6905-136">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-136">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b6905-137">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-137">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-138">開始非同步作業以開啟通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-138">Begins an asynchronous operation to open a communication object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b6905-139">參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-139">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-140">當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-140">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b6905-141">在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。</span><span class="sxs-lookup"><span data-stu-id="b6905-141">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b6905-142"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。</span><span class="sxs-lookup"><span data-stu-id="b6905-142">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b6905-143">在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。</span><span class="sxs-lookup"><span data-stu-id="b6905-143">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b6905-144">
            <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-144">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-145">經過預設的開啟逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-145">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b6905-146">
            <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-146">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="b6905-147">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-147">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b6905-148">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-148">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-149">開始非同步作業，開啟有已指定時間間隔的通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-149">Begins an asynchronous operation to open a communication object within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b6905-150">參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-150">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-151">當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-151">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b6905-152">在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。</span><span class="sxs-lookup"><span data-stu-id="b6905-152">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b6905-153"><xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。</span><span class="sxs-lookup"><span data-stu-id="b6905-153">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b6905-154">在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。</span><span class="sxs-lookup"><span data-stu-id="b6905-154">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b6905-155">
            <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-155">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-156">經過指定的逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-156">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b6905-157">如果超出了指定的 <see cref="T:System.TimeoutException" />，此作業必須擲回 <paramref name="timeout" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b6905-157">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-158">導致通訊物件從目前的狀態轉換為已關閉狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-158">Causes a communication object to transition from its current state into the closed state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b6905-159">導致通訊物件從目前的狀態轉換為已關閉狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-159">Causes a communication object to transition from its current state into the closed state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-160">這個方法會讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-160">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="b6905-161"><xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法可讓任何未完成的工作在傳回前完成 </span><span class="sxs-lookup"><span data-stu-id="b6905-161">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b6905-162">(例如，完成傳送任何經過緩衝處理的訊息)。</span><span class="sxs-lookup"><span data-stu-id="b6905-162">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="b6905-163"><xref:System.ServiceModel.ICommunicationObject> 會進入並維持 <xref:System.ServiceModel.CommunicationState.Closing> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態結束為止。</span><span class="sxs-lookup"><span data-stu-id="b6905-163">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="b6905-164">一旦到達 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 狀態，就會傳回 <xref:System.ServiceModel.CommunicationState.Closed>。</span><span class="sxs-lookup"><span data-stu-id="b6905-164"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="b6905-165">如果在 <xref:System.ServiceModel.ICommunicationObject> 可以正常關閉前，經過了預設關閉逾時時間，就會中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="b6905-165">If the default close timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to close gracefully, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b6905-166">如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A>、<xref:System.ServiceModel.ICommunicationObject> 或 <xref:System.ServiceModel.CommunicationState.Created> 狀態的 <xref:System.ServiceModel.CommunicationState.Opening> 呼叫 <xref:System.ServiceModel.CommunicationState.Faulted>，就會中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="b6905-166">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span> <span data-ttu-id="b6905-167">如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 或 <xref:System.ServiceModel.ICommunicationObject> 狀態的 <xref:System.ServiceModel.CommunicationState.Closing> 呼叫 <xref:System.ServiceModel.CommunicationState.Closed>，就會立刻傳回該呼叫。</span><span class="sxs-lookup"><span data-stu-id="b6905-167">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="b6905-168">也有非同步的方式可用於關閉方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 完成。</span><span class="sxs-lookup"><span data-stu-id="b6905-168">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b6905-169">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-169">
              <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-170">經過預設的關閉逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-170">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b6905-171">
            <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-171">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-172">導致通訊物件從目前的狀態轉換為已關閉狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-172">Causes a communication object to transition from its current state into the closed state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-173">這個方法可在指定時間間隔內，讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-173">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state within a specified interval of time.</span></span> <span data-ttu-id="b6905-174"><xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法可讓任何未完成的工作在傳回前完成 </span><span class="sxs-lookup"><span data-stu-id="b6905-174">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b6905-175">(例如，完成傳送任何經過緩衝處理的訊息)。</span><span class="sxs-lookup"><span data-stu-id="b6905-175">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="b6905-176"><xref:System.ServiceModel.ICommunicationObject> 會進入並維持 <xref:System.ServiceModel.CommunicationState.Closing> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態結束為止。</span><span class="sxs-lookup"><span data-stu-id="b6905-176">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="b6905-177">一旦到達 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 狀態，就會傳回 <xref:System.ServiceModel.CommunicationState.Closed>。</span><span class="sxs-lookup"><span data-stu-id="b6905-177"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="b6905-178">如果在 <xref:System.ServiceModel.ICommunicationObject> 可以正常關閉前，經過了逾時時間，就會中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="b6905-178">If the timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to gracefully close, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b6905-179">如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A>、<xref:System.ServiceModel.ICommunicationObject> 或 <xref:System.ServiceModel.CommunicationState.Created> 狀態的 <xref:System.ServiceModel.CommunicationState.Opening> 呼叫 <xref:System.ServiceModel.CommunicationState.Faulted>，就會中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="b6905-179">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  <span data-ttu-id="b6905-180">如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 或 <xref:System.ServiceModel.ICommunicationObject> 狀態的 <xref:System.ServiceModel.CommunicationState.Closing> 呼叫 <xref:System.ServiceModel.CommunicationState.Closed>，就會立刻傳回該呼叫。</span><span class="sxs-lookup"><span data-stu-id="b6905-180">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="b6905-181">也有非同步的方式可用於關閉方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 完成。</span><span class="sxs-lookup"><span data-stu-id="b6905-181">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b6905-182">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-182">
              <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-183">經過逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-183">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b6905-184">如果超出了指定的 <see cref="T:System.TimeoutException" />，此作業必須擲回 <paramref name="timeout" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b6905-184">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-185">當通訊物件從關閉中狀態轉換為已關閉狀態完成時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-185">Occurs when the communication object completes its transition from the closing state into the closed state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-186">當通訊物件第一次進入關閉中狀態時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-186">Occurs when the communication object first enters the closing state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-187">緊接在叫用 <xref:System.ServiceModel.CommunicationState.Opened> 或 <xref:System.ServiceModel.CommunicationState.Closed> 方法後，通訊物件會先開始從 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 狀態轉換為 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 狀態時，此時就會發生這個事件。</span><span class="sxs-lookup"><span data-stu-id="b6905-187">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Opened> state into the <xref:System.ServiceModel.CommunicationState.Closed> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Close%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b6905-188">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-188">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-189">完成非同步作業以關閉通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-189">Completes an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b6905-190">已針對處於 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-190">
              <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-191">經過逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-191">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b6905-192">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-192">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-193">完成非同步作業以開啟通訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-193">Completes an asynchronous operation to open a communication object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b6905-194">
            <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-194">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-195">經過逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-195">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-196">當通訊物件第一次進入錯誤狀態時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-196">Occurs when the communication object first enters the faulted state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-197">導致通訊物件從已建立狀態轉換為已開啟狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-197">Causes a communication object to transition from the created state into the opened state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-198">有明確逾時或無明確逾時的版本都會提供。</span><span class="sxs-lookup"><span data-stu-id="b6905-198">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b6905-199">導致通訊物件從已建立狀態轉換為已開啟狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-199">Causes a communication object to transition from the created state into the opened state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-200">當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-200">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b6905-201">在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。</span><span class="sxs-lookup"><span data-stu-id="b6905-201">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b6905-202"><xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。</span><span class="sxs-lookup"><span data-stu-id="b6905-202">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b6905-203">在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。</span><span class="sxs-lookup"><span data-stu-id="b6905-203">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="b6905-204">也有非同步的方式可用於開啟方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 完成。</span><span class="sxs-lookup"><span data-stu-id="b6905-204">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b6905-205">
            <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-205">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-206">經過預設的開啟逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-206">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b6905-207">
            <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-207">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6905-208">在指定時間間隔內，讓通訊物件從已建立狀態轉換為已開啟狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-208">Causes a communication object to transition from the created state into the opened state within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-209">當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。</span><span class="sxs-lookup"><span data-stu-id="b6905-209">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b6905-210">在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。</span><span class="sxs-lookup"><span data-stu-id="b6905-210">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b6905-211"><xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。</span><span class="sxs-lookup"><span data-stu-id="b6905-211">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b6905-212">在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。</span><span class="sxs-lookup"><span data-stu-id="b6905-212">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="b6905-213">也有非同步的方式可用於開啟方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 完成。</span><span class="sxs-lookup"><span data-stu-id="b6905-213">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b6905-214">
            <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-214">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b6905-215">經過指定的逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-215">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b6905-216">如果超出了指定的 <see cref="T:System.TimeoutException" />，此作業必須擲回 <paramref name="timeout" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b6905-216">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-217">當通訊物件從開啟中狀態轉換為已開啟狀態結束時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-217">Occurs when the communication object completes its transition from the opening state into the opened state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-218">當通訊物件第一次進入開啟中狀態時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-218">Occurs when the communication object first enters the opening state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-219">緊接在叫用 <xref:System.ServiceModel.CommunicationState.Created> 或 <xref:System.ServiceModel.CommunicationState.Opened> 方法後，通訊物件會先開始從 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 狀態轉換為 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 狀態時，此時就會發生這個事件。</span><span class="sxs-lookup"><span data-stu-id="b6905-219">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Created> state into the <xref:System.ServiceModel.CommunicationState.Opened> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b6905-220">取得通訊導向物件的目前狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-220">Gets the current state of the communication-oriented object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b6905-221">物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6905-221">The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6905-222"><xref:System.ServiceModel.ICommunicationObject> 可用的主要通訊狀態有︰</span><span class="sxs-lookup"><span data-stu-id="b6905-222">The main communication states available to an <xref:System.ServiceModel.ICommunicationObject> are:</span></span>  
  
-   <span data-ttu-id="b6905-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span><span class="sxs-lookup"><span data-stu-id="b6905-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 <span data-ttu-id="b6905-224">在下面三個主要狀態間轉換時，這類物件也可能處於某些過渡狀態：</span><span class="sxs-lookup"><span data-stu-id="b6905-224">There are also transitory states that such an object can occupy when transitioning between the first three main states:</span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 <span data-ttu-id="b6905-225">這個 <xref:System.ServiceModel.CommunicationState> 會定義適用於系統中所有通訊導向物件的狀態，這些物件包括通道、接聽程式、通道與接聽程式處理站，以及 <xref:System.ServiceModel.ServiceHost> 類別。</span><span class="sxs-lookup"><span data-stu-id="b6905-225">This <xref:System.ServiceModel.CommunicationState> defines the states that are valid for all communication-oriented objects in the system, including channels, listeners, the channel and listener factories, and the <xref:System.ServiceModel.ServiceHost> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>