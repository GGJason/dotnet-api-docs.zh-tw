<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bd10050a23dcc2c98d77e5aee0d809820906d49" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37612965" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <TypeSignature Language="F#" Value="type ICommunicationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義系統中所有通訊導向物件 (包括通道、通道管理員、處理站、接聽程式、發送器和服務主機) 的基本狀態機器合約。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject> 介面會定義︰  
  
-   用來起始狀態轉換的一組開啟、關閉與中止方法︰  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   開啟與關閉方法的非同步版本︰  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   提供狀態轉換通知的一組事件︰  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   用來檢查物件狀態的通用 <xref:System.ServiceModel.ICommunicationObject.State%2A> 屬性  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="iCommunicationObject.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致通訊物件立即從目前的狀態轉換為已關閉狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法表示應該忽略任何未完成的工作，或在傳回前強制終止。 您可以使用 <xref:System.ServiceModel.ICommunicationObject.Abort%2A> 方法來取消任何未處理的作業，包括未處理的 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 呼叫。  
  
 若要正常地將 <xref:System.ServiceModel.ICommunicationObject> 從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態，請呼叫 <xref:System.ServiceModel.ICommunicationObject.Close%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始非同步作業以關閉通訊物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。  
  
 有明確逾時或無明確逾時的版本都會提供。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
        <summary>開始非同步作業以關閉通訊物件。</summary>
        <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從任何狀態 (除了 <xref:System.ServiceModel.CommunicationState.Opened> 狀態以外) 轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">經過預設的逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
        <summary>開始非同步作業，關閉有已指定逾時的通訊物件。</summary>
        <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可在指定時間間隔內，讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">經過指定的逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始非同步作業以關閉通訊物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 方法會讓 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Opened> 狀態結束或失敗為止。  
  
 有明確逾時或無明確逾時的版本都會提供。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業以開啟通訊物件。</summary>
        <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。 在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
        <exception cref="T:System.TimeoutException">經過預設的開啟逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業，開啟有已指定時間間隔的通訊物件。</summary>
        <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。 在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
        <exception cref="T:System.TimeoutException">經過指定的逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
        <block subset="none" type="overrides">
          <para>此作業必須擲回<see cref="T:System.TimeoutException" />如果指定<paramref name="timeout" />超過。</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iCommunicationObject.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。  
  
 <xref:System.ServiceModel.ICommunicationObject> 會進入並維持 <xref:System.ServiceModel.CommunicationState.Closing> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態結束為止。  
  
 一旦到達 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 狀態，就會傳回 <xref:System.ServiceModel.CommunicationState.Closed>。  
  
 如果在 <xref:System.ServiceModel.ICommunicationObject> 可以正常關閉前，經過了預設關閉逾時時間，就會中止 <xref:System.ServiceModel.ICommunicationObject>。  
  
 如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A>、<xref:System.ServiceModel.ICommunicationObject> 或 <xref:System.ServiceModel.CommunicationState.Created> 狀態的 <xref:System.ServiceModel.CommunicationState.Opening> 呼叫 <xref:System.ServiceModel.CommunicationState.Faulted>，就會中止 <xref:System.ServiceModel.ICommunicationObject>。 如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 或 <xref:System.ServiceModel.ICommunicationObject> 狀態的 <xref:System.ServiceModel.CommunicationState.Closing> 呼叫 <xref:System.ServiceModel.CommunicationState.Closed>，就會立刻傳回該呼叫。  
  
 也有非同步的方式可用於關閉方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">經過預設的關閉逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="iCommunicationObject.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</param>
        <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可在指定時間間隔內，讓 <xref:System.ServiceModel.ICommunicationObject> 正常地從 <xref:System.ServiceModel.CommunicationState.Opened> 狀態轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。  
  
 <xref:System.ServiceModel.ICommunicationObject> 會進入並維持 <xref:System.ServiceModel.CommunicationState.Closing> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態結束為止。  
  
 一旦到達 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 狀態，就會傳回 <xref:System.ServiceModel.CommunicationState.Closed>。  
  
 如果在 <xref:System.ServiceModel.ICommunicationObject> 可以正常關閉前，經過了逾時時間，就會中止 <xref:System.ServiceModel.ICommunicationObject>。  
  
 如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A>、<xref:System.ServiceModel.ICommunicationObject> 或 <xref:System.ServiceModel.CommunicationState.Created> 狀態的 <xref:System.ServiceModel.CommunicationState.Opening> 呼叫 <xref:System.ServiceModel.CommunicationState.Faulted>，就會中止 <xref:System.ServiceModel.ICommunicationObject>。  如果針對處於 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 或 <xref:System.ServiceModel.ICommunicationObject> 狀態的 <xref:System.ServiceModel.CommunicationState.Closing> 呼叫 <xref:System.ServiceModel.CommunicationState.Closed>，就會立刻傳回該呼叫。  
  
 也有非同步的方式可用於關閉方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">經過逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
        <block subset="none" type="overrides">
          <para>此作業必須擲回<see cref="T:System.TimeoutException" />如果指定<paramref name="timeout" />超過。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件從關閉中狀態轉換為已關閉狀態完成時發生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件第一次進入關閉中狀態時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 緊接在叫用 <xref:System.ServiceModel.CommunicationState.Opened> 或 <xref:System.ServiceModel.CommunicationState.Closed> 方法後，通訊物件會先開始從 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 狀態轉換為 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 狀態時，此時就會發生這個事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndClose : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 方法時所傳回。</param>
        <summary>完成非同步作業以關閉通訊物件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">經過逾時時間之後，就可以正常關閉 <see cref="T:System.ServiceModel.ICommunicationObject" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOpen : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> 方法時所傳回。</param>
        <summary>完成非同步作業以開啟通訊物件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
        <exception cref="T:System.TimeoutException">經過逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberSignature Language="F#" Value="member this.Faulted : EventHandler " Usage="member this.Faulted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件第一次進入錯誤狀態時發生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>導致通訊物件從已建立狀態轉換為已開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有明確逾時或無明確逾時的版本都會提供。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="iCommunicationObject.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致通訊物件從已建立狀態轉換為已開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。 在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。  
  
 也有非同步的方式可用於開啟方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
        <exception cref="T:System.TimeoutException">經過預設的開啟逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Open : TimeSpan -&gt; unit" Usage="iCommunicationObject.Open timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</param>
        <summary>在指定時間間隔內，讓通訊物件從已建立狀態轉換為已開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當具現化 <xref:System.ServiceModel.ICommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。 在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法會使 <xref:System.ServiceModel.ICommunicationObject> 進入並維持 <xref:System.ServiceModel.CommunicationState.Opening> 狀態，直到開啟作業成功、開啟作業逾時或失敗、物件發生錯誤或中止 <xref:System.ServiceModel.ICommunicationObject> 為止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.ICommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。  
  
 也有非同步的方式可用於開啟方法，亦即藉由呼叫 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 啟始，呼叫 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <see cref="T:System.ServiceModel.ICommunicationObject" /> 無法開啟，而且已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
        <exception cref="T:System.TimeoutException">經過指定的逾時時間之後，<see cref="T:System.ServiceModel.ICommunicationObject" /> 就可以進入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，而且也已進入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態。</exception>
        <block subset="none" type="overrides">
          <para>此作業必須擲回<see cref="T:System.TimeoutException" />如果指定<paramref name="timeout" />超過。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件從開啟中狀態轉換為已開啟狀態結束時發生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberSignature Language="F#" Value="member this.Opening : EventHandler " Usage="member this.Opening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件第一次進入開啟中狀態時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 緊接在叫用 <xref:System.ServiceModel.CommunicationState.Created> 或 <xref:System.ServiceModel.CommunicationState.Opened> 方法後，通訊物件會先開始從 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 狀態轉換為 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 狀態時，此時就會發生這個事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.CommunicationState" Usage="System.ServiceModel.ICommunicationObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得通訊導向物件的目前狀態。</summary>
        <value>物件的 <see cref="T:System.ServiceModel.CommunicationState" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject> 可用的主要通訊狀態有︰  
  
-   <xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 在下面三個主要狀態間轉換時，這類物件也可能處於某些過渡狀態：  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 這個 <xref:System.ServiceModel.CommunicationState> 會定義適用於系統中所有通訊導向物件的狀態，這些物件包括通道、接聽程式、通道與接聽程式處理站，以及 <xref:System.ServiceModel.ServiceHost> 類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>