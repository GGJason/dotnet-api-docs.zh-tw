<Type Name="ConcurrencyMode" FullName="System.ServiceModel.ConcurrencyMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0587fcb8009be11754769f2ed4c60a6553c4d22" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313846" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConcurrencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConcurrencyMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ConcurrencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConcurrencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConcurrencyMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定服務類別是支援單一執行緒或多重執行緒的作業模式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ConcurrencyMode> 與 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 屬性搭配使用，指定服務類別是支援單一執行緒或多重執行緒的作業模式。 單一執行緒作業可為可重新進入 (Reentrant) 或不可重新進入 (Non-Reentrant)。  
  
 下表顯示當 Windows Communication Foundation (WCF) 會允許作業，以叫用，而另一個有進行中，視<xref:System.ServiceModel.ConcurrencyMode>。  
  
|ConcurrencyMode 值|新作業可叫用嗎？|  
|---------------------------|-------------------------------------|  
|Single|永不。|  
|重新進入|只在叫用另一服務或回呼時。|  
|選擇性顯示|永遠。|  
  
   
  
## Examples  
 下列程式碼範例示範使用單一、 Reentrant 和多個之間的差異。 此範例不會編譯，實際實作情況下，但未示範種執行緒保證，WCF 可讓您的作業程式碼的意義。  
  
 [!code-csharp[C_BestPractices-Concurrency#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_bestpractices-concurrency/cs/reentrantandmultiple.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="Multiple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Multiple = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Multiple" />
      <MemberSignature Language="VB.NET" Value="Multiple" />
      <MemberSignature Language="C++ CLI" Value="Multiple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>服務執行個體為多執行緒。 不保證同步處理。 由於其他執行緒可隨時變更您的服務物件，您必須隨時處理同步及狀態的一致性。</summary>
      </Docs>
    </Member>
    <Member MemberName="Reentrant">
      <MemberSignature Language="C#" Value="Reentrant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Reentrant = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Reentrant" />
      <MemberSignature Language="VB.NET" Value="Reentrant" />
      <MemberSignature Language="C++ CLI" Value="Reentrant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>服務執行個體為單一執行緒，且接受重新進入呼叫。 重新進入服務在您呼叫其他服務時接受呼叫；因此您的責任是在 Callout 前保持物件狀態一致性，並且必須確定作業本機資料在 Callout 後有效。 請注意，只有透過 WCF 通道呼叫另一個服務才能解除服務執行個體鎖定。 此時，被呼叫的服務可透過回呼重新進入第一個服務。 如果第一個服務無法重新進入，這時的呼叫順序會造成死結。 如需詳細資訊，請參閱 <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />。</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Single = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>該服務執行個體為單一執行緒服務，而且不接受重新進入 (Reentrant) 的呼叫。 若 <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> 屬性為 <see cref="F:System.ServiceModel.InstanceContextMode.Single" />，而且在執行個體處理呼叫時有另外的訊息抵達，這些訊息必須等到服務可使用，或者訊息逾時為止。</summary>
      </Docs>
    </Member>
  </Members>
</Type>