<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageContractMemberAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59212fc608637a253f5a16676534255eb3e980570.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9212fc608637a253f5a16676534255eb3e980570</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>Declares the base members for <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderAttribute" /&gt;</ph>.</source>
          <target state="translated">宣告 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderAttribute" /&gt;</ph> 的基底成員。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>This class contains properties common to all parts of a SOAP message.</source>
          <target state="translated">這個類別包含 SOAP 訊息的所有部分都通用的屬性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>For example, all parts have a name and a namespace, and potentially a level of security applied.</source>
          <target state="translated">例如，所有的部分都會有名稱和命名空間，而且可能套用了某個層級的安全性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType&gt;</ph>, <bpt id="p1">[</bpt>Specifying Data Transfer in Service Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>, and <bpt id="p2">[</bpt>Using Data Contracts<ept id="p2">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated">如需如何控制 SOAP 本文內容的序列化，而不需修改預設 SOAP 封套本身的資訊，請參閱<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType&gt;</ph>，<bpt id="p1">[</bpt>在服務合約中指定資料傳輸<ept id="p1">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>，和<bpt id="p2">[</bpt>中使用資料合約<ept id="p2">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>For more information about creating message contracts, see <bpt id="p1">[</bpt>Using Message Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-message-contracts.md)</ept>.</source>
          <target state="translated">如需有關如何建立訊息合約的詳細資訊，請參閱<bpt id="p1">[</bpt>使用訊息合約<ept id="p1">](~/docs/framework/wcf/feature-details/using-message-contracts.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>The following code examples demonstrate a custom message contract that uses the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes (which all inherit from <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>)to create custom typed messages to use in operations.</source>
          <target state="translated">下列程式碼範例示範自訂訊息合約，這個合約會使用 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 屬性 (全都繼承自 <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>) 建立自訂型別訊息以使用於作業中。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>In this case, there are three members that are serialized into the body element of the SOAP message: <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, and the <ph id="ph3">`amount`</ph> value, (which is serialized into an element with the name <ph id="ph4">`transactionAmount`</ph>).</source>
          <target state="translated">在此案例中，有三個序列化成 SOAP 訊息本文項目的成員：<ph id="ph1">`sourceAccount`</ph>、<ph id="ph2">`targetAccount`</ph> 以及 <ph id="ph3">`amount`</ph> 值 (序列化成名稱為 <ph id="ph4">`transactionAmount`</ph> 的項目)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>In addition, the <ph id="ph1">`IsAudited`</ph> SOAP header element resides in the <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> namespace, and <ph id="ph3">`sourceAccount`</ph> is encrypted and digitally signed.</source>
          <target state="translated">此外，<ph id="ph1">`IsAudited`</ph> SOAP 標頭項目位於 <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> 命名空間中，而 <ph id="ph3">`sourceAccount`</ph> 已經過加密和數位簽署。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>The <ph id="ph1">`Operation`</ph> and <ph id="ph2">`Account`</ph> types must have a data contract.</source>
          <target state="translated"><ph id="ph1">`Operation`</ph> 和 <ph id="ph2">`Account`</ph> 型別必須具有資料合約。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageContractMemberAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageContractMemberAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
          <source>When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.</source>
          <target state="translated">在衍生類別中覆寫時，取得指出成員是否已指派保護層級的值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member has a protection level; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成員具有保護層級，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>Specifies the name of the element that corresponds to this member.</source>
          <target state="translated">指定對應於這個成員的項目名稱。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>The name of the element that corresponds to this member.</source>
          <target state="translated">對應至這個成員的項目名稱。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>This string must be a valid XML element name.</source>
          <target state="translated">這個字串必須是有效的 XML 項目名稱。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>The following code examples demonstrate a custom message contract that uses the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes to create custom, strongly-typed messages to use as parameters.</source>
          <target state="translated">下列程式碼範例示範自訂訊息合約，這個合約會使用 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 屬性，以建立自訂的強型別訊息當做參數使用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>In this case, there are three data members that are serialized into the body element of the SOAP message: <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, and the <ph id="ph3">`amount`</ph> value, (which is serialized into an element with the name <ph id="ph4">`transactionAmount`</ph>).</source>
          <target state="translated">在此案例中，有三個序列化成 SOAP 訊息本文項目的資料成員：<ph id="ph1">`sourceAccount`</ph>、<ph id="ph2">`targetAccount`</ph> 以及 <ph id="ph3">`amount`</ph> 值 (後者序列化成名稱為 <ph id="ph4">`transactionAmount`</ph> 的項目)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>In addition, the <ph id="ph1">`IsAudited`</ph> SOAP header element resides in the <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> namespace.</source>
          <target state="translated">此外，<ph id="ph1">`IsAudited`</ph> SOAP 標頭項目是位於 <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> 命名空間。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>The <ph id="ph1">`Operation`</ph> and <ph id="ph2">`Account`</ph> types must also have a data contract.</source>
          <target state="translated"><ph id="ph1">`Operation`</ph> 和 <ph id="ph2">`Account`</ph> 型別還必須具有資料合約。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>Specifies the namespace of the element that corresponds to this member.</source>
          <target state="translated">指定對應於這個成員的項目命名空間。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>A namespace URI of the element that corresponds to this member.</source>
          <target state="translated">對應於這個成員的項目命名空間 URI。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>The following code examples demonstrate a custom message contract that uses the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes (which all inherit from <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>)to create custom typed messages to use in operations.</source>
          <target state="translated">下列程式碼範例示範自訂訊息合約，這個合約會使用 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 屬性 (全都繼承自 <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>) 建立自訂型別訊息以使用於作業中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>In this case, there are three members that are serialized into the body element of the SOAP message: <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, and the <ph id="ph3">`amount`</ph> value, (which is serialized into an element with the name <ph id="ph4">`transactionAmount`</ph>).</source>
          <target state="translated">在此案例中，有三個序列化成 SOAP 訊息本文項目的成員：<ph id="ph1">`sourceAccount`</ph>、<ph id="ph2">`targetAccount`</ph> 以及 <ph id="ph3">`amount`</ph> 值 (序列化成名稱為 <ph id="ph4">`transactionAmount`</ph> 的項目)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>In addition, the <ph id="ph1">`IsAudited`</ph> SOAP header element resides in the <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> namespace, and <ph id="ph3">`sourceAccount`</ph> is encrypted and digitally signed.</source>
          <target state="translated">此外，<ph id="ph1">`IsAudited`</ph> SOAP 標頭項目位於 <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> 命名空間中，而 <ph id="ph3">`sourceAccount`</ph> 已經過加密和數位簽署。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>The <ph id="ph1">`Operation`</ph> and <ph id="ph2">`Account`</ph> types must have a data contract.</source>
          <target state="translated"><ph id="ph1">`Operation`</ph> 和 <ph id="ph2">`Account`</ph> 型別必須具有資料合約。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.</source>
          <target state="translated">指定成員要依現狀加以傳輸、簽署，或者加以簽署並加密。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>To make use of the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> property in either the <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes you must properly configure the binding and behaviors.</source>
          <target state="translated">若要使用 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> 或 <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 屬性中的 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 屬性，您必須正確設定繫結和行為。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>If these security features are used without a proper configuration (for example, using <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph> with a message part without supplying security credentials) an exception is thrown at run time.</source>
          <target state="translated">如果沒有透過正確的組態 (例如，使用具有未提供安全性認證之訊息部分的 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>) 使用這些安全性功能，就會在執行階段擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>In addition, the protection level is determined for each header individually.</source>
          <target state="translated">此外，保護層級是針對每一個標頭個別決定的。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>However, the SOAP body has only one protection level, regardless of the number of body parts.</source>
          <target state="translated">不過，無論有多少個本文部分，SOAP 本文都只有一個保護層級。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The protection level of the body is determined by the highest <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> property value of all the body parts.</source>
          <target state="translated">本文保護層級是由所有本文部分的最高層 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> 屬性值所決定。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>For example, consider the following class:</source>
          <target state="translated">例如，請參考下列類別：</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>In this example, the <ph id="ph1">`recordID`</ph> header is not protected, <ph id="ph2">`patientName`</ph> is signed, and <ph id="ph3">`SSN`</ph> is encrypted and signed.</source>
          <target state="translated">在這個範例中，<ph id="ph1">`recordID`</ph> 標頭不受保護，<ph id="ph2">`patientName`</ph> 已經過簽署，而 <ph id="ph3">`SSN`</ph> 已經過加密並簽署。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>There is at least one body part, <ph id="ph1">`medicalHistory`</ph>, with <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and thus the entire message body is encrypted and signed, even though the <ph id="ph3">`comments`</ph> and <ph id="ph4">`diagnosis`</ph> body parts specify lower protection levels.</source>
          <target state="translated">至少有一個本文部分 <ph id="ph1">`medicalHistory`</ph> 具有 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>，因此會加密並簽署整個訊息本文，即使 <ph id="ph3">`comments`</ph> 和 <ph id="ph4">`diagnosis`</ph> 本文部分指定較低的保護層級亦然。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The protection behavior at runtime is the combination of the protection-level values set on the following properties.</source>
          <target state="translated">執行階段的保護行為，是下列屬性的保護層級設定值的組合。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>These properties have a hierarchical structure.</source>
          <target state="translated">這些屬性有階層式結構。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">除非針對較窄的範圍明確設定不同的值，否則，設定最外層的值會建立所有較窄範圍的預設值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">在此情況下，外部值仍為所有較窄範圍的預設值 (特別設定的範圍除外)。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</source>
          <target state="translated">例如，如果 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> 設定為 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> 而且沒有其他更窄的範圍具有保護層級設定，則會加密並簽署作業合約中的所有訊息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</source>
          <target state="translated">但是，如果這些其中一個作業已將 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 設定為 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>，則會簽署該作業的訊息，但是合約中的其他所有訊息都會經過加密並簽署。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">如需保護層級及其假設和範圍的詳細資訊，請參閱<bpt id="p1">[</bpt>了解保護層級<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">設定這些值的範圍如下：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">當合約上未明確指定保護層級，而且基礎繫結可支援安全性 (不論是在傳輸層級或訊息層級) 時，整個合約的有效保護層級會是 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">如果繫結不支援安全性 (例如，<ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>)，整個合約的有效 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> 為 <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">結果便是根據端點繫結的不同，用戶端可以要求不同的訊息或傳輸層級的安全性保護，即使當合約指定 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> 時亦然。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>