<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceAuthorizationManager.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a8c7e5d1cb9b8edbf884c99c3ef030fa57b58c5b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8c7e5d1cb9b8edbf884c99c3ef030fa57b58c5b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Provides authorization access checking for service operations.</source>
          <target state="translated">提供服務作業的授權存取檢查。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>This class is responsible for evaluating all policies (rules that define what a user is allowed to do), comparing the policies to claims made by a client, setting the resulting <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>, and providing the authorization decision whether to allow or deny access for a given service operation for a caller.</source>
          <target state="translated">這個類別會負責評估所有原則 (定義允許使用者執行之作業的規則)、比較原則與用戶端所做的宣告、將結果 <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> 設定為 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>，以及提供是否允許或拒絕呼叫者存取已指定服務作業的授權決策。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method is called by the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure each time an attempt to access a resource is made.</source>
          <target state="translated">每當嘗試存取資源時，<ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 基礎結構便會呼叫 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The method returns <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> to allow or deny access, respectively.</source>
          <target state="translated">此方法會分別傳回 <ph id="ph1">`true`</ph> 或 <ph id="ph2">`false`</ph> 以允許或拒絕存取。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> is part of the <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph><bpt id="p1">*</bpt>Identity Model<ept id="p1">*</ept> infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph>屬於<ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph><bpt id="p1">*</bpt>身分識別模型<ept id="p1">*</ept>基礎結構。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The Identity Model enables you to create custom authorization policies and custom authorization schemes.</source>
          <target state="translated">「身分識別模型」可讓您建立自訂授權原則和自訂授權配置。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> how the Identity Model works, see <bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 如何識別模型的運作方式，請參閱<bpt id="p1">[</bpt>管理宣告和授權的方式識別模型<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Custom Authorization</source>
          <target state="translated">自訂授權</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>This class does not perform any authorization and allows users to access all service operations.</source>
          <target state="translated">這個類別不會執行任何授權，而且會允許使用者存取所有服務作業。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To provide more restrictive authorization, you must create a custom authorization manager that checks custom policies.</source>
          <target state="translated">若要提供更嚴格的授權，您必須建立會檢查自訂原則的自訂授權管理員。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To do this, inherit from this class and override the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated">若要這樣做，請繼承自這個類別並覆寫 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Specify the instance of the derived class through the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A&gt;</ph> property.</source>
          <target state="translated">請透過 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A&gt;</ph> 屬性指定該衍生類別的執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>In <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>, the application can use the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object to access the caller identity (<ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
          <target state="translated">在 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 中，應用程式可以使用 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 物件來存取呼叫者身分識別 (<ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object, the application can access the service (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>), and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
          <target state="translated">藉由取得會傳回 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> 物件的 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> 屬性，應用程式便可以存取服務 (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) 和作業 (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>) and perform the authorization decision accordingly.</source>
          <target state="translated">藉由取得會傳回 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> 物件的 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> 屬性，應用程式便可以存取整個要求訊息 (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>) 並據此執行授權決策。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>.</source>
          <target state="translated">如需範例，請參閱<bpt id="p1">[</bpt>How to： 建立自訂授權管理員服務<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To create custom authorization policies, implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> class.</source>
          <target state="translated">若要建立自訂授權原則，請實作 <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Policy<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)</ept>.</source>
          <target state="translated">如需範例，請參閱<bpt id="p1">[</bpt>How to： 建立自訂授權原則<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To create a custom claim, use the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> class.</source>
          <target state="translated">若要建立自訂宣告，請使用 <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Claim<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept>.</source>
          <target state="translated">如需範例，請參閱<bpt id="p1">[</bpt>How to： 建立自訂宣告<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To compare custom claims, you must compare claims, as shown in <bpt id="p1">[</bpt>How to: Compare Claims<ept id="p1">](~/docs/framework/wcf/extending/how-to-compare-claims.md)</ept>.</source>
          <target state="translated">若要比較自訂宣告，您必須比較宣告，如下所示<bpt id="p1">[</bpt>How to： 比較宣告<ept id="p1">](~/docs/framework/wcf/extending/how-to-compare-claims.md)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Custom Authorization<ept id="p1">](~/docs/framework/wcf/extending/custom-authorization.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>自訂授權<ept id="p1">](~/docs/framework/wcf/extending/custom-authorization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>You can set the type of a custom authorization manager using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>serviceAuthorization<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept> in a client application configuration file.</source>
          <target state="translated">您可以設定使用自訂授權管理員的型別<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>serviceAuthorization<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept>用戶端應用程式組態檔中。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The following example shows a class named <ph id="ph1">`MyServiceAuthorizationManager`</ph> that inherits from the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> and overrides the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範名為 <ph id="ph1">`MyServiceAuthorizationManager`</ph> 的類別，此類別繼承自 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph>，而且會覆寫 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Checks authorization for the given operation context and optional message.</source>
          <target state="translated">檢查指定作業內容和選擇性訊息的授權。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>Checks authorization for the given operation context.</source>
          <target state="translated">檢查指定作業內容的授權。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果授與存取權，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method.</source>
          <target state="translated">一般而言，應用程式應該會覆寫 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>，而不是覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph> if the application associates or introduces a different set of policies for the resulting <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
          <target state="translated">如果應用程式是為結果 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph> 與不同一組原則建立關聯或引入不同一組原則，則覆寫 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>，否則請提供不同的原則評估 (鏈結) 模型。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
          <target state="translated">這個方法會負責呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The following code shows how to override this method to enforce custom access control requirements.</source>
          <target state="translated">下列程式碼將示範如何覆寫這個方法，以強制執行自訂存取控制需求。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be examined to determine authorization.</source>
          <target state="translated">要檢查以決定授權的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Checks authorization for the given operation context when access to a message is required.</source>
          <target state="translated">檢查在需要存取訊息時的作業內容授權。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果授與存取權，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method, which should only be used if the authorization decision depends on the message body.</source>
          <target state="translated">一般而言，應用程式應該會覆寫 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>，而不是覆寫這個方法，而這個方法應該只在授權決策與訊息本文相依時使用。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.</source>
          <target state="translated">基於效能考量，如果可以，您應該重新設計應用程式，讓授權決策不需要存取訊息本文。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Override this method if the application associates or introduces a different set of policies for the resulting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
          <target state="translated">如果應用程式是為結果 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 與不同一組原則建立關聯或引入不同一組原則，則覆寫這個方法，否則請提供不同的原則評估 (鏈結) 模型。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
          <target state="translated">這個方法會負責呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The following code shows how to override this method to enforce custom access control requirements that require access to the message body.</source>
          <target state="translated">下列程式碼將示範如何覆寫這個方法，以強制執行需要存取訊息本文的自訂存取控制需求。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> for the current authorization request.</source>
          <target state="translated">目前授權要求的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>Checks authorization for the given operation context based on default policy evaluation.</source>
          <target state="translated">檢查根據預設原則評估所指定作業內容的授權。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果授與存取權，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> is generally the result from the default policy evaluation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> 通常是預設原則評估產生的結果。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>Override this method to provide custom authorization decisions.</source>
          <target state="translated">覆寫這個方法，即可提供自訂授權決策。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>This method can be used to make authorization decisions based on claim sets that are inferred based on incoming tokens, or added through external authorization policies.</source>
          <target state="translated">這個方法可用於建立以宣告集為基礎的授權決策，該宣告集的取得方式是依傳入權杖推斷或是透過外部授權原則新增。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>It can also make authorization decisions based on properties of the incoming message: for example, the action header.</source>
          <target state="translated">它也可以根據傳入訊息的屬性來建立授權決策，例如動作標頭等屬性。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>In this method, the application can use the <ph id="ph1">`operationContext`</ph> parameter to access the caller identity (<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
          <target state="translated">使用這個方法時，應用程式可以使用 <ph id="ph1">`operationContext`</ph> 參數來存取呼叫者身分識別 (<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>).</source>
          <target state="translated">藉由從 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> 屬性傳回 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> 物件，應用程式便可以存取整個要求訊息 (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, the application can access the service URL (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
          <target state="translated">藉由從 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> 屬性傳回 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> 物件，應用程式便可以存取服務 URL (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) 和作業 (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>With this information, the application can perform the authorization decision accordingly.</source>
          <target state="translated">使用這份資訊，應用程式便可以據此執行授權決策。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The claims made by a user are found in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> property of the <ph id="ph3">`AuthorizationContext`</ph>.</source>
          <target state="translated">使用者所做的宣告會在由 <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> 之 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> 屬性所傳回的 <ph id="ph3">`AuthorizationContext`</ph> 中找到。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The current <ph id="ph1">`AuthorizationContext`</ph> is returned by the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class.</source>
          <target state="translated">目前的 <ph id="ph1">`AuthorizationContext`</ph> 是由 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> 類別之 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 屬性所傳回。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The following example shows an override of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated">下例範例示範 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 方法的覆寫。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>For another example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>.</source>
          <target state="translated">如需其他範例，請參閱<bpt id="p1">[</bpt>How to： 建立自訂授權管理員服務<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> of the current authorization request.</source>
          <target state="translated">目前授權要求的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>Gets the set of policies that participate in policy evaluation.</source>
          <target state="translated">取得參與原則評估的一組原則。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>.</source>
          <target state="translated">型別為 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> implementation provides a default set of authorization policies.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 實作會提供預設的一組授權原則。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>These include the primary token that contains the credentials of the requester and all supporting tokens, transport tokens, and external policies if specified.</source>
          <target state="translated">這些原則包括含有要求者認證的主要權杖，以及所有支援的權杖、傳輸權杖和外部原則 (如果有指定)。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>You can override this implementation and provide a different set of policies.</source>
          <target state="translated">您可以覆寫這個實作，並提供一組不同的原則。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>