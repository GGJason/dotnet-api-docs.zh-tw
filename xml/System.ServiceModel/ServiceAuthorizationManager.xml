<Type Name="ServiceAuthorizationManager" FullName="System.ServiceModel.ServiceAuthorizationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea4ab264823f51a0d481c091ab54b0a15507fb7f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37452660" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceAuthorizationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceAuthorizationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceAuthorizationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceAuthorizationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAuthorizationManager" />
  <TypeSignature Language="F#" Value="type ServiceAuthorizationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="deb77-101">提供服務作業的授權存取檢查。</span>
      <span class="sxs-lookup">
        <span data-stu-id="deb77-101">Provides authorization access checking for service operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb77-102">這個類別會負責評估所有原則 (定義允許使用者執行之作業的規則)、比較原則與用戶端所做的宣告、將結果 <xref:System.IdentityModel.Policy.AuthorizationContext> 設定為 <xref:System.ServiceModel.ServiceSecurityContext>，以及提供是否允許或拒絕呼叫者存取已指定服務作業的授權決策。</span><span class="sxs-lookup"><span data-stu-id="deb77-102">This class is responsible for evaluating all policies (rules that define what a user is allowed to do), comparing the policies to claims made by a client, setting the resulting <xref:System.IdentityModel.Policy.AuthorizationContext> to the <xref:System.ServiceModel.ServiceSecurityContext>, and providing the authorization decision whether to allow or deny access for a given service operation for a caller.</span></span>  
  
 <span data-ttu-id="deb77-103"><xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>方法呼叫由 Windows Communication Foundation (WCF) 基礎結構，的每當有人嘗試存取的資源。</span><span class="sxs-lookup"><span data-stu-id="deb77-103">The <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method is called by the Windows Communication Foundation (WCF) infrastructure each time an attempt to access a resource is made.</span></span> <span data-ttu-id="deb77-104">此方法會分別傳回 `true` 或 `false` 以允許或拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="deb77-104">The method returns `true` or `false` to allow or deny access, respectively.</span></span>  
  
 <span data-ttu-id="deb77-105"><xref:System.ServiceModel.ServiceAuthorizationManager>是 WCF 的一部分*身分識別模型*基礎結構。</span><span class="sxs-lookup"><span data-stu-id="deb77-105">The <xref:System.ServiceModel.ServiceAuthorizationManager> is part of the WCF*Identity Model* infrastructure.</span></span> <span data-ttu-id="deb77-106">「身分識別模型」可讓您建立自訂授權原則和自訂授權配置。</span><span class="sxs-lookup"><span data-stu-id="deb77-106">The Identity Model enables you to create custom authorization policies and custom authorization schemes.</span></span> <span data-ttu-id="deb77-107">如需身分識別模型的運作方式的詳細資訊，請參閱[管理宣告與授權身分識別模型](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)。</span><span class="sxs-lookup"><span data-stu-id="deb77-107">For more information about how the Identity Model works, see [Managing Claims and Authorization with the Identity Model](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md).</span></span>  
  
## <a name="custom-authorization"></a><span data-ttu-id="deb77-108">自訂授權</span><span class="sxs-lookup"><span data-stu-id="deb77-108">Custom Authorization</span></span>  
 <span data-ttu-id="deb77-109">這個類別不會執行任何授權，而且會允許使用者存取所有服務作業。</span><span class="sxs-lookup"><span data-stu-id="deb77-109">This class does not perform any authorization and allows users to access all service operations.</span></span> <span data-ttu-id="deb77-110">若要提供更嚴格的授權，您必須建立會檢查自訂原則的自訂授權管理員。</span><span class="sxs-lookup"><span data-stu-id="deb77-110">To provide more restrictive authorization, you must create a custom authorization manager that checks custom policies.</span></span> <span data-ttu-id="deb77-111">若要這樣做，請繼承自這個類別並覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="deb77-111">To do this, inherit from this class and override the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span> <span data-ttu-id="deb77-112">請透過 <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A> 屬性指定該衍生類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="deb77-112">Specify the instance of the derived class through the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A> property.</span></span>  
  
 <span data-ttu-id="deb77-113">在 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 中，應用程式可以使用 <xref:System.ServiceModel.OperationContext> 物件來存取呼叫者身分識別 (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>)。</span><span class="sxs-lookup"><span data-stu-id="deb77-113">In <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>, the application can use the <xref:System.ServiceModel.OperationContext> object to access the caller identity (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>).</span></span>  
  
 <span data-ttu-id="deb77-114">藉由取得會傳回 <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> 物件的 <xref:System.ServiceModel.Channels.MessageHeaders> 屬性，應用程式便可以存取服務 (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) 和作業 (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>)。</span><span class="sxs-lookup"><span data-stu-id="deb77-114">By getting the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> property, which returns a <xref:System.ServiceModel.Channels.MessageHeaders> object, the application can access the service (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>), and the operation (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>).</span></span>  
  
 <span data-ttu-id="deb77-115">藉由取得會傳回 <xref:System.ServiceModel.OperationContext.RequestContext%2A> 物件的 <xref:System.ServiceModel.Channels.RequestContext> 屬性，應用程式便可以存取整個要求訊息 (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) 並據此執行授權決策。</span><span class="sxs-lookup"><span data-stu-id="deb77-115">By getting the <xref:System.ServiceModel.OperationContext.RequestContext%2A> property, which returns a <xref:System.ServiceModel.Channels.RequestContext> object, the application can access the entire request message (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) and perform the authorization decision accordingly.</span></span>  
  
 <span data-ttu-id="deb77-116">如需範例，請參閱[如何： 為服務建立自訂授權管理員](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)。</span><span class="sxs-lookup"><span data-stu-id="deb77-116">For an example, see [How to: Create a Custom Authorization Manager for a Service](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).</span></span>  
  
 <span data-ttu-id="deb77-117">若要建立自訂授權原則，請實作 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 類別。</span><span class="sxs-lookup"><span data-stu-id="deb77-117">To create custom authorization policies, implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> class.</span></span>  <span data-ttu-id="deb77-118">如需範例，請參閱[如何： 建立自訂授權原則](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)。</span><span class="sxs-lookup"><span data-stu-id="deb77-118">For an example, see [How to: Create a Custom Authorization Policy](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md).</span></span>  
  
 <span data-ttu-id="deb77-119">若要建立自訂宣告，請使用 <xref:System.IdentityModel.Claims.Claim> 類別。</span><span class="sxs-lookup"><span data-stu-id="deb77-119">To create a custom claim, use the <xref:System.IdentityModel.Claims.Claim> class.</span></span>  <span data-ttu-id="deb77-120">如需範例，請參閱[如何： 建立自訂宣告](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)。</span><span class="sxs-lookup"><span data-stu-id="deb77-120">For an example, see [How to: Create a Custom Claim](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md).</span></span> <span data-ttu-id="deb77-121">若要比較自訂宣告，您必須比較宣告，如中所示[如何： 比較宣告](~/docs/framework/wcf/extending/how-to-compare-claims.md)。</span><span class="sxs-lookup"><span data-stu-id="deb77-121">To compare custom claims, you must compare claims, as shown in [How to: Compare Claims](~/docs/framework/wcf/extending/how-to-compare-claims.md).</span></span>  
  
 <span data-ttu-id="deb77-122">如需詳細資訊，請參閱 <<c0> [ 自訂授權](~/docs/framework/wcf/extending/custom-authorization.md)。</span><span class="sxs-lookup"><span data-stu-id="deb77-122">For more information, see [Custom Authorization](~/docs/framework/wcf/extending/custom-authorization.md).</span></span>  
  
 <span data-ttu-id="deb77-123">您可以設定使用自訂授權管理員的型別[ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)用戶端應用程式組態檔中。</span><span class="sxs-lookup"><span data-stu-id="deb77-123">You can set the type of a custom authorization manager using the [&lt;serviceAuthorization&gt;](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) in a client application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb77-124">下列範例會示範名為 `MyServiceAuthorizationManager` 的類別，此類別繼承自 <xref:System.ServiceModel.ServiceAuthorizationManager>，而且會覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="deb77-124">The following example shows a class named `MyServiceAuthorizationManager` that inherits from the <xref:System.ServiceModel.ServiceAuthorizationManager> and overrides the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span>  
  
 [!code-csharp[c_CustomAuthMgr#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)]
 [!code-vb[c_CustomAuthMgr#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAuthorizationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="deb77-125">初始化 <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-125">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckAccess">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="deb77-126">檢查指定作業內容和選擇性訊息的授權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-126">Checks authorization for the given operation context and optional message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="deb77-127">
            <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-127">The <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb77-128">檢查指定作業內容的授權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-128">Checks authorization for the given operation context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb77-129">如果授與存取權，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-129">
              <see langword="true" /> if access is granted; otherwise; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="deb77-130">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-130">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb77-131">一般而言，應用程式應該會覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>，而不是覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="deb77-131">In general, applications should override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> instead of this method.</span></span>  
  
 <span data-ttu-id="deb77-132">如果應用程式是為結果 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> 與不同一組原則建立關聯或引入不同一組原則，則覆寫 <xref:System.ServiceModel.ServiceSecurityContext>，否則請提供不同的原則評估 (鏈結) 模型。</span><span class="sxs-lookup"><span data-stu-id="deb77-132">Override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> if the application associates or introduces a different set of policies for the resulting <xref:System.ServiceModel.ServiceSecurityContext> or provide a different policy evaluation (chaining) model.</span></span>  
  
 <span data-ttu-id="deb77-133">這個方法會負責呼叫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="deb77-133">This method is responsible for calling <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb77-134">下列程式碼將示範如何覆寫這個方法，以強制執行自訂存取控制需求。</span><span class="sxs-lookup"><span data-stu-id="deb77-134">The following code shows how to override this method to enforce custom access control requirements.</span></span>  
  
 [!code-csharp[c_Federation#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#1)]
 [!code-vb[c_Federation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext, ref System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext, class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext, System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess (operationContext, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="deb77-135">
            <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-135">The <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="deb77-136">要檢查以決定授權的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-136">The <see cref="T:System.ServiceModel.Channels.Message" /> to be examined to determine authorization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb77-137">檢查在需要存取訊息時的作業內容授權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-137">Checks authorization for the given operation context when access to a message is required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb77-138">如果授與存取權，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-138">
              <see langword="true" /> if access is granted; otherwise; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="deb77-139">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-139">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb77-140">一般而言，應用程式應該會覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>，而不是覆寫這個方法，而這個方法應該只在授權決策與訊息本文相依時使用。</span><span class="sxs-lookup"><span data-stu-id="deb77-140">In general, applications should override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> instead of this method, which should only be used if the authorization decision depends on the message body.</span></span> <span data-ttu-id="deb77-141">基於效能考量，如果可以，您應該重新設計應用程式，讓授權決策不需要存取訊息本文。</span><span class="sxs-lookup"><span data-stu-id="deb77-141">Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.</span></span>  
  
 <span data-ttu-id="deb77-142">如果應用程式是為結果 <xref:System.ServiceModel.ServiceSecurityContext> 和 <xref:System.ServiceModel.Channels.Message> 與不同一組原則建立關聯或引入不同一組原則，則覆寫這個方法，否則請提供不同的原則評估 (鏈結) 模型。</span><span class="sxs-lookup"><span data-stu-id="deb77-142">Override this method if the application associates or introduces a different set of policies for the resulting <xref:System.ServiceModel.ServiceSecurityContext> and <xref:System.ServiceModel.Channels.Message> or provide a different policy evaluation (chaining) model.</span></span>  
  
 <span data-ttu-id="deb77-143">這個方法會負責呼叫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="deb77-143">This method is responsible for calling <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb77-144">下列程式碼將示範如何覆寫這個方法，以強制執行需要存取訊息本文的自訂存取控制需求。</span><span class="sxs-lookup"><span data-stu-id="deb77-144">The following code shows how to override this method to enforce custom access control requirements that require access to the message body.</span></span>  
  
 [!code-csharp[c_Federation#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#6)]
 [!code-vb[c_Federation#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccessCore">
      <MemberSignature Language="C#" Value="protected virtual bool CheckAccessCore (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckAccessCore(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckAccessCore(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccessCore operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="deb77-145">目前授權要求的 <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-145">The <see cref="T:System.ServiceModel.OperationContext" /> for the current authorization request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb77-146">檢查根據預設原則評估所指定作業內容的授權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-146">Checks authorization for the given operation context based on default policy evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb77-147">如果授與存取權，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-147">
              <see langword="true" /> if access is granted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="deb77-148">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-148">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb77-149"><xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> 通常是預設原則評估產生的結果。</span><span class="sxs-lookup"><span data-stu-id="deb77-149"><xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> is generally the result from the default policy evaluation.</span></span>  
  
 <span data-ttu-id="deb77-150">覆寫這個方法，即可提供自訂授權決策。</span><span class="sxs-lookup"><span data-stu-id="deb77-150">Override this method to provide custom authorization decisions.</span></span>  
  
 <span data-ttu-id="deb77-151">這個方法可用於建立以宣告集為基礎的授權決策，該宣告集的取得方式是依傳入權杖推斷或是透過外部授權原則新增。</span><span class="sxs-lookup"><span data-stu-id="deb77-151">This method can be used to make authorization decisions based on claim sets that are inferred based on incoming tokens, or added through external authorization policies.</span></span> <span data-ttu-id="deb77-152">它也可以根據傳入訊息的屬性來建立授權決策，例如動作標頭等屬性。</span><span class="sxs-lookup"><span data-stu-id="deb77-152">It can also make authorization decisions based on properties of the incoming message: for example, the action header.</span></span>  
  
 <span data-ttu-id="deb77-153">使用這個方法時，應用程式可以使用 `operationContext` 參數來存取呼叫者身分識別 (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>)。</span><span class="sxs-lookup"><span data-stu-id="deb77-153">In this method, the application can use the `operationContext` parameter to access the caller identity (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>).</span></span> <span data-ttu-id="deb77-154">藉由從 <xref:System.ServiceModel.Channels.RequestContext> 屬性傳回 <xref:System.ServiceModel.OperationContext.RequestContext%2A> 物件，應用程式便可以存取整個要求訊息 (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>)。</span><span class="sxs-lookup"><span data-stu-id="deb77-154">By returning the <xref:System.ServiceModel.Channels.RequestContext> object from the <xref:System.ServiceModel.OperationContext.RequestContext%2A> property, the application can access the entire request message (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>).</span></span> <span data-ttu-id="deb77-155">藉由從 <xref:System.ServiceModel.Channels.MessageHeaders> 屬性傳回 <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> 物件，應用程式便可以存取服務 URL (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) 和作業 (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>)。</span><span class="sxs-lookup"><span data-stu-id="deb77-155">By returning the <xref:System.ServiceModel.Channels.MessageHeaders> object from the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> property, the application can access the service URL (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) and the operation (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>).</span></span> <span data-ttu-id="deb77-156">使用這份資訊，應用程式便可以據此執行授權決策。</span><span class="sxs-lookup"><span data-stu-id="deb77-156">With this information, the application can perform the authorization decision accordingly.</span></span>  
  
 <span data-ttu-id="deb77-157">使用者所做的宣告會在由 <xref:System.IdentityModel.Claims.ClaimSet> 之 <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> 屬性所傳回的 `AuthorizationContext` 中找到。</span><span class="sxs-lookup"><span data-stu-id="deb77-157">The claims made by a user are found in the <xref:System.IdentityModel.Claims.ClaimSet> returned by the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property of the `AuthorizationContext`.</span></span> <span data-ttu-id="deb77-158">目前的 `AuthorizationContext` 是由 <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> 類別之 <xref:System.ServiceModel.OperationContext> 屬性所傳回。</span><span class="sxs-lookup"><span data-stu-id="deb77-158">The current `AuthorizationContext` is returned by the <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property of the <xref:System.ServiceModel.OperationContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb77-159">下例範例示範 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 方法的覆寫。</span><span class="sxs-lookup"><span data-stu-id="deb77-159">The following example shows an override of the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span>  
  
 [!code-csharp[c_CustomAuthMgr#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)]
 [!code-vb[c_CustomAuthMgr#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)]  
  
 <span data-ttu-id="deb77-160">如需其他範例，請參閱[如何： 為服務建立自訂授權管理員](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)。</span><span class="sxs-lookup"><span data-stu-id="deb77-160">For another example, see [How to: Create a Custom Authorization Manager for a Service](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationPolicies">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ GetAuthorizationPolicies(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;&#xA;override this.GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="serviceAuthorizationManager.GetAuthorizationPolicies operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="deb77-161">目前授權要求的 <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-161">The <see cref="T:System.ServiceModel.OperationContext" /> of the current authorization request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="deb77-162">取得參與原則評估的一組原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-162">Gets the set of policies that participate in policy evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="deb77-163">型別為 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="deb77-163">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb77-164">Windows Communication Foundation (WCF) 實作提供一組預設的授權原則。</span><span class="sxs-lookup"><span data-stu-id="deb77-164">The Windows Communication Foundation (WCF) implementation provides a default set of authorization policies.</span></span> <span data-ttu-id="deb77-165">這些原則包括含有要求者認證的主要權杖，以及所有支援的權杖、傳輸權杖和外部原則 (如果有指定)。</span><span class="sxs-lookup"><span data-stu-id="deb77-165">These include the primary token that contains the credentials of the requester and all supporting tokens, transport tokens, and external policies if specified.</span></span>  
  
 <span data-ttu-id="deb77-166">您可以覆寫這個實作，並提供一組不同的原則。</span><span class="sxs-lookup"><span data-stu-id="deb77-166">You can override this implementation and provide a different set of policies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>