<Type Name="ServiceAuthorizationManager" FullName="System.ServiceModel.ServiceAuthorizationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eda95790f3fa24821df55f5298f3c8af3a23e0b6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55348484" /></Metadata><TypeSignature Language="C#" Value="public class ServiceAuthorizationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceAuthorizationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceAuthorizationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceAuthorizationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAuthorizationManager" />
  <TypeSignature Language="F#" Value="type ServiceAuthorizationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供服務作業的授權存取檢查。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會負責評估所有原則 (定義允許使用者執行之作業的規則)、比較原則與用戶端所做的宣告、將結果 <xref:System.IdentityModel.Policy.AuthorizationContext> 設定為 <xref:System.ServiceModel.ServiceSecurityContext>，以及提供是否允許或拒絕呼叫者存取已指定服務作業的授權決策。  
  
 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>方法呼叫由 Windows Communication Foundation (WCF) 基礎結構，的每當有人嘗試存取的資源。 此方法會分別傳回 `true` 或 `false` 以允許或拒絕存取。  
  
 <xref:System.ServiceModel.ServiceAuthorizationManager>是 WCF 的一部分*身分識別模型*基礎結構。 「身分識別模型」可讓您建立自訂授權原則和自訂授權配置。 如需身分識別模型的運作方式的詳細資訊，請參閱[管理宣告與授權身分識別模型](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)。  
  
## <a name="custom-authorization"></a>自訂授權  
 這個類別不會執行任何授權，而且會允許使用者存取所有服務作業。 若要提供更嚴格的授權，您必須建立會檢查自訂原則的自訂授權管理員。 若要這樣做，請繼承自這個類別並覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 方法。 請透過 <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A> 屬性指定該衍生類別的執行個體。  
  
 在 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 中，應用程式可以使用 <xref:System.ServiceModel.OperationContext> 物件來存取呼叫者身分識別 (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>)。  
  
 藉由取得會傳回 <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> 物件的 <xref:System.ServiceModel.Channels.MessageHeaders> 屬性，應用程式便可以存取服務 (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) 和作業 (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>)。  
  
 藉由取得會傳回 <xref:System.ServiceModel.OperationContext.RequestContext%2A> 物件的 <xref:System.ServiceModel.Channels.RequestContext> 屬性，應用程式便可以存取整個要求訊息 (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) 並據此執行授權決策。  
  
 如需範例，請參閱[如何：建立自訂授權管理員服務](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)。  
  
 若要建立自訂授權原則，請實作 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 類別。  如需範例，請參閱[如何：建立自訂授權原則](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)。  
  
 若要建立自訂宣告，請使用 <xref:System.IdentityModel.Claims.Claim> 類別。  如需範例，請參閱[如何：建立自訂宣告](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)。 若要比較自訂宣告，您必須比較宣告，如中所示[How to:比較宣告](~/docs/framework/wcf/extending/how-to-compare-claims.md)。  
  
 如需詳細資訊，請參閱 <<c0> [ 自訂授權](~/docs/framework/wcf/extending/custom-authorization.md)。  
  
 您可以設定使用自訂授權管理員的型別[ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)用戶端應用程式組態檔中。  
  
   
  
## Examples  
 下列範例會示範名為 `MyServiceAuthorizationManager` 的類別，此類別繼承自 <xref:System.ServiceModel.ServiceAuthorizationManager>，而且會覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 方法。  
  
 [!code-csharp[c_CustomAuthMgr#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)]
 [!code-vb[c_CustomAuthMgr#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
    <related type="Article" href="https://msdn.microsoft.com/library/4f90311a-2593-462e-9174-2f7ac78217b9">自訂授權</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6214afde-44c1-4bf5-ba07-5ad6493620ea">如何：為服務建立自訂的但</related>
    <related type="Article" href="https://msdn.microsoft.com/library/05b0549b-882d-4660-b6f0-5678543e5475">如何：建立自訂授權原則</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d619976b-eda3-475e-ac23-c7988a2dceb0">如何：建立自訂宣告</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0c4ec84d-53df-408f-8953-9bc437f56c28">如何：比較宣告</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAuthorizationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckAccess">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>檢查指定作業內容和選擇性訊息的授權。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext"><see cref="T:System.ServiceModel.OperationContext" />。</param>
        <summary>檢查指定作業內容的授權。</summary>
        <returns>如果授與存取權，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，應用程式應該會覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>，而不是覆寫這個方法。  
  
 如果應用程式是為結果 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> 與不同一組原則建立關聯或引入不同一組原則，則覆寫 <xref:System.ServiceModel.ServiceSecurityContext>，否則請提供不同的原則評估 (鏈結) 模型。  
  
 這個方法會負責呼叫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>。  
  
   
  
## Examples  
 下列程式碼將示範如何覆寫這個方法，以強制執行自訂存取控制需求。  
  
 [!code-csharp[c_Federation#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#1)]
 [!code-vb[c_Federation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext, ref System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext, class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext, System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess (operationContext, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="operationContext"><see cref="T:System.ServiceModel.OperationContext" />。</param>
        <param name="message">要檢查以決定授權的 <see cref="T:System.ServiceModel.Channels.Message" />。</param>
        <summary>檢查在需要存取訊息時的作業內容授權。</summary>
        <returns>如果授與存取權，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，應用程式應該會覆寫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>，而不是覆寫這個方法，而這個方法應該只在授權決策與訊息本文相依時使用。 基於效能考量，如果可以，您應該重新設計應用程式，讓授權決策不需要存取訊息本文。  
  
 如果應用程式是為結果 <xref:System.ServiceModel.ServiceSecurityContext> 和 <xref:System.ServiceModel.Channels.Message> 與不同一組原則建立關聯或引入不同一組原則，則覆寫這個方法，否則請提供不同的原則評估 (鏈結) 模型。  
  
 這個方法會負責呼叫 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>。  
  
   
  
## Examples  
 下列程式碼將示範如何覆寫這個方法，以強制執行需要存取訊息本文的自訂存取控制需求。  
  
 [!code-csharp[c_Federation#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#6)]
 [!code-vb[c_Federation#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccessCore">
      <MemberSignature Language="C#" Value="protected virtual bool CheckAccessCore (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckAccessCore(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckAccessCore(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccessCore operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">目前授權要求的 <see cref="T:System.ServiceModel.OperationContext" />。</param>
        <summary>檢查根據預設原則評估所指定作業內容的授權。</summary>
        <returns>如果授與存取權，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> 通常是預設原則評估產生的結果。  
  
 覆寫這個方法，即可提供自訂授權決策。  
  
 這個方法可用於建立以宣告集為基礎的授權決策，該宣告集的取得方式是依傳入權杖推斷或是透過外部授權原則新增。 它也可以根據傳入訊息的屬性來建立授權決策，例如動作標頭等屬性。  
  
 使用這個方法時，應用程式可以使用 `operationContext` 參數來存取呼叫者身分識別 (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>)。 藉由從 <xref:System.ServiceModel.Channels.RequestContext> 屬性傳回 <xref:System.ServiceModel.OperationContext.RequestContext%2A> 物件，應用程式便可以存取整個要求訊息 (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>)。 藉由從 <xref:System.ServiceModel.Channels.MessageHeaders> 屬性傳回 <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> 物件，應用程式便可以存取服務 URL (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) 和作業 (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>)。 使用這份資訊，應用程式便可以據此執行授權決策。  
  
 使用者所做的宣告會在由 <xref:System.IdentityModel.Claims.ClaimSet> 之 <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> 屬性所傳回的 `AuthorizationContext` 中找到。 目前的 `AuthorizationContext` 是由 <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> 類別之 <xref:System.ServiceModel.OperationContext> 屬性所傳回。  
  
   
  
## Examples  
 下例範例示範 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 方法的覆寫。  
  
 [!code-csharp[c_CustomAuthMgr#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)]
 [!code-vb[c_CustomAuthMgr#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)]  
  
 如需其他範例，請參閱[How to:建立自訂授權管理員服務](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationPolicies">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ GetAuthorizationPolicies(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;&#xA;override this.GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="serviceAuthorizationManager.GetAuthorizationPolicies operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">目前授權要求的 <see cref="T:System.ServiceModel.OperationContext" />。</param>
        <summary>取得參與原則評估的一組原則。</summary>
        <returns>型別為 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF) 實作提供一組預設的授權原則。 這些原則包括含有要求者認證的主要權杖，以及所有支援的權杖、傳輸權杖和外部原則 (如果有指定)。  
  
 您可以覆寫這個實作，並提供一組不同的原則。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>