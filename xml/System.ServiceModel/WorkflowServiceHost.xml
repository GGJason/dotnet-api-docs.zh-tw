<Type Name="WorkflowServiceHost" FullName="System.ServiceModel.WorkflowServiceHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="92b94ef791a1a7b9a1255c04f26ee913394a6664" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57934011" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WorkflowServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowServiceHost : System::ServiceModel::ServiceHostBase" />
  <TypeSignature Language="F#" Value="type WorkflowServiceHost = class&#xA;    inherit ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供工作流程式之服務的主機。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作 Windows Communication Foundation (WCF) 服務模型程式設計模型所使用的主機。  
  
 當您不使用網際網路資訊服務 (IIS) 或 Windows Activation Services (WAS) 來公開服務的時候，請使用 <xref:System.ServiceModel.WorkflowServiceHost> 類別，將工作流程做為服務加以設定和公開，以供用戶端應用程式使用。 IIS 和 WAS 都會代表您與 <xref:System.ServiceModel.WorkflowServiceHost> 物件進行互動。  
  
 若要將工作流程當做服務來公開以供呼叫端使用，WCF 必須有完整的服務描述 (由 <xref:System.ServiceModel.Description.ServiceDescription> 類別表示)。 <xref:System.ServiceModel.WorkflowServiceHost> 類別會從工作流程服務類型及組態資訊建立 <xref:System.ServiceModel.Description.ServiceDescription>，然後使用這個描述來為描述中的每個端點建立 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件。  
  
 您可以使用 <xref:System.ServiceModel.WorkflowServiceHost> 物件，載入工作流程服務、設定端點、套用安全性設定及啟動接聽項處理傳入要求。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><see cref="T:System.IO.Stream" /> 內含工作流程定義。</param>
        <param name="baseAddress">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</param>
        <summary>使用包含工作流程定義之位元資料流與指定的服務之基底位址，來初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若工作流程定義儲存在安全的儲存區中 (如資料庫)，則使用此多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">內含工作流程定義檔路徑的字串。</param>
        <param name="baseAddress">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</param>
        <summary>使用工作流程定義的路徑與指定服務的基底位址，來初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當工作流程定義是 Windows 檔案形式，則使用此多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (Type workflowType, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type workflowType, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowType As Type, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(Type ^ workflowType, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : Type * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowType, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowType">工作流程執行個體的 <see cref="T:System.Type" />。</param>
        <param name="baseAddress">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</param>
        <summary>使用工作流程型別及指定的服務之基底位址，初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當工作流程定義為編譯型別，則使用此多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><see cref="T:System.IO.Stream" /> 內含工作流程定義。</param>
        <param name="ruleDefinition">包含工作流程規則定義的 <see cref="T:System.IO.Stream" />。</param>
        <param name="baseAddress">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</param>
        <summary>使用包含工作流程定義之位元資料流、包含工作流程規則定義之位元資料流，以及指定的服務之基底位址，來初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若工作流程定義與規則定義儲存在安全的儲存區中 (如資料庫)，則使用此多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">內含工作流程定義檔路徑的字串。</param>
        <param name="ruleDefinitionPath">內含工作流程規則定義檔路徑的字串。</param>
        <param name="baseAddress">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</param>
        <summary>使用工作流程定義的路徑、工作流程規則定義的路徑，以及指定的服務之基底位址，來初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當工作流程定義與規則定義是 Windows 檔案形式，則使用此多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><see cref="T:System.IO.Stream" /> 內含工作流程定義。</param>
        <param name="ruleDefinition">包含工作流程規則定義的 <see cref="T:System.IO.Stream" />。</param>
        <param name="typeProvider">實作 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> 介面的型別提供者。</param>
        <param name="baseAddress">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</param>
        <summary>使用包含工作流程定義之位元資料流、包含工作流程規則定義之位元資料流、自訂活動型別的型別提供者，以及指定的服務之基底位址，來初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您編譯的工作流程參照到其他組件中定義的自訂型別時，請使用此多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">內含工作流程定義檔路徑的字串。</param>
        <param name="ruleDefinitionPath">內含工作流程規則定義檔路徑的字串。</param>
        <param name="typeProvider">實作 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> 介面的型別提供者。</param>
        <param name="baseAddress">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</param>
        <summary>使用工作流程定義的路徑、工作流程規則定義的路徑、自訂活動型別的型別提供者，以及指定的服務之基底位址，來初始化 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您將工作流程定義在工作流程標記檔中 (.xoml)，且它參照到其他組件中定義的自訂型別時，請使用此多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將服務端點新增至裝載的服務。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">已加入之端點的合約 <see cref="T:System.Type" />。</param>
        <param name="binding">已新增之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="address">已加入之端點的位址。</param>
        <summary>使用指定的合約、繫結和端點位址，新增工作流程服務的服務端點。</summary>
        <returns>已加入至工作流程服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> 為 <see langword="null" />。

-或-

<paramref name="address" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">未為 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 指定 <paramref name="implementedContract" />。
-或-

工作流程服務不會實作 <paramref name="implementedContract" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">已加入之端點的合約 <see cref="T:System.Type" />。</param>
        <param name="binding">已新增之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="address"><see cref="T:System.Uri" />，其中包含已新增之端點的位址。</param>
        <summary>使用指定的合約、繫結以及含有端點位址的 URI，將服務端點新增至工作流程服務。</summary>
        <returns>已加入至工作流程服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> 為 <see langword="null" />。

-或-

<paramref name="address" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">未為 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 指定 <paramref name="implementedContract" />。

-或-

工作流程服務不會實作 <paramref name="implementedContract" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">已加入之端點的合約 <see cref="T:System.Type" />。</param>
        <param name="binding">已新增之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="address">服務的端點位址。</param>
        <param name="listenUri">服務端點可以接聽的 <see cref="T:System.Uri" />。</param>
        <summary>使用指定的合約、繫結、端點位址以及服務所接聽的 URI，將服務端點新增至工作流程服務。</summary>
        <returns>已加入至工作流程服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> 為 <see langword="null" />。

-或-

<paramref name="address" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">工作流程服務不會實作 <paramref name="implementedContract" />。

-或-

未為 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 指定 <paramref name="implementedContract" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">已加入之端點的合約 <see cref="T:System.Type" />。</param>
        <param name="binding">已新增之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</param>
        <param name="address"><see cref="T:System.Uri" />，其中包含已新增之端點的位址。</param>
        <param name="listenUri">服務端點可以接聽的 <see cref="T:System.Uri" />。</param>
        <summary>使用指定的合約、繫結、含有端點位址的 URI 以及服務所接聽的 URI，將服務端點新增至工作流程服務。</summary>
        <returns>已加入至工作流程服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> 為 <see langword="null" />。

-或-

<paramref name="address" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">工作流程服務不會實作 <paramref name="implementedContract" />。

-或-

未為 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 指定 <paramref name="implementedContract" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberSignature Language="F#" Value="override this.CreateDescription :  -&gt; System.ServiceModel.Description.ServiceDescription" Usage="workflowServiceHost.CreateDescription implementedContracts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">當此方法傳回時，<see cref="T:System.Collections.Generic.IDictionary`2" /> 物件會包含所裝載之已實作服務的合約 (其合約索引鍵已建立)。</param>
        <summary>建立工作流程服務的說明。</summary>
        <returns>工作流程服務的 <see cref="T:System.ServiceModel.Description.ServiceDescription" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected override void OnClosing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.OnClosing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosing();" />
      <MemberSignature Language="F#" Value="override this.OnClosing : unit -&gt; unit" Usage="workflowServiceHost.OnClosing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在將 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 置入關閉狀態前，會呼叫此方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在預設實作中，呼叫 <xref:System.ServiceModel.WorkflowServiceHost> 前，<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 會先呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=nameWithType>。 這表示服務主機關閉前，會先關閉工作流程執行階段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>