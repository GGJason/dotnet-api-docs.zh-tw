<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="5e260-101">指定服務執行個體的數目，這些服務執行個體會用來處理傳入訊息內含的呼叫。</span><span class="sxs-lookup"><span data-stu-id="5e260-101">Specifies the number of service instances available for handling calls that are contained in incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e260-102"><xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> 會管理通道與使用者定義服務物件之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="5e260-102">The <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> manages the association between the channel and the user-defined service objects.</span></span> <span data-ttu-id="5e260-103">請使用 <xref:System.ServiceModel.InstanceContextMode> 列舉並配合 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> 屬性來指定 <xref:System.ServiceModel.InstanceContext> 物件的存留期。</span><span class="sxs-lookup"><span data-stu-id="5e260-103">Use the <xref:System.ServiceModel.InstanceContextMode> enumeration with the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property to specify the lifetime of the <xref:System.ServiceModel.InstanceContext> object.</span></span> [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="5e260-104"> 可為每個呼叫、每個工作階段建立新的 <xref:System.ServiceModel.InstanceContext> 物件，或指定 <xref:System.ServiceModel.InstanceContext> 物件繫結到單一服務物件。</span><span class="sxs-lookup"><span data-stu-id="5e260-104"> can create a new <xref:System.ServiceModel.InstanceContext> object for every call, every session or specify that the <xref:System.ServiceModel.InstanceContext> object is bound to a single service object.</span></span> <span data-ttu-id="5e260-105">如需實用範例，請參閱[執行個體](~/docs/framework/wcf/samples/instancing.md)。</span><span class="sxs-lookup"><span data-stu-id="5e260-105">For a working example, see the [Instancing](~/docs/framework/wcf/samples/instancing.md).</span></span>  
  
 <span data-ttu-id="5e260-106">單一值會指定單一<xref:System.ServiceModel.InstanceContextMode.Single>物件應該用於服務的存留期間。</span><span class="sxs-lookup"><span data-stu-id="5e260-106">The Single value specifies that a single <xref:System.ServiceModel.InstanceContextMode.Single> object should be used for the lifetime of the service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e260-107">如果<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>值設定為單一結果是，您的服務只能處理一個訊息一次除非也設定<xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>值設定為<xref:System.ServiceModel.ConcurrencyMode>。</span><span class="sxs-lookup"><span data-stu-id="5e260-107">If the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value is set to Single the result is that your service can only process one message at a time unless you also set the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> value to <xref:System.ServiceModel.ConcurrencyMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e260-108">下列程式碼說明如何為服務類別設定 <xref:System.ServiceModel.InstanceContextMode>︰</span><span class="sxs-lookup"><span data-stu-id="5e260-108">The following code illustrates how to set the <xref:System.ServiceModel.InstanceContextMode> for a service class:</span></span>  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e260-109">每次呼叫前會建立新的 <see cref="T:System.ServiceModel.InstanceContext" /> 物件，呼叫結束後會回收該物件。</span><span class="sxs-lookup"><span data-stu-id="5e260-109">A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created prior to and recycled subsequent to each call.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e260-110">每個工作階段都會建立新的 <see cref="T:System.ServiceModel.InstanceContext" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="5e260-110">A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created for each session.</span></span> <span data-ttu-id="5e260-111">如果該通道沒有建立工作階段，則此值的作用就如同把此值設為 <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />。</span><span class="sxs-lookup"><span data-stu-id="5e260-111">If the channel does not create a session this value behaves as if it were <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e260-112">所有傳入的呼叫都使用同一個 <see cref="T:System.ServiceModel.InstanceContext" /> 物件，且這些呼叫結束後不會回收該物件。</span><span class="sxs-lookup"><span data-stu-id="5e260-112">Only one <see cref="T:System.ServiceModel.InstanceContext" /> object is used for all incoming calls and is not recycled subsequent to the calls.</span></span> <span data-ttu-id="5e260-113">如果服務物件不存在，會建立一個新的物件。</span><span class="sxs-lookup"><span data-stu-id="5e260-113">If a service object does not exist, one is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5e260-114">針對單一存留期行為 (例如，如果主應用程式呼叫<xref:System.ServiceModel.ServiceHost.%23ctor%2A>建構函式和傳遞物件做為服務)，服務類別必須將<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>為 Single，或開啟服務主機時會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5e260-114">For singleton lifetime behavior (for example, if the host application calls the <xref:System.ServiceModel.ServiceHost.%23ctor%2A> constructor and passes an object to use as the service), the service class must set <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> to Single, or an exception is thrown when the service host is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>