<Type Name="ServiceHost" FullName="System.ServiceModel.ServiceHost">
  <TypeSignature Language="C#" Value="public class ServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHost : System::ServiceModel::ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4eba8-101">提供服務的主機。</span><span class="sxs-lookup"><span data-stu-id="4eba8-101">Provides a host for services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-102">實作 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 服務模型程式設計模型 (Programming Model) 使用的主機。</span><span class="sxs-lookup"><span data-stu-id="4eba8-102">Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model.</span></span>  
  
 <span data-ttu-id="4eba8-103">如果您不是使用 Internet Information Services (IIS) 或 Windows Activation Services (WAS) 公開服務，可以使用 <xref:System.ServiceModel.ServiceHost> 類別來設定和公開服務，以供用戶端應用程式使用。</span><span class="sxs-lookup"><span data-stu-id="4eba8-103">Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</span></span> <span data-ttu-id="4eba8-104">IIS 和 WAS 都會代表您與 <xref:System.ServiceModel.ServiceHost> 物件進行互動。</span><span class="sxs-lookup"><span data-stu-id="4eba8-104">Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.</span></span>  
  
 <span data-ttu-id="4eba8-105">若要公開服務供呼叫端使用，WCF 必須有完整的服務描述 (由<xref:System.ServiceModel.Description.ServiceDescription>類別)。</span><span class="sxs-lookup"><span data-stu-id="4eba8-105">To expose a service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class).</span></span> <span data-ttu-id="4eba8-106"><xref:System.ServiceModel.ServiceHost> 類別會從服務類型及組態資訊建立 <xref:System.ServiceModel.Description.ServiceDescription>，然後使用這個描述來為描述中的每個端點建立 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件。</span><span class="sxs-lookup"><span data-stu-id="4eba8-106">The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.</span></span>  
  
 <span data-ttu-id="4eba8-107">您可以使用 <xref:System.ServiceModel.ServiceHost> 物件，載入服務、設定端點、套用安全性設定，以及啟動接聽項處理傳入要求。</span><span class="sxs-lookup"><span data-stu-id="4eba8-107">Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]
 [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4eba8-108">初始化 <see cref="T:System.ServiceModel.ServiceHost" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-108">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4eba8-109">初始化 <see cref="T:System.ServiceModel.ServiceHost" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-109">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-110">有兩個建構函式 (Constructor) 可以用來建立 <xref:System.ServiceModel.ServiceHost> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-110">There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class.</span></span> <span data-ttu-id="4eba8-111">在多數時候，會使用接受服務類型當做輸入參數的 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="4eba8-111">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time.</span></span> <span data-ttu-id="4eba8-112">主機可以依需要使用這個建構函式來建立新服務。</span><span class="sxs-lookup"><span data-stu-id="4eba8-112">The host can use this to create new services as needed.</span></span> <span data-ttu-id="4eba8-113">只有在您想要讓服務主機使用服務的特定單一執行個體時，才需要改用 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="4eba8-113">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="4eba8-114">裝載之服務的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-114">The instance of the hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="4eba8-115">型別為 <see cref="T:System.Array" /> 的 <see cref="T:System.Uri" />，其中包含所裝載之服務的基底位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-115">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="4eba8-116">使用服務執行個體及其指定基底位址，初始化 <see cref="T:System.ServiceModel.ServiceHost" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-116">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the instance of the service and its base addresses specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-117">當您想要將特定物件執行個體提供給單一服務使用時，可以使用這個建構函式做為實作自訂 <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> 的另一種方式。</span><span class="sxs-lookup"><span data-stu-id="4eba8-117">Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> when you want to provide a specific object instance for use by a singleton service.</span></span> <span data-ttu-id="4eba8-118">當服務實作類型很難建構時 (例如，無法實作沒有參數的預設公用建構函式時)，您可能會想要使用這個多載。</span><span class="sxs-lookup"><span data-stu-id="4eba8-118">You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</span></span>  
  
 <span data-ttu-id="4eba8-119">請注意，提供物件給這個多載時，某些與 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 執行個體行為相關的功能會以不同的方式運作。</span><span class="sxs-lookup"><span data-stu-id="4eba8-119">Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] instancing behavior work differently.</span></span> <span data-ttu-id="4eba8-120">例如，使用這個建構函式多載提供已知的物件執行個體時，呼叫 <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> 將沒有作用。</span><span class="sxs-lookup"><span data-stu-id="4eba8-120">For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> have no effect when a well-known object instance is provided using this constructor overload.</span></span> <span data-ttu-id="4eba8-121">同樣的，也會忽略任何其他執行個體的釋放機制。</span><span class="sxs-lookup"><span data-stu-id="4eba8-121">Similarly, any other instance release mechanism is ignored.</span></span> <span data-ttu-id="4eba8-122"><xref:System.ServiceModel.ServiceHost> 的行為就像是所有作業都已將 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> 屬性設定為 <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4eba8-122">The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> property is set to <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> for all operations.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost2#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost2/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost2#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost2/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-123"><paramref name="singletonInstance" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-123"><paramref name="singletonInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="4eba8-124">裝載之服務的類型。</span><span class="sxs-lookup"><span data-stu-id="4eba8-124">The type of hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="4eba8-125">型別為 <see cref="T:System.Uri" /> 的陣列，其中包含所裝載之服務的基底位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-125">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="4eba8-126">使用服務的類型及其指定基底位址，初始化 <see cref="T:System.ServiceModel.ServiceHost" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-126">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the type of service and its base addresses specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-127">當您知道服務類型時，可以使用這個建構函式，在需要時建立新的執行個體 (即便您只是需要一個單一執行個體)。</span><span class="sxs-lookup"><span data-stu-id="4eba8-127">Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</span></span> <span data-ttu-id="4eba8-128">只有在您想要讓服務主機使用服務的特定單一執行個體時，才需要改用 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="4eba8-128">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4eba8-129">這個範例說明如何使用 <xref:System.ServiceModel.ServiceHost> 類別來裝載 Windows Communication Foundation 服務：</span><span class="sxs-lookup"><span data-stu-id="4eba8-129">This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:</span></span>  
  
 [!code-csharp[S_UEServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-130"><paramref name="serviceType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-130"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4eba8-131">將服務端點加入至裝載的服務。</span><span class="sxs-lookup"><span data-stu-id="4eba8-131">Adds a service endpoint to the hosted service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="4eba8-132">已加入之端點的合約 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-132">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="4eba8-133">已加入之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-133">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="4eba8-134">已加入之端點的位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-134">The address for the endpoint added.</span></span></param>
        <summary><span data-ttu-id="4eba8-135">使用指定的合約、繫結和端點位址，將服務端點加入至裝載的服務。</span><span class="sxs-lookup"><span data-stu-id="4eba8-135">Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</span></span></summary>
        <returns><span data-ttu-id="4eba8-136">已加入至裝載之服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-136">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#3)]
 [!code-vb[S_UEServiceHost#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-137"><paramref name="implementedContract" />、<paramref name="binding" /> 或 <paramref name="address" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-137"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="4eba8-138">已加入之端點的合約 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-138">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="4eba8-139">已新增之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-139">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="4eba8-140"><see cref="T:System.Uri" />，其中包含已加入之端點的位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-140">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span></span></param>
        <summary><span data-ttu-id="4eba8-141">使用指定的合約、繫結以及含有端點位址的 URI，將服務端點新增至裝載的服務。</span><span class="sxs-lookup"><span data-stu-id="4eba8-141">Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</span></span></summary>
        <returns><span data-ttu-id="4eba8-142">已加入至裝載之服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-142">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#4)]
 [!code-vb[S_UEServiceHost#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-143"><paramref name="implementedContract" />、<paramref name="binding" /> 或 <paramref name="address" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-143"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="4eba8-144">已加入之端點的合約 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-144">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="4eba8-145">已加入之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-145">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="4eba8-146">服務的端點位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-146">The endpoint address for the service.</span></span></param>
        <param name="listenUri"><span data-ttu-id="4eba8-147">服務端點可以接聽的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-147">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span></span></param>
        <summary><span data-ttu-id="4eba8-148">使用指定的合約、繫結、端點位址以及服務所接聽的 URI，將服務端點加入至裝載的服務。</span><span class="sxs-lookup"><span data-stu-id="4eba8-148">Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</span></span></summary>
        <returns><span data-ttu-id="4eba8-149">已加入至裝載之服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-149">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-150">當您有多個必須接聽同一個指定之 URI 的端點時，可以使用這個版本的方法。</span><span class="sxs-lookup"><span data-stu-id="4eba8-150">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#5)]
 [!code-vb[S_UEServiceHost#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-151"><paramref name="implementedContract" />、<paramref name="binding" /> 或 <paramref name="address" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-151"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="4eba8-152">已加入之端點的合約 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-152">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="4eba8-153">已新增之端點的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-153">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="4eba8-154"><see cref="T:System.Uri" />，其中包含已加入之端點的位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-154">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span></span></param>
        <param name="listenUri"><span data-ttu-id="4eba8-155">服務端點可以接聽的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-155">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span></span></param>
        <summary><span data-ttu-id="4eba8-156">使用指定的合約、繫結、含有端點位址的 URI 以及服務所接聽的 URI，將服務端點新增至裝載的服務。</span><span class="sxs-lookup"><span data-stu-id="4eba8-156">Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</span></span></summary>
        <returns><span data-ttu-id="4eba8-157">已加入至裝載之服務的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-157">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-158">當您有多個必須接聽同一個指定之 URI 的端點時，可以使用這個版本的方法。</span><span class="sxs-lookup"><span data-stu-id="4eba8-158">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#6)]
 [!code-vb[S_UEServiceHost#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-159"><paramref name="implementedContract" />、<paramref name="binding" /> 或 <paramref name="address" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-159"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4eba8-160">合約未初始化，或找不到合約索引鍵。</span><span class="sxs-lookup"><span data-stu-id="4eba8-160">The contracts are not initialized or the contract keys cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void ApplyConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ApplyConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4eba8-161">從組態檔載入服務描述，並將其套用至正在建構的執行階段。</span><span class="sxs-lookup"><span data-stu-id="4eba8-161">Loads the service description from the configuration file and applies it to the runtime being constructed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts"><span data-ttu-id="4eba8-162"><see cref="T:System.Collections.Generic.IDictionary`2" /> (具有型別為 <see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" /> 的索引鍵組)，其中包含所裝載之已實作服務的合約 (其合約索引鍵已建立)。</span><span class="sxs-lookup"><span data-stu-id="4eba8-162">The <see cref="T:System.Collections.Generic.IDictionary`2" /> with key pairs of type (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) that contains the keyed-contracts of the hosted service that have been implemented.</span></span></param>
        <summary><span data-ttu-id="4eba8-163">建立裝載之服務的描述。</span><span class="sxs-lookup"><span data-stu-id="4eba8-163">Creates a description of the service hosted.</span></span></summary>
        <returns><span data-ttu-id="4eba8-164">裝載之服務的 <see cref="T:System.ServiceModel.Description.ServiceDescription" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-164">A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-165">您可以使用這個方法，從自訂程式撰寫模型中建構合約描述。</span><span class="sxs-lookup"><span data-stu-id="4eba8-165">This method is used to construct contract descriptions from customized programming models.</span></span> <span data-ttu-id="4eba8-166">請覆寫對應的基底類別方法 <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>，以實作自訂模型。</span><span class="sxs-lookup"><span data-stu-id="4eba8-166">Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4eba8-167">裝載之服務的類型為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-167">The type of service hosted is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InitializeDescription">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4eba8-168">根據服務的類型或執行個體，初始化裝載之服務的描述。</span><span class="sxs-lookup"><span data-stu-id="4eba8-168">Initializes a description of the service hosted based on its type or instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-169">有了這個方法之後，就不需要將基底位址和 <xref:System.ServiceModel.ServiceHost.%23ctor%2A> 一起傳遞。</span><span class="sxs-lookup"><span data-stu-id="4eba8-169">This method removes the requirement for passing base addresses as part of <xref:System.ServiceModel.ServiceHost.%23ctor%2A>.</span></span> <span data-ttu-id="4eba8-170">繼承自 <xref:System.ServiceModel.ServiceHost> 的類別可以呼叫 <xref:System.ServiceModel.ServiceHost.%23ctor%2A>，然後於可以取得基底位址時再呼叫其中一個 <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A>。</span><span class="sxs-lookup"><span data-stu-id="4eba8-170">Classes that inherit from <xref:System.ServiceModel.ServiceHost> can call <xref:System.ServiceModel.ServiceHost.%23ctor%2A> and then can call one of the <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> when a base address is available.</span></span> <span data-ttu-id="4eba8-171">這就是實作 Service Model Metadata Utility Tool (Svcutil.exe) 的方式。</span><span class="sxs-lookup"><span data-stu-id="4eba8-171">This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(object singletonInstance, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (singletonInstance As Object, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(System::Object ^ singletonInstance, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="4eba8-172">裝載之服務的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-172">The instance of the hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="4eba8-173"><see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />，其中包含所裝載之服務的基底位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-173">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="4eba8-174">根據服務的執行個體和指定的基底位址，初始化裝載之服務的描述。</span><span class="sxs-lookup"><span data-stu-id="4eba8-174">Initializes a description of the service hosted based on its instance and specified base addresses.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-175"><paramref name="singletonInstance" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-175"><paramref name="singletonInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(class System.Type serviceType, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (serviceType As Type, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(Type ^ serviceType, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="4eba8-176">裝載之服務的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-176">The <see cref="T:System.Type" /> of service hosted.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="4eba8-177"><see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />，其中包含所裝載之服務的基底位址。</span><span class="sxs-lookup"><span data-stu-id="4eba8-177">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="4eba8-178">根據服務的類型和指定的基底位址，初始化裝載之服務的描述。</span><span class="sxs-lookup"><span data-stu-id="4eba8-178">Initializes a description of the service hosted based on its type and specified base addresses.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eba8-179"><paramref name="serviceType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4eba8-179"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4eba8-180">在服務主機關閉時，處置可處置的裝載中服務。</span><span class="sxs-lookup"><span data-stu-id="4eba8-180">Disposes of disposable services that are being hosted when the service host is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-181">在覆寫<xref:System.ServiceModel.ServiceHost.OnClosed%2A>方法，您必須確定基底。OnClosed 方法會呼叫，即使發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4eba8-181">When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs.</span></span> <span data-ttu-id="4eba8-182">下列程式碼說明如何執行這項操作。</span><span class="sxs-lookup"><span data-stu-id="4eba8-182">The following code illustrates how to do this.</span></span>  
  
```  
protected override void OnClosed()  
{  
    try  
    {  
        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  
        {  
            FaultFlagService.faultFlag = ThrowDuring.Never;  
            throw new ServiceActivationException("Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed");  
        }  
    }  
    finally  
    {  
        base.OnClosed();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonInstance">
      <MemberSignature Language="C#" Value="public object SingletonInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SingletonInstance" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHost.SingletonInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingletonInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SingletonInstance { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4eba8-183">取得裝載之服務的單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-183">Gets the singleton instance of the hosted service.</span></span></summary>
        <value><span data-ttu-id="4eba8-184">裝載的服務物件。</span><span class="sxs-lookup"><span data-stu-id="4eba8-184">The hosted service object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eba8-185">當您想要控制使用中服務的執行個體時，可以使用 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> 建構函式，初始化要裝載服務的單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="4eba8-185">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>