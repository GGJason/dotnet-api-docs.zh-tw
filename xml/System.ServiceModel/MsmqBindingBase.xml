<Type Name="MsmqBindingBase" FullName="System.ServiceModel.MsmqBindingBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e0f52830251841d86d4e02429533e15b8ca4ae2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36610780" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MsmqBindingBase : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqBindingBase extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqBindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqBindingBase&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqBindingBase abstract : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type MsmqBindingBase = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="50803-101">
        <see cref="T:System.ServiceModel.NetMsmqBinding" /> 與 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> 的基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="50803-101">The base class for <see cref="T:System.ServiceModel.NetMsmqBinding" /> and <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-102">此抽象類別包含 <xref:System.ServiceModel.NetMsmqBinding> 與 <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> 常見的屬性。</span><span class="sxs-lookup"><span data-stu-id="50803-102">This abstract class contains properties common to <xref:System.ServiceModel.NetMsmqBinding> and <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding>.</span></span> <span data-ttu-id="50803-103">所有序列中的基礎概念以屬性形式顯示。</span><span class="sxs-lookup"><span data-stu-id="50803-103">All of the fundamental concepts in queuing are displayed in the form of properties.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqBindingBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqBindingBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqBindingBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50803-104">初始化 <see cref="T:System.ServiceModel.MsmqBindingBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-104">Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqBindingBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomDeadLetterQueue : Uri with get, set" Usage="System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-105">取得或設定 URI，其中包含每個應用程式寄不出的信件佇列的位置，所有已過期、無法傳輸或傳遞的訊息都會放到該佇列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-105">Gets or sets a URI that contains the location of the dead-letter queue for each application, where messages that have expired or that have failed transfer or delivery are placed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-106">包含每個應用程式寄不出的信件佇列之位置的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-106">The <see cref="T:System.Uri" /> that contains the location of the dead-letter queue for each application.</span>
          </span>
          <span data-ttu-id="50803-107">預設值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-107">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-108">寄不出的信件佇列是傳送應用程式佇列管理員上的佇列，用於無法傳遞的過期訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-108">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that failed to be delivered.</span></span>  
  
 <span data-ttu-id="50803-109">由 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 指定的 URI 必須使用 net.msmq 配置。</span><span class="sxs-lookup"><span data-stu-id="50803-109">The URI that is specified by <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must use the net.msmq scheme.</span></span>  
  
 <span data-ttu-id="50803-110">如果 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 設定為 <xref:System.ServiceModel.DeadLetterQueue.None> 或 <xref:System.ServiceModel.DeadLetterQueue.System>，則 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 必須設定為 `null`。</span><span class="sxs-lookup"><span data-stu-id="50803-110">If <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must be set to `null`.</span></span> <span data-ttu-id="50803-111">如果 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 不是 `null`，則 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 必須設定為 <xref:System.ServiceModel.DeadLetterQueue.Custom>。</span><span class="sxs-lookup"><span data-stu-id="50803-111">If <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberSignature Language="F#" Value="member this.DeadLetterQueue : System.ServiceModel.DeadLetterQueue with get, set" Usage="System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-112">取得或設定列舉值，這個值會指出要使用之寄不出的信件佇列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-112">Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-113">
            <see cref="T:System.ServiceModel.DeadLetterQueue" /> 列舉值，指出要使用之寄不出的信件佇列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-113">A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-114">寄不出的信件佇列是傳送應用程式佇列管理員上的佇列，用於無法傳遞的過期訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-114">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span> <span data-ttu-id="50803-115">寄不出的信件佇列列舉型別會指定要使用之寄不出的信件佇列類型。</span><span class="sxs-lookup"><span data-stu-id="50803-115">The dead-letter queue enumeration specifies the type of dead-letter queue to use.</span></span> <span data-ttu-id="50803-116">這些值包括：</span><span class="sxs-lookup"><span data-stu-id="50803-116">The values are:</span></span>  
  
-   <span data-ttu-id="50803-117">`None`：不需要寄不出的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-117">`None`: No dead-letter queue is required.</span></span> <span data-ttu-id="50803-118">如果訊息無法傳遞，則不會在寄不出的信件佇列中維護這個訊息的記錄。</span><span class="sxs-lookup"><span data-stu-id="50803-118">If a message fails delivery, no record of it is maintained in the dead-letter queue.</span></span> <span data-ttu-id="50803-119">當 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `false` 時，這就是預設值。</span><span class="sxs-lookup"><span data-stu-id="50803-119">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="50803-120">`System`：範圍觸及整個系統的寄不出的信件佇列會用來記錄無法傳遞的訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-120">`System`: The system-wide dead-letter queue is used to record messages that fail delivery.</span></span> <span data-ttu-id="50803-121">訊息佇列 (MSMQ) 具有一個系統寄不出的信件交易式佇列和一個系統寄不出的信件非交易式佇列，可分別記錄無法從交易式佇列與非交易式佇列傳遞的過期訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-121">Message Queuing (MSMQ) has a transactional, system, dead-letter queue and a non-transactional, system, dead-letter queue to record messages that fail delivery from transactional and non-transactional queues, respectively.</span></span> <span data-ttu-id="50803-122">當 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `true` 時，這就是預設值。</span><span class="sxs-lookup"><span data-stu-id="50803-122">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="50803-123">`Custom`：在 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 屬性中指定的佇列，用於記錄無法傳遞的訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-123">`Custom`: The queue specified in the <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> property that is used to record messages that fail delivery.</span></span>  
  
 <span data-ttu-id="50803-124">訊息可能會因為下列任何一個原因而無法到達接收應用程式：</span><span class="sxs-lookup"><span data-stu-id="50803-124">The reasons a message can fail to reach the receiving application include:</span></span>  
  
-   <span data-ttu-id="50803-125">交易式訊息已傳送至非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-125">A transactional message is sent to a non-transactional queue.</span></span>  
  
-   <span data-ttu-id="50803-126">非交易式訊息已傳送至交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-126">A non-transactional message is sent to a transactional queue.</span></span>  
  
-   <span data-ttu-id="50803-127">未經驗證的訊息已傳送至僅接受經過驗證之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-127">An unauthenticated message is sent to a queue that accepts only authenticated messages.</span></span>  
  
-   <span data-ttu-id="50803-128">未經加密的訊息已傳送至僅接受經過加密之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-128">An unencrypted message is sent to a queue that accepts only encrypted messages.</span></span>  
  
-   <span data-ttu-id="50803-129">訊息在傳送給接收者之前就已逾期。</span><span class="sxs-lookup"><span data-stu-id="50803-129">The message expires before the message is delivered to a receiver.</span></span>  
  
-   <span data-ttu-id="50803-130">已超出目標電腦的訊息儲存配額或是目的佇列的儲存配額，或者是當訊息送達時，目標電腦上沒有可用的儲存空間。</span><span class="sxs-lookup"><span data-stu-id="50803-130">The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</span></span>  
  
-   <span data-ttu-id="50803-131">寄件者沒有[存取權限](http://go.microsoft.com/fwlink/?LinkID=96167)才能將訊息放在目的端佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-131">The sender does not have the [access rights](http://go.microsoft.com/fwlink/?LinkID=96167) required to place the message in the destination queue.</span></span>  
  
-   <span data-ttu-id="50803-132">附加到訊息的數位簽章無效。</span><span class="sxs-lookup"><span data-stu-id="50803-132">The digital signature attached to the message is not valid.</span></span>  
  
-   <span data-ttu-id="50803-133">加密的訊息無法由目的佇列管理員進行解密。</span><span class="sxs-lookup"><span data-stu-id="50803-133">An encrypted message cannot be decrypted by the destination queue manager.</span></span>  
  
-   <span data-ttu-id="50803-134">擷取訊息前，會清除或刪除目的佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-134">The destination queue is purged or deleted before the message is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Durable : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-135">取得或設定值，這個值會指出由這個繫結處理的訊息是否具有永久性或變動性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-135">Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-136">如果這個繫結處理的訊息是永久性的，則為 <see langword="true" />，如果為變動性的則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-136">
              <see langword="true" /> if the messages processed by this binding are durable; <see langword="false" /> if they are volatile.</span>
          </span>
          <span data-ttu-id="50803-137">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-137">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-138">當佇列管理員停止回應時，永久性的訊息不會受到影響，但變動性訊息會受到影響。</span><span class="sxs-lookup"><span data-stu-id="50803-138">A durable message survives when a queue manager stops responding, while a volatile message does not.</span></span> <span data-ttu-id="50803-139">如果應用程式可以容許訊息偶而遺失，變動性訊息就很有用。</span><span class="sxs-lookup"><span data-stu-id="50803-139">Volatile messages are useful when applications can tolerate occasional lost messages.</span></span>  
  
 <span data-ttu-id="50803-140">如果 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `true`，訊息必須是永久性的。</span><span class="sxs-lookup"><span data-stu-id="50803-140">If <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`, the messages must be durable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExactlyOnce : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-141">取得或設定值，這個值會指出由這個繫結處理的訊息是否會確實接收一次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-141">Gets or sets a value that indicates whether messages processed by this binding are received exactly once.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-142">如果只接收一次由此繫結處理的訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-142">
              <see langword="true" /> if messages processed by this binding are received exactly once; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="50803-143">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-143">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-144">訊息可以在有保證或無保證的情況下傳送。</span><span class="sxs-lookup"><span data-stu-id="50803-144">A message can be sent with or without assurances.</span></span> <span data-ttu-id="50803-145">如果有保證，應用程式便可確認傳送的訊息已到達接收訊息佇列，如果訊息沒有到達接收訊息佇列，應用程式可藉由讀取寄不出的信件佇列來判斷是否到達。</span><span class="sxs-lookup"><span data-stu-id="50803-145">An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead-letter queue.</span></span>  
  
 <span data-ttu-id="50803-146"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `true` 的已傳送訊息，必須只能傳送到交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-146">Messages sent with <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> set to `true` must be sent to a transactional queue only.</span></span>  
  
 <span data-ttu-id="50803-147"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>，當傳送至 `true` 時，表示訊息佇列 (MSMQ) 確保傳送的訊息已傳遞至接收訊息佇列一次，且僅此一次。</span><span class="sxs-lookup"><span data-stu-id="50803-147"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (MSMQ) ensures that a sent message is delivered to the receiving message queue once and only once.</span></span> <span data-ttu-id="50803-148">如果傳遞失敗，則訊息會傳送至寄不出的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-148">If delivery fails, the message is sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="50803-149">如果是需要將 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `false` 的訊息，<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 屬性會預設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="50803-149">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `false`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to `null`.</span></span>  
  
 <span data-ttu-id="50803-150">如果是需要將 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `true` 的訊息，<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 屬性會預設為在 MSMQ 的整個系統中，屬於交易式的寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-150">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `true`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to a transactional system-wide dead-letter queue in MSMQ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-151">取得或設定這個繫結所處理之訊息的大小上限 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-151">Gets or sets the maximum size, in bytes, for a message that is processed by this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-152">由此繫結處理之訊息的大小上限 (單位為位元組)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-152">The maximum size (in bytes) for a message that is processed by this binding.</span>
          </span>
          <span data-ttu-id="50803-153">預設值為 65,536 位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-153">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-154">這項關於訊息大小的限制是為了避免受到阻絕服務 (DoS) 攻擊。</span><span class="sxs-lookup"><span data-stu-id="50803-154">This bound on message size is intended to limit exposure to Denial of Service (DoS) attacks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCycles : int with get, set" Usage="System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-155">取得或設定嘗試傳遞訊息至接收應用程式的重試循環次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-155">Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-156">嘗試傳遞訊息至應用程式的重試循環次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-156">The maximum number of retry cycles to attempt delivery of messages to the application.</span>
          </span>
          <span data-ttu-id="50803-157">預設值為 2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-157">The default value is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-158">單一重試循環會嘗試以指定的次數，傳遞訊息至應用程式。</span><span class="sxs-lookup"><span data-stu-id="50803-158">A single retry cycle attempts to deliver a message to an application a specified number of times.</span></span> <span data-ttu-id="50803-159">嘗試的次數是由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 屬性設定。</span><span class="sxs-lookup"><span data-stu-id="50803-159">The number of attempts made is set by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="50803-160">在立即重試達指定次數後，如果應用程式無法存取訊息，訊息就會傳送至重試佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-160">If the application fails to access the message after the specified number of immediate retries, the message is sent to a retry queue.</span></span> <span data-ttu-id="50803-161">在 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 屬性指定的延遲之後，後續的重試循環會包含從重試佇列傳回應用程式佇列的訊息，以再次嘗試傳遞至應用程式。</span><span class="sxs-lookup"><span data-stu-id="50803-161">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="50803-162"><xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 屬性會指定應用程式用於嘗試傳遞訊息的重試循環次數。</span><span class="sxs-lookup"><span data-stu-id="50803-162">The <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property specifies the number of retry cycles that the application uses to attempt to deliver the message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-163">取得或設定值，這個值表示是否已要求接收內容行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-163">Gets or sets a value that indicates whether the receive context behavior is requested.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-164">如果已要求接收內容行為，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-164">
              <see langword="true" /> if the receive context behavior is requested; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveErrorHandling : System.ServiceModel.ReceiveErrorHandling with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-165">取得或設定列舉值，這個值會指定如何處理有害的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-165">Gets or sets an enumeration value that specifies how poison messages are handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-166">
            <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 值，指定如何處理有害和其他不可分派的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-166">A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and other messages that cannot be dispatched are handled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-167">如果嘗試重複傳送訊息失敗，佇列中的訊息就會被破壞。</span><span class="sxs-lookup"><span data-stu-id="50803-167">A message in the queue becomes poisoned if repeated attempts to deliver the message failed.</span></span> <span data-ttu-id="50803-168">這種有害訊息最後會依據這項屬性的設定加以處理。</span><span class="sxs-lookup"><span data-stu-id="50803-168">This poison message is eventually handled based on the setting of this property.</span></span> <span data-ttu-id="50803-169">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Fault> 時，接聽程式會發生錯誤，並且會追蹤和擲回 <xref:System.ServiceModel.MsmqPoisonMessageException>。</span><span class="sxs-lookup"><span data-stu-id="50803-169">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, the listener is faulted and a <xref:System.ServiceModel.MsmqPoisonMessageException> is traced and thrown.</span></span> <span data-ttu-id="50803-170">有害訊息會留在佇列中，並且必須先將這些有害訊息移除，才能從佇列存取更多訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-170">The poison message is left in the queue and must be removed before more messages can be accessed from the queue.</span></span> <span data-ttu-id="50803-171"><xref:System.ServiceModel.MsmqPoisonMessageException> 包含 <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>，後者可用於從佇列中識別並手動移除有害訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-171">The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the poison message from the queue.</span></span>  
  
 <span data-ttu-id="50803-172">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Drop> 時，即會捨棄有害訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-172">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, the poison message is dropped.</span></span>  
  
 <span data-ttu-id="50803-173">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Reject> 時，負認可會傳送至用戶端，並從佇列移除有害訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-173">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, a negative acknowledgement is sent to the client and the poison message is removed from the queue.</span></span> <span data-ttu-id="50803-174">只有在 Message Queuing 4.0 上才能使用這個選項，並且需要 [!INCLUDE[wv](~/includes/wv-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="50803-174">This option is available only on Message Queuing 4.0 and requires [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 <span data-ttu-id="50803-175">當設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Move> 時，有害訊息會移到最後一個有害子佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-175">When set to <xref:System.ServiceModel.ReceiveErrorHandling.Move>, the poison message is moved to the final poison subqueue.</span></span> <span data-ttu-id="50803-176">只有在 Message Queuing 4.0 上才能使用這個選項，並且須有 [!INCLUDE[wv](~/includes/wv-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="50803-176">This option is only available on Message Queuing 4.0 and requires [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveRetryCount : int with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-177">取得或設定從應用程式佇列讀取之訊息的立即傳遞嘗試次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-177">Gets or sets the maximum number of immediate delivery attempts on a message that is read from the application queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-178">立即傳遞嘗試的次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-178">The maximum number of immediate delivery attempts.</span>
          </span>
          <span data-ttu-id="50803-179">預設值為 5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-179">The default is 5.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-180">如果達到立即傳遞重試的次數上限，且應用程式無法存取訊息，那麼會將這則訊息傳送至重試佇列，以便於稍後嘗試傳遞。</span><span class="sxs-lookup"><span data-stu-id="50803-180">If the maximum number of immediate delivery attempts for the message is made and the message is not accessed by the application, then the message is sent to a retry queue to attempt delivery at a later time.</span></span> <span data-ttu-id="50803-181">如果沒有指定重試循環，那麼訊息便會傳送至有害訊息佇列，或者系統會將負認可傳回寄件者。</span><span class="sxs-lookup"><span data-stu-id="50803-181">If no retry cycles are specified, then the messages is either sent to the poison-message queue, or a negative acknowledgement is sent back to the sender.</span></span>  
  
 <span data-ttu-id="50803-182">如需詳細資訊，請參閱 <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 與 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>。</span><span class="sxs-lookup"><span data-stu-id="50803-182">For more information, see <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RetryCycleDelay : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:30:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-183">取得或設定值，這個值會指出嘗試傳遞無法立即傳遞之訊息時，重試循環之間的時間延遲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-183">Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that cannot be delivered immediately.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-184">
            <see cref="T:System.TimeSpan" />，指定開始下一輪嘗試傳遞至接收應用程式的循環前，要等候的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-184">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</span>
          </span>
          <span data-ttu-id="50803-185">預設值為 10 分鐘。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-185">The default value is 10 minutes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-186">單一重試循環會嘗試以指定的次數，傳遞訊息至接收應用程式。</span><span class="sxs-lookup"><span data-stu-id="50803-186">A single retry cycle attempts to deliver a message to a receiving application a specified number of times.</span></span> <span data-ttu-id="50803-187">嘗試的次數是由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 屬性指定。</span><span class="sxs-lookup"><span data-stu-id="50803-187">The number of attempts made is specified by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="50803-188">在立即重試達指定次數後，如果應用程式無法存取訊息，訊息就會傳送至重試佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-188">If the application fails to access the message after the specified number of immediate retries, the message is sent to a retry queue.</span></span> <span data-ttu-id="50803-189">後續的重試循環是由重試佇列傳回應用程式佇列的訊息所組成，以便於 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 指定的延遲之後，再次嘗試傳遞至應用程式。</span><span class="sxs-lookup"><span data-stu-id="50803-189">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>.</span></span> <span data-ttu-id="50803-190">重試循環的次數是由 <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 所指定。</span><span class="sxs-lookup"><span data-stu-id="50803-190">The number of retry cycles is specified by <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.MsmqBindingBase.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-191">傳回這個繫結的配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-191">Returns the scheme for this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-192">這個繫結的配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-192">The scheme for this binding.</span>
          </span>
          <span data-ttu-id="50803-193">傳回的配置視 <see cref="T:System.ServiceModel.MsmqBindingBase" /> 實作而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-193">The scheme returned depends on the implementation of <see cref="T:System.ServiceModel.MsmqBindingBase" />.</span>
          </span>
          <span data-ttu-id="50803-194">
            <see cref="T:System.ServiceModel.NetMsmqBinding" /> 實作會傳回 "net.msmq"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-194">The <see cref="T:System.ServiceModel.NetMsmqBinding" /> implementation returns "net.msmq".</span>
          </span>
          <span data-ttu-id="50803-195">
            <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> 實作會傳回 "msmq.formatname"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-195">The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> implementation returns "msmq.formatname".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-196">訊息佇列 (MSMQ) 支援使用原生 MSMQ 通訊協定與 SRMP 通訊協定的佇列管理員。</span><span class="sxs-lookup"><span data-stu-id="50803-196">Message Queuing (MSMQ) supports transporting messages between queue managers using both the native MSMQ protocol and the SRMP protocol.</span></span> <span data-ttu-id="50803-197">使用佇列傳輸繫結的應用程式可以使用這兩種通訊協定。</span><span class="sxs-lookup"><span data-stu-id="50803-197">Applications that use the queued transport binding can use both of these protocols.</span></span> <span data-ttu-id="50803-198">佇列傳輸繫結所支援的通訊協定配置如下：原生通訊協定的 net.msmq、SRMP 通訊協定的 net.srmp 和透過 HTTPS 的 SRMP 之 net.srmps。</span><span class="sxs-lookup"><span data-stu-id="50803-198">The protocol schemes supported by the queued transport binding are net.msmq for the native protocol, net.srmp for the SRMP protocol, and net.srmps for SRMP over HTTPS.</span></span>  
  
 <span data-ttu-id="50803-199"><xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> 支援單一配置，msmq.formatname，有了這種配置，使用者可以直接在佇列位址中指定佇列的格式名稱。</span><span class="sxs-lookup"><span data-stu-id="50803-199">The <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> supports a single scheme, msmq.formatname, with which the user can specify the format name of the queue directly in the queue address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.MsmqBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-200">取得值，這個值指出以同步還是非同步方式處理傳入要求可以比較有效率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-200">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-201">
            <see langword="true" /> 如果處理要求可以更有效率地以同步方式;否則<see langword=" false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-201">
              <see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword=" false" />.</span>
          </span>
          <span data-ttu-id="50803-202">預設為 <see langword="false" />，這樣會以非同步方式處理要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-202">The default is <see langword="false" />, to handle requests asynchronously.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-203">當 <xref:System.ServiceModel.MsmqBindingBase.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> 為 `true`<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>時，`true` 屬性會設定為 。</span><span class="sxs-lookup"><span data-stu-id="50803-203">The <xref:System.ServiceModel.MsmqBindingBase.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> property is set to `true` when the <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "1.00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-204">取得或設定時間間隔，這個間隔會指出由此繫結所處理之訊息在到期前可保留在佇列中的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-204">Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-205">
            <see cref="T:System.TimeSpan" />，指出訊息在到期前可保留在佇列中的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-205">The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire.</span>
          </span>
          <span data-ttu-id="50803-206">預設值為 1 天。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-206">The default value is 1 day.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-207">設定 <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> 屬性可確保有時效的訊息在接收應用程式處理之前不會變成過時。</span><span class="sxs-lookup"><span data-stu-id="50803-207">The <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> property is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications.</span></span> <span data-ttu-id="50803-208">佇列中未由接收應用程式於指定的時間間隔內存取的訊息，即為過期訊息。</span><span class="sxs-lookup"><span data-stu-id="50803-208">A message in a queue that is not accessed by the receiving application within the time interval specified is expired.</span></span> <span data-ttu-id="50803-209">過期訊息會傳送至稱為「寄不出的信件佇列」的特殊佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-209">Expired messages are sent to a special queue called the dead-letter queue.</span></span> <span data-ttu-id="50803-210">寄不出的信件佇列的位置是使用 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 屬性設定，或根據保證設定為適當的預設值。</span><span class="sxs-lookup"><span data-stu-id="50803-210">The location of the dead-letter queue is set with the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property or to the appropriate default, based on assurances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMsmqTracing : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-211">取得或設定值，這個值會指出是否應追蹤由此繫結處理的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-211">Gets or sets a value that indicates whether messages processed by this binding should be traced.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-212">如果應追蹤由此繫結處理的訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-212">
              <see langword="true" /> if messages processed by this binding should be traced; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="50803-213">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-213">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-214">如果啟用追蹤，每當訊息離開或到達訊息佇列 (MSMQ) 電腦時，都會建立報告訊息並傳送至報告佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-214">When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a Message Queuing (MSMQ) computer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSourceJournal : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-215">取得或設定值，此值會指出是否要將此繫結處理之訊息的複本儲存在來源日誌佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-215">Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-216">如果要將此繫結處理之訊息的複本儲存在來源日誌佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-216">
              <see langword="true" /> if copies of messages processed by this binding should be stored in the source journal queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="50803-217">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-217">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50803-218">有些佇列應用程式記錄已離開電腦輸出佇列的訊息，這些程式可以將訊息複製到日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="50803-218">Queued applications that keep a record of messages that have left the computer's outgoing queue can copy the messages to a journal queue.</span></span> <span data-ttu-id="50803-219">只要訊息一離開輸出佇列，而且收到目的端電腦已收到訊息的認可，訊息的複本就會保留在傳送端電腦的系統日誌佇列中。</span><span class="sxs-lookup"><span data-stu-id="50803-219">Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:05:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50803-220">取得或設定值，這個值會指定接收內容功能鎖定訊息的持續期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-220">Gets or sets a value that specifies the duration a message will be locked by the receive context feature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50803-221">TimeSpan 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50803-221">A timespan object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="50803-222">如果訊息的 <xref:System.ServiceModel.MsmqBindingBase.ValidityDuration%2A> 過期，任何可用於處理訊息的交易都將中止，而且如果過期是在交易期間發生，工作流程執行個體也會一併中止。</span><span class="sxs-lookup"><span data-stu-id="50803-222">If <xref:System.ServiceModel.MsmqBindingBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>