<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContext.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b651d31df1389374d57ccfab4c8222f8ac73618.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b651d31df1389374d57ccfab4c8222f8ac73618</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContext">
          <source>Provides access to the execution context of a service method.</source>
          <target state="translated">存取服務方法的執行內容。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> from within a service operation to access the current operation execution environment.</source>
          <target state="translated">從服務作業內使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 來存取目前作業執行環境。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</source>
          <target state="translated">作業內容特別用來存取雙工服務中的回呼通道、儲存作業各部分的額外狀態資料、存取傳入訊息標頭與屬性，以及新增傳出訊息標頭與屬性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For more information about using extensions to store state data, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">如需使用擴充部分來儲存狀態資料的詳細資訊，請參閱<bpt id="p1">[</bpt>延伸的物件<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> has the following properties and methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 具有以下屬性與方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object representing the current execution context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> 屬性傳回 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 物件，代表目前的執行內容。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property returns the security environment under which the method executes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> 屬性傳回執行該方法的安全性環境。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> property gets the operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> 屬性取得作業的 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property returns an extension collection for the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> 屬性傳回目前 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 的擴充集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that manages the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> 屬性傳回管理該服務的 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> property returns a value that indicates whether the method has supporting tokens, if so, the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> property gets them.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> 屬性傳回的值，表示該方法是否支援語彙基元，若支援，<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> 屬性會取得它們。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> properties get these items from the incoming message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph> 與 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> 屬性會從傳入訊息取得這些項目。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event is fired when the operation has completed.</source>
          <target state="translated">作業完成時，會引發 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> properties get these items for the outbound message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> 與 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> 屬性會取得傳出訊息的這些項目。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> implementation for the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> 屬性傳回該方法的 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> associated with the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> 屬性會傳回與該作業相關的 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> property returns the session identifier for the current channel and object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> 屬性會傳回目前通道與物件的工作階段識別項。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method returns a callback channel to the caller in the case of duplex communication.</source>
          <target state="translated">在雙工通訊狀況下，<ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> 方法會傳回一個回呼通道給呼叫者。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> method commits the current transaction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> 方法會認可目前交易。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to obtain the channel back to the caller from within a method.</source>
          <target state="translated">下列程式碼範例會使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> 屬性與 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> 方法，從方法內取得通道傳回給呼叫者。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">本範例的所有方法都是單向方法，可讓服務與用戶端獨立地進行雙向通訊。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">在此情況下，範例用戶端應用程式在結束前預期只會傳回一個呼叫，但其他用戶端 (例如，Windows Form 用戶端) 則可以從服務接收任何數目的呼叫。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">下列用戶端實作了 <ph id="ph1">`SampleDuplexHelloCallback`</ph> 以接收回呼訊息。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">匯入的回呼合約名稱與服務中的回呼合約名稱不同，這是因為前述範例使用了 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">注意，用戶端並沒有針對是否接收到回呼，或何時接收到回呼作任何的假設；伺服器回呼與用戶端的傳出呼叫完全無關。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">如須在用戶端情節使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 類別的範例，請參閱 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> used to create a new client <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">用來建立新用戶端 <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>的 。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> in a client application.</source>
          <target state="translated">使用指定之用戶端應用程式中的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph>來初始化  類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> 建構函式，在與 Proxy 相關的範圍內建立新的作業內容，以修改傳出項目 (如標頭)。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">下列範例將示範如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> 於用戶端應用程式內建立新的內容，以便將自訂標頭新增至傳出訊息。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel is null.</source>
          <target state="translated">通道是 null。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>Gets the channel associated with the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">取得與目前 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> 物件相關聯的通道。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> associated with the current <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">與目前 <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> 關聯的 <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>Gets the claims-based principal associated with the operation.</source>
          <target state="translated">取得與作業相關聯的宣告架構主體。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>The claims principal.</source>
          <target state="translated">宣告主體。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Gets or sets the execution context for the current thread.</source>
          <target state="translated">取得或設定目前執行緒的執行內容。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> that represents the messaging and execution context of the current method.</source>
          <target state="translated">代表目前方法之訊息與執行內容的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to obtain the execution and message context for the current method.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> 屬性取得目前方法的執行與訊息內容。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a method.</source>
          <target state="translated">下列程式碼範例會使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> 屬性與 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> 方法，從方法內建立通道傳回給呼叫者。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">本範例的所有方法都是單向方法，可讓服務與用戶端獨立地進行雙向通訊。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">在此情況下，範例用戶端應用程式在結束前預期只會傳回一個呼叫，但其他用戶端 (例如，Windows Form 用戶端) 則可以從服務接收任何數目的呼叫。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">取得或設定要檢查或修改的端點之端點發送器。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>The endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">要檢查或修改的端點之端點發送器。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Gets the collection of service extensions from the current message context.</source>
          <target state="translated">從目前訊息內容取得服務擴充部分的集合。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>A collection of extensions of <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>擴充部分的集合。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property to obtain a collection of all extensions of the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> used to modify the context or add custom state.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> 屬性取得 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 的所有擴充集合，用來修改內容或新增自訂狀態。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>For more information about extensions, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">如需擴充功能的詳細資訊，請參閱<bpt id="p1">[</bpt>延伸的物件<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The type of channel used to call back to the client.</source>
          <target state="translated">用來回呼至用戶端的通道型別。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Gets a channel to the client instance that called the current operation.</source>
          <target state="translated">取得至用戶端執行個體的通道，此通道呼叫了目前作業。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>A channel to the client instance that called the operation of the type specified in the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph> property.</source>
          <target state="translated">至用戶端執行個體的通道，此通道呼叫 <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph> 屬性指定之型別的作業。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> property to obtain a channel that you can use to call operations on the client instance that called the service.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> 屬性取得一個通道，您可使用此通道呼叫用戶端執行個體上的作業 (此用戶端呼叫了服務)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a operation.</source>
          <target state="translated">下列程式碼範例使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> 屬性與 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> 方法，從作業內建立通道傳回給呼叫者。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">本範例的所有作業都是單向作業，可讓服務與用戶端獨立地進行雙向通訊。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">在此情況下，範例用戶端應用程式在結束前預期只會傳回一個呼叫，但其他用戶端 (例如，Windows Form 用戶端) 則可以從服務接收任何數目的呼叫。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">下列用戶端實作了 <ph id="ph1">`SampleDuplexHelloCallback`</ph> 以接收回呼訊息。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">匯入的回呼合約名稱與服務中的回呼合約名稱不同，這是因為前述範例使用了 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">注意，用戶端並沒有針對是否接收到回呼，或何時接收到回呼作任何的假設；伺服器回呼與用戶端的傳出呼叫完全無關。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">如須在用戶端情節使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 類別的範例，請參閱 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source>Gets a value that indicates whether the incoming message has supporting tokens.</source>
          <target state="translated">取得值，這個值表示傳入訊息是否支援權杖。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the incoming message has supporting tokens; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果傳入訊息支援權杖則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Host">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> for the current service object.</source>
          <target state="translated">取得目前服務物件的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Host">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Gets the incoming message headers for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> 的傳入訊息標頭。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains the incoming message headers.</source>
          <target state="translated">包含傳入訊息標頭的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</source>
          <target state="translated">使用本屬性來檢查或修改到達服務作業的要求標頭，或到達用戶端 Proxy 的回覆標頭。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>The following code example shows how to read the incoming message headers in a service operation.</source>
          <target state="translated">下列程式碼範例示範如何讀取服務作業中的傳入訊息標頭。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Gets the message properties for the incoming message in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> 中傳入訊息的訊息屬性。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the incoming message.</source>
          <target state="translated">包含傳入訊息上之訊息屬性的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</source>
          <target state="translated">使用本屬性來檢查或修改服務作業中要求訊息的訊息屬性，或用戶端 Proxy 的回覆訊息。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Gets the incoming SOAP message version for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> 的傳入 SOAP 訊息版本。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>The SOAP version of the incoming message.</source>
          <target state="translated">傳入訊息的 SOAP 版本。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</source>
          <target state="translated">使用本屬性來檢查到達服務作業的要求訊息之 SOAP 版本，或到達用戶端 Proxy 的回覆訊息之 SOAP 版本。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object that manages the current service instance.</source>
          <target state="translated">取得管理目前服務執行個體的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object for the current service.</source>
          <target state="translated">目前服務的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property to access the run-time object that manages the current service object.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> 屬性存取執行階段物件，此執行階段物件管理了目前服務物件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source>This property is intended for system use and should not be called by users.</source>
          <target state="translated">本屬性僅供系統使用，使用者不應呼叫。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Occurs when the operation has completed.</source>
          <target state="translated">發生於作業已經完成時。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event to dispose parameters or a return value if you set <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">若您將 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph><ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph>設為 <ph id="ph3">`false`</ph> 事件來處置參數或傳回值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Normally you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph> to prevent <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> from calling <ph id="ph4">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> on the parameter and return value objects.</source>
          <target state="translated">通常，您會將 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> 設為 <ph id="ph2">`false`</ph>，避免 <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 在參數與傳回值物件上呼叫 <ph id="ph4">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</source>
          <target state="translated">然而，若某些參數要保留，其他參數要處置，則本事件是處置這些參數的最佳場所。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</source>
          <target state="translated">此外，若配合雙工繫結，則在目前作業的回覆送出後，此事件可用來在回呼通道上傳送要求。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">如果呼叫者正在接聽 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> 作業的 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> 事件，當收到回應時，它可能會封鎖。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">處理這種情況的正確方式是，當引發 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> 時在另一個執行緒上排程工作，然後立即從該事件處理常式傳回。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Gets the outgoing message headers for the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">取得使用中 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> 的傳出訊息標頭。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains outbound message headers for the active <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">包含使用中 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>之傳出訊息標頭的  物件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Use this property to add reply headers that are sent by a service operation or request headers that are sent by a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object.</source>
          <target state="translated">使用本屬性新增服務作業所傳送的回覆標頭，或新增 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 用戶端物件所傳送的要求標頭。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">下列範例將示範如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> 於用戶端應用程式內建立新的內容，以便將自訂標頭新增至傳出訊息。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Gets the message properties for the outbound message in the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">取得使用中 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> 內的傳出訊息之訊息屬性。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the outbound message.</source>
          <target state="translated">包含傳出訊息上之訊息屬性的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</source>
          <target state="translated">使用本屬性在服務作業產生的回覆訊息中新增訊息屬性，或在用戶端 Proxy 產生的要求訊息中新增訊息屬性。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation for this method.</source>
          <target state="translated">取得或設定本方法的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation, or null if there is no request context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> 實作，若沒有要求內容則為 null。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>One-way operations are do not have a request context.</source>
          <target state="translated">單向作業就沒有要求內容。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> within which this method executes.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>，此方法會在其中執行。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> used to identify the current session.</source>
          <target state="translated">取得用來識別目前工作階段的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>The session identifier.</source>
          <target state="translated">工作階段識別項。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Commits the currently executing transaction.</source>
          <target state="translated">認可目前執行的交易。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>This is only useful in operations that set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">這只對把 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> 設為 <ph id="ph2">`false`</ph> 的作業才有效。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Typically, services do this on some but not all operations.</source>
          <target state="translated">一般而言，服務會對某些作業做這件事，但並非所有作業都做。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> is false the transaction completes automatically.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> 為 false 時，交易就自動完成。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</source>
          <target state="translated">若在設計階段無法判斷是否需要完成交易，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>There is no transaction in the context.</source>
          <target state="translated">內容中沒有異動。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 型別的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>A collection of security tokens.</source>
          <target state="translated">安全性語彙基元的集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>