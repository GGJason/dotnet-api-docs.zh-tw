<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ChannelFactory.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552f0d24a72d33f64d655a15766ff86ae45ac4ab4b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0d24a72d33f64d655a15766ff86ae45ac4ab4b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Creates and manages the channels that are used by clients to send messages to service endpoints.</source>
          <target state="translated">建立和管理由用戶端用於傳送訊息至服務端點的通道。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Channel factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface and their associated channels are generally used by the initiators of a communication pattern.</source>
          <target state="translated">負責實作 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> 介面和其相關通道的通道處理站，通常會由通訊模式的初始端所使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Listener factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface and their associated listeners provide the mechanisms with which channels are accepted for communications.</source>
          <target state="translated">負責實作 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 介面和其相關接聽程式的接聽程式處理站會提供機制，搭配此機制便可接受用於通訊的通道。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>This class is not part of the channel model, but of the service model.</source>
          <target state="translated">這個類別不是通道模型的一部分，而是服務模型的一部分。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> method provides the means to create an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> for a service endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> 方法會提供建立服務端點之 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> 的方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Use it to construct a client that hooks up to an interface contract on the service without using metadata or policy.</source>
          <target state="translated">請使用它來建構不需使用中繼資料或原則便可連結至服務上介面合約的用戶端。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated">不論模擬等級為何，將 <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> 設定為 <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> 永遠都會造成匿名登入。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">給衍生自此類別之 Managed C++ 使用者的特別說明：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">請將您的清除程式碼置於 (On)(Begin)Close (and/or OnAbort)，而不是解構函式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid destructors; they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">避免使用解構函式，因為它們會導致編譯器自動產生 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid non-reference members; they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">避免使用非參考成員，因為它們會導致編譯器自動產生 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid using a finalizer; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">避免使用完成項，但如果您要加入完成項，則應隱藏建置警告並從 (On)(Begin)Close (和/或 OnAbort) 呼叫 <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> 和完成項本身，以模擬原本可能自動產生的 <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> 行為。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>When adding behaviors programmatically, the behavior is added to the appropriate <ph id="ph1">`Behaviors`</ph> property on the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> prior to the creation of any channel.</source>
          <target state="translated">以程式設計的方式加入行為時，行為會加入至 <ph id="ph1">`Behaviors`</ph> 上的適當 <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> 屬性，再建立任何通道。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>See the example section for a code sample.</source>
          <target state="translated">如需程式碼範例，請參閱「範例」一節。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The following code example shows how to insert programmatically a client behavior prior to the creation of the channel object by the factory.</source>
          <target state="translated">下列程式碼範例會示範如何以程式設計的方式插入用戶端行為，再由處理站建立通道物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The name of the configuration file.</source>
          <target state="translated">組態檔的名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Initializes the channel factory with the behaviors provided by a specified configuration file and with those in the service endpoint of the channel factory.</source>
          <target state="translated">使用指定組態檔所提供的行為以及通道處理站之服務端點中的行為，初始化通道處理站。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If <ph id="ph1">`configurationName`</ph> is <ph id="ph2">`null`</ph>, only the behaviors specified in the service endpoint are loaded.</source>
          <target state="translated">如果 <ph id="ph1">`configurationName`</ph> 為 <ph id="ph2">`null`</ph>，則只會載入服務端點中的指定行為。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If the wildcard, "*", is used, any endpoint configuration in the client configuration file is used, but only if there is precisely one.</source>
          <target state="translated">如果使用萬用字元 "*"，便會使用用戶端組態檔中的任何端點組態，不過只在確實有一個端點時才這樣做。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">否則，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Any other value for the <ph id="ph1">`configurationName`</ph>, including the empty string "", matches the endpoint configuration with the same name.</source>
          <target state="translated">任何 <ph id="ph1">`configurationName`</ph> 的其他值 (包括空字串 "") 都會符合具有相同名稱的端點組態。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>See the <bpt id="p1">[</bpt>WCF Client Configuration<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept> topic for a discussion of the client configuration.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>WCF 用戶端組態<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept>如用戶端組態的說明主題。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The service endpoint of the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">通道處理站的服務端點為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</source>
          <target state="translated">在衍生類別中實作時，便會建立與該通道處理站相關聯之服務端點的描述。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> associated with the channel factory.</source>
          <target state="translated">與通道處理站相關聯的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>Builds the channel factory for the current endpoint of the factory.</source>
          <target state="translated">建置處理站之目前端點的通道處理站。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory" /&gt;</ph> for the endpoint of the current factory.</source>
          <target state="translated">目前處理站之端點的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>The endpoint of the service that the factory channels connect to is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or the endpoint's binding is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is missing the element with the configuration name specified.</source>
          <target state="translated">處理站通道所連接的服務端點是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，或是端點的繫結是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 或遺失具有指定組態名稱的項目。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</source>
          <target state="translated">取得認證，用戶端會在處理站產生的通道上使用該認證與服務端點通訊。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> used by clients if they are configured for the factory or if the endpoint is non-<ph id="ph2">&lt;see langword="null" /&gt;</ph> and is in either the created or opening communication state; otherwise <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果用戶端認證已針對處理站完成設定，或者如果端點是非 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> 而且通訊狀態為已建立或開啟中，則為用戶端使用的 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 物件會儲存為端點行為的型別，而且可透過 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> 屬性存取。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> method initializes a read-only copy of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object for the factory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> 方法會初始化該處理站之 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 物件的唯讀複本。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is used by the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class (or a class that derives from this class) to create the proxy objects that can call services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 物件會由 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 類別 (或衍生自這個類別的類別) 用來建立可以呼叫服務的 Proxy 物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is also accessible through the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 物件也可以透過 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> 屬性來存取。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated">不論模擬等級為何，將 <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> 設定為 <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> 永遠都會造成匿名登入。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default interval of time provided for a close operation to complete.</source>
          <target state="translated">取得針對要完成之關閉作業所提供的預設時間間隔。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">預設 <ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph>，指定必須在逾時前多久完成關閉作業。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default service model close time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> 都是 <ph id="ph3">`null`</ph>，便會取得預設的服務模型關閉等候逾時。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default value for the service model close time-out is 1 minute.</source>
          <target state="translated">服務模型關閉等候逾時的預設值為 1 分鐘。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">否則，此值會設定為與 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph> 有關聯的 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default interval of time provided for an open operation to complete.</source>
          <target state="translated">取得針對要完成之開啟作業所提供的預設時間間隔。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">預設 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，指定必須在逾時前多久完成開啟作業。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default service model open time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> 都是 <ph id="ph3">`null`</ph>，便會取得預設的服務模型開啟等候逾時。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default value for the service model open time-out is 1 minute.</source>
          <target state="translated">服務模型開啟等候逾時的預設值為 1 分鐘。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">否則，此值會設定為與 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph> 有關聯的 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>Gets the service endpoint to which the channels produced by the factory connect.</source>
          <target state="translated">取得由處理站產生的通道所要連接的服務端點。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to which the channels produced by the factory connect.</source>
          <target state="translated">處理站產生的通道所連接的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Opens the current channel factory if it is not yet opened.</source>
          <target state="translated">如果通道處理站尚未開啟，則開啟目前通道處理站。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Before opening the channel factory, checks that it is not <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</source>
          <target state="translated">在開啟通道處理站之前，檢查它不是 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 或 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>The current factory is either closing or closed and so cannot be opened.</source>
          <target state="translated">目前處理站正在關閉或已關閉，因此無法開啟。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">此方法正在查詢的型別物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if not present.</source>
          <target state="translated">從通道堆疊的適當層次傳回要求的型別物件 (如果存在的話)，如果不存在則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">要求的型別物件 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> (如果存在的話)，如果不存在則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Use this to retrieve capabilities, requirements and parameters from the channel stack.</source>
          <target state="translated">使用這個物件，即可從通道堆疊擷取功能、需求和參數。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If a channel factory supports returning the requested object, it returns it.</source>
          <target state="translated">如果通道處理站支援傳回所要求的物件，它便會傳回該物件。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If not, it delegates the call down to the next level in the stack.</source>
          <target state="translated">如果不是，則會將呼叫向下委派到堆疊中的下一層。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If it gets to the bottom of the stack and no channel factory supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果到達堆疊的底部，而且沒有任何通道處理站支援要求的物件，則該方法會傳回 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source><ph id="ph1">`T`</ph> is typically some channel interface that the channel factory can support.</source>
          <target state="translated"><ph id="ph1">`T`</ph> 通常是通道處理站可以支援的某種通道介面。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If, for example, <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph> is called on a duplex channel factory, it returns the underlying listener.</source>
          <target state="translated">例如，在雙工通道處理站上呼叫 <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph> 時，便會傳回基礎接聽程式。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Initializes the service endpoint of the channel factory.</source>
          <target state="translated">初始化通道處理站的服務端點。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>You must have an address to initialize an endpoint, but can have just the binding or configuration instead of the full endpoint.</source>
          <target state="translated">您必須有要用來初始化端點的位址，但是您可以只有繫結或組態，而不一定要有完整的端點。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to initialize the channel factory with.</source>
          <target state="translated">用於初始化通道處理站的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes the service endpoint of the channel factory with a specified endpoint.</source>
          <target state="translated">使用指定的端點，初始化通道處理站的服務端點。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">如果您只有繫結，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">如果您有組態，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> with which to initialize the channel factory.</source>
          <target state="translated">用於初始化通道處理站的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> with which to initialize the channel factory.</source>
          <target state="translated">用於初始化通道處理站的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified binding and address.</source>
          <target state="translated">使用指定的繫結和位址，初始化通道處理站的服務端點。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">如果您有組態，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the configuration file used to initialize the channel factory.</source>
          <target state="translated">用於初始化通道處理站的組態檔名稱。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified address and configuration.</source>
          <target state="translated">使用指定的位址和組態，初始化通道處理站的服務端點。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">如果您只有繫結，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>Terminates the inner channel factory of the current channel factory.</source>
          <target state="translated">終止目前通道處理站的內部通道處理站。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> method is called on a factory after it transitions to the closing state if the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method is invoked.</source>
          <target state="translated">如果已叫用 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> 方法，<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> 方法便會在其轉換成關閉狀態之後自處理站上呼叫。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，指定必須在逾時前多久完成作業。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，這個委派會接收非同步作業完成的通知。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          <target state="translated">開啟在目前通道處理站 (具有與其相關聯的狀態物件) 之內部通道處理站上的非同步關閉作業。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>，這個項目會參考非同步作業。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">這個方法會透過回呼 (Callback)，接收有關作業之事件處理常式身分識別的通知。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous close on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">在內部通道處理站上的非同步關閉傳回或逾時發生之前，此作業都不會完成。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，指定必須在逾時前多久完成作業。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，這個委派會接收非同步作業完成的通知。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">應用程式所指定的物件，其中包含與非同步作業相關聯的狀態資訊。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          <target state="translated">開啟在目前通道處理站 (具有與其相關聯的狀態物件) 之內部通道處理站上的非同步開啟作業。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>，這個項目會參考非同步作業。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">這個方法會透過回呼 (Callback)，接收有關作業之事件處理常式身分識別的通知。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous open on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">在內部通道處理站上的非同步開啟傳回或逾時發生之前，此作業都不會完成。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，指定必須在逾時前多久完成作業。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</source>
          <target state="translated">搭配完成作業的指定逾時，在內部通道處理站上呼叫關閉。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 方法的呼叫所傳回的 <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous close operation on the inner channel factory of the current channel factory.</source>
          <target state="translated">完成在目前通道處理站的內部通道處理站上的非同步關閉作業。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 方法的呼叫所傳回的 <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous open operation on the inner channel factory of the current channel factory.</source>
          <target state="translated">完成在目前通道處理站的內部通道處理站上的非同步開啟作業。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，指定必須在逾時前多久完成開啟作業。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</source>
          <target state="translated">搭配完成作業的指定逾時，在目前通道處理站的內部通道處理站上呼叫開啟。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The inner channel of the current channel is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">目前通道的內部通道為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Initializes a read-only copy of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> object for the channel factory.</source>
          <target state="translated">初始化通道處理站之 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> 物件的唯讀複本。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Overrides and invokes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method, which is called during the transition of an object into the opened state.</source>
          <target state="translated">覆寫及叫用 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> 方法，該方法會在物件轉換為開啟狀態期間呼叫。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 物件會儲存為端點行為的型別，而且可透過 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> 屬性存取。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>Builds the inner channel factory for the current channel.</source>
          <target state="translated">建置目前通道的內部通道處理站。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>The inner channel factory for the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">通道處理站的內部通道處理站為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
          <source>Closes the current channel factory.</source>
          <target state="translated">關閉目前的通道處理站。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>