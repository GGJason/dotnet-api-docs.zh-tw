<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ProtocolException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b42eb40bbed590bbe8140beec43b639f27536a8a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b42eb40bbed590bbe8140beec43b639f27536a8a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ProtocolException">
          <source>The exception seen on the client that is thrown when communication with the remote party is impossible due to mismatched data transfer protocols.</source>
          <target state="translated">由於資料傳輸協定不符合，導致無法和遠端方進行通訊時，用戶端所看到擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> can be caused by incompatible bindings between endpoints, the use of an incorrect remote endpoint address, or similar incorrect configuration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> 可能是由於端點間不相容的繫結、使用不正確的遠端端點位址，或類似的不正確組態所造成。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>This exception derives from <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> that represents a class of recoverable errors that may be thrown during communication between endpoints and that robust client and service <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> applications are expected to handle.</source>
          <target state="translated">此例外狀況衍生自 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>，代表在端點間進行通訊時可能會擲回之可修復的錯誤類別，穩定的用戶端與服務 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 應用程式應能處理此狀況。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>To prevent a handler for <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> from catching the more specific <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, catch this exception prior to handling <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">若要防止 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 的處理常式攔截更特定的 <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>，可在處理 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 之前攔截此例外狀況。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ProtocolException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>If you want to pass an error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">如果您要將錯誤訊息傳遞給使用者，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%29&gt;</ph> 建構函式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">如果您要將錯誤訊息與造成例外狀況的內部例外狀況參考傳遞給使用者，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> 建構函式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>If you want to pass serialization information and streaming context, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> constructor.</source>
          <target state="translated">如果您要傳遞序列化資訊和資料流內容，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> 建構函式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">使用指定的錯誤訊息，初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>Use this constructor when you want to pass an error message to the user.</source>
          <target state="translated">當您想要傳遞錯誤訊息給使用者時，可以使用此建構函式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>The content of the message parameter should be understandable to the user.</source>
          <target state="translated">使用者應該了解訊息參數的內容。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>If you also want to pass a reference to the inner exception that is the cause of the exception as well as a specified error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">如果您也想要將例外狀況原因與指定之錯誤訊息的內部例外參考傳遞給使用者，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> 建構函式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that contains all the data required to serialize the exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，其中包含序列化例外狀況時所需要的所有資料。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the source and destination of the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>，指定資料流的來源和目的地。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class with serialization information and streaming context specified.</source>
          <target state="translated">使用指定的序列化 (Serialization) 資訊與資料流 (Streaming) 內容，初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstruct the exception object transmitted over a stream.</source>
          <target state="translated">在還原序列化期間呼叫這個建構函式，以重建在資料流上傳輸的例外狀況物件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the current exception to be thrown.</source>
          <target state="translated">導致擲回目前例外狀況的 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of the exception.</source>
          <target state="translated">使用指定的錯誤訊息和造成此例外狀況原因的內部例外狀況參考，初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>Use this constructor when you want to pass an error message and information about an inner exception up to the user.</source>
          <target state="translated">當您想要傳遞錯誤訊息和有關內部例外狀況的資訊給使用者時，請使用此建構函式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">訊息參數的內容應該要能夠讓目標使用者了解。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">直接因為前一個例外狀況而擲回的例外狀況可能包含對 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic) if the <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性會傳回與傳遞到建構函式中相同的值，如果 <ph id="ph2">`null`</ph> 屬性沒有將內部例外狀況值提供給建構函式，則會傳回 <ph id="ph3">`Nothing`</ph> 參考 (在 Visual Basic 中為 <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph>)。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>