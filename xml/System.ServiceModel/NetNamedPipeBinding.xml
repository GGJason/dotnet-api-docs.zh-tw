<Type Name="NetNamedPipeBinding" FullName="System.ServiceModel.NetNamedPipeBinding">
  <TypeSignature Language="C#" Value="public class NetNamedPipeBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetNamedPipeBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetNamedPipeBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetNamedPipeBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetNamedPipeBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cc959-101">提供針對電腦通訊最佳化，安全而可靠的繫結。</span><span class="sxs-lookup"><span data-stu-id="cc959-101">Provides a secure and reliable binding that is optimized for on-machine communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-102">根據預設，<xref:System.ServiceModel.NetNamedPipeBinding> 會產生執行階段通訊堆疊，此堆疊使用傳輸安全性、具名管道 (用於訊息傳遞) 和二進位訊息編碼。</span><span class="sxs-lookup"><span data-stu-id="cc959-102">The <xref:System.ServiceModel.NetNamedPipeBinding> generates a run-time communication stack by default, which uses transport security, named pipes for message delivery, and a binary message encoding.</span></span> <span data-ttu-id="cc959-103">做為電腦通訊的用途，此繫結可以為 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 系統提供適當的選擇。</span><span class="sxs-lookup"><span data-stu-id="cc959-103">This binding is an appropriate [!INCLUDE[indigo1](~/includes/indigo1-md.md)] system-provided choice for on-machine communication.</span></span> <span data-ttu-id="cc959-104">它也支援異動。</span><span class="sxs-lookup"><span data-stu-id="cc959-104">It also supports transactions.</span></span>  
  
 <span data-ttu-id="cc959-105"><xref:System.ServiceModel.NetNamedPipeBinding> 的預設組態類似於 <xref:System.ServiceModel.NetTcpBinding> 所提供的組態，但較為簡單，因為 WCF 實作只針對電腦應用，所以公開的功能不多。</span><span class="sxs-lookup"><span data-stu-id="cc959-105">The default configuration for the <xref:System.ServiceModel.NetNamedPipeBinding> is similar to the configuration provided by the <xref:System.ServiceModel.NetTcpBinding>, but it is simpler because the WCF implementation is only meant for on-machine use and consequently there are fewer exposed features.</span></span> <span data-ttu-id="cc959-106">最顯著的差異在於，<xref:System.ServiceModel.SecurityMode> 設定只提供 <xref:System.ServiceModel.SecurityMode.None> 和 <xref:System.ServiceModel.SecurityMode.Transport> 選項。</span><span class="sxs-lookup"><span data-stu-id="cc959-106">The most notable difference is that the <xref:System.ServiceModel.SecurityMode> setting only offers the <xref:System.ServiceModel.SecurityMode.None> and <xref:System.ServiceModel.SecurityMode.Transport> options.</span></span> <span data-ttu-id="cc959-107">SOAP 安全性支援並非包含的選項。</span><span class="sxs-lookup"><span data-stu-id="cc959-107">SOAP security support is not an included option.</span></span> <span data-ttu-id="cc959-108">您可以使用建構函式 `securityMode` 中的選擇性 <xref:System.ServiceModel.NetNamedPipeBinding.%23ctor%28System.ServiceModel.NetNamedPipeSecurityMode%29> 參數，設定安全性行為。</span><span class="sxs-lookup"><span data-stu-id="cc959-108">The security behavior is configurable using the optional `securityMode` parameter in <xref:System.ServiceModel.NetNamedPipeBinding.%23ctor%28System.ServiceModel.NetNamedPipeSecurityMode%29> the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-109">下列範例會示範部分組態檔，其中包含值設為預設值之 <xref:System.ServiceModel.NetNamedPipeBinding> 的區段。</span><span class="sxs-lookup"><span data-stu-id="cc959-109">The following example shows the part of the configuration file that contains the section for the <xref:System.ServiceModel.NetNamedPipeBinding> with values set to defaults.</span></span>  
  
  
  
 <span data-ttu-id="cc959-110">下列範例會示範如何以程式設計的方式使用 <xref:System.ServiceModel.NetNamedPipeBinding> 類別。</span><span class="sxs-lookup"><span data-stu-id="cc959-110">The following example shows how to programmatically use the <xref:System.ServiceModel.NetNamedPipeBinding> class.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc959-111">初始化 <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="cc959-111">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-112">您可以使用建構函式中的選擇性 `securityMode` 參數，設定安全性行為。</span><span class="sxs-lookup"><span data-stu-id="cc959-112">The security behavior is configurable using the optional `securityMode` parameter in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc959-113">初始化 <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="cc959-113">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-114">預設使用的安全性模式為 <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport>。</span><span class="sxs-lookup"><span data-stu-id="cc959-114">The default security mode used is <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-115">下列範例會示範部分組態檔，其中包含值設為預設值之 <xref:System.ServiceModel.NetNamedPipeBinding> 的區段。</span><span class="sxs-lookup"><span data-stu-id="cc959-115">The following example shows the part of the configuration file that contains the section for the <xref:System.ServiceModel.NetNamedPipeBinding> with values set to defaults.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding (System.ServiceModel.NetNamedPipeSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.NetNamedPipeSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As NetNamedPipeSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding(System::ServiceModel::NetNamedPipeSecurityMode securityMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.NetNamedPipeSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode"><span data-ttu-id="cc959-116">指定 Windows 安全性是否搭配具名管道一起使用的 <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc959-116">The <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> value that specifies whether Windows security is used with named pipes.</span></span></param>
        <summary><span data-ttu-id="cc959-117">使用指定的安全性模式，初始化 <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="cc959-117">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified security mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-118">當您設定安全性時，請明確使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="cc959-118">Use this constructor when you want to configure the security explicitly.</span></span> <span data-ttu-id="cc959-119">當使用預設建構函式時，預設為 <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport>。</span><span class="sxs-lookup"><span data-stu-id="cc959-119">The default is <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport> when using the default constructor.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding(System::String ^ configurationName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName"><span data-ttu-id="cc959-120">[netNamedPipeBinding 項目](~/docs/framework/configure-apps/file-schema/wcf/netnamedpipebinding.md) 的繫結組態名稱。</span><span class="sxs-lookup"><span data-stu-id="cc959-120">The binding configuration name for the [netNamedPipeBinding Element](~/docs/framework/configure-apps/file-schema/wcf/netnamedpipebinding.md).</span></span></param>
        <summary><span data-ttu-id="cc959-121">使用指定的組態名稱，初始化 <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="cc959-121">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified configuration name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-122">如果您要透過組態來初始化繫結設定，請使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="cc959-122">Use this constructor when you want to initialize the binding settings from configuration.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc959-123">建立含有繫結之繫結項目的集合。</span><span class="sxs-lookup"><span data-stu-id="cc959-123">Creates a collection with the binding elements for the binding.</span></span></summary>
        <returns><span data-ttu-id="cc959-124">組成繫結且型別為 <see cref="T:System.Collections.Generic.ICollection`1" /> 的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-124">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-125">取得 SOAP 的版本，用於由此繫結處理的訊息。</span><span class="sxs-lookup"><span data-stu-id="cc959-125">Gets the version of SOAP that is used for messages processed by this binding.</span></span></summary>
        <value>
          <span data-ttu-id="cc959-126"><see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-126"><see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-127">SOAP 1.2 必須搭配此繫結使用。</span><span class="sxs-lookup"><span data-stu-id="cc959-127">SOAP 1.2 must be used with this binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-128">下列範例會示範如何取得 SOAP 的版本。</span><span class="sxs-lookup"><span data-stu-id="cc959-128">The following example shows how to get the version of SOAP.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-129">取得或設定值，這個值會指出在比對 URI 時此主機名稱是否會用來取用服務。</span><span class="sxs-lookup"><span data-stu-id="cc959-129">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span></span></summary>
        <value><span data-ttu-id="cc959-130"><see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 值，指出在比對 URI 時此主機名稱是否會用來存取服務。</span><span class="sxs-lookup"><span data-stu-id="cc959-130">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching the URI.</span></span> <span data-ttu-id="cc959-131">預設值為 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />，表示比對時忽略主機名稱。</span><span class="sxs-lookup"><span data-stu-id="cc959-131">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc959-132">下列範例會示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="cc959-132">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode%2A> property.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-133">取得或設定記憶體中用於緩衝傳入訊息的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="cc959-133">Gets or sets the maximum number of bytes that are used to buffer incoming messages in memory.</span></span></summary>
        <value><span data-ttu-id="cc959-134">記憶體中用於緩衝傳入訊息的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="cc959-134">The maximum number of bytes that are used to buffer incoming messages in memory.</span></span> <span data-ttu-id="cc959-135">預設值為 524,288 個位元組。</span><span class="sxs-lookup"><span data-stu-id="cc959-135">The default value is 524,288 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-136">如果您接收超出可以緩衝的資料，則超出緩衝大小的資料會保留在基礎通訊端中，直到緩衝區再度有空間可存放其他資料為止。</span><span class="sxs-lookup"><span data-stu-id="cc959-136">If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-137">下列範例會示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="cc959-137">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-138">取得或設定記憶體中用於緩衝傳入訊息的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="cc959-138">Gets or sets the maximum number of bytes used to buffer incoming messages in memory.</span></span></summary>
        <value><span data-ttu-id="cc959-139">記憶體中用於緩衝傳入訊息的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="cc959-139">The maximum number of bytes that are used to buffer incoming messages in memory.</span></span> <span data-ttu-id="cc959-140">預設值為 65,536 位元組。</span><span class="sxs-lookup"><span data-stu-id="cc959-140">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-141">如果您接收超出可以緩衝的資料，則超出緩衝大小的資料會保留在基礎通訊端中，直到緩衝區再度有空間可存放其他資料為止。</span><span class="sxs-lookup"><span data-stu-id="cc959-141">If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-142">下列範例會示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="cc959-142">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc959-143">設定的值小於 0。</span><span class="sxs-lookup"><span data-stu-id="cc959-143">The value set is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxConnections">
      <MemberSignature Language="C#" Value="public int MaxConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnections" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-144">取得或設定允許具名管道繫結設定端點允許的連線數量上限，傳入和傳出都納入計算。</span><span class="sxs-lookup"><span data-stu-id="cc959-144">Gets or sets the maximum number of connections, both inbound and outbound, that are allowed to endpoints configured with the named pipe binding.</span></span></summary>
        <value><span data-ttu-id="cc959-145">此繫結允許之具名管道連線數量上限。</span><span class="sxs-lookup"><span data-stu-id="cc959-145">The maximum number of named pipe connections that are allowed with this binding.</span></span> <span data-ttu-id="cc959-146">預設值為 10。</span><span class="sxs-lookup"><span data-stu-id="cc959-146">The default value is 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-147">傳入連線數量上限與傳出連線數量上限設為相同的值。</span><span class="sxs-lookup"><span data-stu-id="cc959-147">The maximum number of inbound and the maximum number of outbound connections are set to the same value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-148">下列範例會示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.MaxConnections%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="cc959-148">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxConnections%2A> values.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-149">取得或設定由繫結處理之接收訊息的大小上限 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="cc959-149">Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.</span></span></summary>
        <value><span data-ttu-id="cc959-150">由繫結處理之接收訊息的大小上限，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="cc959-150">The maximum size (in bytes) for a received message that is processed by the binding.</span></span> <span data-ttu-id="cc959-151">預設值為 65,536 位元組。</span><span class="sxs-lookup"><span data-stu-id="cc959-151">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc959-152">下列範例會示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="cc959-152">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-153">取得或設定 SOAP 訊息複雜性的條件約束，而這些條件約束可由以此繫結所設定的端點處理。</span><span class="sxs-lookup"><span data-stu-id="cc959-153">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="cc959-154"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" />，指定已交換之 SOAP 訊息的複雜度條件約束。</span><span class="sxs-lookup"><span data-stu-id="cc959-154">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged.</span></span> <span data-ttu-id="cc959-155">接下來的「備註」一節提供了這些條件約束的預設值。</span><span class="sxs-lookup"><span data-stu-id="cc959-155">The default values for these constraints are provided in the following Remarks section.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-156">複雜性條件約束可以防止嘗試使用訊息複雜性困住端點處理資源的阻絕服務 (DOS) 攻擊類別。</span><span class="sxs-lookup"><span data-stu-id="cc959-156">The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="cc959-157">表示這些條件約束及其預設值的屬性包括：</span><span class="sxs-lookup"><span data-stu-id="cc959-157">The properties that express these constraints and their default values are as follows:</span></span>  
  
-   <span data-ttu-id="cc959-158"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span><span class="sxs-lookup"><span data-stu-id="cc959-158"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span></span>  
  
-   <span data-ttu-id="cc959-159"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span><span class="sxs-lookup"><span data-stu-id="cc959-159"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span></span>  
  
-   <span data-ttu-id="cc959-160"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="cc959-160"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span></span>  
  
-   <span data-ttu-id="cc959-161"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span><span class="sxs-lookup"><span data-stu-id="cc959-161"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span></span>  
  
-   <span data-ttu-id="cc959-162"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="cc959-162"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-163">下列範例將示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas%2A> 物件。</span><span class="sxs-lookup"><span data-stu-id="cc959-163">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas%2A> object.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc959-164">設定的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-164">The value set is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-165">取得使用這項繫結所設定之通道與接聽程式的 URI 傳輸配置。</span><span class="sxs-lookup"><span data-stu-id="cc959-165">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span></span></summary>
        <value><span data-ttu-id="cc959-166">傳回 "net.pipe"。</span><span class="sxs-lookup"><span data-stu-id="cc959-166">Returns "net.pipe".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc959-167">下列範例會示範如何取得 URI 傳輸配置。</span><span class="sxs-lookup"><span data-stu-id="cc959-167">The following example shows how to get the URI transport scheme.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.NetNamedPipeSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.NetNamedPipeSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As NetNamedPipeSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::NetNamedPipeSecurity ^ Security { System::ServiceModel::NetNamedPipeSecurity ^ get(); void set(System::ServiceModel::NetNamedPipeSecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.NetNamedPipeSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-168">取得物件，指定與此繫結所設定之服務共用的安全性類型。</span><span class="sxs-lookup"><span data-stu-id="cc959-168">Gets an object that specifies the type of security used with services configured with this binding.</span></span></summary>
        <value><span data-ttu-id="cc959-169">搭配此繫結使用的 <see cref="T:System.ServiceModel.NetNamedPipeSecurity" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-169">The <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> that is used with this binding.</span></span> <span data-ttu-id="cc959-170">預設值是 <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-170">The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-171"><xref:System.ServiceModel.NetNamedPipeSecurity> 提供 <xref:System.ServiceModel.NetNamedPipeBinding>可使用的安全性類型與設定。</span><span class="sxs-lookup"><span data-stu-id="cc959-171">The <xref:System.ServiceModel.NetNamedPipeSecurity> provides the types of security and settings available to the <xref:System.ServiceModel.NetNamedPipeBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-172">下列範例會示範如何取得與此繫結搭配使用的安全性類型。</span><span class="sxs-lookup"><span data-stu-id="cc959-172">The following example shows how to get the type of security to be used with this binding.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMaxConnections">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMaxConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMaxConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeMaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMaxConnections () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMaxConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc959-173">傳回值，這個值表示 <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> 屬性是否已變更為非預設值且應該序列化。</span><span class="sxs-lookup"><span data-stu-id="cc959-173">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="cc959-174">如果應序列化 <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> 屬性值，則為 <see langword="True" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-174"><see langword="True" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc959-175">傳回值，這個值表示 <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> 屬性是否已變更為非預設值且應該序列化。</span><span class="sxs-lookup"><span data-stu-id="cc959-175">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span></span> <span data-ttu-id="cc959-176">這項資訊會由 WCF 用於 XAML 整合。</span><span class="sxs-lookup"><span data-stu-id="cc959-176">This is used by WCF for XAML integration.</span></span></summary>
        <returns>
          <span data-ttu-id="cc959-177">如果應序列化 <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-177"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc959-178">傳回值，這個值表示 <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> 屬性是否已變更為非預設值且應該序列化。</span><span class="sxs-lookup"><span data-stu-id="cc959-178">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> property has changed from its default value and should be serialized.</span></span> <span data-ttu-id="cc959-179">這項資訊會由 WCF 用於 XAML 整合。</span><span class="sxs-lookup"><span data-stu-id="cc959-179">This is used by WCF for XAML integration.</span></span></summary>
        <returns>
          <span data-ttu-id="cc959-180">如果應序列化 <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-180"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionProtocol">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionProtocol () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionProtocol();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc959-181">傳回值，這個值表示 <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> 屬性是否已變更為非預設值且應該序列化。</span><span class="sxs-lookup"><span data-stu-id="cc959-181">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> property has changed from its default value and should be serialized.</span></span> <span data-ttu-id="cc959-182">這項資訊會由 WCF 用於 XAML 整合。</span><span class="sxs-lookup"><span data-stu-id="cc959-182">This is used by WCF for XAML integration.</span></span></summary>
        <returns>
          <span data-ttu-id="cc959-183">如果應序列化 <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-183"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-184">取得值，這個值表示要以同步或非同步方式處理傳入要求。</span><span class="sxs-lookup"><span data-stu-id="cc959-184">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span></span></summary>
        <value>
          <span data-ttu-id="cc959-185"><see langword="false" /> 表示傳入要求以非同步處理。</span><span class="sxs-lookup"><span data-stu-id="cc959-185"><see langword="false" /> to indicate that the incoming requests are handled asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc959-186">下列範例會示範部分組態檔，其中包含值設為預設值之 <xref:System.ServiceModel.NetNamedPipeBinding> 的區段。</span><span class="sxs-lookup"><span data-stu-id="cc959-186">The following example shows the part of the configuration file that contains the section for the <xref:System.ServiceModel.NetNamedPipeBinding> with values set to defaults.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-187">取得或設定值，這個值會判斷交易是否應流動至服務。</span><span class="sxs-lookup"><span data-stu-id="cc959-187">Gets or sets a value that determines whether transactions should be flowed to the service.</span></span></summary>
        <value>
          <span data-ttu-id="cc959-188">如果用戶端的交易應流向服務，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-188"><see langword="true" /> if the client’s transactions should be flowed to the service; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cc959-189">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-189">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-190"><xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> 屬性可讓您指定此繫結是否應支援下列交易。</span><span class="sxs-lookup"><span data-stu-id="cc959-190">The <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> property enables you to specify whether this binding should support flowing transactions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-191">下列範例會示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="cc959-191">The following example shows how to get the value of <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> the binding.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-192">取得或設定服務用來使交易流動的交易通訊協定。</span><span class="sxs-lookup"><span data-stu-id="cc959-192">Gets or sets the transactions protocol used by the service to flow transactions.</span></span></summary>
        <value><span data-ttu-id="cc959-193">服務用來流動交易的 <see cref="T:System.ServiceModel.TransactionProtocol" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-193">The <see cref="T:System.ServiceModel.TransactionProtocol" /> used by the service to flow transactions.</span></span> <span data-ttu-id="cc959-194">預設通訊協定為 <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-194">The default protocol is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-195">WS-Atomic 交易通訊協定也可藉由設定 <xref:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004%2A> 值來使用。</span><span class="sxs-lookup"><span data-stu-id="cc959-195">The WS-Atomic Transaction protocol can also be used by setting the <xref:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-196">下列範例將示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol%2A> 物件。</span><span class="sxs-lookup"><span data-stu-id="cc959-196">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol%2A> object.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc959-197">取得或設定值，這個值會指出以繫結設定的服務使用訊息傳輸的資料流處理模式 (單一或雙向) 或緩衝處理模式。</span><span class="sxs-lookup"><span data-stu-id="cc959-197">Gets or sets a value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer.</span></span></summary>
        <value><span data-ttu-id="cc959-198"><see cref="T:System.ServiceModel.TransferMode" /> 值，指出以繫結設定的服務使用訊息傳輸的資料流處理模式 (單一或雙向) 或緩衝處理模式。</span><span class="sxs-lookup"><span data-stu-id="cc959-198">The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer.</span></span> <span data-ttu-id="cc959-199">預設值為 <see cref="F:System.ServiceModel.TransferMode.Buffered" />。</span><span class="sxs-lookup"><span data-stu-id="cc959-199">The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc959-200">指定 <xref:System.ServiceModel.TransferMode.StreamedRequest> 或 <xref:System.ServiceModel.TransferMode.StreamedResponse>，有可能只對傳入或傳出訊息進行資料流處理。</span><span class="sxs-lookup"><span data-stu-id="cc959-200">It is possible to stream only the incoming or the outgoing messages by specifying, respectively, <xref:System.ServiceModel.TransferMode.StreamedRequest> or <xref:System.ServiceModel.TransferMode.StreamedResponse>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc959-201">下列範例會示範如何取得 <xref:System.ServiceModel.NetNamedPipeBinding.TransferMode%2A>。</span><span class="sxs-lookup"><span data-stu-id="cc959-201">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.TransferMode%2A>.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>