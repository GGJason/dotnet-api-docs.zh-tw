<Type Name="EndpointAddress" FullName="System.ServiceModel.EndpointAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bab41b85083a4923a1cafc9045baa9329198527c" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780591" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EndpointAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.EndpointAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddress" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="debbc-101">提供用戶端用來與服務端點通訊的唯一網路位址。</span>
      <span class="sxs-lookup">
        <span data-stu-id="debbc-101">Provides a unique network address that a client uses to communicate with a service endpoint.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-102">端點位址可唯一識別服務的端點。</span><span class="sxs-lookup"><span data-stu-id="debbc-102">An endpoint address uniquely identifies the endpoint for a service.</span></span>  
  
 <span data-ttu-id="debbc-103">端點位址屬於服務端點，其中也包含端點的繫結、合約及行為。</span><span class="sxs-lookup"><span data-stu-id="debbc-103">The endpoint address belongs to the service endpoint, which also contains the binding, contract and behaviors for the endpoint.</span></span>  
  
 <span data-ttu-id="debbc-104"><xref:System.ServiceModel.EndpointAddress> 包含 URI 和位址屬性，其中包括身分識別、WSDL 項目和選擇性標頭的集合。</span><span class="sxs-lookup"><span data-stu-id="debbc-104">The <xref:System.ServiceModel.EndpointAddress> contains a URI and address properties that include an identity, WSDL elements, and a collection of optional headers.</span></span> <span data-ttu-id="debbc-105">選擇性標頭會用於提供額外的詳細位址資訊，以便識別端點或與端點互動。</span><span class="sxs-lookup"><span data-stu-id="debbc-105">The optional headers are used to provide additional, more detailed addressing information to identify or interact with the endpoint.</span></span> <span data-ttu-id="debbc-106">例如，當有多個可用的執行個體時，它們可以用於指出要使用哪一個服務執行個體來處理來自特定使用者的傳入訊息。</span><span class="sxs-lookup"><span data-stu-id="debbc-106">For example, they can be used to indicate which instance of a service is to be used to process an incoming message from a particular user when multiple instances are available.</span></span>  
  
 <span data-ttu-id="debbc-107">您可以強制使用程式碼，或是透過組態以宣告的形式來指定服務的端點位址。</span><span class="sxs-lookup"><span data-stu-id="debbc-107">The endpoint address for a service can be specified either imperatively using code or declaratively through configuration.</span></span> <span data-ttu-id="debbc-108">在程式碼中定義端點通常不太實用，因為部署之服務的繫結和位址通常與開發服務時所使用的繫結和位址不同。</span><span class="sxs-lookup"><span data-stu-id="debbc-108">Defining endpoints in code is usually not practical because the bindings and addresses for a deployed service are typically different from those used while the service is being developed.</span></span> <span data-ttu-id="debbc-109">它會比較實際定義服務端點使用的組態。</span><span class="sxs-lookup"><span data-stu-id="debbc-109">It is more practical to define service endpoints using configuration.</span></span>  
  
 <span data-ttu-id="debbc-110"><xref:System.ServiceModel.EndpointAddress> 不會實作 <xref:System.Runtime.Serialization.ISerializable> 介面，因此無法加以序列化。</span><span class="sxs-lookup"><span data-stu-id="debbc-110"><xref:System.ServiceModel.EndpointAddress> does not implement the <xref:System.Runtime.Serialization.ISerializable> interface and so is not serializable.</span></span> <span data-ttu-id="debbc-111">如果是要公開成為服務合約一部分的端點，它必須是可序列化，而且必須符合 Web 服務定址 (WS-Addressing) 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="debbc-111">For an endpoint to be exposed as part of a service contract it must be serializable and it must also be compliant with the Web Service Addressing (WS-Addressing) protocol.</span></span> <span data-ttu-id="debbc-112"><xref:System.ServiceModel.EndpointAddress10> 和 <xref:System.ServiceModel.EndpointAddressAugust2004> 類別會分別提供符合 WS-Addressing 的 1.0 版本和 August 2004 版本標準的可序列化端點。</span><span class="sxs-lookup"><span data-stu-id="debbc-112">Serializable endpoints that are compliant with version 1.0 and the August 2004 version of WS-Addressing are provided, respectively, by the <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> classes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#0](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/hostapplication.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-113">初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-113">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(System::String ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="debbc-114">識別端點的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-114">The URI that identifies the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-115">使用指定的 URI 字串，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-115">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#13](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, params System.ServiceModel.Channels.AddressHeader[] addressHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.Channels.AddressHeader[] addressHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, ... cli::array &lt;System::ServiceModel::Channels::AddressHeader ^&gt; ^ addressHeaders);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="addressHeaders" Type="System.ServiceModel.Channels.AddressHeader[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="debbc-116">識別端點位置的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-116">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="addressHeaders">
          <span data-ttu-id="debbc-117">型別 <see cref="T:System.Array" /> 的 <see cref="T:System.ServiceModel.Channels.AddressHeader" />，其中包含用於與端點互動的位址資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-117">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-118">使用指定的 URI 和標頭，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-118">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI and headers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="debbc-119">下列程式碼會示範這個建構函式的用法。</span><span class="sxs-lookup"><span data-stu-id="debbc-119">The following code shows the use of this constructor.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, params System.ServiceModel.Channels.AddressHeader[] addressHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeader[] addressHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, ... cli::array &lt;System::ServiceModel::Channels::AddressHeader ^&gt; ^ addressHeaders);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="addressHeaders" Type="System.ServiceModel.Channels.AddressHeader[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="debbc-120">識別端點位置的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-120">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="debbc-121">端點的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-121">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </param>
        <param name="addressHeaders">
          <span data-ttu-id="debbc-122">型別 <see cref="T:System.Array" /> 的 <see cref="T:System.ServiceModel.Channels.AddressHeader" />，其中包含用於與端點互動的位址資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-122">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-123">使用指定的 URI、身分識別和標頭，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-123">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and headers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="debbc-124">下列程式碼將示範如何建構包含 <xref:System.ServiceModel.EndpointAddress>, <xref:System.Uri> 的 <xref:System.ServiceModel.EndpointIdentity> 物件，以及 <xref:System.ServiceModel.Channels.AddressHeader> 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="debbc-124">The following code shows how to construct an <xref:System.ServiceModel.EndpointAddress> object with a <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> and an array of <xref:System.ServiceModel.Channels.AddressHeader> objects.</span></span>  
  
 [!code-csharp[EndpointAddress#2](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, System.ServiceModel.Channels.AddressHeaderCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeaderCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, System::ServiceModel::Channels::AddressHeaderCollection ^ headers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="headers" Type="System.ServiceModel.Channels.AddressHeaderCollection" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="debbc-125">識別端點位置的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-125">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="debbc-126">端點的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-126">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="debbc-127">
            <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />，其中包含用於與端點互動的位址資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-127">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-128">使用指定的 URI、身分識別和標頭集合，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-128">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and header collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="debbc-129">下列程式碼將示範如何建構包含 <xref:System.ServiceModel.EndpointAddress> 和 <xref:System.Uri> 的 <xref:System.ServiceModel.EndpointIdentity> 物件，以及 <xref:System.ServiceModel.Channels.AddressHeaderCollection> 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="debbc-129">The following code shows how to construct a <xref:System.ServiceModel.EndpointAddress> object with a <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> and an <xref:System.ServiceModel.Channels.AddressHeaderCollection> object.</span></span>  
  
 [!code-csharp[EndpointAddress#3](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, System.ServiceModel.Channels.AddressHeaderCollection headers, System.Xml.XmlDictionaryReader metadataReader, System.Xml.XmlDictionaryReader extensionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeaderCollection headers, class System.Xml.XmlDictionaryReader metadataReader, class System.Xml.XmlDictionaryReader extensionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, System::ServiceModel::Channels::AddressHeaderCollection ^ headers, System::Xml::XmlDictionaryReader ^ metadataReader, System::Xml::XmlDictionaryReader ^ extensionReader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="headers" Type="System.ServiceModel.Channels.AddressHeaderCollection" />
        <Parameter Name="metadataReader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="extensionReader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="debbc-130">識別端點位置的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-130">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="debbc-131">端點的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-131">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="debbc-132">
            <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />，其中包含用於與端點互動的位址資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-132">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</span>
          </span>
        </param>
        <param name="metadataReader">
          <span data-ttu-id="debbc-133">從其中取得端點中繼資料的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-133">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint metadata is obtained.</span>
          </span>
        </param>
        <param name="extensionReader">
          <span data-ttu-id="debbc-134">從其中取得延伸的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-134">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which extensions are obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-135">使用指定的 URI、身分識別、標頭集合以及中繼資料和延伸讀取器，初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-135">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, header collection, and metadata and extension readers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-136">WS-Addressing 規格允許任意延伸項目出現在可使用 <xref:System.Xml.XmlDictionaryReader> 取得的端點參考 (EPR) 尾端。</span><span class="sxs-lookup"><span data-stu-id="debbc-136">The WS-Addressing specification allows for arbitrary extension elements to appear at the end of an Endpoint Reference (EPR) that can be obtained using an <xref:System.Xml.XmlDictionaryReader>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="debbc-137">下列程式碼會示範如何具現化會指定 <xref:System.ServiceModel.EndpointAddress>、<xref:System.Uri>、標頭集合、中繼資料 <xref:System.ServiceModel.EndpointIdentity> 和延伸 <xref:System.Xml.XmlDictionaryReader> 的 <xref:System.Xml.XmlDictionaryReader>：</span><span class="sxs-lookup"><span data-stu-id="debbc-137">The following code shows how to instantiate a <xref:System.ServiceModel.EndpointAddress> that specifies a <xref:System.Uri>, an <xref:System.ServiceModel.EndpointIdentity>, a headers collection, a metadata <xref:System.Xml.XmlDictionaryReader> and an extension <xref:System.Xml.XmlDictionaryReader>.</span></span>  
  
 [!code-csharp[EndpointAddress#6](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousUri">
      <MemberSignature Language="C#" Value="public static Uri AnonymousUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri AnonymousUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.AnonymousUri" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AnonymousUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ AnonymousUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-138">取得匿名 URI 的中性版本表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-138">Gets a version-neutral representation of the anonymous URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="debbc-139">A<see cref="T:System.Uri" />值http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-139">A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-140">如果用於初始化建構函式之 URI 的值為 <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A>，則 <xref:System.ServiceModel.EndpointAddress.IsAnonymous%2A> 會設定為 `true`。</span><span class="sxs-lookup"><span data-stu-id="debbc-140">If the value of the URI used to initialize the constructor is the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A>, then <xref:System.ServiceModel.EndpointAddress.IsAnonymous%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="debbc-141"><xref:System.ServiceModel.EndpointAddress> 是中性版本的類別，而 <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> 屬性會傳回中性表示的值。</span><span class="sxs-lookup"><span data-stu-id="debbc-141"><xref:System.ServiceModel.EndpointAddress> is a version-neutral class and the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> property returns a value is a neutral representation.</span></span> <span data-ttu-id="debbc-142">當您將它寫出或轉換為某種版本時，它就會成為該版本的正確值。</span><span class="sxs-lookup"><span data-stu-id="debbc-142">When you write this out or convert this to one version or the other, then it turns into the right value for that version.</span></span>  
  
 <span data-ttu-id="debbc-143">由於目前網路技術的使用範圍極為廣泛 (例如，NAT、DHCP 和防火牆)，因此許多部署都無法為指定的端點指派有意義的全域 URI。</span><span class="sxs-lookup"><span data-stu-id="debbc-143">Due to the range of network technologies currently in widespread use (for example, NAT, DHCP, and firewalls), many deployments cannot assign a meaningful global URI to a given endpoint.</span></span> <span data-ttu-id="debbc-144">若要允許這些*匿名*端點，以起始訊息交換模式，並收到回覆，Web 服務定址的規格會定義[URI](http://go.microsoft.com/fwlink/?LinkId=96169)不能在穩定、 之端點所使用可解析的 URI。</span><span class="sxs-lookup"><span data-stu-id="debbc-144">To allow these *anonymous* endpoints to initiate message exchange patterns and receive replies, the Web Services Addressing specification defines a [URI](http://go.microsoft.com/fwlink/?LinkId=96169) for use by endpoints that cannot have a stable, resolvable URI.</span></span>  
  
 <span data-ttu-id="debbc-145">使用這個位址的要求，必須提供某種機制以傳遞回覆或錯誤 (例如，傳回在相同傳輸連線上的回覆)。</span><span class="sxs-lookup"><span data-stu-id="debbc-145">Requests that use this address must provide some mechanism for delivering replies or faults (for example, returning the reply on the same transport connection).</span></span> <span data-ttu-id="debbc-146">這種機制可以是要求/回覆傳輸通訊協定 (例如，HTTP GET 或 POST)。</span><span class="sxs-lookup"><span data-stu-id="debbc-146">This mechanism can be a request/reply transport protocol (for example, HTTP GET or POST).</span></span> <span data-ttu-id="debbc-147">這個 URI 可以用來做為回覆訊息的目的地，但是不可做為其他情況下的目的地。</span><span class="sxs-lookup"><span data-stu-id="debbc-147">This URI can be used as the destination for reply messages and should not be used as the destination in other circumstances.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#13](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public void ApplyTo (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyTo(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTo(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="debbc-148">正在指派其標頭值的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-148">The <see cref="T:System.ServiceModel.Channels.Message" /> whose header values are being assigned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-149">將端點位址的 URI 和屬性指派給已指定訊息的標頭值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-149">Assigns the URI and properties of the endpoint address to the values of the headers of a specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-150"><xref:System.ServiceModel.EndpointAddress.ApplyTo%28System.ServiceModel.Channels.Message%29> 方法會將訊息的 "To" 設定成目前 <xref:System.ServiceModel.EndpointAddress.Uri%2A> 的 <xref:System.ServiceModel.EndpointAddress>。</span><span class="sxs-lookup"><span data-stu-id="debbc-150">The <xref:System.ServiceModel.EndpointAddress.ApplyTo%28System.ServiceModel.Channels.Message%29> method sets the "To" of the message with the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the current <xref:System.ServiceModel.EndpointAddress>.</span></span> <span data-ttu-id="debbc-151">請記住，在此處的 "ApplyTo" 意指「將這個位址套用至訊息的 'To' 標頭」。</span><span class="sxs-lookup"><span data-stu-id="debbc-151">Remember that "ApplyTo" means here "apply this address to the 'To' header of the message".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="debbc-152">下列程式碼會示範如何將端點位址的 URI 和屬性套用至訊息的標頭。</span><span class="sxs-lookup"><span data-stu-id="debbc-152">The following code shows how to apply the URI and properties of an endpoint address to the headers of a message.</span></span>  
  
 [!code-csharp[EndpointAddress#4](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="debbc-153">
            <paramref name="message" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-153">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="debbc-154">要與目前端點位址比較的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-154">The <see cref="T:System.Object" /> to be compared to the current endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-155">傳回值，這個值會指出指定的物件是否相等於目前的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-155">Returns a value that indicates whether a specified object is equivalent to the current endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-156">如果指定的物件相等於目前位址，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-156">
              <see langword="true" /> if the specified object is equivalent to the current address; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#20](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="debbc-157">提供目前端點位址的唯一雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-157">Provides a unique hash code for the current endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-158">目前端點位址的唯一雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-158">A unique hash code for the current endpoint address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-159"><xref:System.ServiceModel.EndpointAddress.GetHashCode%2A> 適合用於雜湊演算法以及搭配資料結構 (例如雜湊資料表) 使用。</span><span class="sxs-lookup"><span data-stu-id="debbc-159"><xref:System.ServiceModel.EndpointAddress.GetHashCode%2A> is suitable for use in hashing algorithms and with data structures such as a hash table.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#21](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderAtExtensions">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReader GetReaderAtExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDictionaryReader GetReaderAtExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReaderAtExtensions () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDictionaryReader ^ GetReaderAtExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="debbc-160">取得可提供存取延伸的 XML 字典讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-160">Gets the XML dictionary reader that provides access to the extensions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-161">可提供存取延伸的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-161">The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the extensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-162">此讀取器可存取 WS-Addressing 定義的端點參考模型中所沒有包含的資訊。</span><span class="sxs-lookup"><span data-stu-id="debbc-162">The reader provides access to the information that is not contained in the model of the endpoint reference defined by WS-Addressing.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#7](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderAtMetadata">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReader GetReaderAtMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDictionaryReader GetReaderAtMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReaderAtMetadata () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDictionaryReader ^ GetReaderAtMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="debbc-163">取得可提供存取端點之中繼資料的 XML 字典讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-163">Gets the XML dictionary reader that provides access to the metadata for an endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-164">可提供存取端點之中繼資料的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-164">The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the metadata for an endpoint.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#8](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.AddressHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.AddressHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As AddressHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::AddressHeaderCollection ^ Headers { System::ServiceModel::Channels::AddressHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.AddressHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-165">取得產生器 (Builder) 可建立之端點位址標頭的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-165">Gets the collection of address headers for the endpoints that the builder can create.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="debbc-166">包含端點之位址資訊的 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-166">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information for the endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#14](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointIdentity ^ Identity { System::ServiceModel::EndpointIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-167">取得用於驗證之端點的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-167">Gets the identity for the endpoint used to authenticate it.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="debbc-168">端點的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-168">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-169">提供身分識別，以便讓其他端點與此端點交換訊息時啟用端點驗證。</span><span class="sxs-lookup"><span data-stu-id="debbc-169">Provides an identity that enables the authentication of an endpoint by other endpoints that exchange messages with it.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#15](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-170">取得值，這個值會指出端點是否為「匿名」。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-170">Gets a value that indicates whether the endpoint is *anonymous*.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="debbc-171">如果端點為 <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-171">
              <see langword="true" /> if the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-172">使用這個方法，即可在從 <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> 將 URI 手動複製到 <xref:System.ServiceModel.EndpointAddress> 或 <xref:System.ServiceModel.EndpointAddress10> 的 URI 時檢查 <xref:System.ServiceModel.EndpointAddressAugust2004>。</span><span class="sxs-lookup"><span data-stu-id="debbc-172">Use this method to check for the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> when manually copying the URI from an <xref:System.ServiceModel.EndpointAddress> to the URI of either a <xref:System.ServiceModel.EndpointAddress10> or a <xref:System.ServiceModel.EndpointAddressAugust2004>.</span></span> <span data-ttu-id="debbc-173">這項作業一定要完成，因為 <xref:System.ServiceModel.EndpointAddress10> 和 <xref:System.ServiceModel.EndpointAddressAugust2004> 都有特別的匿名值。</span><span class="sxs-lookup"><span data-stu-id="debbc-173">This must be done because both <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> have special anonymous values.</span></span> <span data-ttu-id="debbc-174">如果正在複製匿名的 URI，使用者就必須使用這些值。</span><span class="sxs-lookup"><span data-stu-id="debbc-174">Users must use these values if the URI being copied is anonymous.</span></span>  
  
 <span data-ttu-id="debbc-175">由於目前網路技術的使用範圍極為廣泛 (例如，NAT、DHCP 和防火牆)，因此許多部署都無法為指定的端點指派有意義的全域 URI。</span><span class="sxs-lookup"><span data-stu-id="debbc-175">Due to the range of network technologies currently in widespread use (for example, NAT, DHCP, and firewalls), many deployments cannot assign a meaningful global URI to a given endpoint.</span></span> <span data-ttu-id="debbc-176">若要允許這些*匿名*端點，以起始訊息交換模式，並收到回覆，Web 服務定址的規格會定義[URI](http://go.microsoft.com/fwlink/?LinkId=96169)不能在穩定、 之端點所使用可解析的 URI。</span><span class="sxs-lookup"><span data-stu-id="debbc-176">To allow these *anonymous* endpoints to initiate message exchange patterns and receive replies, the Web Services Addressing specification defines a [URI](http://go.microsoft.com/fwlink/?LinkId=96169) for use by endpoints that cannot have a stable, resolvable URI.</span></span>  
  
 <span data-ttu-id="debbc-177">使用這個位址的要求，必須提供某種機制以傳遞回覆或錯誤 (例如，傳回在相同傳輸連線上的回覆)。</span><span class="sxs-lookup"><span data-stu-id="debbc-177">Requests that use this address must provide some mechanism for delivering replies or faults (for example, returning the reply on the same transport connection).</span></span> <span data-ttu-id="debbc-178">這種機制可以是要求/回覆傳輸通訊協定 (例如，HTTP GET 或 POST)。</span><span class="sxs-lookup"><span data-stu-id="debbc-178">This mechanism can be a request/reply transport protocol (for example, HTTP GET or POST).</span></span> <span data-ttu-id="debbc-179">這個 URI 可以用來做為回覆訊息的目的地，但是不可做為其他情況下的目的地。</span><span class="sxs-lookup"><span data-stu-id="debbc-179">This URI can be used as the destination for reply messages and should not be used as the destination in other circumstances.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#16](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNone">
      <MemberSignature Language="C#" Value="public bool IsNone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNone" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.IsNone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNone { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-180">取得值，這個值會指出端點的 URI 是否為 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-180">Gets a value that indicates whether the URI for the endpoint is the <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="debbc-181">如果端點的 URI 為 <see langword="true" />，則為 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-181">
              <see langword="true" /> if the URI of the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-182">使用這個方法，即可在從 <xref:System.ServiceModel.EndpointAddress.NoneUri%2A> 將 URI 手動複製到 <xref:System.ServiceModel.EndpointAddress> 或 <xref:System.ServiceModel.EndpointAddress10> 的 URI 時檢查 <xref:System.ServiceModel.EndpointAddressAugust2004>。</span><span class="sxs-lookup"><span data-stu-id="debbc-182">Use this method to check for the <xref:System.ServiceModel.EndpointAddress.NoneUri%2A> when manually copying the URI from an <xref:System.ServiceModel.EndpointAddress> to the URI of either a <xref:System.ServiceModel.EndpointAddress10> or a <xref:System.ServiceModel.EndpointAddressAugust2004>.</span></span> <span data-ttu-id="debbc-183">這項作業一定要完成，因為 <xref:System.ServiceModel.EndpointAddress10> 和 <xref:System.ServiceModel.EndpointAddressAugust2004> 都有特殊的無 (None) URI 值。</span><span class="sxs-lookup"><span data-stu-id="debbc-183">This must be done because both <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> have special none URI values.</span></span> <span data-ttu-id="debbc-184">如果正在複製的 URI 為無 (None)，使用者就必須使用這些值。</span><span class="sxs-lookup"><span data-stu-id="debbc-184">Users must use these values if the URI being copied is none.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#17](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoneUri">
      <MemberSignature Language="C#" Value="public static Uri NoneUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri NoneUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.NoneUri" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoneUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ NoneUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-185">取得不得對其傳送訊息之端點位址所使用的中性版本 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-185">Gets a version-neutral URI used for the address of an endpoint to which a message must not be sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="debbc-186">A<see cref="T:System.Uri" />值http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-186">A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-187">如果用於初始化建構函式之 URI 的值為 <xref:System.ServiceModel.EndpointAddress.NoneUri%2A>，則 <xref:System.ServiceModel.EndpointAddress.IsNone%2A> 會設定為 `true`。</span><span class="sxs-lookup"><span data-stu-id="debbc-187">If the value of the URI used to initialize the constructor is the <xref:System.ServiceModel.EndpointAddress.NoneUri%2A>, then <xref:System.ServiceModel.EndpointAddress.IsNone%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#18](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.ServiceModel.EndpointAddress address1, System.ServiceModel.EndpointAddress address2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.ServiceModel.EndpointAddress address1, class System.ServiceModel.EndpointAddress address2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (address1 As EndpointAddress, address2 As EndpointAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::ServiceModel::EndpointAddress ^ address1, System::ServiceModel::EndpointAddress ^ address2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address1" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="address2" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address1">
          <span data-ttu-id="debbc-188">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-188">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <param name="address2">
          <span data-ttu-id="debbc-189">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-189">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-190">傳回值，這個值會指出指定的端點位址是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-190">Returns a value that indicates whether specified endpoint addresses are not equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-191">如果端點位址是相等的，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-191">
              <see langword="true" /> if the endpoint addresses are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="debbc-192">這個運算子的對等方法是<xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="debbc-192">The equivalent method for this operator is <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 [!code-csharp[EndpointAddress#5](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.ServiceModel.EndpointAddress address1, System.ServiceModel.EndpointAddress address2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.ServiceModel.EndpointAddress address1, class System.ServiceModel.EndpointAddress address2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (address1 As EndpointAddress, address2 As EndpointAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::ServiceModel::EndpointAddress ^ address1, System::ServiceModel::EndpointAddress ^ address2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address1" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="address2" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address1">
          <span data-ttu-id="debbc-193">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-193">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <param name="address2">
          <span data-ttu-id="debbc-194">正在比較的其中一個 <see cref="T:System.ServiceModel.EndpointAddress" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-194">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-195">傳回值，這個值會指出指定的端點位址是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-195">Returns a value that indicates whether specified endpoint addresses are not equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-196">如果端點位址不是相等的，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-196">
              <see langword="true" /> if the endpoint addresses are not equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="debbc-197">這個運算子的對等方法是<xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="debbc-197">The equivalent method for this operator is <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 [!code-csharp[EndpointAddress#22](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadFrom">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-198">從指定的 XML 讀取器讀取端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-198">Reads an endpoint address from a specified XML reader.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadFrom (reader As XmlDictionaryReader) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="debbc-199">從其中取得端點位址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-199">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-200">從指定的 XML 字典讀取器讀取端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-200">Reads an endpoint address from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-201">從 XML 字典讀取器讀取的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-201">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="debbc-202">下列程式碼會示範如何從 XML 字典讀取器讀取端點位址。</span><span class="sxs-lookup"><span data-stu-id="debbc-202">The following code shows how to read an endpoint address from a XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#10](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-203">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-203">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="debbc-204">從其中取得端點位址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-204">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-205">從指定的 XML 字典讀取器讀取指定之位址版本的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-205">Reads an endpoint address for a specified address version from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-206">從 XML 字典讀取器讀取的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-206">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#25](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-207">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-207">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="debbc-208">從其中取得端點位址的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-208">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-209">從指定的 XML 讀取器讀取指定之位址版本的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-209">Reads an endpoint address for a specified address version from a specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-210">從 XML 讀取器讀取的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-210">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="debbc-211">下列程式碼會示範如何從 XML 字典讀取器讀取端點位址。</span><span class="sxs-lookup"><span data-stu-id="debbc-211">The following code shows how to read in an endpoint address from an XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#12](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.Xml.XmlDictionaryReader reader, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.Xml.XmlDictionaryReader reader, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadFrom (reader As XmlDictionaryReader, localName As XmlDictionaryString, ns As XmlDictionaryString) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::Xml::XmlDictionaryReader ^ reader, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="debbc-212">從其中取得端點位址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-212">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="debbc-213">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中會包含 XML 節點的本機名稱，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-213">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="debbc-214">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中會包含 XML 節點的命名空間，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-214">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-215">從指定的 XML 字典讀取器讀取具有指定之限定名稱的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-215">Reads an endpoint address with a specified qualified name from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-216">從 XML 字典讀取器讀取並具有限定名稱的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-216">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML dictionary reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="debbc-217">下列程式碼會示範如何從 XML 字典讀取器讀取端點位址。</span><span class="sxs-lookup"><span data-stu-id="debbc-217">The following code shows how to read in an endpoint address from an XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#11](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryReader reader, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryReader reader, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryReader ^ reader, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-218">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-218">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="debbc-219">從其中取得端點位址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-219">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="debbc-220">包含 XML 節點的本機名稱，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-220">Contains the local name for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="debbc-221">包含 XML 節點的命名空間，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-221">Contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-222">從指定的 XML 字典讀取器讀取具有所指定限定名稱之指定位址版本的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-222">Reads an endpoint address for a specified address version with a specified qualified name from a specified XML dictionary reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-223">從 XML 讀取器讀取並具有限定名稱的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-223">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#26](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlReader reader, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlReader reader, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlReader ^ reader, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-224">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-224">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="debbc-225">從其中取得端點位址的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-225">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="debbc-226">包含 XML 節點的本機名稱，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-226">Contains the local name for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="debbc-227">包含 XML 節點的命名空間，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-227">Contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-228">從指定的 XML 讀取器讀取具有所指定限定名稱之指定位址版本的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-228">Reads an endpoint address for a specified address version with a specified qualified name from a specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-229">從 XML 讀取器讀取並具有限定名稱的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-229">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#26](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="debbc-230">傳回包含在端點位址中之 URI 的標準字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-230">Returns a canonical string representation of the URI that is contained in the endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="debbc-231">識別端點的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-231">The URI that identifies the endpoint.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#27](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-232">取得端點的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-232">Gets the URI for the endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="debbc-233">端點的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-233">The <see cref="T:System.Uri" /> for the endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="debbc-234">URI 會識別訊息要傳送到何處。</span><span class="sxs-lookup"><span data-stu-id="debbc-234">The URI identifies where a message is being sent.</span></span> <span data-ttu-id="debbc-235">若要設定端點位址的 URI，請使用 <xref:System.ServiceModel.EndpointAddressBuilder.Uri%2A>。</span><span class="sxs-lookup"><span data-stu-id="debbc-235">To set a URI for an endpoint address, use <xref:System.ServiceModel.EndpointAddressBuilder.Uri%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#19](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteContentsTo">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-236">將節點的所有子節點都儲存至指定的 XML 寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-236">Saves all the child nodes of the node to the XML writer specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteContentsTo">
      <MemberSignature Language="C#" Value="public void WriteContentsTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteContentsTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteContentsTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-237">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-237">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="debbc-238">在其中儲存端點位址的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-238">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-239">將節點的所有子節點都儲存至指定的 XML 字典寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-239">Saves all the child nodes of the node to the XML dictionary writer specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#29](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="debbc-240">
            <paramref name="writer" /> 或 <paramref name="addressingVersion" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-240">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentsTo">
      <MemberSignature Language="C#" Value="public void WriteContentsTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteContentsTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteContentsTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-241">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-241">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="debbc-242">在其中儲存端點位址的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-242">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-243">將節點的所有子節點都儲存至指定的 XML 寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-243">Saves all the child nodes of the node to the XML writer specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#30](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="debbc-244">
            <paramref name="writer" /> 或 <paramref name="addressingVersion" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-244">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteTo">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="debbc-245">將指定版本的目前端點位址儲存至 XML 寫入器或 XML 字典寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-245">Saves the current endpoint address of a specified version to an XML writer or an XML dictionary writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-246">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-246">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="debbc-247">在其中儲存端點位址的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-247">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-248">將指定版本的目前端點位址儲存至指定的 XML 字典寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-248">Saves the current endpoint address of a specified version to a specified XML dictionary writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#31](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="debbc-249">
            <paramref name="writer" /> 或 <paramref name="addressingVersion" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-249">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-250">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-250">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="debbc-251">在其中儲存端點位址的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-251">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-252">將指定版本的目前端點位址儲存至指定的 XML 寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-252">Saves the current endpoint address of a specified version to a specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#32](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="debbc-253">
            <paramref name="writer" /> 或 <paramref name="addressingVersion" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-253">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer, System.Xml.XmlDictionaryString localname, System.Xml.XmlDictionaryString ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer, class System.Xml.XmlDictionaryString localname, class System.Xml.XmlDictionaryString ns) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer, System::Xml::XmlDictionaryString ^ localname, System::Xml::XmlDictionaryString ^ ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" Index="0" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" Index="1" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="localname" Type="System.Xml.XmlDictionaryString" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" Index="3" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-254">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-254">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="debbc-255">在其中儲存端點位址的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-255">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <param name="localname">To be added.</param>
        <param name="ns">
          <span data-ttu-id="debbc-256">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中會包含 XML 節點的命名空間，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-256">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-257">將指定版本的目前端點位址儲存至具有指定之命名空間和本機名稱的 XML 字典寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-257">Saves the current endpoint address of a specified version to an XML dictionary writer with a specified namespace and local name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#33](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="debbc-258">
            <paramref name="writer" />、<paramref name="addressingVersion" />、<paramref name="localName" /> 或 <paramref name="ns" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-258">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer, string localName, string ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer, string localName, string ns) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer, System::String ^ localName, System::String ^ ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer, string localname, string ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer, string localname, string ns) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer, System::String ^ localname, System::String ^ ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" Index="0" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="1" />
        <Parameter Name="localName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="localname" Type="System.String" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="addressingVersion">
          <span data-ttu-id="debbc-259">目前端點位址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-259">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="debbc-260">在其中儲存端點位址的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-260">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span>
          </span>
        </param>
        <param name="localname">To be added.</param>
        <param name="ns">
          <span data-ttu-id="debbc-261">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中會包含 XML 節點的命名空間，以便包含端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-261">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="debbc-262">將指定版本的目前端點位址儲存至具有指定之命名空間和本機名稱的 XML 寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-262">Saves the current endpoint address of a specified version to an XML writer with a specified namespace and local name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#33](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="debbc-263">
            <paramref name="writer" />、<paramref name="addressingVersion" />、<paramref name="localName" /> 或 <paramref name="ns" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="debbc-263">
              <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>