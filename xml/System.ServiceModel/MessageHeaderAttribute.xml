<Type Name="MessageHeaderAttribute" FullName="System.ServiceModel.MessageHeaderAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f96795951846e4d5cee3d3f0e6b1caa91f21b71c" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56788686" /></Metadata><TypeSignature Language="C#" Value="public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageHeaderAttribute extends System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageHeaderAttribute&#xA;Inherits MessageContractMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageHeaderAttribute : System::ServiceModel::MessageContractMemberAttribute" />
  <TypeSignature Language="F#" Value="type MessageHeaderAttribute = class&#xA;    inherit MessageContractMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageContractMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定某個資料成員為 SOAP 訊息標頭。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.MessageHeaderAttribute> 屬性 (Attribute) 可讓您將含有 <xref:System.ServiceModel.MessageContractAttribute> 屬性 (Attribute) 標記之型別的欄位和屬性 (Property)，對應至 SOAP 訊息標頭。 欄位或屬性可以是簡單型別，或可序列化的複合型別。  
  
 如需如何控制 SOAP 本文內容的序列化，而不需修改預設 SOAP 封套本身的資訊，請參閱<xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>， [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)，和[使用資料合約](~/docs/framework/wcf/feature-details/using-data-contracts.md)。  
  
 如需建立訊息合約的詳細資訊，請參閱[Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md)。  
  
 SOAP 標準會定義下列可存在於標頭的屬性：  
  
-   `Actor` 或 `Role` (在 SOAP 1.1 中為 `Actor`，在 SOAP 1.2 中為 `Role`)  
  
-   `MustUnderstand`  
  
-   `Relay`  
  
 `Actor` 或 `Role` 屬性會指定節點的 URI，即為指定的標頭所指向的節點。 `MustUnderstand` 屬性會指定標頭是否能夠解讀節點處理。 
  `Relay` 屬性會指定標頭是否要轉送至下游節點。 Windows Communication Foundation (WCF) 不會執行任何處理傳入訊息上的這些屬性除了`MustUnderstand`屬性。  
  
 不過，您還是可以讀取和寫入這些屬性，即使根據預設它們不會送出。 您可以用兩種方式設定屬性值。 首先，您可以變更 <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> 上的 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>、<xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> 和 <xref:System.ServiceModel.MessageHeaderAttribute> 屬性 (沒有任何`Role`設定屬性-<xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>屬性和`Role`如果使用 SOAP 1.2 傳遞)。 例如：  
  
  
  
 控制這些屬性的另一種方式，是將需要的標頭型別變成 <xref:System.ServiceModel.MessageHeader%601> 類別的型別參數，並將結果型別搭配 <xref:System.ServiceModel.MessageHeaderAttribute> 一起使用。 然後，以程式設計的方式使用 <xref:System.ServiceModel.MessageHeader%601> 屬性 (Property)，來設定 SOAP 屬性 (Attribute)。 例如：  
  
  
  
  
  
 如果同時使用動態和靜態控制項機制，則靜態設定採用預設值，但可以使用動態機制來覆寫。 例如：  
  
  
  
  
  
 允許使用動態屬性控制項來建立重複標頭。 例如：  
  
```  
[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  
```  
  
 在接收端，只能使用泛型 <xref:System.ServiceModel.MessageHeader%601> 類別來讀取這些 SOAP 屬性。 您可以檢查 <xref:System.ServiceModel.MessageHeader%601.Actor%2A> 型別標頭的 <xref:System.ServiceModel.MessageHeader%601.Relay%2A>、<xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> 或 <xref:System.ServiceModel.MessageHeader%601> 屬性，探索接收到的訊息上的屬性設定。  
  
 接收到訊息並傳回訊息時，SOAP 屬性設定只會為 <xref:System.ServiceModel.MessageHeader%601> 型別的標頭而往返。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 <xref:System.ServiceModel.MessageHeaderAttribute> 為回應訊息建立 SOAP 標頭，此回應訊息的 <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>、<xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> 和 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> 屬性已設定為適用於這個標頭的值。 程式碼範例後面是所傳送的訊息範例。  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageHeaderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageHeaderAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.MessageHeaderAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : string with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 URI，這個 URI 表示此標頭的目標節點。 使用 SOAP 1.2 時，會對應到 role 標頭屬性，而使用 SOAP 1.1 則會對應到 actor 標頭屬性。</summary>
        <value>表示此標頭之目標節點的 URI。 使用 SOAP 1.2 時，這個 URI 會對應到 role 標頭屬性，而使用 SOAP 1.1 則會對應到 actor 標頭屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱 <xref:System.ServiceModel.MessageHeaderAttribute> 的＜備註＞一節。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MustUnderstand : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定扮演 <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> 角色的節點是否必須解讀這個標頭。 這會對應到 <see langword="mustUnderstand" /> SOAP 標頭屬性。</summary>
        <value>如果扮演 <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> 角色的節點必須解讀這個標頭，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱 <xref:System.ServiceModel.MessageHeaderAttribute> 的＜備註＞一節。  
  
> [!IMPORTANT]
>  請務必記住，如果所要傳送之訊息中的 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> 屬性為 `true`，而且接收端的應用程式無法解讀此標頭，就會產生錯誤。 相反地，如果使用的標頭`mustUnderstand`SOAP 標頭屬性設定為`true`收到由 Windows Communication Foundation (WCF)，它必須是訊息合約的一部分 （或必須處理必要的其中一個 Windows Communication Foundation (WCF)通道）;否則，它會假設無法解讀標頭，並擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 <xref:System.ServiceModel.MessageHeaderAttribute> 為回應訊息建立 SOAP 標頭，此回應訊息的 <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>、<xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> 和 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> 屬性已設定為適用於這個標頭的值。 程式碼範例後面是所傳送的訊息範例。  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Relay : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定這個標頭是否要轉送至下游節點。 這會對應到 <see langword="relay" /> SOAP 標頭屬性。</summary>
        <value>如果這個標頭要轉送至下游節點，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 SOAP 1.1 時，則會忽略這個屬性。 如需詳細資訊，請參閱 <xref:System.ServiceModel.MessageHeaderAttribute> 的＜備註＞一節。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>