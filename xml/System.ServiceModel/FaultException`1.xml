<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FaultException`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bc983271eecdd8b920fbd6800c5a9064ee78c641.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc983271eecdd8b920fbd6800c5a9064ee78c641</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>The serializable error detail type.</source>
          <target state="translated">可序列化的錯誤詳細類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.FaultException`1">
          <source>Used in a client application to catch contractually-specified SOAP faults.</source>
          <target state="translated">在用戶端應用程式中用於攔截以合約方式指定的 SOAP 錯誤。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>Catch the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> object in a <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client application to handle a SOAP fault that has been contractually specified in an operation contract.</source>
          <target state="translated">請攔截 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 用戶端應用程式中的 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 物件，以處理已在作業合約中以合約方式指定的 SOAP 錯誤。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>Typical deployed services use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation.</source>
          <target state="translated">一般部署的服務會使用 <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> 來正式指定所有的 SOAP 錯誤，用戶端可預期以一般正常的作業過程來接收。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>Error information in a <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> appears as a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (where the typeparameter is the serializable error object specified in the operation's <ph id="ph3">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>) when it arrives at a client application.</source>
          <target state="translated">中的錯誤資訊<ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>會顯示為<ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph>(其中參數是在作業中指定的可序列化的錯誤物件<ph id="ph3">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>) 時到達用戶端應用程式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> can be used to specify SOAP faults for both two-way service methods and for asynchronous method pairs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> 可用於指定雙向服務方法和非同步方法組的 SOAP 錯誤。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>Because <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> is both a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException&gt;</ph> and therefore a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>, to catch specified SOAP faults make sure you catch the <ph id="ph4">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> types prior to the <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> and <ph id="ph6">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> types or handle the specified exceptions in one of those exception handlers.</source>
          <target state="translated">由於 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 是 <ph id="ph2">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 因而也是 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>，如果要攔截指定的 SOAP 錯誤，請確定在 <ph id="ph4">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 和 <ph id="ph5">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 型別之前，先攔截 <ph id="ph6">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 型別，或在其中一個例外狀況處理常式中處理指定的例外狀況。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>If you use <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> to specify a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the type parameter is a <ph id="ph3">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>, the string value is assigned to the <ph id="ph4">&lt;xref:System.ServiceModel.FaultException%601.Detail%2A&gt;</ph> property in the client application; clients cannot retrieve that string by calling the <ph id="ph5">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如果您使用 <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> 來指定 <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph>，其中型別參數為 <ph id="ph3">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>，字串值會指派給用戶端應用程式中的 <ph id="ph4">&lt;xref:System.ServiceModel.FaultException%601.Detail%2A&gt;</ph> 屬性；用戶端無法藉由呼叫 <ph id="ph5">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> 方法來擷取該字串。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>To have the string value returned when the client application calls <ph id="ph1">&lt;xref:System.Exception.ToString%2A?displayProperty=nameWithType&gt;</ph>, throw a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> exception inside the operation and pass the string to the constructor.</source>
          <target state="translated">若要在用戶端應用程式呼叫 <ph id="ph1">&lt;xref:System.Exception.ToString%2A?displayProperty=nameWithType&gt;</ph> 時傳回字串值，請在該作業內擲回一個 <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> 例外狀況，並將字串傳遞給建構函式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>In general, it is recommended that detail types be custom serializable types appropriate to the fault and not a <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">一般而言，建議詳細類型為適合錯誤的自訂可序列化型別，而不是 <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>The following code example shows how a service uses the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> type to throw a managed exception that gets converted into the SOAP fault specified by the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範服務如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 型別，擲回轉換成由 <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> 所指定之 SOAP 錯誤的 Managed 例外狀況。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>The following code example shows how the client code looks when imported by the client using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
          <target state="translated">下列程式碼範例會顯示用戶端程式碼看起來時所使用的用戶端匯入<bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException`1">
          <source>The following code example shows how a client can catch the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> type that represents the custom SOAP fault specified in the operation contract.</source>
          <target state="translated">下列程式碼範例示範用戶端如何攔截 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 型別，該型別表示在作業合約中指定的自訂 SOAP 錯誤。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.FaultException`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0)">
          <source>The object used as the SOAP fault detail.</source>
          <target state="translated">當做 SOAP 錯誤詳細資料使用的物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class that uses the specified detail object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的詳細資料物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultException`1.#ctor(`0)">
          <source>The detail object must be serializable or an exception is thrown when the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> is serialized.</source>
          <target state="translated">詳細資料物件必須是可序列化的，否則會在序列化 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultException`1.#ctor(`0)">
          <source>The following code example shows how a service uses the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> type to throw a managed exception that gets converted into the SOAP fault specified by the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範服務如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 型別，擲回轉換成由 <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> 所指定之 SOAP 錯誤的 Managed 例外狀況。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization information necessary to reconstruct the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object from the <bpt id="p1">&lt;c&gt;</bpt>context<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">從 <bpt id="p1">&lt;c&gt;</bpt>context<ept id="p1">&lt;/c&gt;</ept> 重新建構 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 物件必要的序列化資訊。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The stream from which to reconstruct the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object.</source>
          <target state="translated">從其重新建構 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 物件的資料流。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class using the specified serialization information and context when deserializing a stream into a <ph id="ph2">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object.</source>
          <target state="translated">將資料流還原序列化至 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 物件時，使用指定的序列化資訊和內容，初始化 <ph id="ph2">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
          <source>The object used as the SOAP fault detail.</source>
          <target state="translated">當做 SOAP 錯誤詳細資料使用的物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的原因。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class that uses the specified detail object and fault reason.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的詳細資料物件和錯誤原因。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
          <source>The object used as the SOAP fault detail.</source>
          <target state="translated">當做 SOAP 錯誤詳細資料使用的物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的原因。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class that uses the specified detail and fault reason.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的詳細資料和錯誤原因。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
          <source>The object used as the SOAP fault detail.</source>
          <target state="translated">當做 SOAP 錯誤詳細資料使用的物件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的原因。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的錯誤碼。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class that uses the specified detail object, fault reason, and fault code.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的詳細資料物件、錯誤原因和錯誤碼。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
          <source>The object used as the SOAP fault detail.</source>
          <target state="translated">當做 SOAP 錯誤詳細資料使用的物件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的原因。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的錯誤碼。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class that uses the specified detail object, fault reason, and fault code.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的詳細資料物件、錯誤原因和錯誤碼。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>The object used as the SOAP fault detail.</source>
          <target state="translated">當做 SOAP 錯誤詳細資料使用的物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的原因。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的錯誤碼。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>The action of the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的動作。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class that uses the specified detail object, and SOAP fault reason, code and action values.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的詳細資料物件、SOAP 錯誤原因、錯誤碼和動作值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
          <source>The object used as the SOAP fault detail.</source>
          <target state="translated">當做 SOAP 錯誤詳細資料使用的物件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的原因。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的錯誤碼。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
          <source>The action of the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的動作。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> class that uses the specified detail object, and SOAP fault reason, code and action values.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的詳細資料物件、SOAP 錯誤原因、錯誤碼和動作值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.CreateMessageFault">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageFault" /&gt;</ph> object that can be used to create a <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that represents the SOAP fault.</source>
          <target state="translated">建立可用於建立表示 SOAP 錯誤之 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageFault" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.CreateMessageFault">
          <source>The message fault created.</source>
          <target state="translated">建立的訊息錯誤。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultException`1.Detail">
          <source>Gets the object that contains the detail information of the fault condition.</source>
          <target state="translated">取得物件，其中包含錯誤狀況的詳細資訊。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultException`1.Detail">
          <source>The detail object that is the type parameter of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> object.</source>
          <target state="translated">屬於 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 物件之型別參數的詳細資料物件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization information to which the object data is added when serialized.</source>
          <target state="translated">進行序列化時，加入物件資料的序列化資訊。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for the serialized object.</source>
          <target state="translated">序列化物件的目的端。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implementation of the <ph id="ph1">&lt;see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> method that is called when the object is serialized into a stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> 方法的實作，當物件序列化成資料流時，會呼叫此方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.ToString">
          <source>Returns a string for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 物件的字串。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException`1.ToString">
          <source>The string for the SOAP fault.</source>
          <target state="translated">SOAP 錯誤的字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>