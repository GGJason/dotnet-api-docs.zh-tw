<Type Name="MsmqException" FullName="System.ServiceModel.MsmqException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0126144bc315d4b36698759372753d4f7c785d77" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37612636" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MsmqException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MsmqException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqException" />
  <TypeSignature Language="VB.NET" Value="Public Class MsmqException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type MsmqException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>訊息佇列 (MSMQ) 所傳回的封裝錯誤。 這個例外狀況是由訊息佇列傳輸和訊息佇列整合通道所擲回。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當訊息佇列通道與訊息佇列互動時，可能會擲回這個例外狀況，其中包括開啟佇列、查詢佇列的資訊、傳送訊息及接收訊息。  
  
 包含訊息佇列錯誤碼的例外狀況。 一般而言，當架構無法自動從錯誤中復原，需要人為操作時，便會擲回此例外狀況。 例如，若沒有安裝訊息佇列，而試圖開啟訊息佇列傳輸接聽程式時，便會擲回此例外狀況。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當訊息佇列 (MSMQ) 通道與訊息佇列互動時，可能會擲回這個例外狀況，其中包括開啟佇列、查詢佇列的資訊、傳送訊息及接收訊息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.MsmqException : string -&gt; System.ServiceModel.MsmqException" Usage="new System.ServiceModel.MsmqException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">用來初始化新執行個體的訊息。</param>
        <summary>使用提供的訊息來初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當訊息佇列 (MSMQ) 通道與訊息佇列互動時，可能會擲回這個例外狀況，其中包括開啟佇列、查詢佇列的資訊、傳送訊息及接收訊息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.MsmqException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ServiceModel.MsmqException" Usage="new System.ServiceModel.MsmqException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，保留與 <see cref="T:System.ServiceModel.MsmqException" /> 關聯的序列化資料。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，含有與 <see cref="T:System.ServiceModel.MsmqException" /> 關聯的序列資料流的來源和目的端。</param>
        <summary>使用有關例外狀況的其他序列化資訊，初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當訊息佇列 (MSMQ) 通道與訊息佇列互動時，可能會擲回這個例外狀況，其中包括開啟佇列、查詢佇列的資訊、傳送訊息及接收訊息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.MsmqException : string * Exception -&gt; System.ServiceModel.MsmqException" Usage="new System.ServiceModel.MsmqException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">用來初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別之新執行個體的訊息。</param>
        <param name="inner">要由 <see cref="T:System.ServiceModel.MsmqException" /> 類別的新執行個體所封裝的內部例外狀況。</param>
        <summary>使用提供的訊息和內部例外狀況，初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當訊息佇列 (MSMQ) 通道與訊息佇列互動時，可能會擲回這個例外狀況，其中包括開啟佇列、查詢佇列的資訊、傳送訊息及接收訊息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqException (string message, int error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, error As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqException(System::String ^ message, int error);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.MsmqException : string * int -&gt; System.ServiceModel.MsmqException" Usage="new System.ServiceModel.MsmqException (message, error)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">用來初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別之新執行個體的訊息。</param>
        <param name="error">用來初始化 <see cref="T:System.ServiceModel.MsmqException" />類別之新執行個體的錯誤碼，此錯誤碼由訊息佇列 (MSMQ) 基礎結構所傳回。</param>
        <summary>使用提供的訊息和錯誤碼來初始化 <see cref="T:System.ServiceModel.MsmqException" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當訊息佇列通道與訊息佇列互動時，可能會擲回這個例外狀況，其中包括開啟佇列、查詢佇列的資訊、傳送訊息及接收訊息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>