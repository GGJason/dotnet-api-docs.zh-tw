<Type Name="NetMsmqBinding" FullName="System.ServiceModel.NetMsmqBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7bbeef401a94b0ff05cb7ca1b3799cf88b10711d" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48725246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NetMsmqBinding : System.ServiceModel.MsmqBindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetMsmqBinding extends System.ServiceModel.MsmqBindingBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetMsmqBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetMsmqBinding&#xA;Inherits MsmqBindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetMsmqBinding : System::ServiceModel::MsmqBindingBase" />
  <TypeSignature Language="F#" Value="type NetMsmqBinding = class&#xA;    inherit MsmqBindingBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MsmqBindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示適合跨電腦通訊的佇列繫結。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.NetMsmqBinding> 繫結使用訊息佇列 (MSMQ) 做為傳輸，提供佇列的支援，並可支援結合鬆散的應用程式、失敗隔離、負載平均和中斷連接作業。 如需這些功能的討論，請參閱 <<c0> [ 佇列概觀](~/docs/framework/wcf/feature-details/queues-overview.md)。  
  
 這是其中一個系統提供繫結提供由 Windows Communication Foundation (WCF)。 建議的程序為使用組態值來定義繫結，且不使用程式碼的方法，除了在初始化服務時必須設定組態值的特定進階情況中。  
  
   
  
## Examples  
 下列範例說明如何設定服務以使用 <xref:System.ServiceModel.NetMsmqBinding> 繫結。  
  
 首先是組態檔。  
  
  
  
 接著是實際的服務程式碼。  
  
 [!code-csharp[S_Msmq_Default#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_msmq_default/cs/service.cs#1)]
 [!code-vb[S_Msmq_Default#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_default/vb/service.vb#1)]  
  
 [!code-csharp[S_Msmq_Default#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_msmq_default/cs/service.cs#2)]
 [!code-vb[S_Msmq_Default#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_default/vb/service.vb#2)]  
  
 [!code-csharp[S_Msmq_Default#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_msmq_default/cs/hostapp.cs#10)]
 [!code-vb[S_Msmq_Default#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_default/vb/hostapp.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.NetMsmqBinding" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetMsmqBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetMsmqBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetMsmqBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.NetMsmqBinding" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetMsmqBinding (System.ServiceModel.NetMsmqSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.NetMsmqSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetMsmqBinding.#ctor(System.ServiceModel.NetMsmqSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As NetMsmqSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetMsmqBinding(System::ServiceModel::NetMsmqSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.NetMsmqBinding : System.ServiceModel.NetMsmqSecurityMode -&gt; System.ServiceModel.NetMsmqBinding" Usage="new System.ServiceModel.NetMsmqBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.NetMsmqSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">用來初始化新執行個體的安全性模式。</param>
        <summary>使用指定的安全性模式，初始化 <see cref="T:System.ServiceModel.NetMsmqBinding" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼示範如何使用安全性模式來建構 <xref:System.ServiceModel.NetMsmqBinding>。  
  
 [!code-csharp[S_UENetMsmqBinding#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">該值不是其中一個 <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetMsmqBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetMsmqBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetMsmqBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.NetMsmqBinding : string -&gt; System.ServiceModel.NetMsmqBinding" Usage="new System.ServiceModel.NetMsmqBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName">
          <see langword="configurationName" /> 屬性 (Attribute) 的值，這個屬性值會識別使用其設定來初始化繫結的 <see langword="binding" /> 項目。</param>
        <summary>從指定的組態繫結項目設定，初始化 <see cref="T:System.ServiceModel.NetMsmqBinding" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此名稱會覆寫任何組態名稱，在執行階段指派給`NetMsmqBinding`組態檔中的項目。  
  
   
  
## Examples  
 下列程式碼示範如何產生 <xref:System.ServiceModel.NetMsmqBinding> 類別的執行個體。  
  
 [!code-csharp[S_UENetMsmqBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetMsmqBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="netMsmqBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回包含在目前繫結中繫結項目的已排序集合。</summary>
        <returns>由 <see cref="T:System.ServiceModel.NetMsmqBinding" /> 繫結描述的繫結項目之已排序集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繫結項目的順序很重要。 它會反映建構及堆疊通訊協定和傳輸通道的順序。 這個繫結項目的集合是新的集合，可以修改後用於建立 <xref:System.ServiceModel.Channels.CustomBinding>。  
  
   
  
## Examples  
 下列程式碼會建立 `NetMsmqBinding` 並呼叫 `CreateBindingElements`，然後列印 `BindingElements` 集合之中各個繫結項目的名稱。  
  
 [!code-csharp[S_UENetMsmqBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetMsmqBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.NetMsmqBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 SOAP 的版本，用於由此繫結處理的訊息。</summary>
        <value>搭配此繫結使用之 <see cref="T:System.ServiceModel.EnvelopeVersion" /> 的值。 預設值為 SOAP 1.2。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼示範如何取得 <xref:System.ServiceModel.NetMsmqBinding.EnvelopeVersion%2A>。  
  
 [!code-csharp[S_UENetMsmqBinding#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定配置供從通道接收訊息之訊息緩衝區管理員使用的最大記憶體量。</summary>
        <value>可供訊息緩衝區管理員使用的最大記憶體量，單位為位元組。 預設值為 524288 (0x80000) 位元組。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.BufferManager> 利用緩衝區集區將使用緩衝區的成本降至最低。 當訊息從通道送出時，服務將需要緩衝區來處理訊息。 如果緩衝區集區中沒有足夠的記憶體可以處理訊息負載，<xref:System.ServiceModel.Channels.BufferManager> 就必須從 CLR 堆積配置額外的記憶體，進而增加記憶體回收負荷。 從 CLR 記憶體回收堆積所產生的大量配置表示緩衝區集區太小，而提高 <xref:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize%2A> 上限來提供較大的配置便可改善效能。  
  
   
  
## Examples  
 下列程式碼會示範如何設定 <xref:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize%2A> 屬性。  
  
 [!code-csharp[S_UENetMsmqBinding#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueTransferProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.QueueTransferProtocol QueueTransferProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.QueueTransferProtocol QueueTransferProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueTransferProtocol As QueueTransferProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::QueueTransferProtocol QueueTransferProtocol { System::ServiceModel::QueueTransferProtocol get(); void set(System::ServiceModel::QueueTransferProtocol value); };" />
      <MemberSignature Language="F#" Value="member this.QueueTransferProtocol : System.ServiceModel.QueueTransferProtocol with get, set" Usage="System.ServiceModel.NetMsmqBinding.QueueTransferProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.QueueTransferProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定列舉值，這個值表示此繫結所使用的佇列通訊通道傳輸。</summary>
        <value>這個繫結所使用佇列管理員之間的傳輸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用 SOAP Reliable Messaging Protocol 時，訊息佇列 (MSMQ) 不支援 Active Directory 定址，因此當 <xref:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol%2A> 設定為 <xref:System.ServiceModel.QueueTransferProtocol.Srmp> 時，請勿將 <xref:System.ServiceModel.QueueTransferProtocol.SrmpSecure> 設定為 <xref:System.ServiceModel.NetMsmqBinding.UseActiveDirectory%2A> 或 `true`。  
  
   
  
## Examples  
 下列程式碼會示範如何設定 <xref:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol%2A> 屬性。  
  
 [!code-csharp[S_UENetMsmqBinding#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.NetMsmqBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個繫結關聯的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</summary>
        <value>與此繫結相關聯的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlDictionaryReaderQuotas> 物件會定義 SOAP 訊息複雜度的條件約束 (Constraint)，這些條件約束可由使用繫結所設定的端點處理。 這些條件約束包括 `maxArrayLength`、`maxBytesPerRead`、`maxDepth`、`maxNameTableCharCount` 和 `maxStringContentLength`。 這些值有助於防止阻絕服務攻擊。 如需詳細資訊，請參閱<xref:System.Xml.XmlDictionaryReaderQuotas>。  
  
   
  
## Examples  
 下列程式碼會示範如何設定 <xref:System.Xml.XmlDictionaryReaderQuotas> 屬性。  
  
 [!code-csharp[S_UENetMsmqBinding#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">值為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.NetMsmqSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.NetMsmqSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetMsmqBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As NetMsmqSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::NetMsmqSecurity ^ Security { System::ServiceModel::NetMsmqSecurity ^ get(); void set(System::ServiceModel::NetMsmqSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.NetMsmqSecurity with get, set" Usage="System.ServiceModel.NetMsmqBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.NetMsmqSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個繫結關聯的 <see cref="T:System.ServiceModel.NetMsmqSecurity" />。</summary>
        <value>與這個繫結關聯的 <see cref="T:System.ServiceModel.NetMsmqSecurity" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.NetMsmqSecurity> 是訊息佇列 (MSMQ) 傳輸和 SOAP 安全性的封裝。 它指定是否啟用傳輸或 SOAP 安全性，以及如果啟用，正在使用的驗證模式和保護層級。  
  
   
  
## Examples  
 下列程式碼示範如何取得 <xref:System.ServiceModel.NetMsmqSecurity> 物件。  
  
 [!code-csharp[S_UENetMsmqBinding#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="netMsmqBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回值，這個值表示 <see cref="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" /> 屬性是否已變更為非預設值且應該序列化。</summary>
        <returns>如果應序列化 <see cref="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="netMsmqBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回值，這個值表示 <see cref="P:System.ServiceModel.NetMsmqBinding.Security" /> 屬性是否已變更為非預設值且應該序列化。</summary>
        <returns>如果應序列化 <see cref="P:System.ServiceModel.NetMsmqBinding.Security" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseActiveDirectory">
      <MemberSignature Language="C#" Value="public bool UseActiveDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseActiveDirectory" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetMsmqBinding.UseActiveDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property UseActiveDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseActiveDirectory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseActiveDirectory : bool with get, set" Usage="System.ServiceModel.NetMsmqBinding.UseActiveDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回或設定值，這個值表示是否應該使用 Active Directory 來轉換佇列位址。</summary>
        <value>如果應該使用 Active Directory 來轉換佇列位址，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 訊息佇列 (MSMQ) 佇列位址可以由路徑名稱或直接格式名稱所組成。 如果是使用直接格式名稱，訊息佇列會使用 DNS、NetBIOS 或 IP 解析佇列名稱。 如果是路徑名稱，訊息佇列會使用 Active Directory 解析佇列名稱。  
  
 根據預設，Windows Communication Foundation (WCF) 佇列傳輸會將轉換成直接格式名稱的訊息佇列的 URI。 藉由將 <xref:System.ServiceModel.NetMsmqBinding.UseActiveDirectory%2A> 屬性設定為 `true`，應用程式可以指定已佇列的傳輸應使用 Active Directory 來解析佇列名稱，而非使用 DNS、NetBIOS 或 IP 來解析。  
  
   
  
## Examples  
 下列程式碼會示範如何設定 <xref:System.ServiceModel.NetMsmqBinding.UseActiveDirectory%2A> 屬性。  
  
 [!code-csharp[S_UENetMsmqBinding#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetmsmqbinding/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>