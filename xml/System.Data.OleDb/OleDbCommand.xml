<Type Name="OleDbCommand" FullName="System.Data.OleDb.OleDbCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dce639c7c59c094faaa2695784aea6f0b5211c9c" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53221702" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type OleDbCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable&#xA;    interface IDbCommand&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbCommand</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e48ea-101">表示要對資料來源執行的 SQL 陳述式或預存程序。</span><span class="sxs-lookup"><span data-stu-id="e48ea-101">Represents an SQL statement or stored procedure to execute against a data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-102">執行個體時<xref:System.Data.OleDb.OleDbCommand>建立時，讀取/寫入屬性會設為其初始值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-102">When an instance of <xref:System.Data.OleDb.OleDbCommand> is created, the read/write properties are set to their initial values.</span></span> <span data-ttu-id="e48ea-103">如需這些值的清單，請參閱<xref:System.Data.OleDb.OleDbCommand>建構函式。</span><span class="sxs-lookup"><span data-stu-id="e48ea-103">For a list of these values, see the <xref:System.Data.OleDb.OleDbCommand> constructor.</span></span>  
  
 <span data-ttu-id="e48ea-104"><xref:System.Data.OleDb.OleDbCommand> 具有執行命令，在資料來源的下列方法：</span><span class="sxs-lookup"><span data-stu-id="e48ea-104"><xref:System.Data.OleDb.OleDbCommand> features the following methods executing commands at a data source:</span></span>  
  
|<span data-ttu-id="e48ea-105">項目</span><span class="sxs-lookup"><span data-stu-id="e48ea-105">Item</span></span>|<span data-ttu-id="e48ea-106">描述</span><span class="sxs-lookup"><span data-stu-id="e48ea-106">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|<span data-ttu-id="e48ea-107">執行傳回資料列的命令。</span><span class="sxs-lookup"><span data-stu-id="e48ea-107">Executes commands that return rows.</span></span> <span data-ttu-id="e48ea-108"><xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 可能不會有效果，如果您想要執行命令，例如 SQL SET 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e48ea-108"><xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|<span data-ttu-id="e48ea-109">執行命令，例如 SQL 插入、 刪除、 更新和 SET 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e48ea-109">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|<span data-ttu-id="e48ea-110">擷取單一值，例如，從資料庫的彙總值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-110">Retrieves a single value, for example, an aggregate value from a database.</span></span>|  
  
 <span data-ttu-id="e48ea-111">您可以重設<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性和重複使用<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-111">You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the <xref:System.Data.OleDb.OleDbCommand> object.</span></span> <span data-ttu-id="e48ea-112">不過，您必須關閉<xref:System.Data.OleDb.OleDbDataReader>然後您才能執行新的或上一個命令。</span><span class="sxs-lookup"><span data-stu-id="e48ea-112">However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="e48ea-113">如果嚴重<xref:System.Data.OleDb.OleDbException>（例如，SQL Server 嚴重性層級 20 或更新版本） 所執行的方法產生<xref:System.Data.OleDb.OleDbCommand>，則<xref:System.Data.OleDb.OleDbConnection>，可能會關閉連線。</span><span class="sxs-lookup"><span data-stu-id="e48ea-113">If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed.</span></span> <span data-ttu-id="e48ea-114">但是，使用者可以再次開啟連線，然後繼續進行。</span><span class="sxs-lookup"><span data-stu-id="e48ea-114">However, the user can reopen the connection and continue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-115">下列範例會使用<xref:System.Data.OleDb.OleDbCommand>，以及<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.OleDb.OleDbConnection>來選取資料列從 Access 資料庫。</span><span class="sxs-lookup"><span data-stu-id="e48ea-115">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database.</span></span> <span data-ttu-id="e48ea-116">區域分布<xref:System.Data.DataSet>再傳回。</span><span class="sxs-lookup"><span data-stu-id="e48ea-116">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="e48ea-117">此範例會傳遞初始化<xref:System.Data.DataSet>，連接字串、 SQL SELECT 陳述式的查詢字串和來源資料庫資料表名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="e48ea-117">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OleDb.OleDbDataAdapter" />
    <altmember cref="T:System.Data.OleDb.OleDbConnection" />
    <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-118">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-118">Working with Commands</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e48ea-119">初始化 <see cref="T:System.Data.OleDb.OleDbCommand" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e48ea-119">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-120">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-120">Working with Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-121">初始化 <see cref="T:System.Data.OleDb.OleDbCommand" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e48ea-121">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-122">基底建構函式會初始化為其預設值的所有欄位。</span><span class="sxs-lookup"><span data-stu-id="e48ea-122">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="e48ea-123">下表顯示的執行個體的初始屬性值<xref:System.Data.OleDb.OleDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-123">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e48ea-124">屬性</span><span class="sxs-lookup"><span data-stu-id="e48ea-124">Properties</span></span>|<span data-ttu-id="e48ea-125">初始值</span><span class="sxs-lookup"><span data-stu-id="e48ea-125">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|<span data-ttu-id="e48ea-126">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="e48ea-126">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e48ea-127">30</span><span class="sxs-lookup"><span data-stu-id="e48ea-127">30</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e48ea-128">null</span><span class="sxs-lookup"><span data-stu-id="e48ea-128">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-129">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-129">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-130">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-130">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbCommand : string -&gt; System.Data.OleDb.OleDbCommand" Usage="new System.Data.OleDb.OleDbCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="e48ea-131">查詢的文字。</span><span class="sxs-lookup"><span data-stu-id="e48ea-131">The text of the query.</span></span></param>
        <summary><span data-ttu-id="e48ea-132">使用查詢的文字，初始化 <see cref="T:System.Data.OleDb.OleDbCommand" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e48ea-132">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-133">下表顯示的執行個體的初始屬性值<xref:System.Data.OleDb.OleDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-133">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e48ea-134">屬性</span><span class="sxs-lookup"><span data-stu-id="e48ea-134">Properties</span></span>|<span data-ttu-id="e48ea-135">初始值</span><span class="sxs-lookup"><span data-stu-id="e48ea-135">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e48ea-136">30</span><span class="sxs-lookup"><span data-stu-id="e48ea-136">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e48ea-137">null</span><span class="sxs-lookup"><span data-stu-id="e48ea-137">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-138">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-138">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-139">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-139">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbCommand : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbCommand" Usage="new System.Data.OleDb.OleDbCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="e48ea-140">查詢的文字。</span><span class="sxs-lookup"><span data-stu-id="e48ea-140">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="e48ea-141"><see cref="T:System.Data.OleDb.OleDbConnection" /> 表示資料來源的連接。</span><span class="sxs-lookup"><span data-stu-id="e48ea-141">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</span></span></param>
        <summary><span data-ttu-id="e48ea-142">使用查詢的文字和 <see cref="T:System.Data.OleDb.OleDbConnection" /> 初始化 <see cref="T:System.Data.OleDb.OleDbCommand" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e48ea-142">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query and an <see cref="T:System.Data.OleDb.OleDbConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-143">下表顯示的執行個體的初始屬性值<xref:System.Data.OleDb.OleDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-143">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e48ea-144">屬性</span><span class="sxs-lookup"><span data-stu-id="e48ea-144">Properties</span></span>|<span data-ttu-id="e48ea-145">初始值</span><span class="sxs-lookup"><span data-stu-id="e48ea-145">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e48ea-146">30</span><span class="sxs-lookup"><span data-stu-id="e48ea-146">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e48ea-147">新<xref:System.Data.OleDb.OleDbConnection>的值為`connection`參數。</span><span class="sxs-lookup"><span data-stu-id="e48ea-147">A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="e48ea-148">您可以設定相關的屬性來變更其中任何參數的值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-148">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-149">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-149">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-150">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-150">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.OleDb.OleDbConnection connection, class System.Data.OleDb.OleDbTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OleDbConnection, transaction As OleDbTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText, System::Data::OleDb::OleDbConnection ^ connection, System::Data::OleDb::OleDbTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbCommand : string * System.Data.OleDb.OleDbConnection * System.Data.OleDb.OleDbTransaction -&gt; System.Data.OleDb.OleDbCommand" Usage="new System.Data.OleDb.OleDbCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
        <Parameter Name="transaction" Type="System.Data.OleDb.OleDbTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="e48ea-151">查詢的文字。</span><span class="sxs-lookup"><span data-stu-id="e48ea-151">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="e48ea-152"><see cref="T:System.Data.OleDb.OleDbConnection" /> 表示資料來源的連接。</span><span class="sxs-lookup"><span data-stu-id="e48ea-152">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</span></span></param>
        <param name="transaction"><span data-ttu-id="e48ea-153">其中執行 <see cref="T:System.Data.OleDb.OleDbCommand" /> 的交易。</span><span class="sxs-lookup"><span data-stu-id="e48ea-153">The transaction in which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="e48ea-154">使用查詢的文字、<see cref="T:System.Data.OleDb.OleDbConnection" /> 和 <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" />，初始化 <see cref="T:System.Data.OleDb.OleDbCommand" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e48ea-154">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query, an <see cref="T:System.Data.OleDb.OleDbConnection" />, and the <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-155">下表顯示的執行個體的初始屬性值<xref:System.Data.OleDb.OleDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-155">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e48ea-156">屬性</span><span class="sxs-lookup"><span data-stu-id="e48ea-156">Properties</span></span>|<span data-ttu-id="e48ea-157">初始值</span><span class="sxs-lookup"><span data-stu-id="e48ea-157">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e48ea-158">30</span><span class="sxs-lookup"><span data-stu-id="e48ea-158">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e48ea-159">新<xref:System.Data.OleDb.OleDbConnection>的值為`connection`參數。</span><span class="sxs-lookup"><span data-stu-id="e48ea-159">A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="e48ea-160">您可以設定相關的屬性來變更其中任何參數的值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-160">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-161">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-161">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-162">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-162">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="oleDbCommand.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-163">嘗試取消 <see cref="T:System.Data.OleDb.OleDbCommand" /> 的執行。</span><span class="sxs-lookup"><span data-stu-id="e48ea-163">Tries to cancel the execution of an <see cref="T:System.Data.OleDb.OleDbCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-164">如果沒有要取消的作業，則不會發生任何狀況。</span><span class="sxs-lookup"><span data-stu-id="e48ea-164">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="e48ea-165">不過，如果正在進行命令，而取消作業的嘗試失敗，則不會產生任何例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="e48ea-165">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-166">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>，會執行它，然後取消執行。</span><span class="sxs-lookup"><span data-stu-id="e48ea-166">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution.</span></span> <span data-ttu-id="e48ea-167">若要這麼做，方法會傳遞為 SQL SELECT 陳述式的字串和要用來連接到資料來源的字串。</span><span class="sxs-lookup"><span data-stu-id="e48ea-167">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Cancel Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Cancel Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Cancel Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-168">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-168">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-169">建立目前執行個體複本的新 <see cref="T:System.Data.OleDb.OleDbCommand" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-169">Creates a new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="e48ea-170">這個執行個體複本的新 <see cref="T:System.Data.OleDb.OleDbCommand" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-170">A new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-171">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-171">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.OleDb.OleDbCommand.CommandText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-172">取得或設定要在資料來源執行的 SQL 陳述式或預存程序。</span><span class="sxs-lookup"><span data-stu-id="e48ea-172">Gets or sets the SQL statement or stored procedure to execute at the data source.</span></span></summary>
        <value><span data-ttu-id="e48ea-173">要執行的 SQL 陳述式或預存程序。</span><span class="sxs-lookup"><span data-stu-id="e48ea-173">The SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="e48ea-174">預設值為空字串。</span><span class="sxs-lookup"><span data-stu-id="e48ea-174">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-175">當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`StoredProcedure`，則<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性應設為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="e48ea-175">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="e48ea-176">使用者可能需要使用逸出字元語法，如果預存程序名稱包含任何特殊字元。</span><span class="sxs-lookup"><span data-stu-id="e48ea-176">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="e48ea-177">命令執行這個預存程序，當您呼叫其中一個`Execute`方法。</span><span class="sxs-lookup"><span data-stu-id="e48ea-177">The command executes this stored procedure when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="e48ea-178">當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設定為`TableDirect`，則<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性應該設定為資料表或資料表的名稱來存取。</span><span class="sxs-lookup"><span data-stu-id="e48ea-178">When <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `TableDirect`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the table or tables to be accessed.</span></span> <span data-ttu-id="e48ea-179">使用者可能需要的任何具名資料表包含任何特殊字元時，請使用逸出字元語法。</span><span class="sxs-lookup"><span data-stu-id="e48ea-179">The user may be required to use escape character syntax if any of the named tables contain any special characters.</span></span> <span data-ttu-id="e48ea-180">會傳回所有資料列和資料行的具名的資料表或資料表，當您呼叫其中一個`Execute`方法。</span><span class="sxs-lookup"><span data-stu-id="e48ea-180">All rows and columns of the named table or tables will be returned when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="e48ea-181">您無法設定<xref:System.Data.OleDb.OleDbCommand.Connection%2A>， <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>，和<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>如果目前的連接正在執行 execute 或提取作業的屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-181">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="e48ea-182">OLE DB.NET 提供者不支援具名的參數來傳遞參數至 SQL 陳述式或被呼叫的預存程序<xref:System.Data.OleDb.OleDbCommand>時<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設定為`Text`。</span><span class="sxs-lookup"><span data-stu-id="e48ea-182">The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="e48ea-183">在此情況下，您必須使用問號 （？） 預留位置。</span><span class="sxs-lookup"><span data-stu-id="e48ea-183">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="e48ea-184">例如: </span><span class="sxs-lookup"><span data-stu-id="e48ea-184">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="e48ea-185">因此，順序<xref:System.Data.OleDb.OleDbParameter>物件加入至<xref:System.Data.OleDb.OleDbParameterCollection>必須直接對應至問號預留位置參數的位置。</span><span class="sxs-lookup"><span data-stu-id="e48ea-185">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span>  
  
 <span data-ttu-id="e48ea-186">如需詳細資訊，請參閱 <<c0> [ 設定參數和參數資料類型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。</span><span class="sxs-lookup"><span data-stu-id="e48ea-186">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-187">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-187">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-188">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-188">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.OleDb.OleDbCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-189">取得或設定結束執行命令的嘗試並產生錯誤之前的等待時間。</span><span class="sxs-lookup"><span data-stu-id="e48ea-189">Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="e48ea-190">等待命令執行的時間 (以秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="e48ea-190">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="e48ea-191">預設為 30 秒。</span><span class="sxs-lookup"><span data-stu-id="e48ea-191">The default is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-192">值為 0 表示無限制，並應避免在<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>因為嘗試執行命令會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="e48ea-192">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> because an attempt to execute a command will wait indefinitely.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-193">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-193">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.OleDb.OleDbCommand.CommandType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-194">取得或設定值，這個值表示如何解譯 <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-194">Gets or sets a value that indicates how the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="e48ea-195">其中一個 <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-195">One of the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> values.</span></span> <span data-ttu-id="e48ea-196">預設為 Text。</span><span class="sxs-lookup"><span data-stu-id="e48ea-196">The default is Text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-197">當您設定<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性，以`StoredProcedure`，您應該設定<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>預存程序名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-197">When you set the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="e48ea-198">當您呼叫 Execute 方法的其中一個命令會執行這個預存程序。</span><span class="sxs-lookup"><span data-stu-id="e48ea-198">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="e48ea-199"><xref:System.Data.OleDb.OleDbCommand.Connection%2A>，<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>和<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性 nelze nastavit，pokud 目前連接正在執行 execute 或擷取作業。</span><span class="sxs-lookup"><span data-stu-id="e48ea-199">The <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="e48ea-200">OLE DB.NET 提供者不支援具名的參數來傳遞參數至 SQL 陳述式或被呼叫的預存程序<xref:System.Data.OleDb.OleDbCommand>當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>會設定為 Text。</span><span class="sxs-lookup"><span data-stu-id="e48ea-200">The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to Text.</span></span> <span data-ttu-id="e48ea-201">在此情況下，您必須使用問號 （？） 預留位置。</span><span class="sxs-lookup"><span data-stu-id="e48ea-201">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="e48ea-202">例如：</span><span class="sxs-lookup"><span data-stu-id="e48ea-202">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="e48ea-203">因此，順序<xref:System.Data.OleDb.OleDbParameter>物件加入至<xref:System.Data.OleDb.OleDbParameterCollection>必須直接對應至問號預留位置參數的位置。</span><span class="sxs-lookup"><span data-stu-id="e48ea-203">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span> <span data-ttu-id="e48ea-204">如需詳細資訊，請參閱 <<c0> [ 設定參數和參數資料類型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。</span><span class="sxs-lookup"><span data-stu-id="e48ea-204">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e48ea-205">這個值不是有效的 <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-205">The value was not a valid <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-206">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-206">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OleDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbConnection ^ Connection { System::Data::OleDb::OleDbConnection ^ get(); void set(System::Data::OleDb::OleDbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OleDb.OleDbConnection with get, set" Usage="System.Data.OleDb.OleDbCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-207">取得或設定 <see cref="T:System.Data.OleDb.OleDbCommand" /> 的這個執行個體所使用的 <see cref="T:System.Data.OleDb.OleDbConnection" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-207">Gets or sets the <see cref="T:System.Data.OleDb.OleDbConnection" /> used by this instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</span></span></summary>
        <value><span data-ttu-id="e48ea-208">資料來源的連接。</span><span class="sxs-lookup"><span data-stu-id="e48ea-208">The connection to a data source.</span></span> <span data-ttu-id="e48ea-209">預設值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-209">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-210">您無法設定<xref:System.Data.OleDb.OleDbCommand.Connection%2A>，<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>和<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>如果目前的連接正在執行 execute 或提取作業的屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-210">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="e48ea-211">如果在交易進行時設定 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>，且 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 屬性不是 null，則會產生 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-211">If you set <xref:System.Data.OleDb.OleDbCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="e48ea-212">如果 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 屬性不是 null，且交易已經認可或回復，則 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 會設定為 null。</span><span class="sxs-lookup"><span data-stu-id="e48ea-212">If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-213">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-213">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e48ea-214">當交易正在進行中時，<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 屬性會變更。</span><span class="sxs-lookup"><span data-stu-id="e48ea-214">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> property was changed while a transaction was in progress.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-215">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-215">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="oleDbCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OleDbParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.OleDb.OleDbParameter" Usage="oleDbCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-216">建立 <see cref="T:System.Data.OleDb.OleDbParameter" /> 物件的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e48ea-216">Creates a new instance of an <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="e48ea-217"><see cref="T:System.Data.OleDb.OleDbParameter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-217">An <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-218"><xref:System.Data.OleDb.OleDbCommand.CreateParameter%2A>方法是強型別的版本<xref:System.Data.IDbCommand.CreateParameter%2A>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-218">The <xref:System.Data.OleDb.OleDbCommand.CreateParameter%2A> method is a strongly typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-219">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-219">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.OleDb.OleDbCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.OleDb.OleDbCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.OleDb.OleDbCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.OleDb.OleDbCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-220">取得或設定值，指出在命令物件是否應該顯示在自訂 Windows Form 設計工具控制項中。</span><span class="sxs-lookup"><span data-stu-id="e48ea-220">Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control.</span></span></summary>
        <value><span data-ttu-id="e48ea-221">表示在控制項中是否應該看得到命令物件的值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-221">A value that indicates whether the command object should be visible in a control.</span></span> <span data-ttu-id="e48ea-222">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-222">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-223">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-223">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="oleDbCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="oleDbCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="oleDbCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-224">針對 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 執行 SQL 陳述式，並傳回受影響的資料列數。</span><span class="sxs-lookup"><span data-stu-id="e48ea-224">Executes an SQL statement against the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="e48ea-225">受影響的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e48ea-225">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-226">您可以使用<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>來執行資料庫目錄作業，例如，來查詢資料庫的結構或建立資料庫物件，例如資料表、 或變更資料庫中的資料，而不需使用<xref:System.Data.DataSet>執行 UPDATE、 INSERT 或 DELETE陳述式。</span><span class="sxs-lookup"><span data-stu-id="e48ea-226">You can use the <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="e48ea-227">雖然<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>傳回任何資料列時，任何輸出參數或傳回對應至參數的值會填入資料。</span><span class="sxs-lookup"><span data-stu-id="e48ea-227">Although the <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="e48ea-228">對 UPDATE、INSERT 和 DELETE 陳述式而言，傳回值是受命令影響的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e48ea-228">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="e48ea-229">對其他類型的陳述式而言，傳回值為 -1。</span><span class="sxs-lookup"><span data-stu-id="e48ea-229">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="e48ea-230">發生復原時，傳回的值也是-1。</span><span class="sxs-lookup"><span data-stu-id="e48ea-230">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-231">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>，然後執行它使用<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-231">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="e48ea-232">此範例會傳遞字串，例如 UPDATE、 INSERT 或 DELETE 的 SQL 陳述式和字串，用來連接到資料來源。</span><span class="sxs-lookup"><span data-stu-id="e48ea-232">The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e48ea-233">連接不存在。</span><span class="sxs-lookup"><span data-stu-id="e48ea-233">The connection does not exist.</span></span>  
  
<span data-ttu-id="e48ea-234">-或-</span><span class="sxs-lookup"><span data-stu-id="e48ea-234">-or-</span></span> 
<span data-ttu-id="e48ea-235">連接未開啟。</span><span class="sxs-lookup"><span data-stu-id="e48ea-235">The connection is not open.</span></span>  
  
<span data-ttu-id="e48ea-236">-或-</span><span class="sxs-lookup"><span data-stu-id="e48ea-236">-or-</span></span> 
<span data-ttu-id="e48ea-237">如果某項交易內容與原本連接登記的內容不同，便無法在那個交易內容中執行命令。</span><span class="sxs-lookup"><span data-stu-id="e48ea-237">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-238">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-238">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e48ea-239">傳送 <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> 至 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />，並建置 <see cref="T:System.Data.OleDb.OleDbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-239">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-240">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-240">Working with Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.OleDb.OleDbDataReader" Usage="oleDbCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-241">傳送 <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> 至 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />，並建置 <see cref="T:System.Data.OleDb.OleDbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-241">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="e48ea-242"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-242">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-243">當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`StoredProcedure`，則<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性應設為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="e48ea-243">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="e48ea-244">命令執行這個預存程序，當您呼叫<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-244">The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="e48ea-245">在關閉之前<xref:System.Data.OleDb.OleDbConnection>，先關閉<xref:System.Data.OleDb.OleDbDataReader>物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-245">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="e48ea-246">您也必須關閉<xref:System.Data.OleDb.OleDbDataReader>如果您打算重複使用的物件<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-246">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-247">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>，然後執行它，藉由傳遞字串，是 SQL SELECT 陳述式和要用來連接到資料來源的字串。</span><span class="sxs-lookup"><span data-stu-id="e48ea-247">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e48ea-248">如果某項交易內容與原本連接登記的內容不同，便無法在那個交易內容中執行命令。</span><span class="sxs-lookup"><span data-stu-id="e48ea-248">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-249">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-249">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.OleDb.OleDbDataReader" Usage="oleDbCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="e48ea-250">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-250">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e48ea-251">傳送 <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> 至 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />，並使用其中一個 <see cref="T:System.Data.CommandBehavior" /> 值來建立 <see cref="T:System.Data.OleDb.OleDbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-251">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />, and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="e48ea-252"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-252">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-253">當您指定<xref:System.Data.CommandBehavior.SingleRow>具有<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法<xref:System.Data.OleDb.OleDbCommand>物件、.NET Framework Data Provider for OLE DB 執行使用 OLE DB 的繫結**IRow**介面是否可用。</span><span class="sxs-lookup"><span data-stu-id="e48ea-253">When you specify <xref:System.Data.CommandBehavior.SingleRow> with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB **IRow** interface if it is available.</span></span> <span data-ttu-id="e48ea-254">否則，它會使用**IRowset**介面。</span><span class="sxs-lookup"><span data-stu-id="e48ea-254">Otherwise, it uses the **IRowset** interface.</span></span> <span data-ttu-id="e48ea-255">如果 SQL 陳述式預期只會傳回單一資料列，則指定 <xref:System.Data.CommandBehavior.SingleRow> 也可以增進應用程式效能。</span><span class="sxs-lookup"><span data-stu-id="e48ea-255">If your SQL statement is expected to return only a single row, specifying <xref:System.Data.CommandBehavior.SingleRow> can also improve application performance.</span></span>  
  
 <span data-ttu-id="e48ea-256">當<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`StoredProcedure`，則<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>屬性應設為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="e48ea-256">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="e48ea-257">命令執行這個預存程序，當您呼叫<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-257">The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="e48ea-258"><xref:System.Data.OleDb.OleDbDataReader>支援特殊的模式，可讓大型二進位值，有效率地讀取。</span><span class="sxs-lookup"><span data-stu-id="e48ea-258">The <xref:System.Data.OleDb.OleDbDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="e48ea-259">如需詳細資訊，請參閱 <<c0> `SequentialAccess` 設定<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-259">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="e48ea-260">在關閉之前<xref:System.Data.OleDb.OleDbConnection>，先關閉<xref:System.Data.OleDb.OleDbDataReader>物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-260">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="e48ea-261">您也必須關閉<xref:System.Data.OleDb.OleDbDataReader>如果您打算重複使用的物件<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-261">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.</span></span> <span data-ttu-id="e48ea-262">如果<xref:System.Data.OleDb.OleDbDataReader>會透過<xref:System.Data.CommandBehavior>設為`CloseConnection`，正在關閉<xref:System.Data.OleDb.OleDbDataReader>自動關閉連線。</span><span class="sxs-lookup"><span data-stu-id="e48ea-262">If the <xref:System.Data.OleDb.OleDbDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.OleDb.OleDbDataReader> closes the connection automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-263">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>，然後執行它，藉由傳遞的 TRANSACT-SQL SELECT 陳述式的字串和要用來連接到資料來源的字串。</span><span class="sxs-lookup"><span data-stu-id="e48ea-263">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span> <span data-ttu-id="e48ea-264"><xref:System.Data.CommandBehavior> 設定為 <xref:System.Data.CommandBehavior.CloseConnection>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-264"><xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e48ea-265">如果某項交易內容與原本連接登記的內容不同，便無法在那個交易內容中執行命令。</span><span class="sxs-lookup"><span data-stu-id="e48ea-265">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-266">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-266">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="oleDbCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-267">執行查詢，並傳回查詢所傳回的結果集第一個資料列的第一個資料行。</span><span class="sxs-lookup"><span data-stu-id="e48ea-267">Executes the query, and returns the first column of the first row in the result set returned by the query.</span></span> <span data-ttu-id="e48ea-268">會忽略其他的資料行或資料列。</span><span class="sxs-lookup"><span data-stu-id="e48ea-268">Additional columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="e48ea-269">結果集中第一個資料列的第一個資料行，或是 null 參考 (如果結果集是空的)。</span><span class="sxs-lookup"><span data-stu-id="e48ea-269">The first column of the first row in the result set, or a null reference if the result set is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-270">使用<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>方法來擷取單一值，例如，彙總的值，從資料來源。</span><span class="sxs-lookup"><span data-stu-id="e48ea-270">Use the <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> method to retrieve a single value, for example, an aggregate value, from a data source.</span></span> <span data-ttu-id="e48ea-271">這需要較少的程式碼比使用<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法，並接著執行作業以產生單一值所傳回的資料所需<xref:System.Data.OleDb.OleDbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-271">This requires less code than using the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method, and then performing the operations that are required to generate the single value using the data returned by an <xref:System.Data.OleDb.OleDbDataReader>.</span></span>  
  
 <span data-ttu-id="e48ea-272">一般<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>查詢可以進行格式化，如下列 C# 範例所示：</span><span class="sxs-lookup"><span data-stu-id="e48ea-272">A typical <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-273">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>，然後執行它使用<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-273">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="e48ea-274">此範例會傳遞為彙總的結果，傳回的 SQL 陳述式的字串和要用來連接到資料來源的字串。</span><span class="sxs-lookup"><span data-stu-id="e48ea-274">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e48ea-275">如果某項交易內容與原本連接登記的內容不同，便無法在那個交易內容中執行命令。</span><span class="sxs-lookup"><span data-stu-id="e48ea-275">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-276">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-276">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OleDbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbParameterCollection ^ Parameters { System::Data::OleDb::OleDbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.OleDb.OleDbParameterCollection" Usage="System.Data.OleDb.OleDbCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-277">取得 <see cref="T:System.Data.OleDb.OleDbParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-277">Gets the <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="e48ea-278">SQL 陳述式或預存程序的參數。</span><span class="sxs-lookup"><span data-stu-id="e48ea-278">The parameters of the SQL statement or stored procedure.</span></span> <span data-ttu-id="e48ea-279">預設為空集合。</span><span class="sxs-lookup"><span data-stu-id="e48ea-279">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-280">OLE DB.NET 提供者不支援具名的參數來傳遞參數至 SQL 陳述式或被呼叫的預存程序<xref:System.Data.OleDb.OleDbCommand>時<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設定為`Text`。</span><span class="sxs-lookup"><span data-stu-id="e48ea-280">The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="e48ea-281">在此情況下，您必須使用問號 （？） 預留位置。</span><span class="sxs-lookup"><span data-stu-id="e48ea-281">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="e48ea-282">例如：</span><span class="sxs-lookup"><span data-stu-id="e48ea-282">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="e48ea-283">因此，順序<xref:System.Data.OleDb.OleDbParameter>物件加入至<xref:System.Data.OleDb.OleDbParameterCollection>必須直接對應至問號預留位置參數的命令文字中的位置。</span><span class="sxs-lookup"><span data-stu-id="e48ea-283">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e48ea-284">如果在集合中的參數不相符的查詢執行的需求，可能會產生錯誤。</span><span class="sxs-lookup"><span data-stu-id="e48ea-284">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 <span data-ttu-id="e48ea-285">如需詳細資訊，請參閱 <<c0> [ 設定參數和參數資料類型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。</span><span class="sxs-lookup"><span data-stu-id="e48ea-285">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-286">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並顯示其參數。</span><span class="sxs-lookup"><span data-stu-id="e48ea-286">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters.</span></span> <span data-ttu-id="e48ea-287">若要這麼做，方法會傳遞<xref:System.Data.OleDb.OleDbConnection>，為 SQL SELECT 陳述式和陣列的查詢字串<xref:System.Data.OleDb.OleDbParameter>物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-287">To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-288">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-288">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="oleDbCommand.Prepare " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-289">在資料來源上建立命令已備妥 (或已編譯) 的版本。</span><span class="sxs-lookup"><span data-stu-id="e48ea-289">Creates a prepared (or compiled) version of the command on the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-290">如果<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>屬性設定為`TableDirect`，<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>不執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="e48ea-290">If the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="e48ea-291">如果<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>設定為`StoredProcedure`，以呼叫<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>應該會成功，雖然它可能會不讓執行任何作業。</span><span class="sxs-lookup"><span data-stu-id="e48ea-291">If <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> should succeed, although it may cause a no-op.</span></span>  
  
 <span data-ttu-id="e48ea-292">在呼叫之前<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>，準備的陳述式中指定每個參數的資料類型。</span><span class="sxs-lookup"><span data-stu-id="e48ea-292">Before you call <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span> <span data-ttu-id="e48ea-293">針對每個可變長度資料類型的參數，您必須設定**大小**所需的最大大小的屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-293">For each parameter that has a variable length data type, you must set the **Size** property to the maximum size needed.</span></span> <span data-ttu-id="e48ea-294"><xref:System.Data.OleDb.OleDbCommand.Prepare%2A> 如果不符合這些條件，則會傳回錯誤。</span><span class="sxs-lookup"><span data-stu-id="e48ea-294"><xref:System.Data.OleDb.OleDbCommand.Prepare%2A> returns an error if these conditions are not met.</span></span>  
  
 <span data-ttu-id="e48ea-295">如果您呼叫`Execute`方法之後呼叫<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>，任何大於所指定之值的參數值**大小**屬性會自動截斷為指定的原始大小，為參數，且沒有會傳回截斷錯誤。</span><span class="sxs-lookup"><span data-stu-id="e48ea-295">If you call an `Execute` method after you call <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>, any parameter value that is larger than the value specified by the **Size** property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="e48ea-296">輸出參數 （不論是否已備妥） 必須有使用者指定的資料類型。</span><span class="sxs-lookup"><span data-stu-id="e48ea-296">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="e48ea-297">如果您指定的可變長度資料類型時，您也必須指定最大值**大小**。</span><span class="sxs-lookup"><span data-stu-id="e48ea-297">If you specify a variable length data type, you must also specify the maximum **Size**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e48ea-298">下列範例會建立<xref:System.Data.OleDb.OleDbCommand>並開啟連接。</span><span class="sxs-lookup"><span data-stu-id="e48ea-298">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection.</span></span> <span data-ttu-id="e48ea-299">範例會藉由傳遞字串，是 SQL SELECT 陳述式和字串，用來連接到資料來源，然後準備資料來源上的預存程序。</span><span class="sxs-lookup"><span data-stu-id="e48ea-299">The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e48ea-300"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 未設定。</span><span class="sxs-lookup"><span data-stu-id="e48ea-300">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span></span>  
  
<span data-ttu-id="e48ea-301">-或-</span><span class="sxs-lookup"><span data-stu-id="e48ea-301">-or-</span></span> 
<span data-ttu-id="e48ea-302"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 沒有開啟。</span><span class="sxs-lookup"><span data-stu-id="e48ea-302">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not open.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-303">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-303">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="oleDbCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-304">重設 <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> 屬性為預設值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-304">Resets the <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> property to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-305">預設值<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>為 30 秒。</span><span class="sxs-lookup"><span data-stu-id="e48ea-305">The default value of the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-306">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-306">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.IDbCommand.ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e48ea-307">如需這個成員的說明，請參閱 <see cref="M:System.Data.IDbCommand.ExecuteReader" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-307">For a description of this member, see <see cref="M:System.Data.IDbCommand.ExecuteReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-308">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e48ea-308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e48ea-309">只有在 <xref:System.Data.OleDb.OleDbCommand> 執行個體轉換成 <xref:System.Data.IDbCommand> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e48ea-309">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-310">如需這個成員的說明，請參閱 <see cref="M:System.Data.IDbCommand.ExecuteReader" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-310">For a description of this member, see <see cref="M:System.Data.IDbCommand.ExecuteReader" />.</span></span></summary>
        <returns><span data-ttu-id="e48ea-311"><see cref="T:System.Data.IDataReader" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e48ea-311">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-312">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e48ea-312">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e48ea-313">只有在 <xref:System.Data.OleDb.OleDbCommand> 執行個體轉換成 <xref:System.Data.IDbCommand> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e48ea-313">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="e48ea-314">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-314">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e48ea-315">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並使用其中一個 <see cref="T:System.Data.CommandBehavior" /> 值來建置 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-315">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="e48ea-316">使用其中一個 <see cref="T:System.Data.IDataReader" /> 值所建置的 <see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-316">An <see cref="T:System.Data.IDataReader" /> built using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-317">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e48ea-317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e48ea-318">只有在 <xref:System.Data.OleDb.OleDbCommand> 執行個體轉換成 <xref:System.Data.IDbCommand> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e48ea-318">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 <span data-ttu-id="e48ea-319">如需這個成員的說明，請參閱 <xref:System.Data.IDbCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="e48ea-319">For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e48ea-320">如需這個成員的說明，請參閱 <see cref="M:System.ICloneable.Clone" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-320">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="e48ea-321">新的 <see cref="T:System.Object" />，即這個執行個體的複本。</span><span class="sxs-lookup"><span data-stu-id="e48ea-321">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-322">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e48ea-322">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e48ea-323">只有在 <xref:System.Data.OleDb.OleDbCommand> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e48ea-323">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbTransaction ^ Transaction { System::Data::OleDb::OleDbTransaction ^ get(); void set(System::Data::OleDb::OleDbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.OleDb.OleDbTransaction with get, set" Usage="System.Data.OleDb.OleDbCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Transaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-324">取得或設定在其中執行 <see cref="T:System.Data.OleDb.OleDbTransaction" /> 的 <see cref="T:System.Data.OleDb.OleDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-324">Gets or sets the <see cref="T:System.Data.OleDb.OleDbTransaction" /> within which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="e48ea-325"><see cref="T:System.Data.OleDb.OleDbTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-325">The <see cref="T:System.Data.OleDb.OleDbTransaction" />.</span></span> <span data-ttu-id="e48ea-326">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-326">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-327">您不能設定<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>如果它已經設為特定的值，因此命令執行程序中的屬性。</span><span class="sxs-lookup"><span data-stu-id="e48ea-327">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="e48ea-328">如果您設定交易屬性<xref:System.Data.OleDb.OleDbTransaction>未連線到相同的物件<xref:System.Data.OleDb.OleDbConnection>做為<xref:System.Data.OleDb.OleDbCommand>物件時，下次您嘗試執行陳述式擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e48ea-328">If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-329">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-329">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.OleDb.OleDbCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_UpdatedRowSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e48ea-330">取得或設定當由 <see cref="T:System.Data.DataRow" /> 的 <see langword="Update" /> 方法使用命令結果時，如何套用至 <see cref="T:System.Data.OleDb.OleDbDataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="e48ea-330">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see langword="Update" /> method of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="e48ea-331">其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-331">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e48ea-332">預設值<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>除非命令自動產生值為 Both (如同<xref:System.Data.OleDb.OleDbCommandBuilder>)，在此情況下的預設值為 None。</span><span class="sxs-lookup"><span data-stu-id="e48ea-332">The default <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> value is Both unless the command is automatically generated (as with the <xref:System.Data.OleDb.OleDbCommandBuilder>), in which case the default is None.</span></span>  
  
 <span data-ttu-id="e48ea-333">如需有關如何使用<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>屬性，請參閱 < [DataAdapter 的參數](~/docs/framework/data/adonet/dataadapter-parameters.md)。</span><span class="sxs-lookup"><span data-stu-id="e48ea-333">For more information about how to use the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e48ea-334">輸入的值不是其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e48ea-334">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="e48ea-335">使用命令</span><span class="sxs-lookup"><span data-stu-id="e48ea-335">Working with Commands</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>