<Type Name="OleDbFactory" FullName="System.Data.OleDb.OleDbFactory">
  <TypeSignature Language="C#" Value="public sealed class OleDbFactory : System.Data.Common.DbProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbFactory extends System.Data.Common.DbProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbFactory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbFactory&#xA;Inherits DbProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbFactory sealed : System::Data::Common::DbProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbProviderFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1985f-101">表示一組方法，用來建立 OLEDB 提供者之資料來源類別實作的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-101">Represents a set of methods for creating instances of the OLEDB provider's implementation of the data source classes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbFactory.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1985f-102">傳回強型別 <see cref="T:System.Data.Common.DbCommand" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-102">Returns a strongly-typed <see cref="T:System.Data.Common.DbCommand" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1985f-103"><see cref="T:System.Data.Common.DbCommand" /> 的新強型別執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-103">A new strongly-typed instance of <see cref="T:System.Data.Common.DbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1985f-104">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbCommand>執行個體：</span><span class="sxs-lookup"><span data-stu-id="1985f-104">The following code fragment returns a strongly-typed <xref:System.Data.Common.DbCommand> instance:</span></span>  
  
```vb  
Dim newFactory As OleDbFactory = OleDbFactory.Instance  
Dim cmd As DbCommand = newFactory.CreateCommand()  
```  
  
```csharp  
OleDbFactory newFactory = OleDbFactory.Instance;  
DbCommand cmd = newFactory.CreateCommand();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandBuilder">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbCommandBuilder CreateCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbCommandBuilder CreateCommandBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbFactory.CreateCommandBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCommandBuilder () As DbCommandBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbCommandBuilder ^ CreateCommandBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1985f-105">傳回強型別 <see cref="T:System.Data.Common.DbCommandBuilder" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-105">Returns a strongly-typed <see cref="T:System.Data.Common.DbCommandBuilder" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1985f-106"><see cref="T:System.Data.Common.DbCommandBuilder" /> 的新強型別執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-106">A new strongly-typed instance of <see cref="T:System.Data.Common.DbCommandBuilder" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1985f-107">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbCommandBuilder>執行個體：</span><span class="sxs-lookup"><span data-stu-id="1985f-107">The following code fragment returns a strongly-typed <xref:System.Data.Common.DbCommandBuilder> instance:</span></span>  
  
```vb  
Dim newFactory As OleDbFactory = OleDbFactory.Instance  
Dim cmd As DbCommandBuilder = newFactory.CreateCommandBuilder()  
```  
  
```csharp  
OleDbFactory newFactory = OleDbFactory.Instance;  
DbCommandBuilder cmd = newFactory.CreateCommandBuilder();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnection">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbConnection CreateConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbConnection CreateConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbFactory.CreateConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateConnection () As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbConnection ^ CreateConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1985f-108">傳回強型別 <see cref="T:System.Data.Common.DbConnection" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-108">Returns a strongly-typed <see cref="T:System.Data.Common.DbConnection" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1985f-109"><see cref="T:System.Data.Common.DbConnection" /> 的新強型別執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-109">A new strongly-typed instance of <see cref="T:System.Data.Common.DbConnection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1985f-110">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbConnection>執行個體：</span><span class="sxs-lookup"><span data-stu-id="1985f-110">The following code fragment returns a strongly-typed <xref:System.Data.Common.DbConnection> instance:</span></span>  
  
```vb  
Dim newFactory As OleDbFactory = OleDbFactory.Instance  
Dim cmd As DbConnection = newFactory.CreateConnection()  
```  
  
```csharp  
OleDbFactory newFactory = OleDbFactory.Instance;  
DbConnection cmd = newFactory.CreateConnection();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectionStringBuilder">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbFactory.CreateConnectionStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateConnectionStringBuilder () As DbConnectionStringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbConnectionStringBuilder ^ CreateConnectionStringBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnectionStringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1985f-111">傳回強型別 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-111">Returns a strongly-typed <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1985f-112"><see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的新強型別執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-112">A new strongly-typed instance of <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1985f-113">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbConnectionStringBuilder>執行個體：</span><span class="sxs-lookup"><span data-stu-id="1985f-113">The following code fragment returns a strongly-typed <xref:System.Data.Common.DbConnectionStringBuilder> instance:</span></span>  
  
```vb  
Dim newFactory As OleDbFactory = OleDbFactory.Instance  
Dim cmd As DbConnectionStringBuilder = newFactory.CreateConnectionStringBuilder()  
```  
  
```csharp  
OleDbFactory newFactory = OleDbFactory.Instance;  
DbConnectionStringBuilder cmd = newFactory.CreateConnectionStringBuilder();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataAdapter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbDataAdapter CreateDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbDataAdapter CreateDataAdapter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbFactory.CreateDataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDataAdapter () As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbDataAdapter ^ CreateDataAdapter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1985f-114">傳回強型別 <see cref="T:System.Data.Common.DbDataAdapter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-114">Returns a strongly-typed <see cref="T:System.Data.Common.DbDataAdapter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1985f-115"><see cref="T:System.Data.Common.DbDataAdapter" /> 的新強型別執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-115">A new strongly-typed instance of <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1985f-116">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbDataAdapter>執行個體：</span><span class="sxs-lookup"><span data-stu-id="1985f-116">The following code fragment returns a strongly-typed <xref:System.Data.Common.DbDataAdapter> instance:</span></span>  
  
```vb  
Dim newFactory As OleDbFactory = OleDbFactory.Instance  
Dim cmd As DbDataAdapter = newFactory.CreateDataAdapter()  
```  
  
```csharp  
OleDbFactory newFactory = OleDbFactory.Instance;  
DbDataAdapter cmd = newFactory.CreateDataAdapter();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbFactory.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1985f-117">傳回強型別 <see cref="T:System.Data.Common.DbParameter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-117">Returns a strongly-typed <see cref="T:System.Data.Common.DbParameter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1985f-118"><see cref="T:System.Data.Common.DbParameter" /> 的新強型別執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-118">A new strongly-typed instance of <see cref="T:System.Data.Common.DbParameter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1985f-119">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbParameter>執行個體：</span><span class="sxs-lookup"><span data-stu-id="1985f-119">The following code fragment returns a strongly-typed <xref:System.Data.Common.DbParameter> instance:</span></span>  
  
```vb  
Dim newFactory As OleDbFactory = OleDbFactory.Instance  
Dim cmd As DbParameter = newFactory.CreateParameter()  
```  
  
```csharp  
OleDbFactory newFactory = OleDbFactory.Instance;  
DbParameter cmd = newFactory.CreateParameter();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.CodeAccessPermission CreatePermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.CodeAccessPermission CreatePermission(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbFactory.CreatePermission(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission (state As PermissionState) As CodeAccessPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::CodeAccessPermission ^ CreatePermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.CodeAccessPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="1985f-120"><see cref="T:System.Security.Permissions.PermissionState" /> 列舉的成員。</span><span class="sxs-lookup"><span data-stu-id="1985f-120">A member of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="1985f-121">傳回強型別 <see cref="T:System.Security.CodeAccessPermission" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-121">Returns a strongly-typed <see cref="T:System.Security.CodeAccessPermission" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1985f-122"><see cref="T:System.Security.CodeAccessPermission" /> 的強型別執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-122">A strongly-typed instance of <see cref="T:System.Security.CodeAccessPermission" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OleDb.OleDbFactory Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OleDb.OleDbFactory Instance" />
      <MemberSignature Language="DocId" Value="F:System.Data.OleDb.OleDbFactory.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As OleDbFactory " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OleDb::OleDbFactory ^ Instance;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1985f-123">取得 <see cref="T:System.Data.OleDb.OleDbFactory" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1985f-123">Gets an instance of the <see cref="T:System.Data.OleDb.OleDbFactory" />.</span></span> <span data-ttu-id="1985f-124">這可以用來擷取強型別的資料物件。</span><span class="sxs-lookup"><span data-stu-id="1985f-124">This can be used to retrieve strongly-typed data objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1985f-125">下列程式碼片段使用<xref:System.Data.OleDb.OleDbFactory.Instance>要擷取欄位<xref:System.Data.OleDb.OleDbFactory>執行個體，然後再回頭執行強型別<xref:System.Data.Common.DbCommand>執行個體：</span><span class="sxs-lookup"><span data-stu-id="1985f-125">The following code fragment uses the <xref:System.Data.OleDb.OleDbFactory.Instance> field to retrieve an <xref:System.Data.OleDb.OleDbFactory> instance, and then return a strongly-typed <xref:System.Data.Common.DbCommand> instance:</span></span>  
  
```vb  
Dim newFactory As OleDbFactory = OleDbFactory.Instance  
Dim cmd As DbCommand = newFactory.CreateCommand()  
```  
  
```csharp  
OleDbFactory newFactory = OleDbFactory.Instance;  
DbCommand cmd = newFactory.CreateCommand();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>