<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0194a2bd3b968b32577535fb7ef20df04c38b1d2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390932" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="599b9-101">表示資料命令集和資料庫連接，這些是用來填入 <see cref="T:System.Data.DataSet" /> 並更新資料來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="599b9-101">Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-102"><xref:System.Data.OleDb.OleDbDataAdapter>當做之間的橋樑<xref:System.Data.DataSet>以及擷取和儲存資料的資料來源。</span><span class="sxs-lookup"><span data-stu-id="599b9-102">The <xref:System.Data.OleDb.OleDbDataAdapter> serves as a bridge between a <xref:System.Data.DataSet> and data source for retrieving and saving data.</span></span> <span data-ttu-id="599b9-103"><xref:System.Data.OleDb.OleDbDataAdapter>透過提供這個橋接器<xref:System.Data.Common.DbDataAdapter.Fill%2A>將資料載入到資料來源<xref:System.Data.DataSet>，並使用<xref:System.Data.Common.DbDataAdapter.Update%2A>傳送中所做的變更<xref:System.Data.DataSet>回資料來源。</span><span class="sxs-lookup"><span data-stu-id="599b9-103">The <xref:System.Data.OleDb.OleDbDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the data source into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="599b9-104">當<xref:System.Data.OleDb.OleDbDataAdapter>填滿<xref:System.Data.DataSet>，它尚未存在，如果會建立適當的資料表和資料行所傳回資料。</span><span class="sxs-lookup"><span data-stu-id="599b9-104">When the <xref:System.Data.OleDb.OleDbDataAdapter> fills a <xref:System.Data.DataSet>, it will create the appropriate tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="599b9-105">不過，主索引鍵資訊不包含隱含建立的結構描述中除非<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設定為<xref:System.Data.MissingSchemaAction.AddWithKey>。</span><span class="sxs-lookup"><span data-stu-id="599b9-105">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="599b9-106">您也可能<xref:System.Data.OleDb.OleDbDataAdapter>建立的結構描述<xref:System.Data.DataSet>，包括主索引鍵資訊的詳細資訊，再填入資料使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>。</span><span class="sxs-lookup"><span data-stu-id="599b9-106">You may also have the <xref:System.Data.OleDb.OleDbDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="599b9-107">如需詳細資訊，請參閱[將現有條件約束加入至資料集](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)。</span><span class="sxs-lookup"><span data-stu-id="599b9-107">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
 <span data-ttu-id="599b9-108">請注意，有些 OLE DB 提供者，包括 MSDataShape 提供者不會傳回基底資料表或主索引鍵資訊。</span><span class="sxs-lookup"><span data-stu-id="599b9-108">Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</span></span> <span data-ttu-id="599b9-109">因此，<xref:System.Data.OleDb.OleDbDataAdapter>無法正確地設定<xref:System.Data.DataTable.PrimaryKey%2A>屬性上建立任何<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="599b9-109">Therefore, the <xref:System.Data.OleDb.OleDbDataAdapter> cannot correctly set the <xref:System.Data.DataTable.PrimaryKey%2A> property on any created <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="599b9-110">在這些情況下您應該明確地指定主索引鍵中的資料表<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-110">In these cases you should explicitly specify primary keys for tables in the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="599b9-111"><xref:System.Data.OleDb.OleDbDataAdapter>也包含<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>，和<xref:System.Data.Common.DataAdapter.TableMappings%2A>屬性，以加速載入和更新的資料。</span><span class="sxs-lookup"><span data-stu-id="599b9-111">The <xref:System.Data.OleDb.OleDbDataAdapter> also includes the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DataAdapter.TableMappings%2A> properties to facilitate the loading and updating of data.</span></span>  
  
 <span data-ttu-id="599b9-112">當您建立的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>，屬性會設定為其初始值。</span><span class="sxs-lookup"><span data-stu-id="599b9-112">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, properties are set to their initial values.</span></span> <span data-ttu-id="599b9-113">如需這些值的清單，請參閱<xref:System.Data.OleDb.OleDbDataAdapter>建構函式。</span><span class="sxs-lookup"><span data-stu-id="599b9-113">For a list of these values, see the <xref:System.Data.OleDb.OleDbDataAdapter> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-114">下列範例會使用<xref:System.Data.OleDb.OleDbCommand>，<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.OleDb.OleDbConnection>，以選取記錄以存取資料來源，並填入<xref:System.Data.DataSet>與選取的資料列。</span><span class="sxs-lookup"><span data-stu-id="599b9-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows.</span></span> <span data-ttu-id="599b9-115">區域分布<xref:System.Data.DataSet>再傳回。</span><span class="sxs-lookup"><span data-stu-id="599b9-115">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="599b9-116">若要完成這項作業，方法會傳遞初始化<xref:System.Data.DataSet>，連接字串和 SQL SELECT 陳述式的查詢字串。</span><span class="sxs-lookup"><span data-stu-id="599b9-116">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-117">初始化 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-117">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="599b9-118">初始化 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-119">當您建立的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="599b9-119">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="599b9-120">屬性</span><span class="sxs-lookup"><span data-stu-id="599b9-120">Properties</span></span>|<span data-ttu-id="599b9-121">Initial value</span><span class="sxs-lookup"><span data-stu-id="599b9-121">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="599b9-122">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="599b9-122">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-123">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="599b9-123">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">
          <span data-ttu-id="599b9-124">
            <see cref="T:System.Data.OleDb.OleDbCommand" />，為 SELECT 陳述式或預存程序，且設定成 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 的 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-124">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="599b9-125">使用指定 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 做為 <see cref="T:System.Data.OleDb.OleDbCommand" /> 屬性，初始化 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-125">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-126">這項實作<xref:System.Data.OleDb.OleDbDataAdapter>建構函式<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>屬性中指定的值為`selectCommand`參數。</span><span class="sxs-lookup"><span data-stu-id="599b9-126">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="599b9-127">當您建立的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="599b9-127">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="599b9-128">屬性</span><span class="sxs-lookup"><span data-stu-id="599b9-128">Properties</span></span>|<span data-ttu-id="599b9-129">Initial value</span><span class="sxs-lookup"><span data-stu-id="599b9-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="599b9-130">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="599b9-130">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-131">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="599b9-131">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="599b9-132">字串，要由 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 的 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 屬性使用之 SQL SELECT 陳述式或預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-132">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnection">
          <span data-ttu-id="599b9-133">表示連接的 <see cref="T:System.Data.OleDb.OleDbConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-133">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="599b9-134">使用 <see cref="T:System.Data.OleDb.OleDbDataAdapter" />，初始化 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-134">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-135">這項實作<xref:System.Data.OleDb.OleDbDataAdapter>開啟和關閉<xref:System.Data.OleDb.OleDbConnection>如果它尚未開啟。</span><span class="sxs-lookup"><span data-stu-id="599b9-135">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> opens and closes an <xref:System.Data.OleDb.OleDbConnection> if it is not already open.</span></span> <span data-ttu-id="599b9-136">這很有用的應用程式，必須呼叫<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法的兩個或多個<xref:System.Data.OleDb.OleDbDataAdapter>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-136">This can be useful in an application that must call the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method for two or more <xref:System.Data.OleDb.OleDbDataAdapter> objects.</span></span> <span data-ttu-id="599b9-137">如果<xref:System.Data.OleDb.OleDbConnection>是已經開啟，您必須明確呼叫<xref:System.Data.OleDb.OleDbConnection.Close%2A>或**處置**關閉它。</span><span class="sxs-lookup"><span data-stu-id="599b9-137">If the <xref:System.Data.OleDb.OleDbConnection> is already open, you must explicitly call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** to close it.</span></span>  
  
 <span data-ttu-id="599b9-138">當您建立的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="599b9-138">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="599b9-139">屬性</span><span class="sxs-lookup"><span data-stu-id="599b9-139">Properties</span></span>|<span data-ttu-id="599b9-140">Initial value</span><span class="sxs-lookup"><span data-stu-id="599b9-140">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="599b9-141">您可以變更上述任一個屬性，透過呼叫另一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="599b9-141">You can change the value of either of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-142">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="599b9-142">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="599b9-143">字串，要由 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 的 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 屬性使用之 SQL SELECT 陳述式或預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-143">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnectionString">
          <span data-ttu-id="599b9-144">連接字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-144">The connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="599b9-145">使用 <see cref="T:System.Data.OleDb.OleDbDataAdapter" />，初始化 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-145">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-146">這個多載<xref:System.Data.OleDb.OleDbDataAdapter>建構函式使用`selectConnectionString`參數來設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="599b9-146">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor uses the `selectConnectionString` parameter to set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="599b9-147">不過，它不會開啟連接。</span><span class="sxs-lookup"><span data-stu-id="599b9-147">However, it does not open the connection.</span></span> <span data-ttu-id="599b9-148">您仍然必須明確開啟連接。</span><span class="sxs-lookup"><span data-stu-id="599b9-148">You still must explicitly open the connection.</span></span>  
  
 <span data-ttu-id="599b9-149">當您建立的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="599b9-149">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="599b9-150">屬性</span><span class="sxs-lookup"><span data-stu-id="599b9-150">Properties</span></span>|<span data-ttu-id="599b9-151">Initial value</span><span class="sxs-lookup"><span data-stu-id="599b9-151">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="599b9-152">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="599b9-152">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-153">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="599b9-153">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-154">取得或設定 SQL 陳述式或預存程序以從資料集中刪除資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-154">Gets or sets an SQL statement or stored procedure for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-155">
            <see cref="T:System.Data.OleDb.OleDbCommand" />，用來在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間刪除資料來源中的資料錄，這些資料錄對應至 <see cref="T:System.Data.DataSet" /> 中刪除的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-155">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-156">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>如果您將可以自動產生<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>屬性並使用<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="599b9-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="599b9-157">然後，您未設定任何其他命令會產生<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="599b9-157">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="599b9-158">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="599b9-159">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="599b9-159">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="599b9-160">當<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>指派到先前建立<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>不會被複製。</span><span class="sxs-lookup"><span data-stu-id="599b9-160">When <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="599b9-161"><xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>維護參考先前建立的<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-161">The <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-162">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="599b9-162">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="599b9-163">它假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-163">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-164">加入或重新整理 <see cref="T:System.Data.DataSet" /> 中的資料列，以符合在 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 物件中的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-164">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="599b9-165">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-165">A <see cref="T:System.Data.DataTable" /> to fill with records and, if it is required, schema.</span>
          </span>
        </param>
        <param name="ADODBRecordSet">
          <span data-ttu-id="599b9-166">ADO <see langword="Recordset" /> 或 <see langword="Record" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-166">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="599b9-167">使用指定的 <see cref="T:System.Data.DataTable" /> 和 ADO 物件，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中的資料列，以符合在 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 中的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-167">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataTable" /> and ADO objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="599b9-168">
            <see cref="T:System.Data.DataTable" /> 中重新整理成功的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-168">The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="599b9-169">這不包含被不傳回資料列之陳述式所影響的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-169">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-170">ActiveX Data Objects (ADO) 與 ADO.NET 之間的連結，您可以從 ADO 來複製資料，是單向作業<xref:System.Data.DataSet>，但必須由 ADO.NET 處理資料的任何更新。</span><span class="sxs-lookup"><span data-stu-id="599b9-170">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="599b9-171">這個多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法不會關閉輸入`Recordset`完成<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作業。</span><span class="sxs-lookup"><span data-stu-id="599b9-171">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not close the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="599b9-172">處理批次傳回多個結果，這項實作的 SQL 陳述式時<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 資料提供者擷取的只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="599b9-172">When handling batch SQL statements that return multiple results, this implementation of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</span></span>  
  
 <span data-ttu-id="599b9-173"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作業會將資料列加入到指定的目的地<xref:System.Data.DataTable>物件存放至<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-173">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="599b9-174">當您建立<xref:System.Data.DataTable>物件<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="599b9-174">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="599b9-175">不過，如果<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="599b9-175">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="599b9-176">您可以使用<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="599b9-176">You can use the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="599b9-177">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="599b9-177">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="599b9-178">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="599b9-178">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="599b9-179">如果存在主索引鍵資訊，任何重複的資料列和一致，而且只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-179">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="599b9-180">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="599b9-180">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="599b9-181">如果 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="599b9-181">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="599b9-182">您必須明確定義主索引鍵，以確定正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="599b9-182">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="599b9-183">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="599b9-183">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="599b9-184">若要正常搭配.NET Framework Data Provider for OLE DB`AddWithKey`需要原生 OLE DB 提供者藉由設定 DBPROP_UNIQUEROWS 屬性，取得必要的主索引鍵資訊，並接著會判斷哪些資料行是主索引鍵藉由檢查 DBCOLUMN_KEYCOLUMN 中的資料行`IColumnsRowset`。</span><span class="sxs-lookup"><span data-stu-id="599b9-184">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the `IColumnsRowset`.</span></span> <span data-ttu-id="599b9-185">或者使用者可能會明確地設定每個 primary key 條件約束<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="599b9-185">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="599b9-186">這可確保符合現有記錄的內送記錄會更新而不是附加。</span><span class="sxs-lookup"><span data-stu-id="599b9-186">This makes sure that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="599b9-187">如果<xref:System.Data.OleDb.OleDbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="599b9-187">If the <xref:System.Data.OleDb.OleDbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="599b9-188">空的資料行名稱會加入至<xref:System.Data.DataTable>，使用空字串的第一個資料行，後面接著"1"、"2"、"3"，等後續的空白資料行。</span><span class="sxs-lookup"><span data-stu-id="599b9-188">Empty column names are added to the <xref:System.Data.DataTable>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</span></span>  
  
 <span data-ttu-id="599b9-189">在 ADO 中的值`Recordset`或`Record`物件會轉換為通用語言執行階段類型中的儲存體<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-189">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="599b9-190">這個多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法不會隱含地呼叫`Close`ADO 時在物件上填滿作業已完成。</span><span class="sxs-lookup"><span data-stu-id="599b9-190">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not implicitly call `Close` on the ADO object when the fill operation is complete.</span></span> <span data-ttu-id="599b9-191">因此，務必呼叫`Close`當您完成使用 ADO`Recordset`或`Record`物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-191">Therefore, always call `Close` when you are finished using ADO `Recordset` or `Record` objects.</span></span> <span data-ttu-id="599b9-192">這可確保基礎連接到資料來源即時的方式，以發行和也會防止可能的存取違規，因為 unmanaged ADO 物件被記憶體回收所回收仍存在現有的參考時。</span><span class="sxs-lookup"><span data-stu-id="599b9-192">This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</span></span>  
  
 <span data-ttu-id="599b9-193">當您呼叫`TableMappings.Add`方法`DataAdapter`和明確對應的來源資料表參數為空字串、 資料集成功填滿使用來源資料表中，但資料集將會填入執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="599b9-193">When you call the `TableMappings.Add` method on a `DataAdapter` and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</span></span> <span data-ttu-id="599b9-194">例如，在下列範例中，`rDataSet`會填入執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="599b9-194">For example, in the following example, `rDataSet` will be populated with nothing.</span></span>  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 <span data-ttu-id="599b9-195">這個範例會示範如何可以略過的結果處理多個結果時。</span><span class="sxs-lookup"><span data-stu-id="599b9-195">This example shows how you can skip a result when dealing with multiple results.</span></span>  
  
 <span data-ttu-id="599b9-196">下列範例會使用<xref:System.Data.OleDb.OleDbDataAdapter>填滿<xref:System.Data.DataTable>使用 ADO `Recordset`。</span><span class="sxs-lookup"><span data-stu-id="599b9-196">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataTable> using an ADO `Recordset`.</span></span> <span data-ttu-id="599b9-197">這個範例假設您已建立 ADO `Recordset`。</span><span class="sxs-lookup"><span data-stu-id="599b9-197">This example assumes that you have created an ADO `Recordset`.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="599b9-198">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-198">A <see cref="T:System.Data.DataSet" /> to fill with records and, if it is required, schema.</span>
          </span>
        </param>
        <param name="ADODBRecordSet">
          <span data-ttu-id="599b9-199">ADO <see langword="Recordset" /> 或 <see langword="Record" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-199">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="599b9-200">用於資料表對應的來源資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-200">The source table used for the table mappings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="599b9-201">使用指定的 <see cref="T:System.Data.DataSet" />、ADO 物件和來源資料表名稱，加入或重新整理 <see cref="T:System.Data.DataSet" /> 中的資料列，以符合在 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 中的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-201">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="599b9-202">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-202">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="599b9-203">這不包含被不傳回資料列之陳述式所影響的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-203">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-204">ActiveX Data Objects (ADO) 與 ADO.NET 之間的連結，您可以從 ADO 來複製資料，是單向作業<xref:System.Data.DataSet>，但必須由 ADO.NET 處理資料的任何更新。</span><span class="sxs-lookup"><span data-stu-id="599b9-204">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="599b9-205"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法逐一查看多個結果藉由呼叫`NextRecordset`方法`Recordset`，關閉輸入`Recordset`完成<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作業。</span><span class="sxs-lookup"><span data-stu-id="599b9-205">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method iterates through multiple results by calling the `NextRecordset` method on the `Recordset`, closing the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="599b9-206"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作業會將資料列加入到指定的目的地<xref:System.Data.DataTable>物件存放至<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-206">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="599b9-207">當您建立<xref:System.Data.DataTable>物件<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="599b9-207">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="599b9-208">不過，如果<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="599b9-208">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="599b9-209">如果存在主索引鍵資訊，任何重複的資料列和一致，而且只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-209">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="599b9-210">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="599b9-210">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="599b9-211">若要正常搭配.NET Framework Data Provider for OLE DB`AddWithKey`需要藉由設定 DBPROP_UNIQUEROWS 屬性，取得必要的主索引鍵資訊，然後決定 哪些資料行是主索引鍵的原生 OLE DB 提供者藉由檢查 DBCOLUMN_KEYCOLUMN 中的資料行**IColumnsRowset**。</span><span class="sxs-lookup"><span data-stu-id="599b9-211">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the **IColumnsRowset**.</span></span> <span data-ttu-id="599b9-212">或者使用者可能會明確地設定每個 primary key 條件約束<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="599b9-212">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="599b9-213">這確保與現有資料錄相符的連入資料錄是更新，而不是附加。</span><span class="sxs-lookup"><span data-stu-id="599b9-213">This ensures that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="599b9-214">如果 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="599b9-214">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="599b9-215">您必須明確定義主索引鍵，以確定正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="599b9-215">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="599b9-216">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="599b9-216">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="599b9-217">如果`Recordset`的啟動前已關閉<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作業，而且不會產生錯誤。</span><span class="sxs-lookup"><span data-stu-id="599b9-217">If the `Recordset` is closed before the starting of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation, no error results.</span></span> <span data-ttu-id="599b9-218">這是必要以處理多個結果，因為查詢不會傳回資料列會指出由關閉`Recordset`。</span><span class="sxs-lookup"><span data-stu-id="599b9-218">This is required for handling of multiple results, because queries that do not return rows are indicated by a closed `Recordset`.</span></span> <span data-ttu-id="599b9-219"><xref:System.Data.OleDb.OleDbDataAdapter>只會呼叫`NextRecordset`上的封閉型`Recordset`然後繼續處理。</span><span class="sxs-lookup"><span data-stu-id="599b9-219">The <xref:System.Data.OleDb.OleDbDataAdapter> just calls `NextRecordset` on the closed `Recordset` and continues processing.</span></span>  
  
 <span data-ttu-id="599b9-220">在填入資料集發生錯誤，如果發生錯誤之前所加入的資料列會保留在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-220">If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="599b9-221">其餘的作業已中止。</span><span class="sxs-lookup"><span data-stu-id="599b9-221">The rest of the operation is aborted.</span></span>  
  
 <span data-ttu-id="599b9-222">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="599b9-222">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="599b9-223">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="599b9-223">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="599b9-224">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="599b9-224">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="599b9-225">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="599b9-225">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="599b9-226">使用資料行和資料表名稱的應用程式應該要確定這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="599b9-226">Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="599b9-227">在 ADO 中的值`Recordset`或`Record`物件會轉換為通用語言執行階段類型中的儲存體<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-227">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="599b9-228">這個多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法會隱含呼叫`Close`ADO 時在物件上填滿作業已完成。</span><span class="sxs-lookup"><span data-stu-id="599b9-228">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method implicitly calls `Close` on the ADO object when the fill operation is complete.</span></span>  
  
 <span data-ttu-id="599b9-229">下列範例會使用<xref:System.Data.OleDb.OleDbDataAdapter>填滿<xref:System.Data.DataSet>使用 ADO`Recordset`也就是 ADO`Record`物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-229">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataSet> using an ADO `Recordset` that is an ADO `Record` object.</span></span> <span data-ttu-id="599b9-230">這個範例假設您已建立 ADO`RecordSet`和`Record`物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-230">This example assumes that you have created an ADO `RecordSet` and `Record` object.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="599b9-231">來源資料表無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-231">The source table is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-232">取得或設定 SQL 陳述式或預存程序，用來插入新記錄到資料來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-232">Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-233">
            <see cref="T:System.Data.OleDb.OleDbCommand" />，用來在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間插入資料來源中的資料錄，這些資料錄對應至 <see cref="T:System.Data.DataSet" /> 中的新資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-233">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-234">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>如果您將可以自動產生<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>屬性並使用<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="599b9-234">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="599b9-235">然後，您未設定任何其他命令會產生<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="599b9-235">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="599b9-236">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-236">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="599b9-237">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="599b9-237">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="599b9-238">當<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>指派到先前建立<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>不會被複製。</span><span class="sxs-lookup"><span data-stu-id="599b9-238">When <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="599b9-239"><xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>維護參考先前建立的<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-239">The <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="599b9-240">如果執行此命令會傳回資料列，這些資料列可能會加入至<xref:System.Data.DataSet>根據如何設定<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>屬性<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-240">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-241">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="599b9-241">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="599b9-242">它假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-242">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-243">發生在已經針對資料來源執行命令後的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-243">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="599b9-244">系統會嘗試進行更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-244">The attempt to update is made.</span>
          </span>
          <span data-ttu-id="599b9-245">因此便發生這個事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-245">Therefore, the event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-246">當您使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，有兩個每個更新的資料列就會發生的事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-246">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="599b9-247">執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="599b9-247">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="599b9-248">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="599b9-248">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="599b9-249">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-249">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="599b9-250">執行命令。</span><span class="sxs-lookup"><span data-stu-id="599b9-250">The command executes.</span></span>  
  
4.  <span data-ttu-id="599b9-251">如果命令設定為`FirstReturnedRecord`，第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="599b9-251">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="599b9-252">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="599b9-252">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="599b9-253">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-253">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="599b9-254">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="599b9-254"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-255">下列範例所示<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>和<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated>所使用的事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-255">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-256">發生在已經針對資料來源執行命令前的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-256">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="599b9-257">系統會嘗試進行更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-257">The attempt to update is made.</span>
          </span>
          <span data-ttu-id="599b9-258">因此便發生這個事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-258">Therefore, the event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-259">當您使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，有兩個每個更新的資料列就會發生的事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-259">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="599b9-260">執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="599b9-260">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="599b9-261">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="599b9-261">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="599b9-262">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-262">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="599b9-263">執行命令。</span><span class="sxs-lookup"><span data-stu-id="599b9-263">The command executes.</span></span>  
  
4.  <span data-ttu-id="599b9-264">如果命令設定為`FirstReturnedRecord`，第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="599b9-264">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="599b9-265">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="599b9-265">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="599b9-266">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-266">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="599b9-267">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="599b9-267"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-268">下列範例所示<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>和<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated>所使用的事件。</span><span class="sxs-lookup"><span data-stu-id="599b9-268">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-269">取得或設定用來在資料來源中選取資料錄的 SQL 陳述式或預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-269">Gets or sets an SQL statement or stored procedure used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-270">
            <see cref="T:System.Data.OleDb.OleDbCommand" />，用來在 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 期間為 <see cref="T:System.Data.DataSet" /> 中的位置從資料來源中選取資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-270">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-271">當<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>指派到先前建立<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>不會被複製。</span><span class="sxs-lookup"><span data-stu-id="599b9-271">When <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="599b9-272"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>維護參考先前建立的<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-272">The <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
 <span data-ttu-id="599b9-273">如果<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>傳回任何資料列，資料表不會加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="599b9-273">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns no rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-274">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="599b9-274">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="599b9-275">它假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-275">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-276">如需這個成員的說明，請參閱 <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-276">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-277">
            <see cref="T:System.Data.IDbCommand" />，在更新期間用來為資料集中已刪除的資料列刪除在資料來源中的資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-277">An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-278">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="599b9-278">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="599b9-279">只有在 <xref:System.Data.OleDb.OleDbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="599b9-279">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-280">如需這個成員的說明，請參閱 <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-280">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-281">
            <see cref="T:System.Data.IDbCommand" />，在更新期間用來為資料集中的位置從資料來源插入資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-281">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-282">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="599b9-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="599b9-283">只有在 <xref:System.Data.OleDb.OleDbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="599b9-283">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-284">如需這個成員的說明，請參閱 <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-284">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-285">
            <see cref="T:System.Data.IDbCommand" />，在更新期間用來為資料集中的位置從資料來源選取資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-285">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-286">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="599b9-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="599b9-287">只有在 <xref:System.Data.OleDb.OleDbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="599b9-287">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-288">如需這個成員的說明，請參閱 <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-288">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-289">
            <see cref="T:System.Data.IDbCommand" />，在更新期間用來為資料集中已修改的資料列更新在資料來源中的資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-289">An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-290">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="599b9-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="599b9-291">只有在 <xref:System.Data.OleDb.OleDbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="599b9-291">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="599b9-292">如需這個成員的說明，請參閱 <see cref="M:System.ICloneable.Clone" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-292">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="599b9-293">新的 <see cref="T:System.Object" />，此物件是這個執行個體的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-293">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-294">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="599b9-294">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="599b9-295">只有在 <xref:System.Data.OleDb.OleDbDataAdapter> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="599b9-295">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b9-296">取得或設定用來在資料來源中更新記錄的 SQL 陳述式或預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-296">Gets or sets an SQL statement or stored procedure used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b9-297">
            <see cref="T:System.Data.OleDb.OleDbCommand" />，用來在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間更新資料來源中的記錄，這些記錄對應至 <see cref="T:System.Data.DataSet" /> 中修改的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b9-297">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b9-298">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>如果您將可以自動產生<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>屬性並使用<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="599b9-298">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="599b9-299">然後，您未設定任何其他命令會產生<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="599b9-299">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="599b9-300">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="599b9-300">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="599b9-301">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="599b9-301">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="599b9-302">當<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>指派到先前建立<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>不會被複製。</span><span class="sxs-lookup"><span data-stu-id="599b9-302">When <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="599b9-303"><xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>維護參考先前建立的<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-303">The <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="599b9-304">如果執行此命令會傳回資料列，這些資料列可能會合併與<xref:System.Data.DataSet>根據如何設定<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>屬性<xref:System.Data.OleDb.OleDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-304">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="599b9-305">下列範例會建立<xref:System.Data.OleDb.OleDbDataAdapter>並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="599b9-305">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="599b9-306">它假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="599b9-306">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>