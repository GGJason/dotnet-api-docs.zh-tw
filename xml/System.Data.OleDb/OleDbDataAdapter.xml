<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OleDbDataAdapter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50194a2bd3b968b32577535fb7ef20df04c38b1d2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0194a2bd3b968b32577535fb7ef20df04c38b1d2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Represents a set of data commands and a database connection that are used to fill the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update the data source.</source>
          <target state="translated">表示資料命令集和資料庫連接，這些是用來填入 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 並更新資料來源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> serves as a bridge between a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and data source for retrieving and saving data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>當做之間的橋樑<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>以及擷取和儲存資料的資料來源。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> provides this bridge by using <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to load data from the data source into the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and using <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> to send changes made in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> back to the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>透過提供這個橋接器<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>將資料載入到資料來源<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>，並使用<ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>傳送中所做的變更<ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>回資料來源。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> fills a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, it will create the appropriate tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>填滿<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，它尚未存在，如果會建立適當的資料表和資料行所傳回資料。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>However, primary key information is not included in the implicitly created schema unless the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>.</source>
          <target state="translated">不過，主索引鍵資訊不包含隱含建立的結構描述中除非<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>屬性設定為<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>You may also have the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> create the schema of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, including primary key information, before filling it with data using <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.</source>
          <target state="translated">您也可能<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>建立的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，包括主索引鍵資訊的詳細資訊，再填入資料使用<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>將現有條件約束加入至資料集<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</source>
          <target state="translated">請注意，有些 OLE DB 提供者，包括 MSDataShape 提供者不會傳回基底資料表或主索引鍵資訊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> cannot correctly set the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property on any created <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>無法正確地設定<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>屬性上建立任何<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>In these cases you should explicitly specify primary keys for tables in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在這些情況下您應該明確地指定主索引鍵中的資料表<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> also includes the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> properties to facilitate the loading and updating of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>也包含<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph>屬性，以加速載入和更新的資料。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, properties are set to their initial values.</source>
          <target state="translated">當您建立的執行個體<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，屬性會設定為其初始值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor.</source>
          <target state="translated">如需這些值的清單，請參閱<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, to select records from an Access data source, and populate a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with the selected rows.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>，<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>，以選取記錄以存取資料來源，並填入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>與選取的資料列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The filled <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is then returned.</source>
          <target state="translated">區域分布<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>再傳回。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>To accomplish this, the method is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, and a query string that is an SQL SELECT statement.</source>
          <target state="translated">若要完成這項作業，方法會傳遞初始化<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，連接字串和 SQL SELECT 陳述式的查詢字串。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，下列的讀取/寫入屬性設定為下列的初始值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Properties</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Initial value</source>
          <target state="translated">Initial value</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定其屬性的某些。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> that is a SELECT statement or stored procedure, and is set as the <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>，為 SELECT 陳述式或預存程序，且設定成 <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 的 <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> as the <ph id="ph3">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property.</source>
          <target state="translated">使用指定 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 做為 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> 屬性，初始化 <ph id="ph3">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property to the value specified in the <ph id="ph3">`selectCommand`</ph> parameter.</source>
          <target state="translated">這項實作<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>建構函式<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>屬性中指定的值為<ph id="ph3">`selectCommand`</ph>參數。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，下列的讀取/寫入屬性設定為下列的初始值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Properties</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Initial value</source>
          <target state="translated">Initial value</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定其屬性的某些。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">字串，要由 <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 屬性使用之 SQL SELECT 陳述式或預存程序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph> that represents the connection.</source>
          <target state="translated">表示連接的 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>，初始化 <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> opens and closes an <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> if it is not already open.</source>
          <target state="translated">這項實作<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>開啟和關閉<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>如果它尚未開啟。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This can be useful in an application that must call the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method for two or more <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> objects.</source>
          <target state="translated">這很有用的應用程式，必須呼叫<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法的兩個或多個<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> is already open, you must explicitly call <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> to close it.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>是已經開啟，您必須明確呼叫<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph>或<bpt id="p1">**</bpt>處置<ept id="p1">**</ept>關閉它。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，下列的讀取/寫入屬性設定為下列的初始值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Properties</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Initial value</source>
          <target state="translated">Initial value</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>You can change the value of either of these properties through a separate call to the property.</source>
          <target state="translated">您可以變更上述任一個屬性，透過呼叫另一個屬性的值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定其屬性的某些。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">字串，要由 <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 屬性使用之 SQL SELECT 陳述式或預存程序。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>The connection string.</source>
          <target state="translated">連接字串。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>，初始化 <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor uses the <ph id="ph2">`selectConnectionString`</ph> parameter to set the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>建構函式使用<ph id="ph2">`selectConnectionString`</ph>參數來設定<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>However, it does not open the connection.</source>
          <target state="translated">不過，它不會開啟連接。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>You still must explicitly open the connection.</source>
          <target state="translated">您仍然必須明確開啟連接。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，下列的讀取/寫入屬性設定為下列的初始值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Properties</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Initial value</source>
          <target state="translated">Initial value</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定其屬性的某些。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</source>
          <target state="translated">取得或設定 SQL 陳述式或預存程序以從資料集中刪除資料錄。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source that correspond to deleted rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>，用來在 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 期間刪除資料來源中的資料錄，這些資料錄對應至 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中刪除的資料列。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">期間<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>如果您將可以自動產生<ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>屬性並使用<ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">然後，您未設定任何其他命令會產生<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此產生邏輯需要索引鍵資料行資訊會出現在<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>指派到先前建立<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>不會被複製。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>維護參考先前建立的<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">它假設您已經建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">加入或重新整理 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的資料列，以符合在 ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Record" /&gt;</ph> 物件中的資料列。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to fill with records and, if it is required, schema.</source>
          <target state="translated">要填入資料錄和結構描述 (如果必要的話) 的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>An ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph2">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="Record" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Adds or refreshes rows in a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object using the specified <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> and ADO objects.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 和 ADO 物件，加入或重新整理 <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的資料列，以符合在 ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Record" /&gt;</ph> 中的資料列。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The number of rows successfully refreshed to the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中重新整理成功的資料列數目。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">這不包含被不傳回資料列之陳述式所影響的資料列。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ActiveX Data Objects (ADO) 與 ADO.NET 之間的連結，您可以從 ADO 來複製資料，是單向作業<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，但必須由 ADO.NET 處理資料的任何更新。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method does not close the input <ph id="ph2">`Recordset`</ph> on completion of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>方法不會關閉輸入<ph id="ph2">`Recordset`</ph>完成<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>作業。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When handling batch SQL statements that return multiple results, this implementation of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</source>
          <target state="translated">處理批次傳回多個結果，這項實作的 SQL 陳述式時<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 資料提供者擷取的只有第一個結果的結構描述資訊。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>作業會將資料列加入到指定的目的地<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>物件存放至<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>、 建立<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>如果它不存在的物件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation ordinarily creates only column name metadata.</source>
          <target state="translated">當您建立<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>物件<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>作業通常會建立只有資料行名稱中繼資料。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">不過，如果<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>屬性設定為<ph id="ph2">`AddWithKey`</ph>，也會建立適當的主索引鍵和條件約束。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>上多次相同的方法<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果沒有主索引鍵存在，將內送資料列附加至<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果存在主索引鍵資訊，任何重複的資料列和一致，而且只能出現一次在<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>對應於<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">主索引鍵資訊可能會設定透過<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>，藉由指定<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>，或藉由設定<ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>屬性<ph id="ph5">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 傳回 OUTER JOIN 的結果，則 <ph id="ph2">`DataAdapter`</ph> 便不會為產生的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 設定 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必須明確定義主索引鍵，以確定正確解析重複的資料列。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>定義主索引鍵<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <ph id="ph2">`IColumnsRowset`</ph>.</source>
          <target state="translated">若要正常搭配.NET Framework Data Provider for OLE DB<ph id="ph1">`AddWithKey`</ph>需要原生 OLE DB 提供者藉由設定 DBPROP_UNIQUEROWS 屬性，取得必要的主索引鍵資訊，並接著會判斷哪些資料行是主索引鍵藉由檢查 DBCOLUMN_KEYCOLUMN 中的資料行<ph id="ph2">`IColumnsRowset`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Alternatively the user may explicitly set the primary key constraints on each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">或者使用者可能會明確地設定每個 primary key 條件約束<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This makes sure that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">這可確保符合現有記錄的內送記錄會更新而不是附加。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>遇到重複的資料行在填入<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它會產生後續的資料行，並使用模式的名稱"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"等等。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Empty column names are added to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</source>
          <target state="translated">空的資料行名稱會加入至<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，使用空字串的第一個資料行，後面接著"1"、"2"、"3"，等後續的空白資料行。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在 ADO 中的值<ph id="ph1">`Recordset`</ph>或<ph id="ph2">`Record`</ph>物件會轉換為通用語言執行階段類型中的儲存體<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method does not implicitly call <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>方法不會隱含地呼叫<ph id="ph2">`Close`</ph>ADO 時在物件上填滿作業已完成。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Therefore, always call <ph id="ph1">`Close`</ph> when you are finished using ADO <ph id="ph2">`Recordset`</ph> or <ph id="ph3">`Record`</ph> objects.</source>
          <target state="translated">因此，務必呼叫<ph id="ph1">`Close`</ph>當您完成使用 ADO<ph id="ph2">`Recordset`</ph>或<ph id="ph3">`Record`</ph>物件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</source>
          <target state="translated">這可確保基礎連接到資料來源即時的方式，以發行和也會防止可能的存取違規，因為 unmanaged ADO 物件被記憶體回收所回收仍存在現有的參考時。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When you call the <ph id="ph1">`TableMappings.Add`</ph> method on a <ph id="ph2">`DataAdapter`</ph> and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</source>
          <target state="translated">當您呼叫<ph id="ph1">`TableMappings.Add`</ph>方法<ph id="ph2">`DataAdapter`</ph>和明確對應的來源資料表參數為空字串、 資料集成功填滿使用來源資料表中，但資料集將會填入執行任何動作。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>For example, in the following example, <ph id="ph1">`rDataSet`</ph> will be populated with nothing.</source>
          <target state="translated">例如，在下列範例中，<ph id="ph1">`rDataSet`</ph>會填入執行任何動作。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This example shows how you can skip a result when dealing with multiple results.</source>
          <target state="translated">這個範例會示範如何可以略過的結果處理多個結果時。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> to fill a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> using an ADO <ph id="ph3">`Recordset`</ph>.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>填滿<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>使用 ADO <ph id="ph3">`Recordset`</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This example assumes that you have created an ADO <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">這個範例假設您已建立 ADO <ph id="ph1">`Recordset`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if it is required, schema.</source>
          <target state="translated">要填入資料錄和結構描述 (如果必要的話) 的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>An ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph2">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="Record" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The source table used for the table mappings.</source>
          <target state="translated">用於資料表對應的來源資料表。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object using the specified <ph id="ph4">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, ADO object, and source table name.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>、ADO 物件和來源資料表名稱，加入或重新整理 <ph id="ph4">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的資料列，以符合在 ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Record" /&gt;</ph> 中的資料列。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">成功加入至 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 或在其中重新整理的資料列數目。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">這不包含被不傳回資料列之陳述式所影響的資料列。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ActiveX Data Objects (ADO) 與 ADO.NET 之間的連結，您可以從 ADO 來複製資料，是單向作業<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，但必須由 ADO.NET 處理資料的任何更新。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method iterates through multiple results by calling the <ph id="ph2">`NextRecordset`</ph> method on the <ph id="ph3">`Recordset`</ph>, closing the input <ph id="ph4">`Recordset`</ph> on completion of the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>方法逐一查看多個結果藉由呼叫<ph id="ph2">`NextRecordset`</ph>方法<ph id="ph3">`Recordset`</ph>，關閉輸入<ph id="ph4">`Recordset`</ph>完成<ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>作業。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>作業會將資料列加入到指定的目的地<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>物件存放至<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>、 建立<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>如果它不存在的物件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation ordinarily creates only column name metadata.</source>
          <target state="translated">當您建立<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>物件<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>作業通常會建立只有資料行名稱中繼資料。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">不過，如果<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>屬性設定為<ph id="ph2">`AddWithKey`</ph>，也會建立適當的主索引鍵和條件約束。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果存在主索引鍵資訊，任何重複的資料列和一致，而且只能出現一次在<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>對應於<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">主索引鍵資訊可能會設定透過<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>，藉由指定<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>，或藉由設定<ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>屬性<ph id="ph5">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>.</source>
          <target state="translated">若要正常搭配.NET Framework Data Provider for OLE DB<ph id="ph1">`AddWithKey`</ph>需要藉由設定 DBPROP_UNIQUEROWS 屬性，取得必要的主索引鍵資訊，然後決定 哪些資料行是主索引鍵的原生 OLE DB 提供者藉由檢查 DBCOLUMN_KEYCOLUMN 中的資料行<bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Alternatively the user may explicitly set the primary key constraints on each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">或者使用者可能會明確地設定每個 primary key 條件約束<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This ensures that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">這確保與現有資料錄相符的連入資料錄是更新，而不是附加。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 傳回 OUTER JOIN 的結果，則 <ph id="ph2">`DataAdapter`</ph> 便不會為產生的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 設定 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必須明確定義主索引鍵，以確定正確解析重複的資料列。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>定義主索引鍵<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">`Recordset`</ph> is closed before the starting of the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation, no error results.</source>
          <target state="translated">如果<ph id="ph1">`Recordset`</ph>的啟動前已關閉<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>作業，而且不會產生錯誤。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This is required for handling of multiple results, because queries that do not return rows are indicated by a closed <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">這是必要以處理多個結果，因為查詢不會傳回資料列會指出由關閉<ph id="ph1">`Recordset`</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> just calls <ph id="ph2">`NextRecordset`</ph> on the closed <ph id="ph3">`Recordset`</ph> and continues processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>只會呼叫<ph id="ph2">`NextRecordset`</ph>上的封閉型<ph id="ph3">`Recordset`</ph>然後繼續處理。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在填入資料集發生錯誤，如果發生錯誤之前所加入的資料列會保留在<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The rest of the operation is aborted.</source>
          <target state="translated">其餘的作業已中止。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>物件遇到重複的資料行在填入<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它會產生後續的資料行，並使用模式的名稱"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"等等。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果內送資料中包含未命名資料行，它們會放置於<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根據模式"Column1"、"Column2"，等等。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">當多個結果集加入至<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>放置於個別的資料表中每個結果集。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用資料行和資料表名稱的應用程式應該要確定這些命名模式衝突不會發生。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在 ADO 中的值<ph id="ph1">`Recordset`</ph>或<ph id="ph2">`Record`</ph>物件會轉換為通用語言執行階段類型中的儲存體<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method implicitly calls <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>方法會隱含呼叫<ph id="ph2">`Close`</ph>ADO 時在物件上填滿作業已完成。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> using an ADO <ph id="ph3">`Recordset`</ph> that is an ADO <ph id="ph4">`Record`</ph> object.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>填滿<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>使用 ADO<ph id="ph3">`Recordset`</ph>也就是 ADO<ph id="ph4">`Record`</ph>物件。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This example assumes that you have created an ADO <ph id="ph1">`RecordSet`</ph> and <ph id="ph2">`Record`</ph> object.</source>
          <target state="translated">這個範例假設您已建立 ADO<ph id="ph1">`RecordSet`</ph>和<ph id="ph2">`Record`</ph>物件。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">來源資料表無效。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</source>
          <target state="translated">取得或設定 SQL 陳述式或預存程序，用來插入新記錄到資料來源。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source that correspond to new rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>，用來在 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 期間插入資料來源中的資料錄，這些資料錄對應至 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的新資料列。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">期間<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>如果您將可以自動產生<ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>屬性並使用<ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">然後，您未設定任何其他命令會產生<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此產生邏輯需要索引鍵資料行資訊會出現在<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>指派到先前建立<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>不會被複製。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>維護參考先前建立的<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>If execution of this command returns rows, these rows may be added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated">如果執行此命令會傳回資料列，這些資料列可能會加入至<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根據如何設定<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">它假設您已經建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> after a command is executed against the data source.</source>
          <target state="translated">發生在已經針對資料來源執行命令後的 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 期間。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The attempt to update is made.</source>
          <target state="translated">系統會嘗試進行更新。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>Therefore, the event occurs.</source>
          <target state="translated">因此便發生這個事件。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">當您使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，有兩個每個更新的資料列就會發生的事件。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The order of execution is as follows:</source>
          <target state="translated">執行的順序如下所示：</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>移到參數值。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">便會引發 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The command executes.</source>
          <target state="translated">執行命令。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果命令設定為<ph id="ph1">`FirstReturnedRecord`</ph>，第一個傳回的結果放在<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果沒有輸出參數，它們會放置於<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">便會引發 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> events being used.</source>
          <target state="translated">下列範例所示<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph>所使用的事件。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> before a command is executed against the data source.</source>
          <target state="translated">發生在已經針對資料來源執行命令前的 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 期間。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The attempt to update is made.</source>
          <target state="translated">系統會嘗試進行更新。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>Therefore, the event occurs.</source>
          <target state="translated">因此便發生這個事件。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">當您使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，有兩個每個更新的資料列就會發生的事件。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The order of execution is as follows:</source>
          <target state="translated">執行的順序如下所示：</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>移到參數值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">便會引發 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The command executes.</source>
          <target state="translated">執行命令。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果命令設定為<ph id="ph1">`FirstReturnedRecord`</ph>，第一個傳回的結果放在<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果沒有輸出參數，它們會放置於<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">便會引發 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> events being used.</source>
          <target state="translated">下列範例所示<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph>所使用的事件。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">取得或設定用來在資料來源中選取資料錄的 SQL 陳述式或預存程序。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>，用來在 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> 期間為 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的位置從資料來源中選取資料錄。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>指派到先前建立<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>不會被複製。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>維護參考先前建立的<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns no rows, no tables are added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>傳回任何資料列，資料表不會加入至<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，並會引發任何例外狀況。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">它假設您已經建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during an update to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>，在更新期間用來為資料集中已刪除的資料列刪除在資料來源中的資料錄。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during an update to insert records from a data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>，在更新期間用來為資料集中的位置從資料來源插入資料錄。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during an update to select records from a data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>，在更新期間用來為資料集中的位置從資料來源選取資料錄。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during an update to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>，在更新期間用來為資料集中已修改的資料列更新在資料來源中的資料錄。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a copy of this instance.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，此物件是這個執行個體的複本。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">取得或設定用來在資料來源中更新記錄的 SQL 陳述式或預存程序。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source that correspond to modified rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>，用來在 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 期間更新資料來源中的記錄，這些記錄對應至 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中修改的資料列。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">期間<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>如果您將可以自動產生<ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>屬性並使用<ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">然後，您未設定任何其他命令會產生<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此產生邏輯需要索引鍵資料行資訊會出現在<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>指派到先前建立<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>不會被複製。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>維護參考先前建立的<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>If execution of this command returns rows, these rows may be merged with the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated">如果執行此命令會傳回資料列，這些資料列可能會合併與<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根據如何設定<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> properties.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>並設定<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">它假設您已經建立<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>物件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>