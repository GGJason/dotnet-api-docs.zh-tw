<Type Name="OleDbConnectionStringBuilder" FullName="System.Data.OleDb.OleDbConnectionStringBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d84b836462e84b9ab6b08814d8699858ff2944e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OleDbConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Provider")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbConnectionStringBuilderConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供簡單的方法，以建立和管理 <see cref="T:System.Data.OleDb.OleDbConnection" /> 類別使用之連接字串的內容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連接字串產生器 (Builder) 可讓開發人員使用類別的屬性和方法，以程式設計方式建立語法正確的連接字串，以及剖析和重建現有的連接字串。 連接字串產生器提供強型別對應至 OLE DB 連接所允許的已知索引鍵/值組的屬性，並且開發人員可以新增任意索引鍵/值組的任何其他連接字串值。 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 類別會實作 <xref:System.ComponentModel.ICustomTypeDescriptor> 介面。 這表示，此類別適用於使用 Visual Studio.NET 設計工具在設計階段。 當開發人員使用強型別資料集內建置和強型別的連接 Visual Studio.NET 設計工具時，強型別的連接字串產生器類別會顯示它的型別相關聯的屬性，也會有轉換器，可以將對應的一般已知索引鍵的值。  
  
 必須建立連接字串做為應用程式一部分的開發人員可以使用 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 類別來建置及修改連接字串。 此類別也可讓您輕鬆管理儲存在應用程式組態檔內的連接字串。 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>只執行一組有限的已知索引鍵/值組的檢查。 因此，這個類別可以用來建立無效的連接字串。 下表列出的已知索引鍵和其對應的屬性內<xref:System.Data.OleDb.OleDbConnectionStringBuilder>類別和其預設值。 除了這些特定值時，開發人員也可以加入的任何索引鍵/值組集合內所包含<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體：  
  
|Key|屬性|預設值|  
|---------|--------------|-------------------|  
|檔案名稱|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A>|""|  
|提供者|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>|""|  
|資料來源|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A>|""|  
|Persist Security Info|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>|False|  
|OLE DB 服務|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>|-13|  
  
 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A>屬性控制代碼嘗試插入惡意的項目。 例如，下列程式碼，使用預設<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A>屬性 （C# 中為索引子） 正確逸出巢狀索引鍵/值組：  
  
```vb  
Dim builder As _  
    New System.Data.OleDb.OleDbConnectionStringBuilder  
builder("Provider") = "Microsoft.Jet.OLEDB.4.0"  
builder("Data Source") = "C:\Sample.mdb"  
builder("User Id") = "Admin;NewValue=Bad"  
```  
  
```csharp  
System.Data.OleDb.OleDbConnectionStringBuilder builder =   
    new System.Data.OleDb.OleDbConnectionStringBuilder();  
builder["Provider"] = "Microsoft.Jet.OLEDB.4.0";  
builder["Data Source"] = "C:\\Sample.mdb";  
builder["User Id"] = "Admin;NewValue=Bad";  
```  
  
 結果是以安全方式處理無效值的下列連接字串：  
  
```  
Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Sample.mdb;User ID="Admin;NewValue=Bad"  
```  
  
   
  
## Examples  
 下列主控台應用程式建立多個 OLE DB 資料庫的連接字串。 首先，範例會建立 Microsoft Access 資料庫的連接字串，並接著會建立 IBM DB2 資料庫的連接字串。 此範例也會剖析現有的連接字串，並示範操作連接字串內容的各種方式。  
  
> [!NOTE]
>  這個範例包含了密碼，可示範 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何搭配連接字串使用。 我們建議在您的應用程式中使用 Windows 驗證。 如果您必須使用密碼，請勿在您的應用程式中包含硬式編碼的密碼。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">物件內部連接資訊的基準。 剖析成索引鍵/值組。</param>
        <summary>初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 類別的新執行個體。 所提供的連接字串會提供執行個體內部連接資訊的資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性直接 (藉由設定<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>屬性) 或將連接字串做為參數傳遞的建構函式，可能會影響集合內所包含的索引鍵/值組<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體。 設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>"sqloledb，"的屬性，例如，將所有標準 SQL 連接字串屬性。 請參閱本主題，如需示範此行為的範例。  
  
 對於某些提供者，指定連接字串內<xref:System.Data.OleDb.OleDbConnectionStringBuilder>建構函式會被重新配置提供索引鍵/值組的順序。  
  
   
  
## Examples  
 下列範例會建立多個<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體，將不同的連接字串傳遞至每個案例的建構函式。 請注意如何設定與連接相關聯的提供者變更物件的集合中的預先定義的索引鍵/值組的集合。  
  
> [!NOTE]
>  這個範例包含了密碼，可示範 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何搭配連接字串使用。 我們建議在您的應用程式中使用 Windows 驗證。 如果您必須使用密碼，請勿在您的應用程式中包含硬式編碼的密碼。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Ctor/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Ctor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">連接字串的格式錯誤 (也許在索引鍵/值組中遺漏了必要的 "=")。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 執行個體的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A>方法會移除所有索引鍵/值配對<xref:System.Data.OleDb.OleDbConnectionStringBuilder>，並重設所有對應的屬性為其預設值。 其中包括將 <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A> 屬性設定為 0 以及將 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 屬性設定為空字串。  
  
   
  
## Examples  
 下列範例示範呼叫的效果<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A>方法。 此範例會以某些索引鍵/值組填入 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>，然後呼叫 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A> 方法並顯示結果。  
  
> [!NOTE]
>  這個範例包含了密碼，可示範 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何搭配連接字串使用。 我們建議在您的應用程式中使用 Windows 驗證。 如果您必須使用密碼，請勿在您的應用程式中包含硬式編碼的密碼。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Clear/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Clear/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要在 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 中尋找的索引鍵。</param>
        <summary>判斷 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 是否包含特定索引鍵。</summary>
        <returns>如果 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 包含具有指定之索引鍵的項目，則為 true，否則為 false。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性可能會隱含地填入適當的索引鍵/值組的提供者，<xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A>方法不會傳回`true`隱含提供的索引鍵。 這個方法會傳回`true`僅適用於明確提供的索引鍵。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體，設定的某些屬性，並嘗試判斷是否各種索引鍵存在於物件中藉由呼叫<xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public string DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Data Source")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要連接的目標資料來源名稱。</summary>
        <value>
          <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /> 屬性的值，或如未提供任何值，則為 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果當您嘗試設定此屬性時，傳入的值為 null，則會重設 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A> 屬性。 如果未設定值，而且開發人員嘗試用來擷取屬性，則傳回值是`String.Empty`。 此屬性會對應至連接字串內的 「 資料來源 」 索引鍵。  
  
   
  
## Examples  
 下列範例主控台應用程式建立新<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體，然後按一下 設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A>和<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性。 最後，此範例會建立新<xref:System.Data.OleDb.OleDbConnection>執行個體，並使用該連接到指定的資料存放區物件。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.DataSource/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("File Name")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來連接到資料來源的 Universal Data Link (UDL) 檔案名稱。</summary>
        <value>
          <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /> 屬性的值，或如未提供任何值，則為 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果當您嘗試設定此屬性時，傳入的值為 null，則會重設 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A> 屬性。 如果未設定值，而且開發人員嘗試用來擷取屬性，則傳回值是`String.Empty`。 此屬性會對應至連接字串內的"FileName"索引鍵。  
  
 設定這個屬性不會造成<xref:System.Data.OleDb.OleDbConnectionStringBuilder>讀取所參考的檔案的內容，即使該檔案存在且包含有效的連接資訊的執行個體。 設定此屬性沒有任何作用以外，表示要連接到資料來源時所讀取的檔案。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetProperties(class System.Collections.Hashtable propertyDescriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetProperties (propertyDescriptors As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetProperties(System::Collections::Hashtable ^ propertyDescriptors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDescriptors" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="propertyDescriptors">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要取得或設定之項目的索引鍵。</param>
        <summary>取得或設定與指定之索引鍵相關聯的值。 在 C# 中，這個屬性是索引子 (Indexer)。</summary>
        <value>與指定之索引鍵關聯的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性可以對應項目加入集合的索引鍵/值組 （取決於特定的提供者的行為），您可能會無法擷取您還沒有設定明確的索引鍵的值。 例如，當您設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>屬性為"sqloledb 」，您可以擷取的"Workstation ID"值即使您沒有設定它自己。 如需示範本主題中的範例，請參閱。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A>屬性 （C# 中為索引子） 來擷取及設定索引鍵/值組的集合內的值。 請注意，設定提供者，在此情況下，也提供與所選的提供者相關聯的所有索引鍵/值組的預設值。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Item/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">連接字串的格式錯誤 (也許在索引鍵/值組中遺漏了必要的 "=")。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Collections.ICollection" /> 中包含索引鍵的 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />。</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> 中包含索引鍵的 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然 <xref:System.Collections.ICollection> 中值的順序並未指定，但此順序會與 <xref:System.Collections.ICollection> 屬性傳回之 <xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> 中關聯值的順序相同。  
  
   
  
## Examples  
 下列主控台應用程式範例會建立新的 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>。 此程式碼會針對 <xref:System.Collections.ICollection> 屬性傳回的 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Keys%2A> 執行迴圈，以顯示索引鍵/值組。  
  
> [!NOTE]
>  這個範例包含了密碼，可示範 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何搭配連接字串使用。 我們建議在您的應用程式中使用 Windows 驗證。 如果您必須使用密碼，請勿在您的應用程式中包含硬式編碼的密碼。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Keys#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Keys/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Keys#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Keys/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OleDbServices">
      <MemberSignature Language="C#" Value="public int OleDbServices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OleDbServices" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices" />
      <MemberSignature Language="VB.NET" Value="Public Property OleDbServices As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OleDbServices { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("OLE DB Services")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbServicesConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要傳遞的值，對象為連接字串內的 OLE DB 服務索引鍵。</summary>
        <value>傳回與連接字串內 OLE DB 服務索引鍵對應的值。 預設值為 -13。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OLE DB 服務內的索引鍵的連接字串中定義值，可讓開發人員啟用或停用 OLE DB 服務的組合。 屬性包含值，OLE DB 文件中所述的位元組合。 如需有關適當的值，這個屬性的詳細資訊，請參閱 OLE DB 程式設計人員參考，特別是，「 提供者服務預設值的正在覆寫 」。 這個屬性的預設值是-13。 這會對應至資源集中化、 自動交易登記、 工作階段層級的彙總和任何用戶端資料指標引擎的要求。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>兩種方式的屬性。 首先，它會指派值直接屬性，以示範產生連接字串對此動作的影響。 然後，範例會清除<xref:System.Data.OleDb.OleDbConnectionStringBuilder>並指定完整的連線字串，包含 OLE DB 服務機碼的值。 此步驟中示範的設定值，從連接字串修改<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>以及屬性。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.OleDbServices/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.OleDbServices/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistSecurityInfo">
      <MemberSignature Language="C#" Value="public bool PersistSecurityInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistSecurityInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistSecurityInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistSecurityInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Persist Security Info")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定布林 (Boolean) 值，指示如果連接開啟或曾經處於開啟狀態，是否會將安全性相關資訊 (如密碼) 當做連接的一部分傳回。</summary>
        <value>
          <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /> 屬性的值，或如未提供任何值，則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性會對應至連接字串內的"Persist Security Info"索引鍵。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>兩種方式的屬性。 首先，它會指派值直接屬性，以示範產生連接字串對此動作的影響。 然後，範例會清除<xref:System.Data.OleDb.OleDbConnectionStringBuilder>並指定完整的連接字串，其中包含的"Persist Security Info"索引鍵的值。 此步驟中示範的設定值，從連接字串修改<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>以及屬性。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbProviderConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字串，此字串包含與內部連接字串關聯的資料提供者 (Data Provider) 名稱。</summary>
        <value>
          <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /> 屬性的值，或如未提供任何值，則為 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果當您嘗試設定此屬性時，傳入的值為 null，則會重設 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 屬性。 如果未設定值，而且開發人員嘗試用來擷取屬性，則傳回值是`String.Empty`。 此屬性會對應至連接字串內的 「 提供者 」 索引鍵。  
  
 值設定`Provider`屬性直接 (藉由設定<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>屬性) 或將連接字串做為參數傳遞的建構函式，可能會影響集合內所包含的索引鍵/值組<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體。 設定<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>"sqloledb，"的屬性，例如，將所有標準 SQL 連接字串屬性。 請參閱本主題，如需示範此行為的範例。  
  
 對於某些提供者，指定連接字串內<xref:System.Data.OleDb.OleDbConnectionStringBuilder>建構函式會被重新配置提供索引鍵/值組的順序。  
  
   
  
## Examples  
 下列範例會建立多個<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體，將不同的連接字串傳遞至每個案例的建構函式。 請注意如何設定與連接相關聯的提供者變更物件的集合中的預先定義的索引鍵/值組的集合。  
  
> [!NOTE]
>  這個範例包含了密碼，可示範 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何搭配連接字串使用。 我們建議在您的應用程式中使用 Windows 驗證。 如果您必須使用密碼，請勿在您的應用程式中包含硬式編碼的密碼。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Provider#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Provider/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Provider#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Provider/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要從這個 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 的連接字串中移除之索引鍵/值組的索引鍵。</param>
        <summary>從 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 執行個體移除具有指定之索引鍵的項目。</summary>
        <returns>
          如果連接字串之內有索引鍵而且已經移除，則為 <see langword="true" />，如果沒有索引鍵，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A>方法會傳回值，指出成功，不需要尋找的索引鍵是否存在，然後再嘗試移除索引鍵/值組，來自<xref:System.Data.OleDb.OleDbConnectionStringBuilder>執行個體。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OleDb.OleDbConnectionStringBuilder>示範的行為和<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A>方法。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Remove#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Remove/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Remove/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">要擷取之項目的索引鍵。</param>
        <param name="value">對應到 <c>keyword</c> 的值。</param>
        <summary>從 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 執行個體擷取對應至所提供索引鍵的值。</summary>
        <returns>
          如果在連接字串中找到 <paramref name="keyword" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> 方法可讓開發人員安全地從 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 擷取值，而不需確認提供的索引鍵名稱是有效的索引鍵名稱。 因為<xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A>不會引發例外狀況呼叫時，不存在的機碼中傳遞，您不必先擷取其值尋找索引鍵。 呼叫<xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A>具有不存在的索引鍵會將 null 值 (`Nothing`在 Visual Basic 中) 中`value`參數。  
  
   
  
## Examples  
 下列範例示範的行為<xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A>方法。  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.TryGetValue/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.TryGetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> 包含 null 值 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
  </Members>
</Type>