<Namespace Name="System.Text">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30736132" /></Metadata><Docs>
    <summary><span data-ttu-id="ee408-101"><see cref="N:System.Text" /> 命名空間包含代表 ASCII 和 Unicode 字元編碼的類別；用來將字元區塊與位元組區塊來回轉換的抽象基底類別；以及管理和格式化 <see cref="T:System.String" /> 物件，而不需要建立 <see cref="T:System.String" /> 的中繼執行個體的協助程式類別。</span><span class="sxs-lookup"><span data-stu-id="ee408-101">The <see cref="N:System.Text" /> namespace contains classes that represent ASCII and Unicode character encodings; abstract base classes for converting blocks of characters to and from blocks of bytes; and a helper class that manipulates and formats <see cref="T:System.String" /> objects without creating intermediate instances of <see cref="T:System.String" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee408-102">編碼的類別主要是不同的編碼或字碼頁與 Unicode 編碼之間轉換。</span><span class="sxs-lookup"><span data-stu-id="ee408-102">The encoding classes are primarily intended to convert between different encodings or code pages and a Unicode encoding.</span></span> <span data-ttu-id="ee408-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (Utf-16) 編碼供內部.NET Framework，和<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>編碼通常用於儲存字元資料以確保跨電腦和文化特性的可攜性。</span><span class="sxs-lookup"><span data-stu-id="ee408-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (UTF-16) encoding is used internally by the .NET Framework, and <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding is often used for storing character data to ensure portability across machines and cultures.</span></span>  
  
 <span data-ttu-id="ee408-104">類別衍生自<xref:System.Text.Encoding>讓您選擇後援策略，決定如何處理無法編碼成位元組序列的字元或無法解碼為字元的位元組。</span><span class="sxs-lookup"><span data-stu-id="ee408-104">The classes derived from <xref:System.Text.Encoding> enable you to choose a fallback strategy, which determines how characters that cannot be encoded into a sequence of bytes, or bytes that cannot be decoded into characters, are handled.</span></span> <span data-ttu-id="ee408-105">您可以選擇下列其中一項：</span><span class="sxs-lookup"><span data-stu-id="ee408-105">You can choose one of the following:</span></span>  
  
-   <span data-ttu-id="ee408-106">例外狀況後援。</span><span class="sxs-lookup"><span data-stu-id="ee408-106">Exception fallback.</span></span> <span data-ttu-id="ee408-107">您可以選擇將擲回例外狀況資料錯誤藉由使用`throwonerror`旗標，可在部分類別建構函式或使用<xref:System.Text.EncoderExceptionFallback>和<xref:System.Text.DecoderExceptionFallback>類別。</span><span class="sxs-lookup"><span data-stu-id="ee408-107">You can choose to throw exceptions on data errors either by using a `throwonerror` flag that is available in some class constructors or by using the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="ee408-108">如果您關心的資料流的完整性，建議您使用擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ee408-108">If you are concerned about the integrity of the data stream, throwing on an exception is recommended.</span></span>  
  
-   <span data-ttu-id="ee408-109">取代後援。</span><span class="sxs-lookup"><span data-stu-id="ee408-109">Replacement fallback.</span></span> <span data-ttu-id="ee408-110">您可以使用<xref:System.Text.EncoderFallback>和<xref:System.Text.DecoderFallback>類別，以無訊息方式變更某個字元，"？"或 Unicode replacement character (U + FFFD)。</span><span class="sxs-lookup"><span data-stu-id="ee408-110">You can use the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes to silently change a character to "?" or to the Unicode replacement character (U+FFFD).</span></span>  
  
-   <span data-ttu-id="ee408-111">自動調整的後援。</span><span class="sxs-lookup"><span data-stu-id="ee408-111">Best-fit fallback.</span></span> <span data-ttu-id="ee408-112">此選項對應中以其他編碼的字元編碼的字元。</span><span class="sxs-lookup"><span data-stu-id="ee408-112">This option maps a character in one encoding to a character in another encoding.</span></span> <span data-ttu-id="ee408-113">自動調整的後援通常不建議使用，因為它會造成資料遺失，並且產生混淆，而且比簡單慢"？"字元取代項目。</span><span class="sxs-lookup"><span data-stu-id="ee408-113">Best fit fallback is often not recommended because it can cause data loss and confusion, and is slower than simple "?" character replacements.</span></span> <span data-ttu-id="ee408-114">不過，ANSI 字碼頁的自動調整的行為是預設值。</span><span class="sxs-lookup"><span data-stu-id="ee408-114">However, for ANSI code pages the best-fit behavior is the default.</span></span>  
  
 <span data-ttu-id="ee408-115"><xref:System.Text.StringBuilder>類別專為單一字串執行廣泛的管理作業。</span><span class="sxs-lookup"><span data-stu-id="ee408-115">The <xref:System.Text.StringBuilder> class is designed for operations that perform extensive manipulations on a single string.</span></span> <span data-ttu-id="ee408-116">不同於<xref:System.String>類別，<xref:System.Text.StringBuilder>類別是可變動的並提供更佳的效能，串連或刪除字串時。</span><span class="sxs-lookup"><span data-stu-id="ee408-116">Unlike the <xref:System.String> class, the <xref:System.Text.StringBuilder> class is mutable and provides better performance when concatenating or deleting strings.</span></span>  
  
 <span data-ttu-id="ee408-117">如需詳細資訊<xref:System.Text?displayProperty=nameWithType>，請參閱 < [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md)。</span><span class="sxs-lookup"><span data-stu-id="ee408-117">For more information about <xref:System.Text?displayProperty=nameWithType>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
