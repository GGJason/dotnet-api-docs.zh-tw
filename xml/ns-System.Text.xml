<Namespace Name="System.Text">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30736132" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Text" /> 命名空間包含代表 ASCII 和 Unicode 字元編碼的類別；用來將字元區塊與位元組區塊來回轉換的抽象基底類別；以及管理和格式化 <see cref="T:System.String" /> 物件，而不需要建立 <see cref="T:System.String" /> 的中繼執行個體的協助程式類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編碼的類別主要是不同的編碼或字碼頁與 Unicode 編碼之間轉換。 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (Utf-16) 編碼供內部.NET Framework，和<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>編碼通常用於儲存字元資料以確保跨電腦和文化特性的可攜性。  
  
 類別衍生自<xref:System.Text.Encoding>讓您選擇後援策略，決定如何處理無法編碼成位元組序列的字元或無法解碼為字元的位元組。 您可以選擇下列其中一項：  
  
-   例外狀況後援。 您可以選擇將擲回例外狀況資料錯誤藉由使用`throwonerror`旗標，可在部分類別建構函式或使用<xref:System.Text.EncoderExceptionFallback>和<xref:System.Text.DecoderExceptionFallback>類別。 如果您關心的資料流的完整性，建議您使用擲回例外狀況。  
  
-   取代後援。 您可以使用<xref:System.Text.EncoderFallback>和<xref:System.Text.DecoderFallback>類別，以無訊息方式變更某個字元，"？"或 Unicode replacement character (U + FFFD)。  
  
-   自動調整的後援。 此選項對應中以其他編碼的字元編碼的字元。 自動調整的後援通常不建議使用，因為它會造成資料遺失，並且產生混淆，而且比簡單慢"？"字元取代項目。 不過，ANSI 字碼頁的自動調整的行為是預設值。  
  
 <xref:System.Text.StringBuilder>類別專為單一字串執行廣泛的管理作業。 不同於<xref:System.String>類別，<xref:System.Text.StringBuilder>類別是可變動的並提供更佳的效能，串連或刪除字串時。  
  
 如需詳細資訊<xref:System.Text?displayProperty=nameWithType>，請參閱 < [.NET Framework 中的字元編碼](~/docs/standard/base-types/character-encoding.md)。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>