<Type Name="HtmlSelect" FullName="System.Web.UI.HtmlControls.HtmlSelect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a24a0d165b4403c68b078d1d22f526d62438fe8f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591482" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlSelect : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlSelect extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IParserAccessor, class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlSelect" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlSelect&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlSelect : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlSelectBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允許以程式設計方式存取伺服器上的 HTML <see langword="&lt;select&gt;" /> 項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項來建立選取方塊。 指定控制項中的項目清單放入 HTML`<option>`開頭和結尾之間的項目`<select>`標記。 每個項目由<xref:System.Web.UI.WebControls.ListItem?displayProperty=nameWithType>物件。 若要指定每個項目在控制項中顯示的文字，您可以設定<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>屬性的項目或只是將文字的開頭和結尾之間`<option>`標記。 藉由設定<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>項目的屬性，您可以將值與文字不同的項目。 若要從清單中選取項目根據預設，設定<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>屬性之項目的`true`。  
  
 您可以控制的外觀和行為<xref:System.Web.UI.HtmlControls.HtmlSelect>藉由設定控制<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性會指定控制項的高度 （以資料列）。 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性會指定是否可以在同時選取多個項目<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 根據預設，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項顯示為下拉式清單方塊。 如果您允許多重選取 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性`true`) 或指定大於一個資料列的高度 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性設為大於值`1`)，顯示為清單方塊控制項。  
  
 若要判斷選取的項目在單一選取<xref:System.Web.UI.HtmlControls.HtmlSelect>控制，請使用<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性來取得選取之項目的索引。 您接著可以使用此值來擷取項目從<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 若要判斷選取的項目從<xref:System.Web.UI.HtmlControls.HtmlSelect>逐一查看控制項可讓多個選取項目，<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>收集和測試<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>每個項目的屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>類別提供兩個屬性，以支援資料繫結。 若要將資料繫結會實作任何物件<xref:System.Collections.IEnumerable?displayProperty=nameWithType>介面 (例如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，和<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>)，或<xref:System.ComponentModel.IListSource>介面，請使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性來指定要繫結至資料來源。 當您將<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性，您必須手動撰寫的程式碼來執行資料繫結。 自動繫結<xref:System.Web.UI.HtmlControls.HtmlSelect>控制權傳輸至資料來源代表資料來源控制項，使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性並將其值設定為<xref:System.Web.UI.Control.ID%2A>使用資料來源控制項的屬性。 當您將<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項自動繫結至指定的資料來源控制項。 因此，您不需要明確地呼叫<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
 您也可以指定資料來源中的哪些欄位繫結至<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>和<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>藉由設定控制項中項目的屬性<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>屬性，分別。 如果資料來源包含多個資料來源，使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>屬性來指定要繫結至控制項的特定來源。 例如，如果您有<xref:System.Data.DataSet?displayProperty=nameWithType>物件多個資料表，您必須指定要繫結至控制項的表格<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>屬性。  
  
 如需執行個體的初始屬性值的清單<xref:System.Web.UI.HtmlControls.HtmlSelect>，請參閱<xref:System.Web.UI.HtmlControls.HtmlSelect.%23ctor%2A>建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立<xref:System.Web.UI.HtmlControls.HtmlSelect>藉由明確宣告出現在控制項中的項目控制項。  
  
 [!code-aspx-csharp[htmlselect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-aspx-vb[htmlselect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 下列程式碼範例示範如何建立<xref:System.Web.UI.HtmlControls.HtmlSelect>將控制項繫結至資料來源的控制項。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性，以指定的資料來源<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性設定為<xref:System.Web.UI.Control.ID%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSource>控制項用來擷取資料。 載入頁面時，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項自動繫結至指定之資料來源<xref:System.Web.UI.WebControls.SqlDataSource>控制項和資料顯示給使用者。  
  
 [!code-aspx-csharp[HtmlSelect.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlSelect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.HtmlControls.HtmlSelect>類別。  
  
 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.HtmlControls.HtmlSelect>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|「 選取 」 的常值字串。|  
  
   
  
## Examples  
 下列程式碼範例示範如何動態建立的執行個體<xref:System.Web.UI.HtmlControls.HtmlSelect>控制，並將它放在網頁上。  
  
 [!code-aspx-csharp[HtmlSelectCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectCtor/CS/htmlselectctorcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectCtor/VB/htmlselectctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要加入的已剖析子控制項。</param>
        <summary>將已剖析的子控制項加入至 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A>方法可由 ASP.NET 來將已剖析的子控制項加入<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A>方法中自訂的伺服器控制項，以便永遠會檢查的執行個體<xref:System.Web.UI.WebControls.ListItem>類別加入至<xref:System.Web.UI.HtmlControls.HtmlSelect>選取項目集合。  
  
 [!code-aspx-csharp[CustomHtmlSelectAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobject.cs#2)]
 [!code-vb[CustomHtmlSelectAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">由 <paramref name="obj" /> 參數指定的子控制項，其型別必須為 <see cref="T:System.Web.UI.WebControls.ListItem" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected virtual void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的清單選取，並設定所有項目的 <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> 屬性為 <see langword="false" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A>方法會逐一<xref:System.Web.UI.WebControls.ListItemCollection>集合由<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項的<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>屬性和集合<xref:System.Web.UI.WebControls.ListItem.Selected%2A>每個屬性<xref:System.Web.UI.WebControls.ListItem>物件`false`。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A>自訂的伺服器中的方法控制，好讓它永遠會清除所有選取的項目<xref:System.Web.UI.HtmlControls.HtmlSelect>集合。  
  
 [!code-aspx-csharp[CustomHtmlSelectClearSelection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselectioncs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectClearSelection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselectionvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectClearSelection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselection.cs#2)]
 [!code-vb[CustomHtmlSelectClearSelection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 <see cref="T:System.Web.UI.EmptyControlCollection" /> 控制項建立 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 物件。</summary>
        <returns>
          <see cref="T:System.Web.UI.ControlCollection" />，要包含目前伺服器控制項的子伺服器控制項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控制項不允許子控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public virtual string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>從含有多個資料集的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性中，取得或設定要繫結至 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 控制項的資料集。</summary>
        <value>在一個含有多個資料集的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 中要繫結至 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 控制項的資料集。 預設值是空字串 ("")，表示尚未設定這個屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性包含多個資料集，請使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>屬性來指定要繫結至控制項的資料集。 例如，如果您有<xref:System.Data.DataSet?displayProperty=nameWithType>物件使用多個資料表，請使用這個屬性來指定要繫結至控制項的資料表。  
  
 指定要繫結至控制項的資料來源之後，您可以接著指定要繫結至資料來源的欄位<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>和<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>藉由設定控制項中的每個項目的屬性<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>屬性分別。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>屬性來指定一組資料繫結至<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項從<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>具有多個資料集屬性。  
  
 [!code-aspx-csharp[HtmlSelectDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataMember/CS/htmlselectdatamemberdscs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataMember/VB/htmlselectdatamemberdsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 屬性會在 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的資料繫結階段設定。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要繫結至 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的資訊來源。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" />，包含用來提供資料給這個控制項的值集合。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性來指定要繫結至資料來源<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 資料來源必須實作的集合<xref:System.Collections.IEnumerable?displayProperty=nameWithType>介面 (例如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 或<xref:System.ComponentModel.IListSource>介面。 當您將<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性，您必須手動撰寫的程式碼來執行資料繫結。  
  
 如果資料來源包含多組資料，例如<xref:System.Data.DataSet?displayProperty=nameWithType>物件使用多個資料表，請使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>屬性來指定要繫結至控制項的資料集。  
  
 您可以指定要繫結至資料來源的欄位<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>和<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>藉由設定控制項中的每個項目的屬性<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>屬性，分別。  
  
 或者，您可以使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>自動繫結到資料來源控制項所代表的資料來源的屬性。 當您將<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性，自動清單控制項的資料繫結至指定的資料來源控制項。 您不需要撰寫程式碼，明確地呼叫<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
 如果兩個指定的值<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性，ASP.NET 會不能夠解析資料來源和<xref:System.Web.HttpException?displayProperty=nameWithType>擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性來指定要繫結資訊的來源<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的資料來源並不相容於 <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" />，而且也不屬於 <see langword="null" />。</exception>
        <exception cref="T:System.Web.HttpException">無法解析資料來源，因為同時為 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 屬性和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性指定了值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料來源控制項的 <see cref="P:System.Web.UI.Control.ID" /> 屬性，而 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項應該用這個控制項來擷取其資料來源。</summary>
        <value>指派給資料來源控制項的程式設計識別項。 預設值是空字串 ("")，表示尚未設定這個屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性來設定或存取<xref:System.Web.UI.Control.ID%2A>資料來源屬性控制的<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項應擷取其資料來源使用。 資料來源所參考的控制項<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性可以是實作任何控制項<xref:System.Web.UI.IDataSource>介面。 資料來源控制項必須有兩種做為相同的命名容器<xref:System.Web.UI.HtmlControls.HtmlSelect>參考它的控制項或中的父控制項<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 當您指定的值，這個屬性，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項自動繫結至指定的資料來源控制項。 您不需要撰寫程式碼，明確地呼叫<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
 或者，您可以使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性來指定要繫結至值的來源<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 資料來源必須是集合中實作<xref:System.Collections.IEnumerable?displayProperty=nameWithType>介面 (例如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 或<xref:System.ComponentModel.IListSource>介面。 當您將<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性，您必須手動撰寫的程式碼來執行資料繫結。  
  
 如果兩個指定的值<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性，ASP.NET 會不能夠解析資料來源和<xref:System.Web.HttpException?displayProperty=nameWithType>擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性，以指定的資料來源<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性設定為<xref:System.Web.UI.Control.ID%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSource>控制項用來擷取資料。 載入頁面時，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項自動繫結至指定之資料來源<xref:System.Web.UI.WebControls.SqlDataSource>控制項和資料顯示給使用者。  
  
 [!code-aspx-csharp[HtmlSelect.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">無法解析資料來源，因為同時為 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 屬性和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性指定了值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料來源中要繫結至 <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 控制項之各個項目 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性的欄位。</summary>
        <value>資料來源中要繫結至 <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 控制項之各個項目 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性的欄位。 預設值是空字串 ("")，表示尚未設定這個屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>屬性，以指定的繫結至資料來源欄位<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>控制項中每個項目的屬性。 這個屬性通常用來提供值給<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>屬性的值不同<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>類別會提供兩個屬性，指定要繫結至資料來源。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性可讓您將繫結<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項實作的任何集合<xref:System.Collections.IEnumerable?displayProperty=nameWithType>或<xref:System.ComponentModel.IListSource?displayProperty=nameWithType>介面 (例如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>)。 當您使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性來指定資料來源，您必須明確呼叫<xref:System.Web.UI.Control.DataBind%2A>方法，以將控制項繫結及其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>到資料來源的屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性可讓您將繫結<xref:System.Web.UI.HtmlControls.HtmlSelect>代表資料來源的資料來源控制項的控制項。 當您使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性來指定資料來源，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項及其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>屬性自動繫結至指定的資料來源控制項。 因此，您不需要明確地呼叫<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>屬性，以指定要繫結至資料來源欄位<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>屬性中的每個項目的<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>屬性，以指定要繫結至資料來源欄位<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>屬性中的每個項目的<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelect.DataValueField2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataValueField2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public virtual string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataValueField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataValueField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料來源中要繫結至 <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 控制項之各個項目 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性的欄位。</summary>
        <value>資料來源中要繫結至 <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 控制項之各個項目 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性的欄位。 預設值是空字串 ("")，表示尚未設定這個屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>屬性，以指定的繫結至資料來源欄位<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>控制項中每個項目的屬性。 這個屬性通常用來提供值給<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>屬性的值不同<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>類別會提供兩個屬性，指定要繫結至資料來源。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性可讓您將繫結<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項實作的任何集合<xref:System.Collections.IEnumerable>或<xref:System.ComponentModel.IListSource>介面 (例如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>)。 當您使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性來指定資料來源，您必須明確呼叫<xref:System.Web.UI.Control.DataBind%2A>方法，以將控制項繫結及其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>到資料來源的屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性可讓您將繫結<xref:System.Web.UI.HtmlControls.HtmlSelect>代表資料來源的資料來源控制項的控制項。 當您使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性來指定資料來源，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項及其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>屬性自動繫結至資料來源控制項。 因此，您不需要明確地呼叫<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>屬性，以指定要繫結至資料來源欄位<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>屬性中的每個項目的<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>屬性，以指定要繫結至資料來源欄位<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>屬性中的每個項目的<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelect.DataValueField2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataValueField2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼叫 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 方法之前，請先確認 <see cref="M:System.Web.UI.Control.DataBind" /> 控制項是否需要資料繫結，而且是否已指定有效的資料來源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您指定的值<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性，ASP.NET 會自動將資料繫結清單的指定的資料來源控制項的控制項。 當 ASP.NET 執行資料繫結控制項時，它會呼叫<xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A>第一次，並確定控制項不已經過資料繫結，有效的資料來源控制項所實作的方法<xref:System.Web.UI.IDataSource>介面指定為其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A>方法接著呼叫<xref:System.Web.UI.Control.DataBind%2A>方法，以確保該控制項是資料繫結至這個方法呼叫之後立即。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerable ^ GetData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得 <see cref="T:System.Collections.IEnumerable" /> 物件，表示繫結至 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的資料來源。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> 物件。 如果沒有指定資料來源，則傳回 <see langword="null" /> 的預設值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.GetData%2A>方法會傳回<xref:System.Collections.IEnumerable>獨立於資料來源依指定的物件<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性的型別不是 <see cref="T:System.Web.UI.IDataSource" />。  
  
 \-或-  
  
 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性的型別不是 <see cref="T:System.Web.UI.IHierarchicalDataSource" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 控制項的 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 和 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性都會定義。  
  
 \-或-  
  
 找不到要求的資料檢視。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public override string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項的開頭和結尾標記之間的內容，而不須自動將特殊字元轉換為對等的 HTML 實體 (Entity)。 這個控制項不支援這個屬性。</summary>
        <value>控制項的開頭和結尾標記之間的內容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  請勿從讀取或將值指派給這個屬性。 否則會擲回 <xref:System.NotSupportedException?displayProperty=nameWithType> 例外狀況。 這個屬性繼承自<xref:System.Web.UI.HtmlControls.HtmlContainerControl>類別，並不適用於<xref:System.Web.UI.HtmlControls.HtmlSelect>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試自這個屬性讀取值，或指派值給這個屬性。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項的開頭和結尾標記之間的內容，且自動將特殊字元轉換為對等的 HTML 實體。 這個控制項不支援這個屬性。</summary>
        <value>控制項的開頭和結尾標記之間的內容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  請勿從讀取或將值指派給這個屬性。 否則會擲回 <xref:System.NotSupportedException?displayProperty=nameWithType> 例外狀況。 這個屬性繼承自<xref:System.Web.UI.HtmlControls.HtmlContainerControl>類別，並不適用於<xref:System.Web.UI.HtmlControls.HtmlSelect>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試自這個屬性讀取值，或指派值給這個屬性。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsBoundUsingDataSourceID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsBoundUsingDataSourceID { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出是否已為 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 控制項定義 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性。</summary>
        <value>
          如果已定義資料來源控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果長度的字串表示<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性字串是大於零，則<xref:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID%2A>傳回`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ListItemCollection ^ Items { System::Web::UI::WebControls::ListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得一個含有 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所列示項目的集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListItemCollection" />，其中含有 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所列示的項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>要管理列中的項目集合<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 您可以程式設計方式加入要移除項目，並將項目插入至集合的項目。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合通常用來逐一查看中的項目<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 例如，多個選取項目時，您可以逐一<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>來決定選取哪一個項目集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合來逐一查看中的項目<xref:System.Web.UI.HtmlControls.HtmlSelect>控制，並決定選取哪一個項目。  
  
 [!code-aspx-csharp[htmlselect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-aspx-vb[htmlselect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控制項的索引鍵識別項。</param>
        <param name="postCollection">所有內送名稱值的集合。</param>
        <summary>處理 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的回傳資料。</summary>
        <returns>
          如果回傳的結果改變了 <see langword="true" /> 控制項的狀態，則為 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>方法會檢查是否在回傳資料的<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項不同於先前的值，以及如果是的話，會傳回`true`。 如果<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項的<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性是`false`，表示單一選取<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項，然後在<xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>方法會檢查<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性。 如果<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項的<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性是`true`，指出多個選取項目<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項，然後在<xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>方法會檢查<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>主要由控制項開發人員擴充功能的使用方法<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 屬性設定為大於 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中項目數的值，或小於 <see langword="-1" /> 的值。</exception>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" />，代表所要還原的控制項狀態。</param>
        <summary>從 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 方法所儲存的上一頁要求中，還原 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> 控制項的檢視狀態資訊。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。 不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控制項的檢視狀態儲存為<xref:System.Web.UI.Triplet>物件。 <xref:System.Web.UI.Triplet.First>欄位<xref:System.Web.UI.Triplet>物件保存<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項的基底的檢視狀態。 <xref:System.Web.UI.Triplet.Second>欄位<xref:System.Web.UI.Triplet>物件保存<xref:System.Web.UI.WebControls.ListItemCollection>集合由<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>屬性。 <xref:System.Web.UI.Triplet.Third>欄位<xref:System.Web.UI.Triplet>物件會保存由所選取的索引<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>屬性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A>方法會呼叫基底類別的<xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A?displayProperty=nameWithType>方法還原控制項的基底的檢視狀態。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A>主要由控制項開發人員擴充功能的使用方法<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />方法以便<see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />正確管理控制項的檢視狀態。</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="public bool Multiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiple { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否可以同時選取 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中的多個項目。</summary>
        <value>
          如果可以同時選取 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中的多個項目，則為 <see langword="true" />；否則，即為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性來指定是否可以在同時選取多個項目<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 根據預設，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項顯示為下拉式清單方塊。 如果您允許多重選取 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性`true`) 或指定大於一個資料列的高度 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性設為大於值`1`)，顯示為清單方塊控制項。  
  
 若要判斷在選取的項目<xref:System.Web.UI.HtmlControls.HtmlSelect>逐一查看控制項可讓多個同時選取項目，<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>收集和測試<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>每個項目的屬性。  
  
> [!NOTE]
>  `multiple`屬性呈現在<xref:System.Web.UI.HtmlControls.HtmlSelect>控制只有當這個屬性設定為`true`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性來指定多個項目是否可以選取在<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項相關的唯一識別項名稱。</summary>
        <value>與 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項相關的唯一識別項名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A>屬性來判斷唯一識別項名稱<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 在此實作中，`get`存取子會傳回的值<xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType>屬性。 不過，`set`存取子不會指派給這個屬性的值。  
  
> [!NOTE]
>  `set`存取子不會指派值給這個屬性因為<xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A>屬性必須有相同的值<xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType>屬性<xref:System.Web.UI.HtmlControls.HtmlSelect>才能正常運作的控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A>屬性<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項以選取特定的項目中<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>清單。  
  
 [!code-aspx-csharp[HtmlSelectName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectName/CS/htmlselectnamecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectName/VB/htmlselectnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.DataBinding" /> 控制項的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.DataBinding>繫結至資料時，就會引發事件<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 這個方法會通知控制項執行與它相關聯的任何資料繫結邏輯。 具體來說，<xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A>方法會建立<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>從資料來源中指定的集合<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性的型別不是 <see cref="T:System.Web.UI.IDataSource" />。  
  
 \-或-  
  
 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性的型別不是 <see cref="T:System.Web.UI.IHierarchicalDataSource" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 控制項的 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 和 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 屬性都會定義。  
  
 \-或-  
  
 找不到要求的資料檢視。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 屬性設定為大於 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中項目數的值，或小於 <see langword="-1" /> 的值。</exception>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" />方法在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataPropertyChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />、<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 或 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性變更時叫用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A>方法會設定<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>屬性`true`如果<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>， <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>，或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性已變更。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">嘗試在控制項的資料繫結 (Data Binding) 階段變更此屬性值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的來源。</param>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>在 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />、<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 或 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性變更時叫用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A>方法會設定<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>屬性`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A>方法會通知<xref:System.Web.UI.HtmlControls.HtmlSelect>執行任何初始設定步驟建立及設定執行個體所需的控制項。 如果<xref:System.Web.UI.Control.IsViewStateEnabled%2A>屬性是`false`和<xref:System.Web.UI.Page.IsPostBack%2A>屬性是`true`，然後在<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>屬性設定為`true`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />方法在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />方法，讓已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A>方法會通知<xref:System.Web.UI.HtmlControls.HtmlSelect>控制它應執行通用的每個 HTTP 要求的動作相關聯的頁面。 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A>方法連接<xref:System.Web.UI.HtmlControls.HtmlSelect>適當的資料來源中指定的控制項<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>屬性或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性。 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>屬性是指定資料來源控制項<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項應該使用要擷取其資料來源，然後在<xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A>方法設定為事件處理常式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">找不到 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性中指定的 ID。  
  
 \-或-  
  
 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性中指定的控制項不是 <see cref="T:System.Web.UI.IDataSource" /> 型別。</exception>
        <exception cref="T:System.InvalidOperationException">無法解析資料來源，因為同時為 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 屬性和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 屬性指定了值。  
  
 \-或-  
  
 找不到所要求的 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 屬性。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性大於 1，則<xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A>方法暫存器<xref:System.Web.UI.HtmlControls.HtmlSelect>用來控制<xref:System.Web.UI.Page>為需要處理回傳的控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A>方法，使它允許多重選取自訂<xref:System.Web.UI.HtmlControls.HtmlSelect>伺服器控制項。  
  
 [!code-aspx-csharp[CustomHtmlSelectOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerender.cs#2)]
 [!code-vb[CustomHtmlSelectOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" /> 控制項的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 事件。 這個方法可讓您提供該事件的自訂處理常式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>就會引發事件時選取的項目中<xref:System.Web.UI.HtmlControls.HtmlSelect>控制發佈至伺服器之間的變更。  
  
> [!NOTE]
>  只有當使用者回傳至伺服器，例如起始送出按鈕，即可時，會引發這個事件。 這個事件不會發佈至伺服器。  
  
> [!NOTE]
>  控制項必須具有啟用檢視狀態<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件才能正確運作。  
  
 您可以使用這個事件來執行資料驗證<xref:System.Web.UI.HtmlControls.HtmlSelect>控制當使用者變更控制項中的選取項目。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何指定及程式碼的事件處理常式<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 此事件處理常式會判斷選取的項目是否彼此相容。  
  
 [!code-aspx-csharp[HtmlSelectOnServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectOnServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlSelectServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />方法在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼叫 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> 方法以通知 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項，表示控制項的狀態已變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent%2A>主要由控制項開發人員擴充功能的使用方法<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 接收轉譯的內容。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的屬性轉譯為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>方法呈現`name`屬性<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項直接以確認它有相同的值<xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType>屬性。 在轉譯的屬性之後,<xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>方法會呼叫基底類別的<xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes%2A>方法。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>主要由控制項開發人員擴充功能的使用方法<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>方法中的自訂伺服器控制項，以便指定標題文字一律會顯示為<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[CustomHtmlSelectRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributes.cs#2)]
 [!code-vb[CustomHtmlSelectRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="T:System.Web.UI.AttributeCollection" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 接收轉譯的內容。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的子控制項呈現為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A>方法會覆寫基底類別的<xref:System.Web.UI.Control.RenderChildren%2A>方法，而不呼叫基底的方法。 每個`<option>`開頭和結尾之間的項目`<select>`標記以呈現`value`屬性`selected`屬性，如果選取項目，以及其相關聯的文字。  
  
 如果已選取多個項目，但<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性設定為`false`，則<xref:System.Web.HttpException>擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A>方法，使它永遠都會顯示自訂預設選項文字<xref:System.Web.UI.HtmlControls.HtmlSelect>伺服器控制項。  
  
 [!code-aspx-csharp[CustomHtmlSelectRenderChildren#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildrencs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectRenderChildren#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildrenvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderChildren#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildren.cs#2)]
 [!code-vb[CustomHtmlSelectRenderChildren#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildren.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">已選取多個項目，但是 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" /> 屬性設定為 <see langword="false" />。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequiresDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RequiresDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項是否需要繫結至其指定的資料來源。</summary>
        <value>
          如果控制項需要繫結至資料來源，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控制使用<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>屬性，以判斷控制項是否需要呼叫<xref:System.Web.UI.Control.DataBind%2A>繫結至其指定的資料來源的方法。  
  
 每次`set`上呼叫存取子<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>， <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>，或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>屬性來變更資料來源之後<xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A>呼叫方法，ASP.NET 會自動設定的值<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>屬性`true`。 值<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>屬性也會設為`true`時<xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A>叫用方法。  
  
 ASP.NET 會自動設定的值<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>屬性`false`之後立即<xref:System.Web.UI.Control.DataBind%2A>呼叫方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存自從網頁回傳至伺服器以來所發生的任何 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項檢視狀態變更。</summary>
        <returns>包含 <see cref="T:System.Object" /> 檢視狀態變更的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />。 如果檢視狀態與物件產生關聯，這個方法就會傳回 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控制項的檢視狀態儲存為<xref:System.Web.UI.Triplet>物件。 <xref:System.Web.UI.Triplet.First>欄位<xref:System.Web.UI.Triplet>物件保存<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項的基底的檢視狀態。 <xref:System.Web.UI.Triplet.Second>欄位<xref:System.Web.UI.Triplet>物件保存<xref:System.Web.UI.WebControls.ListItemCollection>集合由<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>屬性。 <xref:System.Web.UI.Triplet.Third>欄位<xref:System.Web.UI.Triplet>物件會保存由所選取的索引<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>屬性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A>方法會呼叫基底類別的<xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType>方法來儲存控制項的基底的檢視狀態。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A>主要由控制項開發人員擴充功能的使用方法<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />方法以便<see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />正確管理控制項的檢視狀態。</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (int[] selectedIndices);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(int32[] selectedIndices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.Select(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Select (selectedIndices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Select(cli::array &lt;int&gt; ^ selectedIndices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndices" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="selectedIndices">
          <see cref="T:System.Array" /> 型別的 <see cref="T:System.Int32" />，其中含有要選取的項目。</param>
        <summary>選取 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" /> 集合中的多個項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Select%2A>方法會選取多個項目<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所選取項目的循序的索引。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所選取項目的循序索引。 值為 <see langword="-1" />，代表並沒有選取的項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性通常用來決定選取的項目在單一選取的索引<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 這個索引可以再用來擷取項目從<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性設定為`true`，指出，可以同時選取多個項目，<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性包含的第一個選取的項目索引。 若要判斷選取的項目從<xref:System.Web.UI.HtmlControls.HtmlSelect>逐一查看控制項可讓多個同時選取項目，<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>收集和測試<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>每個項目的屬性。  
  
> [!CAUTION]
>  很可能沒有任何選取的項目。 如果未不選取任何項目，則<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性包含值為`-1`。 當第一次載入頁面，並依預設不會選取項目，就會發生這種常發生。 提供程式碼以測試這個值在參考中的項目之前<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。 否則，如果索引超出範圍的集合，會擲回例外狀況。  
  
 根據預設，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項顯示為下拉式清單方塊。 如果您允許多重選取 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性`true`) 或指定大於一個資料列的高度 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性設為大於值`1`)，顯示為清單方塊控制項。 如果顯示下拉式清單方塊，會一律會選取項目。 如果顯示清單方塊，您可以藉由設定，以程式設計方式清除所有項目選取項目<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性`-1`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性來判斷在選取之項目的索引<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 然後使用索引來擷取選取的項目從<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 [!code-aspx-csharp[HtmlSelectSingleSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectSingleSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">屬性設定為大於 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中項目數的值，或小於 <see langword="-1" /> 的值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="protected virtual int[] SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SelectedIndices As Integer()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;int&gt; ^ SelectedIndices { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得集合，其中包含 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所有目前選取項目之以零起始的索引。</summary>
        <value>集合，其中包含 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所有目前選取項目之以零起始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>屬性供<xref:System.Web.UI.HtmlControls.HtmlSelect>類別，以傳回目前包含所有的以零為起始的索引集合中選取項目<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 控制擴充功能的開發人員<xref:System.Web.UI.HtmlControls.HtmlSelect>類別可以覆寫<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>屬性來傳回目前選取的項目提供自訂的演算法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所選取的項目在發佈至伺服器期間時變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>就會引發事件時選取的項目中<xref:System.Web.UI.HtmlControls.HtmlSelect>控制發佈至伺服器之間的變更。  
  
> [!NOTE]
>  控制項必須具有啟用檢視狀態<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件才能正確運作。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何指定及程式碼的事件處理常式以宣告方式<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 此事件處理常式會判斷選取的項目是否彼此相容。  
  
 [!code-aspx-csharp[HtmlSelectOnServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectOnServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 下列程式碼範例示範如何指定及程式碼的事件處理常式以程式設計方式<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 此事件處理常式會判斷選取的項目是否彼此相容。  
  
 [!code-aspx-csharp[HtmlSelectServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的高度 (列數)。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的高度 (列數)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性，以指定的高度 （以資料列）<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。 如果您指定大小小於控制項中的項目數，捲軸會顯示可讓您在清單中上下移動。  
  
 根據預設，<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項顯示為下拉式清單方塊。 如果您允許多重選取 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>屬性`true`) 或指定大於一個資料列的高度 (藉由設定<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性設為大於值`1`)，顯示為清單方塊控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>屬性，以指定的高度 （以資料列）<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控制項的索引鍵識別項。</param>
        <param name="postCollection">所有內送名稱值的集合。</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />。</summary>
        <returns>
          如果回傳的結果改變了 <see langword="true" /> 控制項的狀態，則為 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.HtmlControls.HtmlSelect> 執行個體轉換成 <xref:System.Web.UI.IPostBackDataHandler> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 屬性設定為大於 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中項目數的值，或小於 <see langword="-1" /> 的值。</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.HtmlControls.HtmlSelect> 執行個體轉換成 <xref:System.Web.UI.IPostBackDataHandler> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>追蹤 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項的檢視狀態變更，讓變更能夠儲存在控制項的 <see cref="T:System.Web.UI.StateBag" /> 物件中。 這個物件可透過 <see cref="P:System.Web.UI.Control.ViewState" /> 屬性存取。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState%2A>方法持續中的項目<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項來檢視狀態。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中所選取項目的值，或以指定的值將控制項的 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 屬性設定為清單中第一個項目的索引。</summary>
        <value>在 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中選取項目的值。 如果控制項中沒有選取的項目，則傳回 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A>屬性通常用來取得所參考之項目的值<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性。  
  
> [!NOTE]
>  如果控制項中沒有選取的項目，則傳回 <xref:System.String.Empty?displayProperty=nameWithType>。  
  
 如果您設定此屬性的值，<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性會更新為包含該值的清單中第一個項目的索引。 如果不找到任何相符的值，<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>屬性保留不變。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A>屬性取得選取的項目中的值<xref:System.Web.UI.HtmlControls.HtmlSelect>控制項。  
  
 [!code-aspx-csharp[HtmlSelectSingleSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectSingleSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Value" /> 屬性設定為大於 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控制項中項目數的項目，或小於 <see langword="-1" /> 的項目。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>