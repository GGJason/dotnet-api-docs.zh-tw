<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94560661e0a590ed8e084804a71fd227246974a7" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55411722" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>允許以程式設計方式存取伺服器上的 HTML <see langword="&lt;form&gt;" /> 項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm>控制項是 Web Form 網頁上的伺服器控制項的容器。 回傳至伺服器的所有伺服器控制項必須都放置的開頭和結尾標記之間<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。  
  
> [!NOTE]
>  ASP.NET 允許只有一個<xref:System.Web.UI.HtmlControls.HtmlForm>為作用中的 Web Form 網頁上的控制項。 如果有一個以上作用<xref:System.Web.UI.HtmlControls.HtmlForm>Web Form 網頁，通用語言執行平台上的控制項將會擲回<xref:System.Web.HttpException?displayProperty=nameWithType>要求頁面時的例外狀況。 不過，您可以使用<xref:System.Web.UI.WebControls.MultiView>控制在何處每<xref:System.Web.UI.WebControls.View>物件包含一個<xref:System.Web.UI.HtmlControls.HtmlForm>控制項，因為只有一個<xref:System.Web.UI.WebControls.View>可在任何指定時間。  
  
 您可以控制行為的<xref:System.Web.UI.HtmlControls.HtmlForm>藉由設定其屬性的控制項。 若要指定表單的資料的編碼類型，設定<xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>屬性。 方法 (`GET`或是`POST`) 會將表單資料發佈到伺服器的設定，來指定處理瀏覽器<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>屬性。  
  
> [!CAUTION]
>  預設的情況下，<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> 屬性設定為 `POST`。 您可以修改此屬性的值`GET`，但這可能會中斷的內建的狀態和回傳 ASP.NET 網頁架構所提供的服務。  
  
 您可以設定控制項，可實作<xref:System.Web.UI.WebControls.IButtonControl>張貼至不同的目標頁面的介面。 這稱為跨網頁公佈。 如需詳細資訊，請參閱 < [ASP.NET Web Form 中的跨網頁公佈](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)。  
  
 如需執行個體的初始屬性值的清單<xref:System.Web.UI.HtmlControls.HtmlForm>，請參閱<xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A>建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlForm>類別來建立簡單的表單。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">跨網頁公佈在 ASP.NET Web 網頁</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式來建立和初始化的新執行個體<xref:System.Web.UI.HtmlControls.HtmlForm>類別。  
  
 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.HtmlControls.HtmlForm>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|「 表單 」 常值字串。|  
  
   
  
## Examples  
 下列程式碼範例示範如何建立的新執行個體<xref:System.Web.UI.HtmlControls.HtmlForm>控制，並將它放在網頁上。  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 HTML 表單的 action 屬性。</summary>
        <value>HTML 表單的 action 屬性。 預設值為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A>屬性，當您重新撰寫原始要求的 URL，但您想要保留的 HTML 表單的 action 屬性的原始 URL。 設定<xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A>屬性設為您想要保留的 url 值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 為 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項產生的控制項識別碼</summary>
        <value>所產生的控制項識別項[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]針對<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要避免命名衝突，當呈現控制項的多個執行個體，[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]會自動產生的唯一<xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A>頁面上的每個控制項的值。 如需詳細資訊，請參閱 <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> 屬性 (Property)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET 控制項的識別</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 <see cref="T:System.Web.UI.ControlCollection" /> 控制項建立新的 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 集合。</summary>
        <returns><see cref="T:System.Web.UI.ControlCollection" />，包含 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的子伺服器控制項。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的子控制項，它會在按下 ENTER 鍵時引發回傳。</summary>
        <value>載入 <see cref="P:System.Web.UI.Control.ID" /> 時，顯示為預設按鈕的按鈕控制項 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>屬性可讓您指定的使用者，可能導致回傳表單 （例如文字方塊） 中的輸入控制項中按 ENTER。 您可以指定為預設按鈕的任何控制項衍生自<xref:System.Web.UI.WebControls.IButtonControl>除了介面<xref:System.Web.UI.WebControls.LinkButton>控制項。 如果所參考的控制項<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>屬性不是衍生自<xref:System.Web.UI.WebControls.IButtonControl>、<xref:System.InvalidOperationException>擲回例外狀況。  
  
 如果您使用主版頁面，而且您設定<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>屬性從內容頁面上，使用<xref:System.Web.UI.Control.UniqueID%2A>屬性<xref:System.Web.UI.WebControls.IButtonControl> 按鈕。 如需有關主版頁面的詳細資訊，請參閱[ASP.NET 主版頁面](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>屬性可能會導致回傳，在下列情況：  
  
-   當焦點是在表單中輸入的控制項之外，請按下 ENTER。 不保證會觸發預設回傳的動作。  
  
-   當焦點是多行文字方塊內時，請按下 ENTER。 在多行文字方塊中，預期的行為會是在文字方塊中，按下 ENTER 鍵會建立新的一行。 在某些瀏覽器中，按 ENTER 鍵在多行文字 方塊中觸發程序內回傳。 在此情況下，如果您想要改為建立新的一行輸入時，您可以附加的 JavaScript 函式的輸入控制項。 指令碼應該擷取 ENTER 鍵，並停止回傳。 例如，您可以使用<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>要加入的用戶端指令碼的屬性集合`onKeyPress`事件。  
  
-   指定<xref:System.Web.UI.WebControls.LinkButton>控制項做為預設按鈕。 只有<xref:System.Web.UI.WebControls.Button>和<xref:System.Web.UI.WebControls.ImageButton>支援控制項。  
  
-   變更<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>非同步回傳期間，以程式設計方式的屬性。 可以藉由新增一或多個頁面上啟用非同步回傳<xref:System.Web.UI.UpdatePanel>至網頁的控制項。 如需詳細資訊，請參閱 < [UpdatePanel 控制項概觀](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)並[網頁局部呈現概觀](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
   
  
## Examples  
 下列範例示範如何設定<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>屬性來設定預設的控制項造成回傳。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當做預設按鈕參考的控制項不是 <see cref="T:System.Web.UI.WebControls.IButtonControl" /> 型別。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET 主版頁面概觀</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定表單上的控制項，此控制項在載入 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項時，會顯示為具有輸入焦點的控制項。</summary>
        <value>表單上的控制項 <see cref="P:System.Web.UI.Control.ClientID" />，此控制項在載入 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 時，會顯示為具有輸入焦點的控制項。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>屬性來存取表單顯示為具有輸入控制項上的控制項焦點時<xref:System.Web.UI.HtmlControls.HtmlForm>控制項載入。 可以選取的控制項會顯示視覺提示，表示它們具有焦點。 比方說，<xref:System.Web.UI.WebControls.TextBox>插入點放在其內部顯示具有焦點的控制項。  
  
 具有焦點的控制項也可以設定使用<xref:System.Web.UI.Control.Focus%2A>或<xref:System.Web.UI.Page.SetFocus%2A>方法。 這些方法的優先順序高於<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>屬性。 若其中一種方法會呼叫以設定控制項焦點，值<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>屬性會被忽略。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>屬性，以指定的控制項在表單上顯示為具有輸入焦點的控制項，當表單載入時。 當`Form1`轉譯，請注意，插入點位於`TextBox1`，這表示，`TextBox1`是擁有焦點的控制項。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定將表單資料傳送至伺服器時瀏覽器所使用的編碼類型。</summary>
        <value>包含編碼類型的字串。 預設值是空字串 ("")，表示使用了瀏覽器的預設內容類型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>屬性，以指定的編碼類型瀏覽器使用張貼至伺服器的資料。  
  
 下表顯示常見的編碼類型。  
  
|編碼類型|描述|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|表單資料會編碼成名稱/值組。 這是標準的編碼格式。|  
|multipart/form-data|表單資料會以每個頁面上的控制項的個別組件的訊息編碼。|  
|text/plain|表單資料是以純文字，而不需要任何控制項或格式字元編碼。|  
  
 如需有關編碼類型的詳細資訊，請參閱[World Wide Web Consortium (W3C 網站](https://go.microsoft.com/fwlink/?linkid=37125)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>屬性，以指定的編碼類型瀏覽器使用，將資料傳送至伺服器。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出瀏覽器如何將表單資料傳至伺服器做處理。</summary>
        <value>字串，指出瀏覽器如何將表單資料傳至伺服器。 預設值為 <see langword="POST" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來指定瀏覽器如何將表單資料傳送給伺服器進行處理。 所有的瀏覽器支援的兩個常見的方法是`GET`和`POST`。  
  
> [!CAUTION]
>  您可以覆寫此屬性，然後使用的預設值`GET`方法，而非`POST`。 不過，因為`GET`要求會限制資料量在它們可以包含，請使用`GET`方法可能在某些情況下，會造成回傳和狀態管理所提供的功能 ASP.NET 網頁架構失敗。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>屬性可指定表單資料會回傳至伺服器。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的識別項名稱。</summary>
        <value>包含 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 識別項名稱的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>屬性來判斷唯一識別項名稱<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。 在此實作中，取得這個屬性傳回的值<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>屬性。 不過，將屬性設定不會指派值給屬性。 將屬性設定不會指派值給這個屬性因為<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>屬性必須有相同的值<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>屬性。  
  
> [!NOTE]
>  `name`屬性不且和 XHTML 相容的屬性，而且不會呈現 asp.net 不論`xhtmlConformance`設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET 和 XHTML 相容性</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當收到通知<xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>方法中，Web 伺服器控制項都必須執行才能建立並設定執行個體的任何初始化步驟。 在這個階段的伺服器控制項的生命週期中，控制項的檢視狀態尚未填入。 此外，您無法存取其他伺服器控制項，呼叫這個方法時，無論它是子網域或此控制項的父代。 其他伺服器控制項不保證會建立且可供存取。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>方法主要由控制項開發人員擴充功能的<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />方法在衍生類別中，務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />方法，讓已註冊的委派收到事件。 此外，呼叫的基底類別<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />方法可確保<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />控制項正確地設定為 Web 網頁表單和頁面的檢視狀態會保存。</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A>方法呼叫之前轉譯<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。 如果<xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType>屬性設定為`true`，則<xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A>方法註冊智慧型巡覽指令碼檔案參考，使其呈現。  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType>屬性在 ASP.NET 2.0 版中已被取代。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output"><see cref="T:System.Web.UI.HtmlTextWriter" /> 接收轉譯的內容。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項呈現為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>方法會呈現 HTML`<iframe>`項目若<xref:System.Web.UI.Page.SmartNavigation%2A>屬性設定為`true`。 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>方法會呼叫基底<xref:System.Web.UI.Control.Render%2A>方法。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>方法主要由控制項開發人員擴充功能的<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項呈現時一定要有 <see cref="T:System.Web.UI.Page" /> 執行個體的參考。</exception>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />方法在衍生類別中，務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />方法，讓<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />正確呈現控制項的子控制項。</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 接收轉譯的內容。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的屬性轉譯為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>方法會使用<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>方法來檢查<xref:System.Web.UI.HtmlControls.HtmlForm>控制項的屬性，以確保它們可以呈現開頭標記中`<form>`HTML 項目。  
  
 此外，<xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>方法會轉譯`method`， `action`，以及`onsubmit`屬性<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。 如果設定的控制項 ID<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>屬性未實作<xref:System.Web.UI.WebControls.IButtonControl>介面，<xref:System.InvalidOperationException>擲回例外狀況。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>方法主要由控制項開發人員擴充功能的<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> 屬性中設定的控制項 ID 不是 <see cref="T:System.Web.UI.WebControls.IButtonControl" /> 型別。</exception>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />方法在衍生類別中，務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />方法，讓<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />控制項的屬性會正確轉譯。</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 接收轉譯的內容。</param>
        <summary>呈現 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的子控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A>方法會呈現用戶端指令碼，以確保瀏覽器焦點設在指定的控制項<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>屬性。  
  
> [!NOTE]
>  所指定的控制項<xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType>屬性會優先於所指定的控制項<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Web 網頁有一個以上的伺服器端 <see langword="&lt;form&gt;" /> 標記。</exception>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />方法在衍生類別中，務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />方法，讓<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />正確呈現控制項的子控制項。</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收表單控制項內容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項呈現為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />方法在衍生類別中，務必呼叫基底類別的<see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />方法，讓<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />正確呈現控制項。</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定布林值 (Boolean)，指出是否要強制用戶端上已停用的控制項送出其值，讓控制項在網頁回傳至伺服器時保留其值。</summary>
        <value>如果用戶端上停用的控制項被強制送出其值，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>屬性來指定是否要強制用戶端送出其值，當頁面回傳上停用的控制項。 這可讓停用的控制項在網頁回傳至伺服器，保留其值。 當<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>屬性設定為`false`，表單上的控制項已停用用戶端指令碼會提交至伺服器回傳網頁在下一次。 如此一來，停用的控制項所儲存的任何值都會遺失。 若要允許停用的控制項在網頁回傳至伺服器，保留其值，設定<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>屬性設`true`。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>若要在表單上的屬性`true`造成保留其值，在網頁回傳至伺服器的用戶端指令碼停用的控制項。 在此範例中，如果您設定<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>屬性，以`false`，然後按一下**回傳** 按鈕，在 HTML 文字方塊中的文字將會遺失，並不會再選取 HTML 核取方塊。  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定框架 (Frame) 或視窗，在其中呈現張貼至伺服器的資訊結果。</summary>
        <value>瀏覽器視窗或框架，顯示張貼至伺服器的資訊結果。 預設為空字串 ("")，會重新整理擁有焦點的視窗或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>屬性，指定的目標視窗或框架，顯示伺服器所張貼的資訊結果。 重新導向結果張貼至伺服器的資訊是進階的工作。 建議您不要使用這個屬性只是為了回傳。  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>屬性會轉譯成`target`屬性。 `target`屬性上`form`XHTML 1.1 中不允許的項目。 因此，如果呈現的標記必須符合 XHTML 標準，或必須符合協助工具標準，請勿設定<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>屬性。 如需詳細資訊，請參閱 < [XHTML 標準，在 Visual Studio 和 ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)並[協助工具的 Visual Studio 及 ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>值必須以內範圍的 A 到 Z （不區分大小寫），除了下列的特殊值，其開頭為底線的字母為開頭。  
  
|目標值|描述|  
|------------------|-----------------|  
|`_blank`|在無框架的新視窗中呈現內容。|  
|`_parent`|在即時父代框架組中呈現內容。|  
|`_search`|在搜尋窗格中呈現內容。|  
|`_self`|在擁有焦點 (Focus) 的框架中呈現內容。|  
|`_top`|在無框架的完整視窗中呈現內容。|  
  
> [!NOTE]
>  請查閱您的瀏覽器文件，以判斷是否支援 `_search` 值。  例如，Microsoft Internet Explorer 5.0 (含) 以後版本支援 `_search` 目標值。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>回傳至伺服器的屬性來指定新 unframed 視窗顯示資訊的結果。  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET 和 XHTML 相容性</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Visual Studio 2010 和 ASP.NET 4 中的協助工具</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指派給 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的唯一程式設計識別項。</summary>
        <value>指派給 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控制項的唯一程式設計識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>屬性，以取得指派給的唯一程式設計識別項<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。 此屬性會覆寫基底實作傳回常數值，當控制項包含在<xref:System.Web.UI.INamingContainer>-實作以外，請在頁面上，例如自訂伺服器控制項的物件。 如果命名容器是頁面上，而值<xref:System.Web.UI.HtmlControls.HtmlForm>控制項的<xref:System.Web.UI.Control.ID%2A>會傳回屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>屬性和<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>屬性一律傳回相同的值。 這很有用，當<xref:System.Web.UI.HtmlControls.HtmlForm>需要在瀏覽器上呈現控制項<xref:System.Web.UI.HtmlControls.HtmlForm>控制項的<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>和<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>相同的屬性。 若要讓同步處理，這些屬性<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>屬性一律會傳回的值<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>屬性。  
  
> [!NOTE]
>  `name`屬性不符合 XHTML 標準的屬性，而且預設不會呈現 asp.net。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>要擷取的唯一識別碼屬性<xref:System.Web.UI.HtmlControls.HtmlForm>控制項。  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET 和 XHTML 相容性</related>
      </Docs>
    </Member>
  </Members>
</Type>