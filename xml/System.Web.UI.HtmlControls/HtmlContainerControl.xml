<Type Name="HtmlContainerControl" FullName="System.Web.UI.HtmlControls.HtmlContainerControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f70c71d0a93068d55a4a8d4dff1813de89f522e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55350820" /></Metadata><TypeSignature Language="C#" Value="public abstract class HtmlContainerControl : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HtmlContainerControl extends System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HtmlContainerControl&#xA;Inherits HtmlControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlContainerControl abstract : System::Web::UI::HtmlControls::HtmlControl" />
  <TypeSignature Language="F#" Value="type HtmlContainerControl = class&#xA;    inherit HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>作為對應至必須有開頭和結尾標記之 HTML 項目的 HTML 伺服器控制項的抽象基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最常見的控制項使用的結尾標記`<form>`， `<table>`， `<tr>`， `<td>`， `<a>`，和`<span>`項目。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>並<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性可讓您管理其內容的開頭和結尾標記之間<xref:System.Web.UI.HtmlControls.HtmlContainerControl>-衍生的控制項。  
  
 如需執行個體的初始屬性值的清單<xref:System.Web.UI.HtmlControls.HtmlContainerControl>，請參閱<xref:System.Web.UI.HtmlControls.HtmlContainerControl.%23ctor%2A>建構函式。  
  
 這個類別的新執行個體不會直接建立。  
  
> [!CAUTION]
>  如果您使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性，以指定的開頭和結尾標記的 HTML 伺服器控制項的文字之間的文字不是 HTML 編碼。 這可讓您可以在文字中嵌入 HTML 標記中的指令碼。 當使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性，請務必驗證值以減少安全性弱點。 否則，請考慮使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>屬性改為。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>這個類別來動態產生 Web 網頁上的訊息屬性。  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HtmlContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HtmlContainerControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>使用預設值，初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式來建立和初始化的新執行個體<xref:System.Web.UI.HtmlControls.HtmlContainerControl>類別使用預設值。  
  
> [!NOTE]
>  不會直接建立此類別的執行個體。 這個建構函式會從其他 HTML 控制項類別，來初始化這個類別中定義的屬性的建構函式呼叫。  
  
 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.HtmlControls.HtmlContainerControl>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|「 跨越 」 常值字串。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlContainerControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlContainerControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlContainerControl : string -&gt; System.Web.UI.HtmlControls.HtmlContainerControl" Usage="new System.Web.UI.HtmlControls.HtmlContainerControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">指定控制項的標記名稱的字串。</param>
        <summary>使用指定標記名稱，初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式來建立和初始化的新執行個體<xref:System.Web.UI.HtmlControls.HtmlContainerControl>類別使用指定的標記。  
  
> [!NOTE]
>  不會直接建立此類別的執行個體。 這個建構函式會從其他 HTML 控制項類別，來初始化這個類別中定義的屬性的建構函式呼叫。  
  
 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.HtmlControls.HtmlContainerControl>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|所指定的值`tag`參數。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlContainerControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立新的 <see cref="T:System.Web.UI.ControlCollection" /> 物件來保存伺服器控制項的子控制項 (常值和伺服器)。</summary>
        <returns><see cref="T:System.Web.UI.ControlCollection" />，其中包含 <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> 子伺服器控制項。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public virtual string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在指定的 HTML 伺服器控制項的開始和結尾標記之間的內容。</summary>
        <value>介於 HTML 伺服器控制項的開始和結尾標記之間的 HTML 內容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>以程式設計方式修改內容的開頭和結尾標記的 HTML 伺服器控制項之間的屬性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性不會自動編碼於 HTML 實體的特殊字元。 HTML 實體可讓您顯示特殊字元，例如`<`字元，瀏覽器通常會解譯為具有特殊意義。 `<`字元會解譯為標記開頭，而且不會顯示在頁面上。 若要顯示`<`字元，您將需要使用實體`&lt;`。  
  
 比方說，如果<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性設定為`"<b> Hello </b>"`，則`<`並`>`字元不會轉換成`&lt;`和`&gt;`分別。 仍然會轉譯的輸出： \<b > Hello  \< /b >。 瀏覽器將會偵測`<b>`標記，並顯示文字，大家好，以粗體顯示的字型。  
  
> [!CAUTION]
>  文字不是 HTML 編碼，因為它內嵌在 HTML 中的指令碼標記的文字。 如果使用動態使用者輸入來設定這個屬性，請務必驗證值以減少安全性弱點。 如需詳細資訊，請參閱 <<c0> [ 安全性和使用者輸入](~/docs/standard/security/security-and-user-input.md)。  
  
 若要提供自動的 HTML 編碼和解碼，使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>屬性。  
  
> [!NOTE]
>  如果不有任何子控制項<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性包含值<xref:System.String.Empty?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>以動態方式設定文字訊息的屬性。  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">有一個以上的 HTML 伺服器控制項。  
  
-或- 
HTML 伺服器控制項不是 <see cref="T:System.Web.UI.LiteralControl" /> 或 <see cref="T:System.Web.UI.DataBoundLiteralControl" />。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
        <altmember cref="M:System.Web.UI.Control.IsLiteralContent" />
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.DataBoundLiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在指定的 HTML 伺服器控制項的開始和結尾標記之間的文字。</summary>
        <value>介於 HTML 伺服器控制項的開始和結尾標記之間的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>以程式設計方式修改文字的開頭和結尾標記的 HTML 伺服器控制項之間的屬性。  
  
 不同於<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性，<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>屬性自動的特殊字元編碼於 HTML 實體。 HTML 實體可讓您顯示特殊字元，例如`<`字元，瀏覽器通常會解譯為具有特殊意義。 `<`字元會解譯為標記開頭，而且不會顯示在頁面上。 若要顯示`<`字元，您將需要使用實體`&lt;`。  
  
 比方說，如果<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>屬性設定為`"<b> Hello </b>"`，則`<`並`>`符號會轉換成`&lt;`和`&gt;`分別。 轉譯的輸出會是： &lt; b &gt; Hello &lt; b &gt;。 `&lt;`和`&gt;`實體會指出以這些字元會顯示在頁面上的瀏覽器。 將不會偵測瀏覽器`<b>`標記，並以粗體字顯示的文字。 在頁面上顯示的文字是： \<b > Hello  \< /b >。  
  
 若要避免自動 HTML 編碼和解碼，請使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性。  
  
> [!NOTE]
>  如果不有任何子控制項<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性包含值<xref:System.String.Empty?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例示範如何進行 HTML 編碼服務可透過<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>屬性。  
  
 [!code-aspx-csharp[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">有一個以上的 HTML 伺服器控制項。  
  
-或- 
HTML 伺服器控制項不是 <see cref="T:System.Web.UI.LiteralControl" /> 或 <see cref="T:System.Web.UI.DataBoundLiteralControl" />。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="htmlContainerControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" />，代表所要還原的控制項狀態。</param>
        <summary>從 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 方法所儲存的上一頁要求中，還原 <see cref="M:System.Web.UI.Control.SaveViewState" /> 控制項的檢視狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。 不過，控制項開發人員可以覆寫這個方法，以指定的自訂伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱 < [ASP.NET 狀態管理概觀](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A>方法會呼叫基底類別的<xref:System.Web.UI.Control.LoadViewState%2A>方法。 颾魤 ㄛ<xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A>方法會設定<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收 <see cref="T:System.Web.UI.HtmlTextWriter" /> 內容的 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 控制項呈現為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A>方法覆寫<xref:System.Web.UI.HtmlControls.HtmlControl.Render%2A?displayProperty=nameWithType>方法來呈現項目的開頭標記、 子控制項和結尾標記的<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控制項。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A>方法主要由控制項開發人員擴充功能的<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" />方法在衍生類別中，務必呼叫基底類別的<see cref="M:System.Web.UI.HtmlControls.HtmlControl.Render(System.Web.UI.HtmlTextWriter)" />方法，讓<see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />正確呈現控制項。</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收轉譯後內容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 執行個體。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 控制項的屬性轉譯為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 接收轉譯的內容。</param>
        <summary>將 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 控制項的結尾標記呈現為指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A>方法會呼叫<xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A>方法，以呈現目的結尾標記<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控制項。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A>方法主要由控制項開發人員擴充功能的<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>