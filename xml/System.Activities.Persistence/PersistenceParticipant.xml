<Type Name="PersistenceParticipant" FullName="System.Activities.Persistence.PersistenceParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb95f29d54d807628ca891f4c0be9be2c0d7fa10" /><Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/27/2018" /><Meta Name="ms.locfileid" Value="42985849" /></Metadata><TypeSignature Language="C#" Value="public abstract class PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceParticipant abstract" />
  <TypeSignature Language="F#" Value="type PersistenceParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>這個類別允許 <see cref="T:System.Activities.WorkflowApplication" /> 和 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 參與持續性處理程序。 持續性參與者衍生自 <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> 類別或 <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> 類別 (<see cref="T:System.Activities.Persistence.PersistenceParticipant" /> 類別的衍生類別)、實作抽象方法，然後加入類別的執行個體做為工作流程執行個體擴充。 <see cref="T:System.Activities.WorkflowApplication" /> 和 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 保存執行個體時，會尋找此類擴充，並且在適當的時間叫用適當的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 主機保存執行個體時，會執行下列步驟 (或階段)：  
  
1.  收集要保存的值。  
  
2.  對應整體結構值的欄位與個別值。  
  
3.  核發 <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> 給持續性提供者。  
  
4.  在持續性異動下執行 I/O。  
  
 主機會先結束一個階段再開始進行下一個階段。 例如，在進行保存時，主機會先從所有持續性參與者收集值，再進入第二個階段。 在第二個階段中，主機會將在第一個階段中收集到的所有值提供給第二個階段中的所有持續性參與者，以進行對應。 在第三個階段中，主機叫用 <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> 時，會將在第一及第二個階段中收集到的所有值提供給持續性提供者。 接著，在第四個階段中，主機會將收集到的所有值提供給持續性異動下的所有持續性 IO 參與者。  
  
 主機載入持續性執行個體時，會執行下列階段：  
  
1.  核發 <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> 和 <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> 給持續性提供者。  
  
2.  在持續性異動下執行 I/O。  
  
3.  發行已載入的值。  
  
 在最高層級時，衍生自 <xref:System.Activities.Persistence.PersistenceParticipant> 類別的工作流程執行個體擴充可以參與持續性處理序的第一個 (收集) 和第二個 (對應) 階段，以及載入處理序的第三個 (發行) 階段。  衍生自 PersistenceIOParticipant 類別的工作流程執行個體擴充還可以參與持續性處理序的第四個階段和載入處理序的第二個階段 (I/O)。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立衍生自 <xref:System.Activities.Persistence.PersistenceParticipant> 的類別。 這個範例取自[招聘程序](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)範例。  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> 類別的執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將示範如何建立衍生自 <xref:System.Activities.Persistence.PersistenceParticipant> 的類別。 這個範例取自[招聘程序](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md)範例。  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectValues">
      <MemberSignature Language="C#" Value="protected virtual void CollectValues (out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CollectValues([out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; readWriteValues, [out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CollectValues (ByRef readWriteValues As IDictionary(Of XName, Object), ByRef writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CollectValues([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % readWriteValues, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member CollectValues :  *  -&gt; unit&#xA;override this.CollectValues :  *  -&gt; unit" Usage="persistenceParticipant.CollectValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">要保存的讀寫值。</param>
        <param name="writeOnlyValues">要保存的唯寫值。</param>
        <summary>主機會在自訂的持續性參與者上叫用這個方法，以收集要保存的讀寫值和唯寫值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 主機會將第一個字典中的讀寫值封裝為 <xref:System.Runtime.DurableInstancing.InstanceValue> 集合的 <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*> 物件，並將第二個字典中的唯寫值封裝為 <xref:System.Runtime.DurableInstancing.InstanceValue> 物件，並且設定 <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> 和 <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly> 旗標集。 如需詳細資訊，請參閱<xref:System.Runtime.DurableInstancing.InstanceValueOptions>。  
  
> [!IMPORTANT]
>  在同一個持續性時段中，透過跨所有持續性參與者實作 <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> 而提供的每個值都必須擁有唯一的 XName。  
  
   
  
## Examples  
 下列程式碼範例將示範如何在衍生自 <xref:System.Activities.Persistence.PersistenceParticipant> 的類別中使用 CollectValues。 這個範例取自[持續性參與者](~/docs/framework/windows-workflow-foundation/persistence-participants.md)範例。  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; MapValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; MapValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MapValues (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object)) As IDictionary(Of XName, Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ MapValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;&#xA;override this.MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;" Usage="persistenceParticipant.MapValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">要保存的讀寫值。</param>
        <param name="writeOnlyValues">要保存的唯寫值。</param>
        <summary>主機在第一個階段中完成收集值時，會叫用這個方法。 主機會將在第一個階段 (CollectValues 階段) 中自所有持續性參與者收集到的值所組成的兩個唯讀字典轉送到這個方法，以進行對應。 主機會將這個方法所傳回之字典中的值加入到唯寫值的集合中。</summary>
        <returns>字典，其中包含要保存的其他唯寫值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透過跨所有持續性參與者實作 <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> 方法所提供的每個值，包括在第一個階段收集到的所有值 (CollectValues stage)，都必須有唯一的 XName。  
  
   
  
## Examples  
 下列程式碼範例將示範如何在衍生自 <xref:System.Activities.Persistence.PersistenceParticipant> 的類別中使用 MapValues。 這個範例取自[公司購買程序](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)範例。  
  
 [!code-csharp[wfs_PurchaseProcess#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/xmlpersistenceparticipant.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishValues">
      <MemberSignature Language="C#" Value="protected virtual void PublishValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PublishValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PublishValues (readWriteValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PublishValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues);" />
      <MemberSignature Language="F#" Value="abstract member PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit&#xA;override this.PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="persistenceParticipant.PublishValues readWriteValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">從持續性存放區載入的讀寫值。 這個字典對應於保存在最新持續性時段中的讀寫值字典。</param>
        <summary>主機會叫用這個方法，並將 <see cref="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData" /> 集合 (由 <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> 或 <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand" /> 填入) 中載入的所有值當做字典參數傳遞。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將示範如何在衍生自 <xref:System.Activities.Persistence.PersistenceParticipant> 的類別中使用 PublishValues。 這個範例取自[持續性參與者](~/docs/framework/windows-workflow-foundation/persistence-participants.md)範例。  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>