<Type Name="PersistenceIOParticipant" FullName="System.Activities.Persistence.PersistenceIOParticipant">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e788c825fb212822c897f4841918a2d40ea7bacb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36654031" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceIOParticipant : System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceIOParticipant extends System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceIOParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceIOParticipant&#xA;Inherits PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceIOParticipant abstract : System::Activities::Persistence::PersistenceParticipant" />
  <TypeSignature Language="F#" Value="type PersistenceIOParticipant = class&#xA;    inherit PersistenceParticipant" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Persistence.PersistenceParticipant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2ea63-101">包含 <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> 類別的衍生 vclass，除了透過持續性處理序保存及載入工作流程執行個體外，其方法還會執行輸入和輸出作業。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ea63-101">A derived vclass of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class with methods that perform input and output operations in addition to the persisting and loading of workflow instances through the persistence process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ea63-102">主機保存執行個體時，會執行下列步驟 (或階段)：</span><span class="sxs-lookup"><span data-stu-id="2ea63-102">A host executes the following steps (or stages) when persisting an instance:</span></span>  
  
1.  <span data-ttu-id="2ea63-103">收集要保存的值。</span><span class="sxs-lookup"><span data-stu-id="2ea63-103">Collects values to be persisted.</span></span>  
  
2.  <span data-ttu-id="2ea63-104">對應整體結構值的欄位與個別值。</span><span class="sxs-lookup"><span data-stu-id="2ea63-104">Maps fields of monolithic structured values to individual values.</span></span>  
  
3.  <span data-ttu-id="2ea63-105">核發 <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> 給持續性提供者。</span><span class="sxs-lookup"><span data-stu-id="2ea63-105">Issues the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> to the persistence provider.</span></span>  
  
4.  <span data-ttu-id="2ea63-106">在持續性異動下執行 I/O。</span><span class="sxs-lookup"><span data-stu-id="2ea63-106">Performs I/O under the persistence transaction.</span></span>  
  
 <span data-ttu-id="2ea63-107">主機會先結束一個階段再開始進行下一個階段。</span><span class="sxs-lookup"><span data-stu-id="2ea63-107">A host completes a stage before beginning the next stage.</span></span> <span data-ttu-id="2ea63-108">例如，在進行保存時，主機會先從所有持續性參與者收集值，再進入第二個階段。</span><span class="sxs-lookup"><span data-stu-id="2ea63-108">For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</span></span> <span data-ttu-id="2ea63-109">在第二個階段中，主機會將在第一個階段中收集到的所有值提供給第二個階段中的所有持續性參與者，以進行對應。</span><span class="sxs-lookup"><span data-stu-id="2ea63-109">In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</span></span> <span data-ttu-id="2ea63-110">在第三個階段中，主機叫用 <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> 時，會將在第一及第二個階段中收集到的所有值提供給持續性提供者。</span><span class="sxs-lookup"><span data-stu-id="2ea63-110">In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span></span> <span data-ttu-id="2ea63-111">接著，在第四個階段中，主機會將收集到的所有值提供給持續性異動下的所有持續性 IO 參與者。</span><span class="sxs-lookup"><span data-stu-id="2ea63-111">Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</span></span>  
  
 <span data-ttu-id="2ea63-112">主機載入持續性執行個體時，會執行下列階段：</span><span class="sxs-lookup"><span data-stu-id="2ea63-112">A host executes the following stages when loading a persistence instance:</span></span>  
  
1.  <span data-ttu-id="2ea63-113">核發 <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> 和 <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> 給持續性提供者。</span><span class="sxs-lookup"><span data-stu-id="2ea63-113">Issues the <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> and <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> to the persistence provider.</span></span>  
  
2.  <span data-ttu-id="2ea63-114">在持續性異動下執行 I/O。</span><span class="sxs-lookup"><span data-stu-id="2ea63-114">Performs I/O under the persistence transaction.</span></span>  
  
3.  <span data-ttu-id="2ea63-115">發行已載入的值。</span><span class="sxs-lookup"><span data-stu-id="2ea63-115">Publishes the loaded values.</span></span>  
  
 <span data-ttu-id="2ea63-116">在最高層級時，衍生自 <xref:System.Activities.Persistence.PersistenceParticipant> 類別的工作流程執行個體擴充可以參與持續性處理序的第一個 (收集) 和第二個 (對應) 階段，以及載入處理序的第三個 (發行) 階段。</span><span class="sxs-lookup"><span data-stu-id="2ea63-116">At the highest level, workflow instance extensions that derive from the <xref:System.Activities.Persistence.PersistenceParticipant> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</span></span>  <span data-ttu-id="2ea63-117">衍生自 PersistenceIOParticipant 類別的工作流程執行個體擴充還可以參與持續性處理序的第四個階段和載入處理序的第二個階段 (I/O)。</span><span class="sxs-lookup"><span data-stu-id="2ea63-117">Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceIOParticipant (bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isSaveTransactionRequired, bool isLoadTransactionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isSaveTransactionRequired As Boolean, isLoadTransactionRequired As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceIOParticipant(bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="F#" Value="new System.Activities.Persistence.PersistenceIOParticipant : bool * bool -&gt; System.Activities.Persistence.PersistenceIOParticipant" Usage="new System.Activities.Persistence.PersistenceIOParticipant (isSaveTransactionRequired, isLoadTransactionRequired)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isSaveTransactionRequired" Type="System.Boolean" />
        <Parameter Name="isLoadTransactionRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSaveTransactionRequired">
          <span data-ttu-id="2ea63-118">如果儲存作業需要交易，則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-118">
              <see langword="true" /> if a transaction is required for the Save operation.</span>
          </span>
          <span data-ttu-id="2ea63-119">如果建立 <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> 物件時將這個參數設定為 <see langword="true" />，則叫用 BeginOnSave 時一定會設定 Transaction.Current。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-119">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set when BeginOnSave is invoked.</span>
          </span>
          <span data-ttu-id="2ea63-120">異動會由持續性提供者、所有 PersistenceIOParticipant 擴充共用，同時也可能供其他異動參與者共用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-120">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span>
          </span>
        </param>
        <param name="isLoadTransactionRequired">
          <span data-ttu-id="2ea63-121">如果載入作業需要交易，則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-121">
              <see langword="true" /> if a transaction is required for the Load operation.</span>
          </span>
          <span data-ttu-id="2ea63-122">如果建立 <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> 物件時將這個參數設定為 <see langword="true" />，則叫用 BeginOnLoad 時一定會設定 Transaction.Current。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-122">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set  when BeginOnLoad is invoked.</span>
          </span>
          <span data-ttu-id="2ea63-123">異動會由持續性提供者、所有 PersistenceIOParticipant 擴充共用，同時也可能供其他異動參與者共用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-123">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ea63-124">初始化 <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> 類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-124">Initializes an instance of the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.Abort" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="persistenceIOParticipant.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ea63-125">中止暫止的 IO (載入或儲存) 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-125">Aborts the pending IO (Load or Save) operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ea63-126">若衍生類別會覆寫 BeginOnSave 或 BeginOnLoad，且不一定會立刻完成，則必須覆寫中止。</span><span class="sxs-lookup"><span data-stu-id="2ea63-126">Derived classes that override BeginOnSave or BeginOnLoad and might not always complete immediately must override Abort.</span></span> <span data-ttu-id="2ea63-127">如果叫用中止，則必須取消所有暫止中的 IO 作業。</span><span class="sxs-lookup"><span data-stu-id="2ea63-127">If Abort is invoked, any pending IO operations must be canceled.</span></span> <span data-ttu-id="2ea63-128">如果以這種方式取消作業，對應的 End 方法應會擲回 OperationCanceledException。</span><span class="sxs-lookup"><span data-stu-id="2ea63-128">If an operation is canceled in this way, the corresponding End method should throw OperationCanceledException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnLoad">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnLoad (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnLoad(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnLoad (readWriteValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnLoad(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnLoad (readWriteValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">
          <span data-ttu-id="2ea63-129">持續性提供者所載入的讀寫值字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-129">A dictionary of read-write values loaded by the persistence provider.</span>
          </span>
          <span data-ttu-id="2ea63-130">這個字典對應於一組在此執行個體最近的持續性時段中傳遞至 BeginOnSave 的讀寫值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-130">This corresponds to the set of read-write values passed to BeginOnSave in the most recent persistence episode for this instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2ea63-131">時間範圍，作業應在這段時間範圍內完成而不逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-131">The time span within which the operation should be completed without timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2ea63-132">非同步回呼委派，此委派會接收非同步載入作業的完成通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-132">The asynchronous callback delegate that receives notification of the completion of the asynchronous Load operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2ea63-133">與非同步作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-133">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ea63-134">開始非同步作業以載入其他狀態，以及要從執行個體存放區載入的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-134">Begins an asynchronous operation to load additional state in conjunction with an instance being loaded from the instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ea63-135">非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-135">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnSave">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnSave (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnSave(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnSave (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnSave(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnSave (readWriteValues, writeOnlyValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">
          <span data-ttu-id="2ea63-136">在 CollectValues 和 MapValues 階段收集到之讀寫值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-136">A dictionary of read-write values collected in the CollectValues and MapValues stages.</span>
          </span>
        </param>
        <param name="writeOnlyValues">
          <span data-ttu-id="2ea63-137">在 CollectValues 和 MapValues 階段收集到之唯寫值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-137">A dictionary of write-only values collected in the CollectValues and MapValues stages.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2ea63-138">時間範圍，作業應在這段時間範圍內完成而不逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-138">The time span within which the operation should be completed without timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2ea63-139">非同步回呼委派，此委派會接收到非同步作業完成的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-139">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2ea63-140">與非同步作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-140">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ea63-141">開始非同步作業以儲存其他狀態，以及要保存至執行個體存放區的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-141">Begins an asynchronous operation to save additional state in conjunction with an instance being persisted to the instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ea63-142">非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-142">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnLoad">
      <MemberSignature Language="C#" Value="protected virtual void EndOnLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnLoad : IAsyncResult -&gt; unit&#xA;override this.EndOnLoad : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2ea63-143">呼叫 <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的非同步結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-143">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ea63-144">完成非同步載入作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-144">Completes the asynchronous Load operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnSave">
      <MemberSignature Language="C#" Value="protected virtual void EndOnSave (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnSave(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnSave (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnSave(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnSave : IAsyncResult -&gt; unit&#xA;override this.EndOnSave : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnSave result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2ea63-145">呼叫 <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法所傳回的非同步結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-145">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ea63-146">完成非同步儲存作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ea63-146">Completes the asynchronous Save operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>