<Type Name="PropertyInfo" FullName="System.Reflection.PropertyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4e15e55e23a25e647575a01fc6d096bcd64f749" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48748945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit PropertyInfo extends System.Reflection.MemberInfo implements class System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyInfo&#xA;Inherits MemberInfo&#xA;Implements _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyInfo abstract : System::Reflection::MemberInfo, System::Runtime::InteropServices::_PropertyInfo" />
  <TypeSignature Language="F#" Value="type PropertyInfo = class&#xA;    inherit MemberInfo&#xA;    interface _PropertyInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MemberInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._PropertyInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0a7c7-101">探索屬性 (Property) 的屬性 (Attribute)，並提供屬性中繼資料 (Metadata) 的存取。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a7c7-101">Discovers the attributes of a property and provides access to property metadata.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-102">屬性是以邏輯方式與欄位相同。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-102">Properties are logically the same as fields.</span></span> <span data-ttu-id="0a7c7-103">屬性是一個具名的物件的狀態，其值是通常可透過層面`get`和`set`存取子。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-103">A property is a named aspect of an object's state whose value is typically accessible through `get` and `set` accessors.</span></span> <span data-ttu-id="0a7c7-104">屬性可能是唯讀的在此情況下不支援 set 常式。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-104">Properties may be read-only, in which case a set routine is not supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-105">若要判斷屬性是否`static`，您必須取得<xref:System.Reflection.MethodInfo>如`get`或`set`存取子，藉由呼叫<xref:System.Reflection.PropertyInfo.GetGetMethod%2A>或<xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法，並檢查其<xref:System.Reflection.MethodBase.IsStatic%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-105">To determine whether a property is `static`, you must obtain the <xref:System.Reflection.MethodInfo> for the `get` or `set` accessor, by calling the <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> or the <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method, and examine its <xref:System.Reflection.MethodBase.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="0a7c7-106">此類別中的數個方法會假設`get`存取子和`set`屬性存取子方法具有特定的格式。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-106">Several methods in this class assume that the `get` accessor and `set` accessor methods of a property have certain formats.</span></span> <span data-ttu-id="0a7c7-107">簽章`get`和`set`方法必須符合下列慣例：</span><span class="sxs-lookup"><span data-stu-id="0a7c7-107">The signatures of the `get` and `set` methods must match the following convention:</span></span>  
  
-   <span data-ttu-id="0a7c7-108">傳回型別`get`方法和最後一個引數`set`方法必須相同。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-108">The return type of the `get` method and the last argument of the `set` method must be identical.</span></span> <span data-ttu-id="0a7c7-109">這是屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-109">This is the type of the property.</span></span>  
  
-   <span data-ttu-id="0a7c7-110">`get`和`set`方法必須有相同的數字、 類型和順序的索引。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-110">The `get` and `set` methods must have the same number, type, and order of indices.</span></span>  
  
 <span data-ttu-id="0a7c7-111">如果未遵照這種格式，則行為`GetValue`和`SetValue`方法未定義。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-111">If this format is not followed, the behavior of the `GetValue` and `SetValue` methods is undefined.</span></span>  
  
 <span data-ttu-id="0a7c7-112">呼叫<xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType>上`PropertyInfo`當`inherit`參數`GetCustomAttributes`是`true`不要走的型別階層。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-112">Calling <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType> on `PropertyInfo` when the `inherit` parameter of `GetCustomAttributes` is `true` does not walk the type hierarchy.</span></span> <span data-ttu-id="0a7c7-113">使用<xref:System.Attribute?displayProperty=nameWithType>繼承自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-113">Use <xref:System.Attribute?displayProperty=nameWithType> to inherit custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-114">此範例示範如何使用不同的反映類別來分析組件中包含的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-114">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-115">這個範例會產生約 55000 的資料行，您可以重新導向至文字檔案，在命令提示字元，如下所示： **example.exe > propertyinfo.txt**</span><span class="sxs-lookup"><span data-stu-id="0a7c7-115">This example generates about 55,000 lines of data, which you can redirect to a text file at the command prompt, as follows: **example.exe > propertyinfo.txt**</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="0a7c7-116">針對繼承者完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a7c7-116">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="0a7c7-117">這個類別無法繼承由部分信任的程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a7c7-117">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="0a7c7-118">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a7c7-118">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="0a7c7-119">當您繼承自<see cref="T:System.Reflection.PropertyInfo" />，您必須覆寫下列成員： <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />， <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />， <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />， <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />， <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />，和<see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0a7c7-119">When you inherit from <see cref="T:System.Reflection.PropertyInfo" />, you must override the following members: <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />, <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />, and <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-120">初始化 <see cref="T:System.Reflection.PropertyInfo" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-120">Initializes a new instance of the <see cref="T:System.Reflection.PropertyInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-121">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-121">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-122">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-122">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Reflection.PropertyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-123">取得這個屬性 (Property) 的屬性 (Attribute)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-123">Gets the attributes for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-124">這個屬性 (Property) 的屬性 (Attribute)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-124">The attributes of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-125"><xref:System.Reflection.PropertyInfo.Attributes%2A>屬性會傳回與所表示的屬性相關聯的屬性<xref:System.Reflection.PropertyInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-125">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property returns the attributes associated with the property represented by this <xref:System.Reflection.PropertyInfo> object.</span></span>  <span data-ttu-id="0a7c7-126">屬性為主要是建立屬性時，編譯器所套用的修飾詞它們表示屬性是否預設屬性，`SpecialName`屬性，並依此類推。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-126">The attributes are primarily modifiers applied by a compiler when creating a property; they indicate whether a property is the default property, a `SpecialName` property, and so on.</span></span> <span data-ttu-id="0a7c7-127">請注意，幾乎所有的屬性，在.NET Framework 類別庫的值中的型別中找到<xref:System.Reflection.PropertyInfo.Attributes%2A>屬性是<xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-127">Note that, for almost all properties found in types in the .NET Framework class library, the value of the <xref:System.Reflection.PropertyInfo.Attributes%2A> property is <xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="0a7c7-128">在大部分情況下，您可能想要擷取與屬性相關聯的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-128">In most cases, you probably want to retrieve the custom attributes associated with a property.</span></span> <span data-ttu-id="0a7c7-129">若要這樣做，擷取的值<xref:System.Reflection.MemberInfo.CustomAttributes%2A>屬性或呼叫其中一個多載<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-129">To do this, retrieve the value of the <xref:System.Reflection.MemberInfo.CustomAttributes%2A> property, or call one of the overloads of the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span>  
  
 <span data-ttu-id="0a7c7-130">若要取得<xref:System.Reflection.PropertyInfo.Attributes%2A>屬性：</span><span class="sxs-lookup"><span data-stu-id="0a7c7-130">To get the <xref:System.Reflection.PropertyInfo.Attributes%2A> property:</span></span>  
  
1.  <span data-ttu-id="0a7c7-131">取得<xref:System.Type>物件，表示屬性所屬的類型。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-131">Get a <xref:System.Type> object that represents the type to which the property belongs.</span></span>  
  
2.  <span data-ttu-id="0a7c7-132">取得<xref:System.Reflection.PropertyInfo>物件所呼叫的多載<xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-132">Get the <xref:System.Reflection.PropertyInfo> object by calling an overload of the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method.</span></span>  
  
3.  <span data-ttu-id="0a7c7-133">擷取屬性的屬性，從<xref:System.Reflection.PropertyInfo.Attributes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-133">Retrieve the property's attributes from the <xref:System.Reflection.PropertyInfo.Attributes%2A> property.</span></span>  
  
 <span data-ttu-id="0a7c7-134">您可以定義類型，建立以反映方式動態屬性的屬性發出呼叫的多載<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>方法，並提供值`attributes`引數。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-134">You can define the attributes of a property for a type created dynamically using reflection emit by calling an overload of the <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> method and supplying a value for the `attributes` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.MemberInfo.CustomAttributes" />
        <altmember cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Reflection.PropertyInfo.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-135">取得值，指出是否可讀取屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-135">Gets a value indicating whether the property can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-136">如果可讀取這個屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-136">
              <see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-137">如果屬性沒有`get`存取子，它無法讀取。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-137">If the property does not have a `get` accessor, it cannot be read.</span></span>  
  
 <span data-ttu-id="0a7c7-138">若要取得`CanRead`屬性，第一次取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-138">To get the `CanRead` property, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-139">從`Type`，取得`PropertyInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-139">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="0a7c7-140">從`PropertyInfo`，取得`CanRead`值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-140">From the `PropertyInfo`, get the `CanRead` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-141">下列範例會定義兩個屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-141">The following example defines two properties.</span></span> <span data-ttu-id="0a7c7-142">第一個屬性是可讀取及`CanRead`屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-142">The first property is readable and the `CanRead` property is `true`.</span></span> <span data-ttu-id="0a7c7-143">第二個屬性不是可讀取 （沒有任何的 get 存取子），而`CanRead`屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-143">The second property is not readable (there is no get accessor), and the `CanRead` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Reflection.PropertyInfo.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-144">取得值，指出是否可寫入屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-144">Gets a value indicating whether the property can be written to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-145">如果可寫入屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-145">
              <see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A> 會傳回`true`屬性是否`set`存取子，即使是以存取子`private`， `internal` (或`Friend`在 Visual Basic 中)，或`protected`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A> returns `true` if the property has a `set` accessor, even if the accessor is `private`, `internal` (or `Friend` in Visual Basic), or `protected`.</span></span>   <span data-ttu-id="0a7c7-147">如果屬性不一定`set`存取子，則方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-147">If the property does not have a `set` accessor, the method returns `false`.</span></span>  
  
 <span data-ttu-id="0a7c7-148">若要取得的值<xref:System.Reflection.PropertyInfo.CanWrite%2A>屬性：</span><span class="sxs-lookup"><span data-stu-id="0a7c7-148">To get the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property:</span></span>  
  
1.  <span data-ttu-id="0a7c7-149">取得<xref:System.Type>型別的物件，其中包含的屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-149">Get the <xref:System.Type> object of the type that includes the property.</span></span>  
  
2.  <span data-ttu-id="0a7c7-150">呼叫<xref:System.Type.GetProperty%2A?displayProperty=nameWithType>以取得<xref:System.Reflection.PropertyInfo>表示屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-150">Call the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> to get the <xref:System.Reflection.PropertyInfo> object that represents the property.</span></span>  
  
3.  <span data-ttu-id="0a7c7-151">擷取值的<xref:System.Reflection.PropertyInfo.CanWrite%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-151">Retrieve the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-152">下列範例會定義兩個屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-152">The following example defines two properties.</span></span> <span data-ttu-id="0a7c7-153">第一個屬性是可寫入並`CanWrite`屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-153">The first property is writable and the `CanWrite` property is `true`.</span></span> <span data-ttu-id="0a7c7-154">第二個屬性不是可寫入 (有無`set`存取子)，而`CanWrite`屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-154">The second property is not writable (there is no `set` accessor), and the `CanWrite` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7c7-155">與這個執行個體相比較的物件，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-155">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-156">傳回值，這個值指出此執行個體是否與指定的物件相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-156">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-157">如果 <see langword="true" /> 和這個執行個體具有相同的類型和值，則為 <paramref name="obj" />否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-157">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-158">傳回這個屬性上的 <see langword="get" /> 和 <see langword="set" /> 存取子陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-158">Returns an array of the <see langword="get" /> and <see langword="set" /> accessors on this property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : unit -&gt; System.Reflection.MethodInfo[]&#xA;override this.GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="propertyInfo.GetAccessors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-159">傳回陣列，其項目會反映目前執行個體所反映屬性之公用的 <see langword="get" /> 和 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-159">Returns an array whose elements reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-160">
            <see cref="T:System.Reflection.MethodInfo" /> 物件的陣列，這些物件會反映目前執行個體所反映屬性之公用的 <see langword="get" /> 和 <see langword="set" /> 存取子 (如能找到)；否則，這個方法會傳回項目都是零 (0) 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-160">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance, if found; otherwise, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-161">若要呼叫<xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="0a7c7-161">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="0a7c7-162">取得<xref:System.Type>表示類別的物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-162">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="0a7c7-163">從<xref:System.Type>物件，取得<xref:System.Reflection.PropertyInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-163">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="0a7c7-164">從<xref:System.Reflection.PropertyInfo>物件，請呼叫<xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-164">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-165">下列範例會擷取的公用存取子`ClassWithProperty.Caption`屬性，並顯示其相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-165">The following example retrieves the public accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="0a7c7-166">它也會呼叫<xref:System.Reflection.MethodBase.Invoke%2A>擷取屬性值的 getter 和 setter 來設定屬性值的方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-166">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/cs/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-167">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-167">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-168">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-168">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="propertyInfo.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="0a7c7-169">表示非公用方法是否應該在傳回的陣列中傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-169">Indicates whether non-public methods should be returned in the returned array.</span>
          </span>
          <span data-ttu-id="0a7c7-170">如果非公用方法要包含在內，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-170">
              <see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-171">傳回陣列，其項目會反映目前執行個體所反映的屬性公用的和 (如果指定) 非公用的 <see langword="get" /> 和 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-171">Returns an array whose elements reflect the public and, if specified, non-public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-172">陣列，其項目會反映目前執行個體所反映屬性的 <see langword="get" /> 和 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-172">An array whose elements reflect the <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span>
          </span>
          <span data-ttu-id="0a7c7-173">如果 <paramref name="nonPublic" /> 為 <see langword="true" />，則這個陣列包含公用的和非公用的 <see langword="get" /> 和 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-173">If <paramref name="nonPublic" /> is <see langword="true" />, this array contains public and non-public <see langword="get" /> and <see langword="set" /> accessors.</span>
          </span>
          <span data-ttu-id="0a7c7-174">如果 <paramref name="nonPublic" /> 為 <see langword="false" />，則這個陣列只包含公用的 <see langword="get" /> 和 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-174">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" /> and <see langword="set" /> accessors.</span>
          </span>
          <span data-ttu-id="0a7c7-175">如果沒有找到具有指定可視性的存取子，則這個方法會傳回項目為零 (0) 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-175">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-176">若要呼叫<xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="0a7c7-176">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="0a7c7-177">取得<xref:System.Type>表示類別的物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-177">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="0a7c7-178">從<xref:System.Type>物件，取得<xref:System.Reflection.PropertyInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-178">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="0a7c7-179">從<xref:System.Reflection.PropertyInfo>物件，請呼叫<xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-179">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-180">下列範例會擷取的存取子`ClassWithProperty.Caption`屬性，並顯示其相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-180">The following example retrieves the accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="0a7c7-181">它也會呼叫<xref:System.Reflection.MethodBase.Invoke%2A>擷取屬性值的 getter 和 setter 來設定屬性值的方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-181">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-182">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-182">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-183">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetConstantValue : unit -&gt; obj&#xA;override this.GetConstantValue : unit -&gt; obj" Usage="propertyInfo.GetConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-184">使用編譯器傳回與屬性相關聯的常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-184">Returns a literal value associated with the property by a compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-185">
            <see cref="T:System.Object" />，包含與屬性關聯的常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-185">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span>
          </span>
          <span data-ttu-id="0a7c7-186">如果常值是元素值為零的類別類型，則傳回值會是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-186">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-187">這個方法會提供 managed 的編譯器和程式碼分析器的設計工具。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-187">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-188">請勿在僅限反映的內容中，使用這個方法，因為它可能會導致執行的程式碼。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-188">Do not use this method in the reflection-only context, because it might cause code to execute.</span></span> <span data-ttu-id="0a7c7-189">請改用 <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-189">Use the <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A> method instead.</span></span>  
  
 <span data-ttu-id="0a7c7-190">未受管理的中繼資料中的 Constant 資料表用來儲存常數值的欄位、 參數和屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-190">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="0a7c7-191">常數的資訊不會直接影響執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-191">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="0a7c7-192">編譯器會檢查這項資訊，在編譯時期，當匯入中繼資料。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-192">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="0a7c7-193">如果使用，則編譯器會發出 Microsoft intermediate language (MSIL) 資料流中內嵌常數的值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-193">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="0a7c7-194">有可用來在執行階段存取的 Constant 資料表不 MSIL 指令。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-194">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-195">如需有關常數的值和常數的資料表的詳細資訊，請參閱 ECMA 第二篇文件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-195">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="0a7c7-196">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-196">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a7c7-197">Unmanaged 中繼資料中的 Constant 資料表不包含目前屬性的常數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-197">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0a7c7-198">值的類型不是 Common Language Specification (CLS) 允許的類型之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-198">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span>
          </span>
          <span data-ttu-id="0a7c7-199">請參閱 ECMA 規格第二篇的＜中繼資料＞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-199">See the ECMA Partition II specification, Metadata.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-200">傳回 <see langword="MethodInfo" />，表示這個屬性的 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-200">Returns a <see langword="MethodInfo" /> representing the <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetGetMethod " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-201">傳回這個屬性的公用 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-201">Returns the public <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-202">
            <see langword="MethodInfo" /> 物件，代表這個屬性的公用 <see langword="get" /> 存取子，如果 <see langword="null" /> 存取子為非公用或不存在則為 <see langword="get" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-202">A <see langword="MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-203">這是很便利的方法可提供實作抽象`GetGetMethod`方法`nonPublic`參數設為`false`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-203">This is a convenience method that provides an implementation for the abstract `GetGetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="0a7c7-204">若要使用`GetGetMethod`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-204">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-205">從`Type`，取得<xref:System.Reflection.PropertyInfo>。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-205">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="0a7c7-206">從<xref:System.Reflection.PropertyInfo>，使用`GetGetMethod`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-206">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-207">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-207">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-208">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-208">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="0a7c7-209">指出是否應該傳回非公用的 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-209">Indicates whether a non-public <see langword="get" /> accessor should be returned.</span>
          </span>
          <span data-ttu-id="0a7c7-210">如果要傳回非公用存取子，則為 <see langword="true" />否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-210">
              <see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-211">當在衍生類別中覆寫時，傳回這個屬性的公用或非公用 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-211">When overridden in a derived class, returns the public or non-public <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-212">
            <see langword="MethodInfo" /> 物件，代表這個屬性的 <see langword="get" /> 存取子 (如果 <paramref name="nonPublic" /> 為 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-212">A <see langword="MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if <paramref name="nonPublic" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="0a7c7-213">如果 <see langword="null" /> 為 <paramref name="nonPublic" /> 且 <see langword="false" /> 存取子為非公用，或，如果 <see langword="get" /> 為 <paramref name="nonPublic" /> 但沒有 <see langword="true" /> 存取子存在，則會傳回 <see langword="get" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-213">Returns <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-214">這個屬性是<xref:System.Reflection.MethodInfo>表示 get 存取子。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-214">This property is the <xref:System.Reflection.MethodInfo> representing the get accessor.</span></span>  
  
 <span data-ttu-id="0a7c7-215">若要使用`GetGetMethod`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-215">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-216">從`Type`，取得<xref:System.Reflection.PropertyInfo>。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-216">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="0a7c7-217">從<xref:System.Reflection.PropertyInfo>，使用`GetGetMethod`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-217">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-218">下列範例顯示的公用或非公用`get`指定的屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-218">The following example displays the public or non-public `get` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a7c7-219">要求的方法為非公用，而且呼叫端沒有 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 可以反映這個非公用方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-219">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-220">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-220">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-221">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-221">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-222">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-222">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-223">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-223">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="propertyInfo.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-224">當在衍生類別中覆寫時，傳回屬性的所有索引參數的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-224">When overridden in a derived class, returns an array of all the index parameters for the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-225">
            <see langword="ParameterInfo" /> 類型的陣列，包含索引的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-225">An array of type <see langword="ParameterInfo" /> containing the parameters for the indexes.</span>
          </span>
          <span data-ttu-id="0a7c7-226">如果此屬性未建立索引，則表示陣列有 0 (零) 個項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-226">If the property is not indexed, the array has 0 (zero) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-227">從傳回的陣列中擷取所有必要的參數資訊。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-227">Extract any required parameter information from the returned array.</span></span>  
  
 <span data-ttu-id="0a7c7-228">若要使用`GetIndexParameters`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-228">To use the `GetIndexParameters` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-229">從`Type`，取得`PropertyInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-229">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="0a7c7-230">從`PropertyInfo`，使用`GetIndexParameters`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-230">From the `PropertyInfo`, use the `GetIndexParameters` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-231">下列範例會顯示指定之屬性的索引參數。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-231">The following example displays the index parameters of the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-232">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-232">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-233">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-233">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo GetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.GetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ GetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GetMethod : System.Reflection.MethodInfo" Usage="System.Reflection.PropertyInfo.GetMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-234">取得這個屬性的 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-234">Gets the <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-235">這個屬性的 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-235">The <see langword="get" /> accessor for this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetOptionalCustomModifiers : unit -&gt; Type[]&#xA;override this.GetOptionalCustomModifiers : unit -&gt; Type[]" Usage="propertyInfo.GetOptionalCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-236">傳回類型的陣列，表示屬性的選擇性自訂修飾詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-236">Returns an array of types representing the optional custom modifiers of the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-237">
            <see cref="T:System.Type" /> 物件的陣列，識別目前屬性的選擇性自訂修飾詞，例如 <see cref="T:System.Runtime.CompilerServices.IsConst" /> 或 <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-237">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-238"><xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A>和<xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A>方法可供設計工具的 managed 編譯器。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-238">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="0a7c7-239">如需有關自訂修飾詞的詳細資訊，請參閱 <<c0> <xref:System.Runtime.CompilerServices.IsBoxed> 和相關類別中的<xref:System.Runtime.CompilerServices>命名空間和 ECMA 第二篇文件中的中繼資料規格。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-239">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="0a7c7-240">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-240">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetRawConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRawConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRawConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRawConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRawConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetRawConstantValue : unit -&gt; obj&#xA;override this.GetRawConstantValue : unit -&gt; obj" Usage="propertyInfo.GetRawConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-241">使用編譯器傳回與屬性相關聯的常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-241">Returns a literal value associated with the property by a compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-242">
            <see cref="T:System.Object" />，包含與屬性關聯的常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-242">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span>
          </span>
          <span data-ttu-id="0a7c7-243">如果常值是元素值為零的類別類型，則傳回值會是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-243">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-244">這個方法會提供 managed 的編譯器和程式碼分析器的設計工具。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-244">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
 <span data-ttu-id="0a7c7-245">這個方法可以用於執行內容和僅限反映的內容。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-245">This method can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="0a7c7-246">未受管理的中繼資料中的 Constant 資料表用來儲存常數值的欄位、 參數和屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-246">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="0a7c7-247">常數的資訊不會直接影響執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-247">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="0a7c7-248">編譯器會檢查這項資訊，在編譯時期，當匯入中繼資料。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-248">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="0a7c7-249">如果使用，則編譯器會發出 Microsoft intermediate language (MSIL) 資料流中內嵌常數的值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-249">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="0a7c7-250">有可用來在執行階段存取的 Constant 資料表不 MSIL 指令。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-250">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-251">如需有關常數的值和常數的資料表的詳細資訊，請參閱 ECMA 第二篇文件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-251">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="0a7c7-252">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-252">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a7c7-253">Unmanaged 中繼資料中的 Constant 資料表不包含目前屬性的常數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-253">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0a7c7-254">值的類型不是 Common Language Specification (CLS) 允許的類型之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-254">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span>
          </span>
          <span data-ttu-id="0a7c7-255">請參閱 ECMA 規格第二篇的＜中繼資料邏輯格式：其他結構、簽章中使用的項目類型＞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-255">See the ECMA Partition II specification, Metadata Logical Format: Other Structures, Element Types used in Signatures.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredCustomModifiers : unit -&gt; Type[]&#xA;override this.GetRequiredCustomModifiers : unit -&gt; Type[]" Usage="propertyInfo.GetRequiredCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-256">傳回類型的陣列，表示屬性的必要自訂修飾詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-256">Returns an array of types representing the required custom modifiers of the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-257">
            <see cref="T:System.Type" /> 物件的陣列，識別目前屬性的必要自訂修飾詞，例如 <see cref="T:System.Runtime.CompilerServices.IsConst" /> 或 <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-257">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-258"><xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A>和<xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A>方法可供設計工具的 managed 編譯器。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-258">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="0a7c7-259">如需有關自訂修飾詞的詳細資訊，請參閱 <<c0> <xref:System.Runtime.CompilerServices.IsBoxed> 和相關類別中的<xref:System.Runtime.CompilerServices>命名空間和 ECMA 第二篇文件中的中繼資料規格。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-259">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="0a7c7-260">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-260">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-261">傳回 <see cref="T:System.Reflection.MethodInfo" />，表示這個屬性的 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-261">Returns a <see cref="T:System.Reflection.MethodInfo" /> representing the <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetSetMethod " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-262">傳回這個屬性的公用 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-262">Returns the public <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-263">
            <see langword="MethodInfo" /> 物件，代表這個屬性的 <see langword="Set" /> 方法 (如果 <see langword="set" /> 存取子是公用的)，或 <see langword="null" /> (如果 <see langword="set" /> 存取子不是公用的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-263">The <see langword="MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-264">這是很便利的方法可提供實作抽象`GetSetMethod`方法`nonPublic`參數設為`false`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-264">This is a convenience method that provides an implementation for the abstract `GetSetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="0a7c7-265">若要使用`GetSetMethod`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-265">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-266">從`Type`，取得<xref:System.Reflection.PropertyInfo>。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-266">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="0a7c7-267">從`PropertyInfo`，使用`GetSetMethod`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-267">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-268">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-268">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-269">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-269">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="0a7c7-270">指出若為非公用存取子，是否應該傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-270">Indicates whether the accessor should be returned if it is non-public.</span>
          </span>
          <span data-ttu-id="0a7c7-271">如果要傳回非公用存取子，則為 <see langword="true" />否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-271">
              <see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-272">當在衍生類別中覆寫時，傳回這個屬性的 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-272">When overridden in a derived class, returns the <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-273">這個屬性的 <see langword="Set" /> 方法或 <see langword="null" />，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-273">This property's <see langword="Set" /> method, or <see langword="null" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="0a7c7-274">值</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-274">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a7c7-275">條件</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-275">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="0a7c7-276">這個屬性的 <see langword="Set" /> 方法。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-276">The <see langword="Set" /> method for this property.</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a7c7-277">
                  <see langword="set" /> 存取子為公用。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-277">The <see langword="set" /> accessor is public.</span>
                </span>
                <span data-ttu-id="0a7c7-278">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-278">-or-</span>
                </span>
                <span data-ttu-id="0a7c7-279">
                  <paramref name="nonPublic" /> 為 <see langword="true" />，且 <see langword="set" /> 存取子為非公用。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-279">
                    <paramref name="nonPublic" /> is <see langword="true" /> and the <see langword="set" /> accessor is non-public.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="null" />
              </term>
              <description>
                <span data-ttu-id="0a7c7-280">
                  <paramref name="nonPublic" /> 為 <see langword="true" />，但屬性為唯讀。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-280">
                    <paramref name="nonPublic" /> is <see langword="true" />, but the property is read-only.</span>
                </span>
                <span data-ttu-id="0a7c7-281">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-281">-or-</span>
                </span>
                <span data-ttu-id="0a7c7-282">
                  <paramref name="nonPublic" /> 為 <see langword="false" />，且 <see langword="set" /> 存取子為非公用。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-282">
                    <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="set" /> accessor is non-public.</span>
                </span>
                <span data-ttu-id="0a7c7-283">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-283">-or-</span>
                </span>
                <span data-ttu-id="0a7c7-284">沒有 <see langword="set" /> 存取子。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a7c7-284">There is no <see langword="set" /> accessor.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-285">若要使用`GetSetMethod`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-285">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-286">從`Type`，取得<xref:System.Reflection.PropertyInfo>。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-286">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="0a7c7-287">從`PropertyInfo`，使用`GetSetMethod`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-287">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-288">下列範例會顯示`set`指定的屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-288">The following example displays the `set` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a7c7-289">要求的方法為非公用，而且呼叫端沒有 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 可以反映這個非公用方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-289">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-290">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-290">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-291">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-291">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="propertyInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-292">傳回指定的物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-292">Returns the property value of a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj -&gt; obj" Usage="propertyInfo.GetValue obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7c7-293">其屬性值將被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-293">The object whose property value will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-294">傳回指定的物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-294">Returns the property value of a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-295">指定之物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-295">The property value of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-296">您呼叫<xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29>多載，來擷取非索引屬性的值; 如果您嘗試擷取索引之屬性的值，方法會擲回<xref:System.Reflection.TargetParameterCountException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-296">You call the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29> overload to retrieve the value of a non-indexed property; if you try to retrieve the value of an indexed property, the method throws a <xref:System.Reflection.TargetParameterCountException> exception.</span></span> <span data-ttu-id="0a7c7-297">您可以判斷是否屬性編製索引，或者不是藉由呼叫<xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-297">You can determine whether a property is indexed or not by calling the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="0a7c7-298">如果傳回的長度<xref:System.Reflection.ParameterInfo>陣列為零，此屬性不會建立索引。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-298">If the length of the returned <xref:System.Reflection.ParameterInfo> array is zero, the property is not indexed.</span></span>  
  
 <span data-ttu-id="0a7c7-299">這是很便利的方法可提供實作抽象<xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29>方法<xref:System.Reflection.BindingFlags>參數設為<xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>，則<xref:System.Reflection.Binder>設定為`null`，物件的陣列索引值設為`null`，而<xref:System.Globalization.CultureInfo>設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-299">This is a convenience method that provides an implementation for the abstract <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method with the <xref:System.Reflection.BindingFlags> parameter set to <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>, the <xref:System.Reflection.Binder> set to `null`, the object array of index values set to `null`, and the <xref:System.Globalization.CultureInfo> set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-300">下列範例會定義`Planet`有兩個屬性的類別： `Name`，全球; 的名稱和`Distance`，地球行星的距離。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-300">The following example defines a `Planet` class that has two properties: `Name`, the name of the planet; and `Distance`, the planet's distance from Earth.</span></span> <span data-ttu-id="0a7c7-301">此範例會具現化`Planet`物件，代表全球 Jupiter，並將它傳遞給`GetPropertyValues`方法，以顯示資訊屬性，並使用<xref:System.Reflection.PropertyInfo.GetValue%2A>方法來取得每個值`Planet`屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-301">The example instantiates a `Planet` object that represents the planet Jupiter and passes it to a `GetPropertyValues` method that displays information about the properties and uses the <xref:System.Reflection.PropertyInfo.GetValue%2A> method to get the value of each `Planet` property.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * obj[] -&gt; obj&#xA;override this.GetValue : obj * obj[] -&gt; obj" Usage="propertyInfo.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7c7-302">其屬性值將被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-302">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a7c7-303">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-303">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="0a7c7-304">索引屬性的索引以零為起始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-304">The indexes of indexed properties are zero-based.</span>
          </span>
          <span data-ttu-id="0a7c7-305">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-305">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-306">傳回指定的物件的屬性值，和索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-306">Returns the property value of a specified object with optional index values for indexed properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-307">指定之物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-307">The property value of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-308">若要判斷屬性是否會編製索引，請使用<xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-308">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="0a7c7-309">如果產生的陣列有 0 （零） 的項目，此屬性不會建立索引。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-309">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="0a7c7-310">這是很便利的方法可提供實作抽象`GetValue`方法`BindingFlags`參數`Default`，則`Binder`設定為`null`，和`CultureInfo`設為`null`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-310">This is a convenience method that provides an implementation for the abstract `GetValue` method with a `BindingFlags` parameter of `Default`, the `Binder` set to `null`, and the `CultureInfo` set to `null`.</span></span>  
  
 <span data-ttu-id="0a7c7-311">因為靜態屬性屬於型別，而不是個別物件，取得靜態屬性，藉由傳遞`null`做為物件引數。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-311">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="0a7c7-312">例如，使用下列程式碼，若要取得靜態`CurrentCulture`屬性`CultureInfo`:</span><span class="sxs-lookup"><span data-stu-id="0a7c7-312">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
    (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
    CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="0a7c7-313">若要使用`GetValue`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-313">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-314">從`Type`，取得`PropertyInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-314">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="0a7c7-315">從`PropertyInfo`，使用`GetValue`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-315">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-316">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，並限制為呼叫端的非公用成員的授權集是否授與集或子集效果。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-316">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="0a7c7-317">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="0a7c7-317">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="0a7c7-318">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-318">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-319">下列範例示範如何取得索引屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-319">The following example shows how to get the value of an indexed property.</span></span> <span data-ttu-id="0a7c7-320"><xref:System.String.Chars%2A?displayProperty=nameWithType>屬性是預設屬性 （C# 中為索引子） 的<xref:System.String>類別。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-320">The <xref:System.String.Chars%2A?displayProperty=nameWithType> property is the default property (the indexer in C#) of the <xref:System.String> class.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a7c7-321">
            <paramref name="index" /> 陣列未包含所需的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-321">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="0a7c7-322">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-322">-or-</span>
          </span>
          <span data-ttu-id="0a7c7-323">找不到屬性的 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-323">The property's <see langword="get" /> accessor is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="0a7c7-324">在<see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">適用於 Windows 市集應用程式的 .NET - 支援的應用程式開發介面</see> 或是<see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">可攜式類別庫</see>中，改為攔截 <see cref="T:System.Exception" />。</span>
              <span class="sxs-lookup">
                <span data-stu-id="0a7c7-324">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="0a7c7-325">物件不符合目標類型，或屬性是執行個體屬性但 <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-325">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="0a7c7-326">
            <paramref name="index" /> 中的參數數目不符合索引屬性所接受的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-326">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="0a7c7-327">在<see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">適用於 Windows 市集應用程式的 .NET</see> 或是<see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">可攜式類別庫</see>中，改為攔截基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</span>
              <span class="sxs-lookup">
                <span data-stu-id="0a7c7-327">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="0a7c7-328">曾不合法嘗試存取類別內的私用或保護方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-328">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="0a7c7-329">擷取屬性值時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-329">An error occurred while retrieving the property value.</span>
          </span>
          <span data-ttu-id="0a7c7-330">例如，為索引屬性指定的索引值超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-330">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="0a7c7-331">
            <see cref="P:System.Exception.InnerException" /> 屬性指出錯誤的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-331">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-332">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-332">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-333">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-333">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="propertyInfo.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7c7-334">其屬性值將被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-334">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="0a7c7-335">下列可指定引動過程屬性之列舉成員的位元組合：<see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" /> 和 <see langword="SetProperty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-335">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, and <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="0a7c7-336">您必須指定適當的引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-336">You must specify a suitable invocation attribute.</span>
          </span>
          <span data-ttu-id="0a7c7-337">例如，要叫用靜態成員，就設定 <see langword="Static" /> 旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-337">For example, to invoke a static member, set the <see langword="Static" /> flag.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="0a7c7-338">使用反映來啟用繫結、強制引數的類型、成員的引動過程，和擷取 <see cref="T:System.Reflection.MemberInfo" /> 物件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-338">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="0a7c7-339">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-339">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a7c7-340">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-340">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="0a7c7-341">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-341">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0a7c7-342">資源要當地語系化的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-342">The culture for which the resource is to be localized.</span>
          </span>
          <span data-ttu-id="0a7c7-343">如果未針對這個文化特性將資源當地語系化，則將在搜尋相符項目時持續呼叫 <see cref="P:System.Globalization.CultureInfo.Parent" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-343">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="0a7c7-344">如果這個值是 <see langword="null" />，則會從 <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> 屬性取得特定文化特性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-344">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-345">當在衍生類別中覆寫時，傳回指定的物件的屬性值，此物件具有指定的繫結、索引和文化特性特定資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-345">When overridden in a derived class, returns the property value of a specified object that has the specified binding, index, and culture-specific information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-346">指定之物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-346">The property value of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-347">若要判斷屬性是否會編製索引，請使用<xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-347">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="0a7c7-348">如果產生的陣列有 0 （零） 的項目，此屬性不會建立索引。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-348">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="0a7c7-349">因為靜態屬性屬於型別，而不是個別物件，取得靜態屬性，藉由傳遞`null`做為物件引數。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-349">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="0a7c7-350">例如，使用下列程式碼，若要取得靜態`CurrentCulture`屬性`CultureInfo`:</span><span class="sxs-lookup"><span data-stu-id="0a7c7-350">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
       (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
       CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="0a7c7-351">若要使用`GetValue`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-351">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-352">從`Type`，取得`PropertyInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-352">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="0a7c7-353">從`PropertyInfo`，使用`GetValue`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-353">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-354">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，並限制為呼叫端的非公用成員的授權集是否授與集或子集效果。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-354">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="0a7c7-355">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="0a7c7-355">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="0a7c7-356">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-356">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a7c7-357">
            <paramref name="index" /> 陣列未包含所需的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-357">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="0a7c7-358">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-358">-or-</span>
          </span>
          <span data-ttu-id="0a7c7-359">找不到屬性的 <see langword="get" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-359">The property's <see langword="get" /> accessor is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="0a7c7-360">物件不符合目標類型，或屬性是執行個體屬性但 <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-360">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="0a7c7-361">
            <paramref name="index" /> 中的參數數目不符合索引屬性所接受的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-361">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="0a7c7-362">曾不合法嘗試存取類別內的私用或保護方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-362">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="0a7c7-363">擷取屬性值時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-363">An error occurred while retrieving the property value.</span>
          </span>
          <span data-ttu-id="0a7c7-364">例如，為索引屬性指定的索引值超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-364">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="0a7c7-365">
            <see cref="P:System.Exception.InnerException" /> 屬性指出錯誤的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-365">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-366">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-366">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-367">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-367">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Reflection.PropertyInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-368">取得值，指出屬性是否為特殊名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-368">Gets a value indicating whether the property is the special name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-369">如果這個屬性為特殊名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-369">
              <see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-370">`SpecialName`位元會設為旗標以特殊方式處理由某些編譯器 （例如屬性存取子和運算子多載方法） 的成員。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-370">The `SpecialName` bit is set to flag members that are treated in a special way by some compilers (such as property accessors and operator overloading methods).</span></span>  
  
 <span data-ttu-id="0a7c7-371">若要取得`IsSpecialName`屬性，第一次取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-371">To get the `IsSpecialName` property, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-372">從`Type`，取得`PropertyInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-372">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="0a7c7-373">從`PropertyInfo`，取得`IsSpecialName`值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-373">From the `PropertyInfo`, get the `IsSpecialName` value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.PropertyInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-374">取得 <see cref="T:System.Reflection.MemberTypes" /> 值，指出這個成員為屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-374">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-375">
            <see cref="T:System.Reflection.MemberTypes" /> 值，指出這個成員為屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-375">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-376">此屬性會覆寫<xref:System.Reflection.MemberInfo.MemberType%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-376">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="0a7c7-377">因此，當您檢查一組<xref:System.Reflection.MemberInfo>物件 — 比方說，所傳回的陣列<xref:System.Type.GetMembers%2A>—<xref:System.Reflection.MemberInfo.MemberType%2A>屬性會傳回<xref:System.Reflection.MemberTypes.Property>只有指定的成員時，屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-377">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects — for example, the array returned by <xref:System.Type.GetMembers%2A> — the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Property> only when a given member is a property.</span></span>  
  
 <span data-ttu-id="0a7c7-378">`MemberType` 在衍生類別的`MemberInfo`，並指定這是的成員的型別。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-378">`MemberType` is a derived class of `MemberInfo` and specifies the type of member this is.</span></span> <span data-ttu-id="0a7c7-379">成員類型是建構函式、 屬性、 欄位和方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-379">Member types are constructors, properties, fields, and methods.</span></span> <span data-ttu-id="0a7c7-380">由於這是`PropertyInfo`屬性，傳回的型別是屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-380">Since this is a `PropertyInfo` property, the returned type is a property.</span></span>  
  
 <span data-ttu-id="0a7c7-381">若要取得`MemberType`屬性，第一次取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-381">To get the `MemberType` property, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-382">從`Type`，取得`PropertyInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-382">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="0a7c7-383">從`PropertyInfo`，取得`MemberType`值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-383">From the `PropertyInfo`, get the `MemberType` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-384">下列範例會顯示指定成員的型別。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-384">The following example displays the type of the specified member.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.PropertyInfo * System.Reflection.PropertyInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0a7c7-385">要比較的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-385">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0a7c7-386">要比較的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-386">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-387">表示兩個 <see cref="T:System.Reflection.PropertyInfo" /> 物件是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-387">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-388">如果 <see langword="true" /> 等於 <paramref name="left" />，則為 <paramref name="right" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-388">
              <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.PropertyInfo * System.Reflection.PropertyInfo -&gt; bool" Usage="System.Reflection.PropertyInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0a7c7-389">要比較的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-389">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0a7c7-390">要比較的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-390">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-391">表示兩個 <see cref="T:System.Reflection.PropertyInfo" /> 物件是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-391">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-392">如果 <see langword="true" /> 不等於 <paramref name="left" />，則為 <paramref name="right" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-392">
              <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Reflection.PropertyInfo.PropertyType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.PropertyType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-393">取得此屬性的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-393">Gets the type of this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-394">此屬性的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-394">The type of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-395">若要判斷特定屬性的型別，執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="0a7c7-395">To determine the type of a particular property, do the following:</span></span>  
  
1.  <span data-ttu-id="0a7c7-396">取得<xref:System.Type>物件，表示包含屬性的型別 （類別或結構）。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-396">Get a <xref:System.Type> object that represents the type (the class or structure) that contains the property.</span></span> <span data-ttu-id="0a7c7-397">如果您正在使用的物件 （類型的執行個體），您可以呼叫其<xref:System.Object.GetType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-397">If you are working with an object (an instance of a type), you can call its <xref:System.Object.GetType%2A> method.</span></span> <span data-ttu-id="0a7c7-398">否則，您可以使用 C# 運算子，或 Visual Basic 運算子，與範例說明。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-398">Otherwise, you can use the C#  operator or the Visual Basic  operator, as the example illustrates.</span></span>  
  
2.  <span data-ttu-id="0a7c7-399">取得<xref:System.Reflection.PropertyInfo>物件，表示您感興趣的屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-399">Get a <xref:System.Reflection.PropertyInfo> object that represents the property in which you're interested.</span></span> <span data-ttu-id="0a7c7-400">您可以藉由取得的所有屬性，從陣列<xref:System.Type.GetProperties%2A?displayProperty=nameWithType>方法，然後逐一查看的項目陣列，或者您可以擷取<xref:System.Reflection.PropertyInfo>物件，表示屬性直接藉由呼叫<xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法並指定屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-400">You can do this by getting an array of all properties from the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method and then iterating the elements in the array, or you can retrieve the <xref:System.Reflection.PropertyInfo> object that represents the property directly by calling the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method and specifying the property name.</span></span>  
  
3.  <span data-ttu-id="0a7c7-401">擷取值<xref:System.Reflection.PropertyInfo.PropertyType%2A>屬性從<xref:System.Reflection.PropertyInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-401">Retrieve the value of the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property from the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-402">下列範例會定義`Employee`有五個屬性的類別。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-402">The following example defines an `Employee` class that has five properties.</span></span> <span data-ttu-id="0a7c7-403">它會使用擷取的陣列則<xref:System.Reflection.PropertyInfo>表示這些屬性，並顯示的名稱和每個類型的物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-403">It then uses retrieves an array of <xref:System.Reflection.PropertyInfo> objects that represent those properties and displays the name and type of each.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/cs/propertytype1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/vb/propertytype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo SetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo SetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.SetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ SetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMethod : System.Reflection.MethodInfo" Usage="System.Reflection.PropertyInfo.SetMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-404">取得這個屬性的 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-404">Gets the <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7c7-405">
            <see langword="set" />存取子，這個屬性，或<see langword="null" />如果屬性為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-405">The <see langword="set" /> accessor for this property, or <see langword="null" /> if the property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-406">擷取的值<xref:System.Reflection.PropertyInfo.SetMethod%2A>屬性就相當於呼叫<xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29>方法，其值為`true`如`nonPublic`引數。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-406">Retrieving the value of the <xref:System.Reflection.PropertyInfo.SetMethod%2A> property is equivalent to calling the <xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29> method with a value of `true` for the `nonPublic` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.PropertyInfo.GetMethod" />
        <altmember cref="P:System.Reflection.PropertyInfo.CanWrite" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-407">設定指定之物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-407">Sets the property value for a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * obj -&gt; unit" Usage="propertyInfo.SetValue (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7c7-408">將設定其屬性值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-408">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0a7c7-409">新的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-409">The new property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-410">設定指定之物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-410">Sets the property value of a specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-411"><xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29>多載設定非索引屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-411">The <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> overload sets the value of a non-indexed property.</span></span> <span data-ttu-id="0a7c7-412">若要判斷屬性是否會編製索引，請呼叫<xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-412">To determine whether a property is indexed, call the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="0a7c7-413">如果產生的陣列有 0 （零） 的項目，此屬性不會建立索引。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-413">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span> <span data-ttu-id="0a7c7-414">若要設定的索引屬性的值，呼叫<xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29>多載。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-414">To set the value of an indexed property, call the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="0a7c7-415">如果這個型別屬性<xref:System.Reflection.PropertyInfo>物件是實值類型和`value`是`null`，屬性會設定為該類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-415">If the property type of this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="0a7c7-416">這是很便利的方法呼叫執行階段實作的抽象<xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29>方法中，指定<xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>如`BindingFlags`參數，`null`如`Binder`，`null`的`Object[]`，和`null`針對`CultureInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-416">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, `null` for `Object[]`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="0a7c7-417">若要使用<xref:System.Reflection.PropertyInfo.SetValue%2A>方法，請先取得<xref:System.Type>表示類別的物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-417">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="0a7c7-418">從<xref:System.Type>，取得<xref:System.Reflection.PropertyInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-418">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="0a7c7-419">從<xref:System.Reflection.PropertyInfo>物件，請呼叫<xref:System.Reflection.PropertyInfo.SetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-419">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-420">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，並限制為呼叫端的非公用成員的授權集是否授與集或子集效果。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-420">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="0a7c7-421">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="0a7c7-421">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="0a7c7-422">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-422">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-423">下列範例宣告名為類別`Example`與其中一個`static`(`Shared` Visual Basic 中) 和一個執行個體屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-423">The following example declares a class named `Example` with one `static` (`Shared` in Visual Basic) and one instance property.</span></span> <span data-ttu-id="0a7c7-424">此範例會使用<xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29>方法，以變更原始屬性值，並且顯示原始值和最終值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-424">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> method to change the original property values and displays the original and final values.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/example2.cpp#2)]
 [!code-csharp[PropertyInfo.SetValue#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/example2.cs#2)]
 [!code-vb[PropertyInfo.SetValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a7c7-425">找不到屬性的 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-425">The property's <see langword="set" /> accessor is not found.</span>
          </span>
          <span data-ttu-id="0a7c7-426">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-426">-or-</span>
          </span>
          <span data-ttu-id="0a7c7-427">
            <paramref name="value" /> 無法轉換成 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-427">
              <paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="0a7c7-428">在<see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">適用於 Windows 市集應用程式的 .NET - 支援的應用程式開發介面</see> 或是<see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">可攜式類別庫</see>中，改為攔截 <see cref="T:System.Exception" />。</span>
              <span class="sxs-lookup">
                <span data-stu-id="0a7c7-428">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="0a7c7-429">
            <paramref name="obj" /> 類型不符合目標類型，或屬性是執行個體屬性但 <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-429">The type of <paramref name="obj" /> does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="0a7c7-430">在<see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">適用於 Windows 市集應用程式的 .NET</see> 或是<see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">可攜式類別庫</see>中，改為攔截基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</span>
              <span class="sxs-lookup">
                <span data-stu-id="0a7c7-430">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="0a7c7-431">曾不合法嘗試存取類別內的私用或保護方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-431">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="0a7c7-432">設定屬性值時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-432">An error occurred while setting the property value.</span>
          </span>
          <span data-ttu-id="0a7c7-433">
            <see cref="P:System.Exception.InnerException" /> 屬性指出錯誤的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-433">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-434">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-434">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-435">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-435">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * obj[] -&gt; unit&#xA;override this.SetValue : obj * obj * obj[] -&gt; unit" Usage="propertyInfo.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7c7-436">將設定其屬性值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-436">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0a7c7-437">新的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-437">The new property value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a7c7-438">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-438">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="0a7c7-439">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-439">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-440">使用索引屬性的選擇性索引值，設定指定的物件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-440">Sets the property value of a specified object with optional index values for index properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-441">如果這個<xref:System.Reflection.PropertyInfo>物件是實值類型和`value`是`null`，則屬性會設為該類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-441">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="0a7c7-442">若要判斷屬性是否會編製索引，請使用<xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-442">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="0a7c7-443">如果產生的陣列有 0 （零） 的項目，此屬性不會建立索引。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-443">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="0a7c7-444">這是很便利的方法呼叫執行階段實作的抽象<xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29>方法中，指定<xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>如`BindingFlags`參數，`null`如`Binder`，和`null`的`CultureInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-444">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="0a7c7-445">若要使用<xref:System.Reflection.PropertyInfo.SetValue%2A>方法，請先取得<xref:System.Type>表示類別的物件。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-445">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="0a7c7-446">從<xref:System.Type>，取得<xref:System.Reflection.PropertyInfo>。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-446">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="0a7c7-447">從<xref:System.Reflection.PropertyInfo>，使用<xref:System.Reflection.PropertyInfo.SetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-447">From the <xref:System.Reflection.PropertyInfo>, use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-448">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，並限制為呼叫端的非公用成員的授權集是否授與集或子集效果。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-448">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="0a7c7-449">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="0a7c7-449">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="0a7c7-450">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-450">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7c7-451">下列範例會定義名為類別`TestClass`具有名為讀寫屬性`Caption`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-451">The following example defines a class named `TestClass` that has a read-write property named `Caption`.</span></span> <span data-ttu-id="0a7c7-452">它會顯示的預設值`Caption`屬性時，會呼叫<xref:System.Reflection.PropertyInfo.SetValue%2A>方法，以變更屬性值，並顯示結果。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-452">It  displays the default value of the `Caption` property, calls the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the property value, and displays the result.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0a7c7-453">請注意，因為`Caption`屬性不是參數陣列`index`引數是`null`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-453">Note that, because the `Caption` property is not a parameter array, the `index` argument is `null`.</span></span>  
  
 <span data-ttu-id="0a7c7-454">下列範例宣告名為類別`Example`具有三個屬性：`static`屬性 (`Shared` Visual Basic 中)，一個執行個體的屬性和一個索引的執行個體屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-454">The following example declares a class named `Example` with three properties: a `static` property (`Shared` in Visual Basic), an instance property, and an indexed instance property.</span></span> <span data-ttu-id="0a7c7-455">此範例會使用<xref:System.Reflection.PropertyInfo.SetValue%2A>方法，以變更的屬性和顯示原始值和最終值的預設值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-455">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the default values of the properties and displays the original and final values.</span></span>  
  
 <span data-ttu-id="0a7c7-456">用來搜尋，使用反映索引的執行個體屬性的名稱是不同的語言而定，並且會套用至屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-456">The name that is used to search for an indexed instance property with reflection is different depending on the language and on attributes applied to the property.</span></span>  
  
-   <span data-ttu-id="0a7c7-457">在 Visual Basic 中的屬性名稱永遠用來搜尋具有反映的屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-457">In Visual Basic, the property name is always used to search for the property with reflection.</span></span> <span data-ttu-id="0a7c7-458">您可以使用`Default`關鍵字來將屬性設為預設值編製索引的屬性，在此情況下時，可以省略名稱存取的屬性，如此範例所示。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-458">You can use the `Default` keyword to make the property a default indexed property, in which case you can omit the name when accessing the property, as in this example.</span></span> <span data-ttu-id="0a7c7-459">您也可以使用屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-459">You can also use the property name.</span></span>  
  
-   <span data-ttu-id="0a7c7-460">在 C# 中，索引的執行個體屬性是名為索引子的預設屬性，並存取程式碼中的屬性時，永遠不會使用的名稱。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-460">In C#, the indexed instance property is a default property called an indexer, and the name is never used when accessing the property in code.</span></span> <span data-ttu-id="0a7c7-461">根據預設，屬性的名稱是`Item`，以及當您搜尋使用反映的屬性時，您必須使用該名稱。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-461">By default, the name of the property is `Item`, and you must use that name when you search for the property with reflection.</span></span> <span data-ttu-id="0a7c7-462">您可以使用<xref:System.Runtime.CompilerServices.IndexerNameAttribute>，索引子以不同名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-462">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the indexer a different name.</span></span> <span data-ttu-id="0a7c7-463">在這個範例中，名稱為 `IndexedInstanceProperty`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-463">In this example, the name is `IndexedInstanceProperty`.</span></span>  
  
-   <span data-ttu-id="0a7c7-464">C + +`default`規範可以用來進行索引之屬性的預設索引屬性 （類別索引子）。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-464">In C++, the `default` specifier can be used to make an indexed property a default indexed property (class indexer).</span></span> <span data-ttu-id="0a7c7-465">在此情況下，預設屬性的名稱是`Item`，以及當您搜尋使用反映，如此範例所示的屬性時，您必須使用該名稱。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-465">In that case, the name of the property by default is `Item`, and you must use that name when you search for the property with reflection, as in this example.</span></span> <span data-ttu-id="0a7c7-466">您可以使用<xref:System.Runtime.CompilerServices.IndexerNameAttribute>屬性設為類別索引子的設定，不同的名稱在反映中，但您無法使用該名稱來存取程式碼中的屬性。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-466">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the class indexer a different name in reflection, but you cannot use that name to access the property in code.</span></span> <span data-ttu-id="0a7c7-467">索引的屬性不是類別索引子存取使用它的名稱，在程式碼和反映。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-467">An indexed property that is not a class indexer is accessed using its name, both in code and in reflection.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/Example.cpp#1)]
 [!code-csharp[PropertyInfo.SetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/Example.cs#1)]
 [!code-vb[PropertyInfo.SetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a7c7-468">
            <paramref name="index" /> 陣列未包含所需的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-468">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="0a7c7-469">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-469">-or-</span>
          </span>
          <span data-ttu-id="0a7c7-470">找不到屬性的 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-470">The property's <see langword="set" /> accessor is not found.</span>
          </span>
          <span data-ttu-id="0a7c7-471">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-471">-or-</span>
          </span>
          <span data-ttu-id="0a7c7-472">
            <paramref name="value" /> 無法轉換成 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-472">
              <paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="0a7c7-473">在<see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">適用於 Windows 市集應用程式的 .NET - 支援的應用程式開發介面</see> 或是<see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">可攜式類別庫</see>中，改為攔截 <see cref="T:System.Exception" />。</span>
              <span class="sxs-lookup">
                <span data-stu-id="0a7c7-473">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="0a7c7-474">物件不符合目標類型，或屬性是執行個體屬性但 <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-474">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="0a7c7-475">
            <paramref name="index" /> 中的參數數目不符合索引屬性所接受的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-475">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="0a7c7-476">在<see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">適用於 Windows 市集應用程式的 .NET</see> 或是<see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">可攜式類別庫</see>中，改為攔截基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</span>
              <span class="sxs-lookup">
                <span data-stu-id="0a7c7-476">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="0a7c7-477">曾不合法嘗試存取類別內的私用或保護方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-477">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="0a7c7-478">設定屬性值時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-478">An error occurred while setting the property value.</span>
          </span>
          <span data-ttu-id="0a7c7-479">例如，為索引屬性指定的索引值超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-479">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="0a7c7-480">
            <see cref="P:System.Exception.InnerException" /> 屬性指出錯誤的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-480">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-481">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-481">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-482">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-482">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="propertyInfo.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7c7-483">將設定其屬性值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-483">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0a7c7-484">新的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-484">The new property value.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="0a7c7-485">下列可指定引動過程屬性之列舉成員的位元組合：<see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" /> 或 <see langword="SetProperty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-485">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="0a7c7-486">您必須指定適當的引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-486">You must specify a suitable invocation attribute.</span>
          </span>
          <span data-ttu-id="0a7c7-487">例如，要叫用靜態成員，就設定 <see langword="Static" /> 旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-487">For example, to invoke a static member, set the <see langword="Static" /> flag.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="0a7c7-488">使用反映來啟用繫結、強制引數的類型、成員的引動過程，和擷取 <see cref="T:System.Reflection.MemberInfo" /> 物件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-488">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="0a7c7-489">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-489">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a7c7-490">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-490">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="0a7c7-491">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-491">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0a7c7-492">資源要當地語系化的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-492">The culture for which the resource is to be localized.</span>
          </span>
          <span data-ttu-id="0a7c7-493">如果未針對這個文化特性將資源當地語系化，則將在搜尋相符項目時持續呼叫 <see cref="P:System.Globalization.CultureInfo.Parent" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-493">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="0a7c7-494">如果這個值是 <see langword="null" />，則會從 <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> 屬性取得特定文化特性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-494">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-495">當在衍生類別中覆寫時，設定指定的物件的屬性值，此物件具有指定的繫結、索引和文化特性特定資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-495">When overridden in a derived class, sets the property value for a specified object that has the specified binding, index, and culture-specific information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-496">如果這個<xref:System.Reflection.PropertyInfo>物件是實值類型和`value`是`null`，則屬性會設為該類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-496">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="0a7c7-497">若要判斷屬性是否會編製索引，請使用<xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-497">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="0a7c7-498">如果產生的陣列有 0 （零） 的項目，此屬性不會建立索引。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-498">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="0a7c7-499">完全信任程式碼會略過存取限制。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-499">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="0a7c7-500">也就是私用建構函式、 方法、 欄位和屬性可以存取和完全信任程式碼時，透過反映叫用。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-500">That is, private constructors, methods, fields, and properties can be accessed and invoked via Reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="0a7c7-501">若要使用`SetValue`方法，先取得類別`Type`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-501">To use the `SetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="0a7c7-502">從`Type`，取得`PropertyInfo`。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-502">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="0a7c7-503">從`PropertyInfo`，使用`SetValue`方法。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-503">From the `PropertyInfo`, use the `SetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a7c7-504">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，並限制為呼叫端的非公用成員的授權集是否授與集或子集效果。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-504">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="0a7c7-505">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="0a7c7-505">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="0a7c7-506">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-506">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a7c7-507">
            <paramref name="index" /> 陣列未包含所需的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-507">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="0a7c7-508">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-508">-or-</span>
          </span>
          <span data-ttu-id="0a7c7-509">找不到屬性的 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-509">The property's <see langword="set" /> accessor is not found.</span>
          </span>
          <span data-ttu-id="0a7c7-510">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-510">-or-</span>
          </span>
          <span data-ttu-id="0a7c7-511">
            <paramref name="value" /> 無法轉換成 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-511">
              <paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="0a7c7-512">物件不符合目標類型，或屬性是執行個體屬性但 <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-512">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="0a7c7-513">
            <paramref name="index" /> 中的參數數目不符合索引屬性所接受的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-513">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="0a7c7-514">曾不合法嘗試存取類別內的私用或保護方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-514">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="0a7c7-515">設定屬性值時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-515">An error occurred while setting the property value.</span>
          </span>
          <span data-ttu-id="0a7c7-516">例如，為索引屬性指定的索引值超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-516">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="0a7c7-517">
            <see cref="P:System.Exception.InnerException" /> 屬性指出錯誤的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-517">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="0a7c7-518">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-518">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="0a7c7-519">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-519">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _PropertyInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_PropertyInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="0a7c7-520">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-520">Reserved for future use.</span>
          </span>
          <span data-ttu-id="0a7c7-521">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-521">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="0a7c7-522">要對應之傳入的名稱陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-522">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="0a7c7-523">要對應的名稱計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-523">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="0a7c7-524">用於解譯名稱的地區設定內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-524">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="0a7c7-525">呼叫端配置的陣列，用於接收對應於名稱的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-525">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-526">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-526">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-527">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-527">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0a7c7-528">如需詳細資訊`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-528">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a7c7-529">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-529">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetType">
      <MemberSignature Language="C#" Value="Type _PropertyInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._PropertyInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _PropertyInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._PropertyInfo.GetType() = System::Runtime::InteropServices::_PropertyInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7c7-530">取得 <see cref="T:System.Type" /> 物件，其代表 <see cref="T:System.Reflection.PropertyInfo" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-530">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7c7-531">代表 <see cref="T:System.Type" /> 類型的 <see cref="T:System.Reflection.PropertyInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-531">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _PropertyInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="0a7c7-532">要傳回的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-532">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="0a7c7-533">類型資訊的地區設定識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-533">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="0a7c7-534">接收要求的類型資訊物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-534">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-535">擷取物件的類型資訊，可以用來取得介面的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-535">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-536">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-536">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0a7c7-537">如需詳細資訊`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-537">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a7c7-538">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-538">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _PropertyInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="0a7c7-539">指向接收物件提供的類型資訊介面數目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-539">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-540">擷取物件提供的類型資訊介面數目 (0 或 1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-540">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-541">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-541">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0a7c7-542">如需詳細資訊`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-542">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a7c7-543">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-543">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.Invoke">
      <MemberSignature Language="C#" Value="void _PropertyInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _PropertyInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_PropertyInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="0a7c7-544">辨識成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-544">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="0a7c7-545">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-545">Reserved for future use.</span>
          </span>
          <span data-ttu-id="0a7c7-546">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-546">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="0a7c7-547">地區設定內容，用於解譯引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-547">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="0a7c7-548">描述呼叫之內容的旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-548">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="0a7c7-549">結構的指標，此結構包含引數陣列、指名引數之 DISPID 引數的陣列，以及陣列中項目數目的計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-549">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="0a7c7-550">指向用於儲存結果之位置的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-550">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="0a7c7-551">包含例外狀況資訊的結構指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-551">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="0a7c7-552">第一個有錯誤的引數索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-552">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7c7-553">提供物件所公開的屬性和方法的存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-553">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7c7-554">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-554">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0a7c7-555">如需詳細資訊`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="0a7c7-555">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a7c7-556">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7c7-556">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>