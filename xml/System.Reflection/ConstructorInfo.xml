<Type Name="ConstructorInfo" FullName="System.Reflection.ConstructorInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a430cc4f4251aa5d6ea495b41fafa48358e6b777" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53231946" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConstructorInfo : System.Reflection.MethodBase, System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ConstructorInfo extends System.Reflection.MethodBase implements class System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ConstructorInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConstructorInfo&#xA;Inherits MethodBase&#xA;Implements _ConstructorInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorInfo abstract : System::Reflection::MethodBase, System::Runtime::InteropServices::_ConstructorInfo" />
  <TypeSignature Language="F#" Value="type ConstructorInfo = class&#xA;    inherit MethodBase&#xA;    interface _ConstructorInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MethodBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ConstructorInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ConstructorInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a21a8-101">探索類別建構函式的屬性，並提供建構函式中繼資料的存取。</span><span class="sxs-lookup"><span data-stu-id="a21a8-101">Discovers the attributes of a class constructor and provides access to constructor metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-102">`ConstructorInfo` 用來探索的建構函式以及對於叫用建構函式的屬性。</span><span class="sxs-lookup"><span data-stu-id="a21a8-102">`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor.</span></span> <span data-ttu-id="a21a8-103">物件會藉由呼叫<xref:System.Reflection.ConstructorInfo.Invoke%2A>上`ConstructorInfo`傳回由<xref:System.Type.GetConstructors%2A>或是<xref:System.Type.GetConstructor%2A>方法<xref:System.Type>物件。</span><span class="sxs-lookup"><span data-stu-id="a21a8-103">Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a21a8-104"><xref:System.Reflection.ConstructorInfo> 繼承自<xref:System.Reflection.MethodBase>數個成員，例如<xref:System.Reflection.MethodBase.IsGenericMethod%2A>，可用來檢查泛型方法。</span><span class="sxs-lookup"><span data-stu-id="a21a8-104"><xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods.</span></span> <span data-ttu-id="a21a8-105">在.NET Framework 2.0 版的建構函式不可以是泛型，因此這些成員會傳回`false`或`null`。</span><span class="sxs-lookup"><span data-stu-id="a21a8-105">In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a21a8-106">下列範例會使用`ConstructorInfo`具有<xref:System.Type.GetConstructor%2A>和<xref:System.Reflection.BindingFlags>來尋找符合指定的搜尋準則的建構函式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-106">The following example uses `ConstructorInfo` with <xref:System.Type.GetConstructor%2A> and <xref:System.Reflection.BindingFlags> to find the constructors that match the specified search criteria.</span></span>  
  
 [!code-cpp[type_getconstructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Type_GetConstructor3/CPP/type_getconstructor3.cpp#1)]
 [!code-csharp[type_getconstructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Type_GetConstructor3/CS/type_getconstructor3.cs#1)]
 [!code-vb[type_getconstructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Type_GetConstructor3/VB/type_getconstructor3.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="a21a8-107">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="a21a8-107">for full trust for inheritors.</span></span> <span data-ttu-id="a21a8-108">這個類別無法繼承由部分信任的程式碼。</span><span class="sxs-lookup"><span data-stu-id="a21a8-108">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="a21a8-109">此型別具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="a21a8-109">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="a21a8-110">當您繼承自<see langword="ConstructorInfo" />，您必須覆寫下列成員多載： <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-110">When you inherit from <see langword="ConstructorInfo" />, you must override the following member overload: <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConstructorInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConstructorInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a21a8-111">初始化 <see cref="T:System.Reflection.ConstructorInfo" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a21a8-111">Initializes a new instance of the <see cref="T:System.Reflection.ConstructorInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="a21a8-112">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-112">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="a21a8-113">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-113">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string ConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.ConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConstructorName;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConstructorName : string" Usage="System.Reflection.ConstructorInfo.ConstructorName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a21a8-114">表示類別建構函式方法儲存在中繼資料時的名稱。</span><span class="sxs-lookup"><span data-stu-id="a21a8-114">Represents the name of the class constructor method as it is stored in metadata.</span></span> <span data-ttu-id="a21a8-115">這個名稱永遠是「.ctor」。</span><span class="sxs-lookup"><span data-stu-id="a21a8-115">This name is always ".ctor".</span></span> <span data-ttu-id="a21a8-116">此欄位為唯讀。</span><span class="sxs-lookup"><span data-stu-id="a21a8-116">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="constructorInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a21a8-117">與這個執行個體相比較的物件，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-117">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a21a8-118">傳回值，這個值指出此執行個體是否與指定的物件相等。</span><span class="sxs-lookup"><span data-stu-id="a21a8-118">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="a21a8-119">如果 <see langword="true" /> 和這個執行個體具有相同的類型和值，則為 <paramref name="obj" />否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-119"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="constructorInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a21a8-120">傳回這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="a21a8-120">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="a21a8-121">32 位元帶正負號的整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="a21a8-121">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="constructorInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a21a8-122">叫用這個執行個體所反映的建構函式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-122">Invokes the constructor reflected by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.Invoke : obj[] -&gt; obj" Usage="constructorInfo.Invoke parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="a21a8-123">符合這個建構函式參數的數目、順序和型別 (在預設繫結器的條件約束下) 的值陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-123">An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor.</span></span> <span data-ttu-id="a21a8-124">如果這個建構函式不接受任何參數，則使用含零項目或 <see langword="null" /> 的陣列，例如 Object[] parameters = new Object[0]。</span><span class="sxs-lookup"><span data-stu-id="a21a8-124">If this constructor takes no parameters, then use either an array with zero elements or <see langword="null" />, as in Object[] parameters = new Object[0].</span></span> <span data-ttu-id="a21a8-125">此陣列中任何未明確使用值初始化的物件，都會包含該物件類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-125">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="a21a8-126">對於參考型別項目，這個值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-126">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="a21a8-127">對於實值型別項目，這個值為 0、0.0 或 <see langword="false" />，由特定的項目類型決定。</span><span class="sxs-lookup"><span data-stu-id="a21a8-127">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="a21a8-128">叫用包含指定參數的執行個體所反映的建構函式，為不常用的參數提供預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-128">Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</span></span></summary>
        <returns><span data-ttu-id="a21a8-129">與建構函式相關聯的類別之執行個體。</span><span class="sxs-lookup"><span data-stu-id="a21a8-129">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-130">數字、 類型和順序中的項目`parameters`陣列應該與數目、 類型和此執行個體所反映的建構函式參數的順序相同。</span><span class="sxs-lookup"><span data-stu-id="a21a8-130">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span> <span data-ttu-id="a21a8-131">然後再呼叫建構函式，`Invoke`可確保呼叫端的存取權，並確認參數是否有效。</span><span class="sxs-lookup"><span data-stu-id="a21a8-131">Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.</span></span>  
  
 <span data-ttu-id="a21a8-132">完全信任程式碼會略過存取限制。</span><span class="sxs-lookup"><span data-stu-id="a21a8-132">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="a21a8-133">也就是說，私用建構函式、 方法、 欄位和屬性可存取，而且完全受信任的程式碼時，使用反映來叫用。</span><span class="sxs-lookup"><span data-stu-id="a21a8-133">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a21a8-134">若要建立沒有執行個體建構函式實值類型的執行個體，請使用<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a21a8-134">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
 <span data-ttu-id="a21a8-135">這個方法是很便利的方法，下列多載版本，請使用預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-135">This method is a convenience method for the following overloaded version, using default values.</span></span> <span data-ttu-id="a21a8-136">無法覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="a21a8-136">This method cannot be overridden.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a21a8-137">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，並限制為呼叫端的非公用成員的授權集是否授與集或子集效果。</span><span class="sxs-lookup"><span data-stu-id="a21a8-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="a21a8-138">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="a21a8-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="a21a8-139">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="a21a8-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="a21a8-140">這個類別是抽象的。</span><span class="sxs-lookup"><span data-stu-id="a21a8-140">The class is abstract.</span></span>  
  
<span data-ttu-id="a21a8-141">-或-</span><span class="sxs-lookup"><span data-stu-id="a21a8-141">-or-</span></span> 
<span data-ttu-id="a21a8-142">建構函式是類別初始設定式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-142">The constructor is a class initializer.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="a21a8-143">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">適用於 Windows 市集應用程式的 .NET</see> 或是<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可攜式類別庫</see>中，改為攔截基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-143">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="a21a8-144">建構函式屬私用或受保護，且呼叫端缺少 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-144">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a21a8-145"><paramref name="parameters" /> 陣列未包含與這個建構函式所接受型別相符的值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-145">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="a21a8-146">叫用的建構函式擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a21a8-146">The invoked constructor throws an exception.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="a21a8-147">傳遞的參數數目不正確。</span><span class="sxs-lookup"><span data-stu-id="a21a8-147">An incorrect number of parameters was passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a21a8-148">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 型別。</span><span class="sxs-lookup"><span data-stu-id="a21a8-148">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a21a8-149">呼叫端沒有必要的程式碼存取權限。</span><span class="sxs-lookup"><span data-stu-id="a21a8-149">The caller does not have the necessary code access permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="a21a8-150">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-150">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="a21a8-151">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-151">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public abstract object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.Invoke : System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="constructorInfo.Invoke (invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr"><span data-ttu-id="a21a8-152">其中一個 <see langword="BindingFlags" /> 值，指定繫結的型別。</span><span class="sxs-lookup"><span data-stu-id="a21a8-152">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="a21a8-153"><see langword="Binder" />，會使用反映定義一組屬性和啟用繫結、引數類型強制型轉和成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="a21a8-153">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="a21a8-154">如果 <paramref name="binder" /> 為 <see langword="null" />，則會使用 <see langword="Binder.DefaultBinding" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-154">If <paramref name="binder" /> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="a21a8-155"><see langword="Object" /> 型別的陣列，用於比對在 <paramref name="binder" /> 的限制下，這個建構函式的數字、順序和參數的型別。</span><span class="sxs-lookup"><span data-stu-id="a21a8-155">An array of type <see langword="Object" /> used to match the number, order and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="a21a8-156">如果這個建構函式不使用參數，則會使用零元素的陣列或 ，如同在 Object[] parameters = new Object[0] 一樣。</span><span class="sxs-lookup"><span data-stu-id="a21a8-156">If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</span></span> <span data-ttu-id="a21a8-157">此陣列中任何未明確使用值初始化的物件，都會包含該物件類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-157">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="a21a8-158">對於參考型別項目，這個值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-158">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="a21a8-159">對於實值型別項目，這個值為 0、0.0 或 <see langword="false" />，由特定的項目類型決定。</span><span class="sxs-lookup"><span data-stu-id="a21a8-159">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="a21a8-160"><see cref="T:System.Globalization.CultureInfo" />，用來管理類型的強制型轉。</span><span class="sxs-lookup"><span data-stu-id="a21a8-160">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="a21a8-161">如果這是 <see langword="null" />，會使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-161">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="a21a8-162">在衍生類別中實作時，請叫用在指定 <see langword="ConstructorInfo" /> 條件約束 (Constraint) 下有指定引數的這個 <see langword="Binder" /> 所反映的建構函式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-162">When implemented in a derived class, invokes the constructor reflected by this <see langword="ConstructorInfo" /> with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span></span></summary>
        <returns><span data-ttu-id="a21a8-163">與建構函式相關聯的類別之執行個體。</span><span class="sxs-lookup"><span data-stu-id="a21a8-163">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-164">數字、 類型和順序中的項目`parameters`陣列應該與數目、 類型和此執行個體所反映的建構函式參數的順序相同。</span><span class="sxs-lookup"><span data-stu-id="a21a8-164">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="a21a8-165">然後再呼叫建構函式，`Invoke`可確保呼叫端沒有存取權限，以及參數是否正確數目、 順序和型別。</span><span class="sxs-lookup"><span data-stu-id="a21a8-165">Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type.</span></span>  
  
 <span data-ttu-id="a21a8-166">完全信任程式碼會略過存取限制。</span><span class="sxs-lookup"><span data-stu-id="a21a8-166">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="a21a8-167">也就是說，私用建構函式、 方法、 欄位和屬性可存取，而且完全受信任的程式碼時，使用反映來叫用。</span><span class="sxs-lookup"><span data-stu-id="a21a8-167">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a21a8-168">若要建立沒有執行個體建構函式實值類型的執行個體，請使用<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a21a8-168">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a21a8-169">開頭[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，這個方法可以用來存取非公用成員，如果呼叫者已授與<xref:System.Security.Permissions.ReflectionPermission>使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>旗標，並限制為呼叫端的非公用成員的授權集是否授與集或子集效果。</span><span class="sxs-lookup"><span data-stu-id="a21a8-169">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="a21a8-170">(請參閱[反映的安全性考量](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="a21a8-170">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="a21a8-171">若要使用這項功能，您的應用程式應將目標設為 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] (含) 以後版本。</span><span class="sxs-lookup"><span data-stu-id="a21a8-171">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a21a8-172"><paramref name="parameters" /> 陣列沒有包含符合這個建構函式所接受型別的值，在 <paramref name="binder" /> 的條件約束之下。</span><span class="sxs-lookup"><span data-stu-id="a21a8-172">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor, under the constraints of the <paramref name="binder" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="a21a8-173">叫用的建構函式擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a21a8-173">The invoked constructor throws an exception.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="a21a8-174">傳遞的參數數目不正確。</span><span class="sxs-lookup"><span data-stu-id="a21a8-174">An incorrect number of parameters was passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a21a8-175">不支援建立 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 型別。</span><span class="sxs-lookup"><span data-stu-id="a21a8-175">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a21a8-176">呼叫端沒有必要的程式碼存取權限。</span><span class="sxs-lookup"><span data-stu-id="a21a8-176">The caller does not have the necessary code access permissions.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="a21a8-177">這個類別是抽象的。</span><span class="sxs-lookup"><span data-stu-id="a21a8-177">The class is abstract.</span></span>  
  
<span data-ttu-id="a21a8-178">-或-</span><span class="sxs-lookup"><span data-stu-id="a21a8-178">-or-</span></span> 
<span data-ttu-id="a21a8-179">建構函式是類別初始設定式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-179">The constructor is a class initializer.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="a21a8-180">建構函式屬私用或受保護，且呼叫端缺少 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-180">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="a21a8-181">當叫用晚期繫結機制透過例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-181">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="a21a8-182">關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-182">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ConstructorInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.ConstructorInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._ConstructorInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a21a8-183">取得 <see cref="T:System.Reflection.MemberTypes" /> 值，表示這個成員為建構函式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-183">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span></span></summary>
        <value><span data-ttu-id="a21a8-184"><see cref="T:System.Reflection.MemberTypes" /> 值，表示這個成員為建構函式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-184">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-185">此屬性會覆寫<xref:System.Reflection.MemberInfo.MemberType%2A>。</span><span class="sxs-lookup"><span data-stu-id="a21a8-185">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="a21a8-186">因此，當您檢查一組<xref:System.Reflection.MemberInfo>物件，例如，將所傳回的陣列<xref:System.Type.GetMembers%2A>-<xref:System.Reflection.MemberInfo.MemberType%2A>屬性會傳回<xref:System.Reflection.MemberTypes.Constructor>只有指定的成員時，建構函式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-186">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects - for example, the array returned by <xref:System.Type.GetMembers%2A> - the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a21a8-187">下列範例會使用<xref:System.Reflection.ConstructorInfo.MemberType%2A>屬性來識別<xref:System.Reflection.MemberInfo>物件做為建構函式。</span><span class="sxs-lookup"><span data-stu-id="a21a8-187">The following example uses the <xref:System.Reflection.ConstructorInfo.MemberType%2A> property to identify a <xref:System.Reflection.MemberInfo> object as a constructor.</span></span>  
  
 [!code-cpp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic MemberInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MemberTypes" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.ConstructorInfo * System.Reflection.ConstructorInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a21a8-188">要比較的第一個 <see cref="T:System.Reflection.ConstructorInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-188">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a21a8-189">要比較的第二個 <see cref="T:System.Reflection.ConstructorInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-189">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <summary><span data-ttu-id="a21a8-190">表示兩個 <see cref="T:System.Reflection.ConstructorInfo" /> 物件是否相等。</span><span class="sxs-lookup"><span data-stu-id="a21a8-190">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="a21a8-191">如果 <paramref name="left" /> 等於 <paramref name="right" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-191"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.ConstructorInfo * System.Reflection.ConstructorInfo -&gt; bool" Usage="System.Reflection.ConstructorInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a21a8-192">要比較的第一個 <see cref="T:System.Reflection.ConstructorInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-192">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a21a8-193">要比較的第二個 <see cref="T:System.Reflection.ConstructorInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-193">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <summary><span data-ttu-id="a21a8-194">表示兩個 <see cref="T:System.Reflection.ConstructorInfo" /> 物件是否不相等。</span><span class="sxs-lookup"><span data-stu-id="a21a8-194">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="a21a8-195">如果 <paramref name="left" /> 不等於 <paramref name="right" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-195"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ConstructorInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ConstructorInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="a21a8-196">保留供未來使用。</span><span class="sxs-lookup"><span data-stu-id="a21a8-196">Reserved for future use.</span></span> <span data-ttu-id="a21a8-197">必須是 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="a21a8-197">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="a21a8-198">要對應之傳入的名稱陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-198">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="a21a8-199">要對應的名稱計數。</span><span class="sxs-lookup"><span data-stu-id="a21a8-199">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="a21a8-200">用於解譯名稱的地區設定內容。</span><span class="sxs-lookup"><span data-stu-id="a21a8-200">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="a21a8-201">呼叫端配置的陣列，用於接收對應於名稱的 ID。</span><span class="sxs-lookup"><span data-stu-id="a21a8-201">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="a21a8-202">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</span><span class="sxs-lookup"><span data-stu-id="a21a8-202">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-203">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="a21a8-203">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a21a8-204">如需詳細資訊`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="a21a8-204">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a21a8-205">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="a21a8-205">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetType">
      <MemberSignature Language="C#" Value="Type _ConstructorInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._ConstructorInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _ConstructorInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._ConstructorInfo.GetType() = System::Runtime::InteropServices::_ConstructorInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a21a8-206">取得 <see cref="T:System.Type" /> 物件，其代表 <see cref="T:System.Reflection.ConstructorInfo" /> 類型。</span><span class="sxs-lookup"><span data-stu-id="a21a8-206">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span></span></summary>
        <returns><span data-ttu-id="a21a8-207">代表 <see cref="T:System.Type" /> 類型的 <see cref="T:System.Reflection.ConstructorInfo" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a21a8-207">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ConstructorInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="a21a8-208">要傳回的類型資訊。</span><span class="sxs-lookup"><span data-stu-id="a21a8-208">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="a21a8-209">類型資訊的地區設定識別項。</span><span class="sxs-lookup"><span data-stu-id="a21a8-209">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="a21a8-210">接收要求的類型資訊物件的指標。</span><span class="sxs-lookup"><span data-stu-id="a21a8-210">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="a21a8-211">擷取物件的類型資訊，可以用來取得介面的類型資訊。</span><span class="sxs-lookup"><span data-stu-id="a21a8-211">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-212">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="a21a8-212">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a21a8-213">如需詳細資訊`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="a21a8-213">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a21a8-214">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="a21a8-214">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ConstructorInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="a21a8-215">指向接收物件提供的類型資訊介面數目的位置。</span><span class="sxs-lookup"><span data-stu-id="a21a8-215">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="a21a8-216">擷取物件提供的類型資訊介面數目 (0 或 1)。</span><span class="sxs-lookup"><span data-stu-id="a21a8-216">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-217">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="a21a8-217">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a21a8-218">如需詳細資訊`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="a21a8-218">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a21a8-219">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="a21a8-219">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ConstructorInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ConstructorInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="a21a8-220">辨識成員。</span><span class="sxs-lookup"><span data-stu-id="a21a8-220">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="a21a8-221">保留供未來使用。</span><span class="sxs-lookup"><span data-stu-id="a21a8-221">Reserved for future use.</span></span> <span data-ttu-id="a21a8-222">必須是 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="a21a8-222">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="a21a8-223">地區設定內容，用於解譯引數。</span><span class="sxs-lookup"><span data-stu-id="a21a8-223">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="a21a8-224">描述呼叫之內容的旗標。</span><span class="sxs-lookup"><span data-stu-id="a21a8-224">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="a21a8-225">結構的指標，此結構包含引數陣列、指名引數之 DISPID 引數的陣列，以及陣列中項目數目的計數。</span><span class="sxs-lookup"><span data-stu-id="a21a8-225">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="a21a8-226">指向用於儲存結果之位置的指標。</span><span class="sxs-lookup"><span data-stu-id="a21a8-226">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="a21a8-227">包含例外狀況資訊的結構指標。</span><span class="sxs-lookup"><span data-stu-id="a21a8-227">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="a21a8-228">第一個有錯誤的引數索引。</span><span class="sxs-lookup"><span data-stu-id="a21a8-228">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="a21a8-229">提供物件所公開的屬性和方法的存取權。</span><span class="sxs-lookup"><span data-stu-id="a21a8-229">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-230">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="a21a8-230">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a21a8-231">如需詳細資訊`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="a21a8-231">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a21a8-232">不支援使用 COM <c>IDispatch</c> 介面進行晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="a21a8-232">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_2">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_2(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_2;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a21a8-233">執行個體，建立這個方法。</span><span class="sxs-lookup"><span data-stu-id="a21a8-233">The instance that created this method.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="a21a8-234">其中一個 <see cref="T:System.Reflection.BindingFlags" /> 值，指定繫結的型別。</span><span class="sxs-lookup"><span data-stu-id="a21a8-234">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="a21a8-235"><see cref="T:System.Reflection.Binder" />，會使用反映定義一組屬性和啟用繫結、引數類型強制型轉和成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="a21a8-235">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="a21a8-236">如果 <paramref name="binder" /> 為 <see langword="null" />，則會使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-236">If <paramref name="binder" /> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="a21a8-237">在 <paramref name="binder" /> 的限制下，用以比對此建構函式之數字、順序和參數型別的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-237">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="a21a8-238">如果這個建構函式不需要參數，則傳遞沒有元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-238">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="a21a8-239">此陣列中任何未明確使用值初始化的物件，都會包含該物件類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-239">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="a21a8-240">對於參考型別項目，這個值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-240">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="a21a8-241">對於實值型別項目，這個值為 0、0.0 或 <see langword="false" />，由特定的項目類型決定。</span><span class="sxs-lookup"><span data-stu-id="a21a8-241">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="a21a8-242"><see cref="T:System.Globalization.CultureInfo" />，用來管理類型的強制型轉。</span><span class="sxs-lookup"><span data-stu-id="a21a8-242">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="a21a8-243">如果這是 <see langword="null" />，會使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-243">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="a21a8-244">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="a21a8-244">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a21a8-245">型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a21a8-245">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-246">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="a21a8-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a21a8-247">只有在 <xref:System.Reflection.ConstructorInfo> 執行個體轉換成 <xref:System.Runtime.InteropServices._ConstructorInfo> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="a21a8-247">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_3">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_3 (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_3(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_3 (obj As Object, parameters As Object()) As Object Implements _ConstructorInfo.Invoke_3" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_3;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a21a8-248">執行個體，建立這個方法。</span><span class="sxs-lookup"><span data-stu-id="a21a8-248">The instance that created this method.</span></span></param>
        <param name="parameters"><span data-ttu-id="a21a8-249">在 <paramref name="binder" /> 的限制下，用以比對此建構函式之數字、順序和參數型別的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-249">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="a21a8-250">如果這個建構函式不需要參數，則傳遞沒有元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-250">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="a21a8-251">此陣列中任何未明確使用值初始化的物件，都會包含該物件類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-251">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="a21a8-252">對於參考型別項目，這個值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-252">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="a21a8-253">對於實值型別項目，這個值為 0、0.0 或 <see langword="false" />，由特定的項目類型決定。</span><span class="sxs-lookup"><span data-stu-id="a21a8-253">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="a21a8-254">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="a21a8-254">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="a21a8-255">型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a21a8-255">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-256">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="a21a8-256">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a21a8-257">只有在 <xref:System.Reflection.ConstructorInfo> 執行個體轉換成 <xref:System.Runtime.InteropServices._ConstructorInfo> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="a21a8-257">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_4">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_4(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_4;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr"><span data-ttu-id="a21a8-258">其中一個 <see cref="T:System.Reflection.BindingFlags" /> 值，指定繫結的型別。</span><span class="sxs-lookup"><span data-stu-id="a21a8-258">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="a21a8-259"><see cref="T:System.Reflection.Binder" />，會使用反映定義一組屬性和啟用繫結、引數類型強制型轉和成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="a21a8-259">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="a21a8-260">如果 <paramref name="binder" /> 為 <see langword="null" />，則會使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-260">If <paramref name="binder" /> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="a21a8-261">在 <paramref name="binder" /> 的限制下，用以比對此建構函式之數字、順序和參數型別的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-261">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="a21a8-262">如果這個建構函式不需要參數，則傳遞沒有元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-262">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="a21a8-263">此陣列中任何未明確使用值初始化的物件，都會包含該物件類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-263">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="a21a8-264">對於參考型別項目，這個值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-264">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="a21a8-265">對於實值型別項目，這個值為 0、0.0 或 <see langword="false" />，由特定的項目類型決定。</span><span class="sxs-lookup"><span data-stu-id="a21a8-265">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="a21a8-266"><see cref="T:System.Globalization.CultureInfo" />，用來管理類型的強制型轉。</span><span class="sxs-lookup"><span data-stu-id="a21a8-266">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="a21a8-267">如果這是 <see langword="null" />，會使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-267">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="a21a8-268">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="a21a8-268">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a21a8-269">型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a21a8-269">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-270">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="a21a8-270">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a21a8-271">只有在 <xref:System.Reflection.ConstructorInfo> 執行個體轉換成 <xref:System.Runtime.InteropServices._ConstructorInfo> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="a21a8-271">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_5">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_5 (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_5(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_5 (parameters As Object()) As Object Implements _ConstructorInfo.Invoke_5" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_5(cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_5;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="a21a8-272">在 <paramref name="binder" /> 的限制下，用以比對此建構函式之數字、順序和參數型別的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-272">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="a21a8-273">如果這個建構函式不需要參數，則傳遞沒有元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="a21a8-273">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="a21a8-274">此陣列中任何未明確使用值初始化的物件，都會包含該物件類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="a21a8-274">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="a21a8-275">對於參考型別項目，這個值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a21a8-275">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="a21a8-276">對於實值型別項目，這個值為 0、0.0 或 <see langword="false" />，由特定的項目類型決定。</span><span class="sxs-lookup"><span data-stu-id="a21a8-276">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="a21a8-277">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="a21a8-277">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="a21a8-278">型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a21a8-278">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a21a8-279">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="a21a8-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a21a8-280">只有在 <xref:System.Reflection.ConstructorInfo> 執行個體轉換成 <xref:System.Runtime.InteropServices._ConstructorInfo> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="a21a8-280">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string TypeConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TypeConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.TypeConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TypeConstructorName;" />
      <MemberSignature Language="F#" Value=" staticval mutable TypeConstructorName : string" Usage="System.Reflection.ConstructorInfo.TypeConstructorName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a21a8-281">表示型別建構函式方法儲存在中繼資料時的名稱。</span><span class="sxs-lookup"><span data-stu-id="a21a8-281">Represents the name of the type constructor method as it is stored in metadata.</span></span> <span data-ttu-id="a21a8-282">這個名稱永遠是「.cctor」。</span><span class="sxs-lookup"><span data-stu-id="a21a8-282">This name is always ".cctor".</span></span> <span data-ttu-id="a21a8-283">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="a21a8-283">This property is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>