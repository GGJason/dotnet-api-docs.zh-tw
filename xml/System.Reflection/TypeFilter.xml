<Type Name="TypeFilter" FullName="System.Reflection.TypeFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="483a33504401224295255aafdbaa0959893d7606" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30474912" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool TypeFilter(Type m, object filterCriteria);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeFilter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TypeFilter(m As Type, filterCriteria As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool TypeFilter(Type ^ m, System::Object ^ filterCriteria);" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="m" Type="System.Type" />
    <Parameter Name="filterCriteria" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="m">
      <span data-ttu-id="6f77e-101">要套用篩選條件的 <see langword="Type" /> 物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f77e-101">The <see langword="Type" /> object to which the filter is applied.</span>
      </span>
    </param>
    <param name="filterCriteria">
      <span data-ttu-id="6f77e-102">用來篩選清單的任意物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f77e-102">An arbitrary object used to filter the list.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="6f77e-103">篩選 <see cref="T:System.Type" /> 物件陣列中表示的類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f77e-103">Filters the classes represented in an array of <see cref="T:System.Type" /> objects.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="6f77e-104">若要在篩選清單中包含 <see cref="T:System.Type" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f77e-104">
          <see langword="true" /> to include the <see cref="T:System.Type" /> in the filtered list; otherwise <see langword="false" />.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f77e-105">`TypeFilter`委派可用於篩選的類別清單。</span><span class="sxs-lookup"><span data-stu-id="6f77e-105">The `TypeFilter` delegate is used to filter a list of classes.</span></span> <span data-ttu-id="6f77e-106">具體來說，您使用它來篩選類別的陣列以表示<xref:System.Type>物件。</span><span class="sxs-lookup"><span data-stu-id="6f77e-106">Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects.</span></span> <span data-ttu-id="6f77e-107"><xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType>方法會使用此委派來篩選所傳回的介面清單。</span><span class="sxs-lookup"><span data-stu-id="6f77e-107">The <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> method uses this delegate to filter the list of interfaces that it returns.</span></span> <span data-ttu-id="6f77e-108">每個衍生的類別<xref:System.Delegate>和<xref:System.MulticastDelegate>的建構函式和`DynamicInvoke`方法。</span><span class="sxs-lookup"><span data-stu-id="6f77e-108">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method.</span></span> <span data-ttu-id="6f77e-109">請參閱 Visual c + + 程式碼範例的描述中指定`Delegate`。</span><span class="sxs-lookup"><span data-stu-id="6f77e-109">See the Visual C++ code example given in the description for `Delegate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f77e-110">這個範例示範如何定義方法比對<xref:System.Reflection.TypeFilter>委派可讓您使用反映來篩選或傳回的相符項目的子集的原型。</span><span class="sxs-lookup"><span data-stu-id="6f77e-110">This example shows how to define a method matching the <xref:System.Reflection.TypeFilter> delegate prototype allowing you to use reflection to filter or return a subset of matching entries.</span></span>  
  
 [!code-vb[Typefilter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeFilter/VB/Typefilter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Delegate" />
    <altmember cref="T:System.MulticastDelegate" />
  </Docs>
</Type>