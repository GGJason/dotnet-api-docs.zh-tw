<Type Name="GenericParameterAttributes" FullName="System.Reflection.GenericParameterAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1dbba57b2c395e5998d6c20d8aabab68432634c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39733021" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum GenericParameterAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GenericParameterAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.GenericParameterAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum GenericParameterAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class GenericParameterAttributes" />
  <TypeSignature Language="F#" Value="type GenericParameterAttributes = " />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c5aac-101">描述泛型類型或方法之泛型型別參數的限制式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c5aac-101">Describes the constraints on a generic type parameter of a generic type or method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5aac-102">成員<xref:System.Reflection.GenericParameterAttributes>列舉型別分為兩個群組、 變異數群組和特殊條件約束的群組。</span><span class="sxs-lookup"><span data-stu-id="c5aac-102">The members of the <xref:System.Reflection.GenericParameterAttributes> enumeration are divided into two groups, the variance group and the special constraints group.</span></span> <span data-ttu-id="c5aac-103">若要測試<xref:System.Reflection.GenericParameterAttributes>變異數旗標值，請先執行與 VarianceMask 的位元 AND 運算。</span><span class="sxs-lookup"><span data-stu-id="c5aac-103">To test a <xref:System.Reflection.GenericParameterAttributes> value for variance flags, first perform a bitwise AND operation with VarianceMask.</span></span> <span data-ttu-id="c5aac-104">如果結果是 None，但有任何變異數旗標。</span><span class="sxs-lookup"><span data-stu-id="c5aac-104">If the result is None, there are no variance flags.</span></span> <span data-ttu-id="c5aac-105">同樣地，您也可使用 SpecialConstraintMask 測試條件約束旗標。</span><span class="sxs-lookup"><span data-stu-id="c5aac-105">Similarly, use SpecialConstraintMask to test for constraint flags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5aac-106">下列程式碼範例會定義泛型型別`Test`具有兩個類型參數。</span><span class="sxs-lookup"><span data-stu-id="c5aac-106">The following code example defines a generic type `Test` with two type parameters.</span></span> <span data-ttu-id="c5aac-107">第二個類型參數有基底類別條件約束和參考類型條件約束。</span><span class="sxs-lookup"><span data-stu-id="c5aac-107">The second type parameter has a base class constraint and a reference type constraint.</span></span> <span data-ttu-id="c5aac-108">當程式執行時，條件約束會檢查使用<xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType>屬性和<xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="c5aac-108">When the program executes, the constraints are examined using the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property and the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/CPP/source.cpp#1)]
 [!code-csharp[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/CS/source.cs#1)]
 [!code-vb[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Contravariant">
      <MemberSignature Language="C#" Value="Contravariant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes Contravariant = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.Contravariant" />
      <MemberSignature Language="VB.NET" Value="Contravariant" />
      <MemberSignature Language="C++ CLI" Value="Contravariant" />
      <MemberSignature Language="F#" Value="Contravariant = 2" Usage="System.Reflection.GenericParameterAttributes.Contravariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-109">泛型型別參數是 Contravariant。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-109">The generic type parameter is contravariant.</span>
          </span>
          <span data-ttu-id="c5aac-110">Contravariant 型別參數可顯示為方法簽章中的參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-110">A contravariant type parameter can appear as a parameter type in method signatures.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Covariant">
      <MemberSignature Language="C#" Value="Covariant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes Covariant = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.Covariant" />
      <MemberSignature Language="VB.NET" Value="Covariant" />
      <MemberSignature Language="C++ CLI" Value="Covariant" />
      <MemberSignature Language="F#" Value="Covariant = 1" Usage="System.Reflection.GenericParameterAttributes.Covariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-111">泛型型別參數是 Covariant。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-111">The generic type parameter is covariant.</span>
          </span>
          <span data-ttu-id="c5aac-112">Covariant 型別參數可顯示為方法的結果類型、唯讀欄位的類型、宣告的基底類型或實作的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-112">A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DefaultConstructorConstraint">
      <MemberSignature Language="C#" Value="DefaultConstructorConstraint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes DefaultConstructorConstraint = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint" />
      <MemberSignature Language="VB.NET" Value="DefaultConstructorConstraint" />
      <MemberSignature Language="C++ CLI" Value="DefaultConstructorConstraint" />
      <MemberSignature Language="F#" Value="DefaultConstructorConstraint = 16" Usage="System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-113">型別是無參數的建構函式時，可取代泛型型別參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-113">A type can be substituted for the generic type parameter only if it has a parameterless constructor.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Reflection.GenericParameterAttributes.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-114">沒有任何特殊旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-114">There are no special flags.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotNullableValueTypeConstraint">
      <MemberSignature Language="C#" Value="NotNullableValueTypeConstraint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes NotNullableValueTypeConstraint = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint" />
      <MemberSignature Language="VB.NET" Value="NotNullableValueTypeConstraint" />
      <MemberSignature Language="C++ CLI" Value="NotNullableValueTypeConstraint" />
      <MemberSignature Language="F#" Value="NotNullableValueTypeConstraint = 8" Usage="System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-115">型別是值型別且不為 null 時，可取代泛型型別參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-115">A type can be substituted for the generic type parameter only if it is a value type and is not nullable.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReferenceTypeConstraint">
      <MemberSignature Language="C#" Value="ReferenceTypeConstraint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes ReferenceTypeConstraint = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint" />
      <MemberSignature Language="VB.NET" Value="ReferenceTypeConstraint" />
      <MemberSignature Language="C++ CLI" Value="ReferenceTypeConstraint" />
      <MemberSignature Language="F#" Value="ReferenceTypeConstraint = 4" Usage="System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-116">型別是參考型別時，可取代泛型型別參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-116">A type can be substituted for the generic type parameter only if it is a reference type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SpecialConstraintMask">
      <MemberSignature Language="C#" Value="SpecialConstraintMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes SpecialConstraintMask = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.SpecialConstraintMask" />
      <MemberSignature Language="VB.NET" Value="SpecialConstraintMask" />
      <MemberSignature Language="C++ CLI" Value="SpecialConstraintMask" />
      <MemberSignature Language="F#" Value="SpecialConstraintMask = 28" Usage="System.Reflection.GenericParameterAttributes.SpecialConstraintMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-117">選取所有特殊限制式旗標的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-117">Selects the combination of all special constraint flags.</span>
          </span>
          <span data-ttu-id="c5aac-118">這個值是使用邏輯 OR 結合下列旗標的結果︰<see cref="F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint" />、<see cref="F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint" />和 <see cref="F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-118">This value is the result of using logical OR to combine the following flags: <see cref="F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint" />, <see cref="F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint" />, and <see cref="F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="VarianceMask">
      <MemberSignature Language="C#" Value="VarianceMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes VarianceMask = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.VarianceMask" />
      <MemberSignature Language="VB.NET" Value="VarianceMask" />
      <MemberSignature Language="C++ CLI" Value="VarianceMask" />
      <MemberSignature Language="F#" Value="VarianceMask = 3" Usage="System.Reflection.GenericParameterAttributes.VarianceMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5aac-119">選取所有變異數旗標的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-119">Selects the combination of all variance flags.</span>
          </span>
          <span data-ttu-id="c5aac-120">這個值是使用邏輯 OR 結合下列旗標的結果︰<see cref="F:System.Reflection.GenericParameterAttributes.Contravariant" /> 和 <see cref="F:System.Reflection.GenericParameterAttributes.Covariant" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5aac-120">This value is the result of using logical OR to combine the following flags: <see cref="F:System.Reflection.GenericParameterAttributes.Contravariant" /> and <see cref="F:System.Reflection.GenericParameterAttributes.Covariant" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>