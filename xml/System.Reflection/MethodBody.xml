<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MethodBody.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54e22a412d8fff91a7c65aaaab079f7f7bbfbbed6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e22a412d8fff91a7c65aaaab079f7f7bbfbbed6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.MethodBody">
          <source>Provides access to the metadata and MSIL for the body of a method.</source>
          <target state="translated">提供方法主體之中繼資料和 MSIL 的存取。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class provides access to information about the local variables and exception-handling clauses in a method body, and to the Microsoft intermediate language (MSIL) that makes up the method body.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>類別會提供與存取權的本機變數和例外狀況處理子句，在方法主體中，資訊的 Microsoft intermediate language (MSIL) 組成的方法主體。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>You can use the token-resolution methods of the module class, such as <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, to resolve the tokens in the method body to <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objects, and <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">您可以使用語彙基元解析方法的模組類別，例如<ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>、 解析方法主體中的語彙基元<ph id="ph4">&lt;xref:System.Type&gt;</ph>物件<ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph>物件，和<ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph>提供的物件型別、 方法和欄位在方法主體的 MSIL 所存取之詳細的資訊。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">剖析方法主體需要瞭解的中繼資料和 MSIL 指令格式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">可以找到資訊，通用語言基礎結構 (CLI) 文件，尤其是 &lt; 磁碟分割第二部分： 中繼資料定義和語意 &gt; 以及 &lt; 磁碟分割 iii 部分： CIL 指令集 」 中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">您可以線上取得這份文件；請參閱 MSDN 上的 <bpt id="p1">[</bpt>ECMA C# 和通用語言基礎結構標準<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept>，以及 Ecma International 網站上的<bpt id="p2">[</bpt>標準 ECMA-335 - 通用語言基礎結構 (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>To obtain a <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for a given method, first obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object for the method, then call the <ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object's <ph id="ph4">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> method.</source>
          <target state="translated">若要取得<ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>物件指定方法，請先取得<ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph>物件方法，然後呼叫<ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph>物件的<ph id="ph4">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">下列程式碼範例會定義名為的測試方法<ph id="ph1">`MethodBodyExample`</ph>，並顯示其本機變數的資訊和例外狀況處理子句。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph>方法用來取得<ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph>測試方法的物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects and then displays their types and index order.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph>屬性，以取得一份<ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph>物件，並顯示其型別和索引順序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of exception-handling clauses.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph>屬性用來取得例外狀況處理子句的清單。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Not all computer languages can generate <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</source>
          <target state="translated">並非所有電腦的語言可以都產生<ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph>子句。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">Visual Basic 範例會顯示篩選子句中，使用 Visual Basic<ph id="ph1">`When`</ph>運算式，其他語言的範例中會省略。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBody" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBody" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.#ctor">
          <source>This constructor is invoked by derived classes during the construction of <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> objects.</source>
          <target state="translated">這個建構函式會由衍生類別叫用的建構期間<ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Gets a list that includes all the exception-handling clauses in the method body.</source>
          <target state="translated">取得包含在方法主體中之所有例外狀況處理子句的清單。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.ExceptionHandlingClause" /&gt;</ph> objects representing the exception-handling clauses in the body of the method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Reflection.ExceptionHandlingClause" /&gt;</ph> 物件，代表方法主體中的例外狀況處理子句。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The list includes all clauses from all try blocks in the method body.</source>
          <target state="translated">清單包含所有的 try 區塊的子句方法主體中。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Each <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> object contains information that identifies the try block with which it is associated.</source>
          <target state="translated">每個<ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph>物件包含可識別 try 區塊與相關聯的資訊。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Working with exception-handling clauses requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">使用例外狀況處理子句需要瞭解的中繼資料和 MSIL 指令格式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">可以找到資訊，通用語言基礎結構 (CLI) 文件，尤其是 &lt; 磁碟分割第二部分： 中繼資料定義和語意 &gt; 以及 &lt; 磁碟分割 iii 部分： CIL 指令集 」 中。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">您可以線上取得這份文件；請參閱 MSDN 上的 <bpt id="p1">[</bpt>ECMA C# 和通用語言基礎結構標準<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept>，以及 Ecma International 網站上的<bpt id="p2">[</bpt>標準 ECMA-335 - 通用語言基礎結構 (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays information about its exception-handling clauses.</source>
          <target state="translated">下列程式碼範例會定義名為的測試方法<ph id="ph1">`MethodBodyExample`</ph>並顯示其例外狀況處理子句相關資訊。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph>方法用來取得<ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph>測試方法的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph>屬性用來取得一份<ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Not all computer languages can generate <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</source>
          <target state="translated">並非所有電腦的語言可以都產生<ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph>子句。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">Visual Basic 範例會顯示篩選子句中，使用 Visual Basic<ph id="ph1">`When`</ph>運算式，其他語言的範例中會省略。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Returns the MSIL for the method body, as an array of bytes.</source>
          <target state="translated">傳回方法主體的 MSIL，當做位元組陣列。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the MSIL for the method body.</source>
          <target state="translated">型別 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 的陣列，包含方法主體的 MSIL。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>You can use the token-resolution methods of the module class, such as <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveMember%2A&gt;</ph>, to resolve the tokens in the method body to <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objects, and <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">您可以使用語彙基元解析方法的模組類別，例如<ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Reflection.Module.ResolveMember%2A&gt;</ph>、 解析方法主體中的語彙基元<ph id="ph4">&lt;xref:System.Type&gt;</ph>物件<ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph>物件，和<ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph>提供的物件型別、 方法和欄位在方法主體的 MSIL 所存取之詳細的資訊。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">剖析方法主體需要瞭解的中繼資料和 MSIL 指令格式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">可以找到資訊，通用語言基礎結構 (CLI) 文件，尤其是 &lt; 磁碟分割第二部分： 中繼資料定義和語意 &gt; 以及 &lt; 磁碟分割 iii 部分： CIL 指令集 」 中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">您可以線上取得這份文件；請參閱 MSDN 上的 <bpt id="p1">[</bpt>ECMA C# 和通用語言基礎結構標準<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept>，以及 Ecma International 網站上的<bpt id="p2">[</bpt>標準 ECMA-335 - 通用語言基礎結構 (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Gets a value indicating whether local variables in the method body are initialized to the default values for their types.</source>
          <target state="translated">取得值，指出方法主體中的區域變數是否初始化為其型別的預設值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the method body contains code to initialize local variables to <ph id="ph2">&lt;see langword="null" /&gt;</ph> for reference types, or to the zero-initialized value for value types; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果方法主體含有程式碼，而此程式碼會將參考型別的區域變數初始化為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，或將實值型別 (Value Type) 的區域變數初始化為以零初始化的值，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> property refers to variables that are not explicitly initialized; that is, variables that are declared with syntax such as <ph id="ph2">`int x;`</ph> in C# or <ph id="ph3">`Dim x As Integer`</ph> in Visual Basic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph>屬性會參考的變數，未明確初始化，也就是，這類宣告語法的變數<ph id="ph2">`int x;`</ph>在 C# 或<ph id="ph3">`Dim x As Integer`</ph>在 Visual Basic 中。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Reference variables are initialized to <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">參考變數會初始化為<ph id="ph1">`null`</ph>預設。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Numeric variables are initialized to zero.</source>
          <target state="translated">數值變數初始化為零。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">下列程式碼範例會定義名為的測試方法<ph id="ph1">`MethodBodyExample`</ph>，並顯示其本機變數的資訊和例外狀況處理子句。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph>方法用來取得<ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph>測試方法的物件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> properties are displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph>屬性會顯示。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Gets a metadata token for the signature that describes the local variables for the method in metadata.</source>
          <target state="translated">取得簽章的中繼資料語彙基元，其描述中繼資料中的方法區域變數。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>An integer that represents the metadata token.</source>
          <target state="translated">表示中繼資料語彙基元的整數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property to obtain information about the method's local variables.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph>屬性，以取得方法的本機變數的相關資訊。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Information about local variable signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
          <target state="translated">可以找到本機變數的簽章的相關資訊，通用語言基礎結構 (CLI) 文件，尤其是 &lt; 磁碟分割 II： 中繼資料定義和語意 &gt; 中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">您可以線上取得這份文件；請參閱 MSDN 上的 <bpt id="p1">[</bpt>ECMA C# 和通用語言基礎結構標準<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept>，以及 Ecma International 網站上的<bpt id="p2">[</bpt>標準 ECMA-335 - 通用語言基礎結構 (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>Gets the list of local variables declared in the method body.</source>
          <target state="translated">取得方法主體中所宣告之區域變數的清單。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph> objects that describe the local variables declared in the method body.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph>，其描述方法主體中所宣告的區域變數。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>You do not need the metadata token for the local variable signature provided by the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;</ph> property.</source>
          <target state="translated">您不需要中繼資料語彙基元所提供的本機變數簽章<ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information.</source>
          <target state="translated">下列程式碼範例會定義名為的測試方法<ph id="ph1">`MethodBodyExample`</ph>並顯示其本機變數資訊。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph>方法用來取得<ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph>測試方法的物件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph>屬性用來取得一份<ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>Gets the maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">取得執行此方法時，運算元堆疊上的最大項目數。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">執行此方法時，運算元堆疊上的最大項目數。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>For more information, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">如需詳細資訊，請參閱通用語言基礎結構 (CLI) 文件，尤其是 &lt; 磁碟分割第二部分： 中繼資料定義和語意 &gt; 以及 &lt; 磁碟分割 iii 部分： CIL 指令集 」。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">您可以線上取得這份文件；請參閱 MSDN 上的 <bpt id="p1">[</bpt>ECMA C# 和通用語言基礎結構標準<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept>，以及 Ecma International 網站上的<bpt id="p2">[</bpt>標準 ECMA-335 - 通用語言基礎結構 (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">下列程式碼範例會定義名為的測試方法<ph id="ph1">`MethodBodyExample`</ph>，並顯示其本機變數的資訊和例外狀況處理子句。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph>方法用來取得<ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph>測試方法的物件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> properties are displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph>屬性會顯示。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>類別。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>