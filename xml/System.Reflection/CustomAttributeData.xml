<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eef538980d8bacfc4974fe5bc0403805756d47ae" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57915236" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1557c-101">提供已載入至僅限反映內容之組件、模組、類型、成員和參數的自訂屬性資料存取。</span><span class="sxs-lookup"><span data-stu-id="1557c-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-102">正在檢查僅限反映內容中的程式碼無法執行，因此它不一定能夠檢查的自訂屬性，藉由建立它們，然後檢查其屬性，請使用類似的方法的執行個體<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>，<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>等等.</span><span class="sxs-lookup"><span data-stu-id="1557c-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="1557c-103">如果屬性型別本身的程式碼載入僅限反映的內容，就無法執行。</span><span class="sxs-lookup"><span data-stu-id="1557c-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="1557c-104"><xref:System.Reflection.CustomAttributeData>類別可讓自訂屬性的僅限反映內容中的檢查，藉由提供屬性的抽象概念。</span><span class="sxs-lookup"><span data-stu-id="1557c-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="1557c-105">這個類別的成員可以用來取得位置的引數和具名引數的屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="1557c-106">使用 <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>屬性來取得一份<xref:System.Reflection.CustomAttributeTypedArgument>結構代表位置的引數，並使用<xref:System.Reflection.CustomAttributeData.NamedArguments%2A>屬性來取得一份<xref:System.Reflection.CustomAttributeNamedArgument>，此結構表示具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1557c-107"><xref:System.Reflection.CustomAttributeNamedArgument>結構只提供用來取得和設定的引數值的屬性的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1557c-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="1557c-108">若要取得的類型和引數的值，請使用<xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType>屬性，以取得<xref:System.Reflection.CustomAttributeTypedArgument>結構。</span><span class="sxs-lookup"><span data-stu-id="1557c-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="1557c-109">當您擁有<xref:System.Reflection.CustomAttributeTypedArgument>結構引數，是否具名或位置，使用<xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType>屬性來取得類型和<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType>以取得此值的屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1557c-110">陣列引數<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType>屬性傳回的泛型<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的<xref:System.Reflection.CustomAttributeTypedArgument>物件。</span><span class="sxs-lookup"><span data-stu-id="1557c-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="1557c-111">每個<xref:System.Reflection.CustomAttributeTypedArgument>集合中的物件都代表陣列的對應項目。</span><span class="sxs-lookup"><span data-stu-id="1557c-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="1557c-112"><xref:System.Reflection.CustomAttributeData> 可以用於如所示的僅限反映的內容也將執行內容。</span><span class="sxs-lookup"><span data-stu-id="1557c-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="1557c-113">比方說，您可能想要以避免載入該組件包含自訂屬性的程式碼。</span><span class="sxs-lookup"><span data-stu-id="1557c-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="1557c-114">使用<xref:System.Reflection.CustomAttributeData>類別是與使用類似的方法不同<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="1557c-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="1557c-115">屬性和方法<xref:System.Reflection.CustomAttributeData>只為您提供所指定的值屬性執行個體，而不是建構函式的語意。</span><span class="sxs-lookup"><span data-stu-id="1557c-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="1557c-116">屬性的字串引數，例如可能在內部轉換成某些其他表示法，並傳回標準的格式;或者，屬性在執行實際的屬性程式碼時，可能有副作用。</span><span class="sxs-lookup"><span data-stu-id="1557c-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="1557c-117">屬性和方法<xref:System.Reflection.CustomAttributeData>不允許您擷取繼承自基底類別的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="1557c-118">若要建立的執行個體<xref:System.Reflection.CustomAttributeData>類別中，使用`static`(`Shared`在 Visual Basic 中) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory 方法。</span><span class="sxs-lookup"><span data-stu-id="1557c-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-119">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-120">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-121">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-122">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-123">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-124">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-125">在執行時，組件會將自己載入僅限反映的內容，並顯示已套用至它以及它所包含的成員與類型的自訂屬性的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1557c-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="1557c-126">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1557c-127">初始化 <see cref="T:System.Reflection.CustomAttributeData" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1557c-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-128">這個建構函式會由衍生類別叫用的建構期間<xref:System.Reflection.CustomAttributeData>物件。</span><span class="sxs-lookup"><span data-stu-id="1557c-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1557c-129">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1557c-129">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="1557c-130">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="1557c-130">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1557c-131">取得屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="1557c-131">Gets the type of the attribute.</span></span></summary>
        <value><span data-ttu-id="1557c-132">屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="1557c-132">The type of the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1557c-133">取得 <see cref="T:System.Reflection.ConstructorInfo" /> 物件，表示已初始化自訂屬性的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span></span></summary>
        <value><span data-ttu-id="1557c-134">一個物件，表示已初始化 <see cref="T:System.Reflection.CustomAttributeData" /> 類別目前執行個體所表示之自訂屬性的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-135">如果屬性型別有多個建構函式，這個屬性會傳回僅特定建構函式已初始化目前所代表之屬性執行個體<xref:System.Reflection.CustomAttributeData>物件。</span><span class="sxs-lookup"><span data-stu-id="1557c-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-136">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-137">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-138">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-139">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-140">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-141">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-142">執行時，組件會將自己載入僅限反映的內容，並顯示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1557c-143">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1557c-144"><xref:System.Reflection.CustomAttributeData.Constructor%2A>屬性用於`ShowAttributeData`方法，以顯示自訂屬性資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="1557c-145">在此範例中，<xref:System.Reflection.ConstructorInfo>傳回由這個屬性用來顯示的文字字串，描述建構函式，示範屬性會傳回建構函式會初始化屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1557c-146">取得針對 <see cref="T:System.Reflection.CustomAttributeData" /> 物件所表示之屬性執行個體而指定的位置引數清單。</span><span class="sxs-lookup"><span data-stu-id="1557c-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="1557c-147">結構的集合，表示針對自訂屬性執行個體所指定的位置引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-148">這個方法會取得所指定的自訂屬性執行個體而不執行任何自訂屬性的程式碼的位置引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="1557c-149">因此，它可以用僅限反映內容中。</span><span class="sxs-lookup"><span data-stu-id="1557c-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="1557c-150">使用<xref:System.Reflection.CustomAttributeData.NamedArguments%2A>方法來取得指定的屬性執行個體的具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-151">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-152">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-153">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-154">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-155">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-156">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-157">執行時，組件會將自己載入僅限反映的內容，並顯示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1557c-158">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1557c-159"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>屬性用於`ShowAttributeData`方法，以顯示自訂屬性資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="1557c-160">在此範例中，這個屬性用來顯示傳遞至初始化屬性的建構函式的引數清單。</span><span class="sxs-lookup"><span data-stu-id="1557c-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1557c-161">與這個執行個體相比較的物件，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1557c-161">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1557c-162">傳回值，這個值指出此執行個體是否與指定的物件相等。</span><span class="sxs-lookup"><span data-stu-id="1557c-162">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="1557c-163">如果 <paramref name="obj" /> 等於目前的執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1557c-163"><see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1557c-164">傳回 <see cref="T:System.Reflection.CustomAttributeData" /> 物件的清單，這些物件是表示已套用至目標之屬性的相關資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1557c-165">此為要擷取其自訂屬性資料的組件。</span><span class="sxs-lookup"><span data-stu-id="1557c-165">The assembly whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1557c-166">傳回 <see cref="T:System.Reflection.CustomAttributeData" /> 物件的清單，表示已套用至目標組件之屬性的資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span></span></summary>
        <returns><span data-ttu-id="1557c-167">物件的清單，表示已套用至目標組件之屬性的資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-168">這個方法會提供替代<xref:System.Reflection.Assembly.GetCustomAttributes%2A>一律可以在僅限反映內容中使用的方法。</span><span class="sxs-lookup"><span data-stu-id="1557c-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-169">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-170">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-171">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-172">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-173">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-174">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-175">執行時，組件會將自己載入僅限反映的內容，並顯示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1557c-176">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1557c-177"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>方法會在`Main()`取得套用至組件的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="1557c-178">此方法的傳回值會傳遞至`ShowAttributeData`方法。</span><span class="sxs-lookup"><span data-stu-id="1557c-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1557c-179"><paramref name="target" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1557c-179"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1557c-180">此為要擷取其屬性資料的成員。</span><span class="sxs-lookup"><span data-stu-id="1557c-180">The member whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1557c-181">傳回 <see cref="T:System.Reflection.CustomAttributeData" /> 物件的清單，表示已套用至目標成員之屬性的資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="1557c-182">物件的清單，表示已套用至目標成員之屬性的資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-182">A list of objects that represent data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-183">這個方法多載取得自訂屬性資料類型、 巢狀的類型和類型成員，因為<xref:System.Type>類別和中的類別<xref:System.Reflection>命名空間代表類型成員都是衍生自<xref:System.Reflection.MemberInfo>。</span><span class="sxs-lookup"><span data-stu-id="1557c-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-184">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-185">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-186">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-187">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-188">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-189">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-190">執行時，組件會將自己載入僅限反映的內容，並顯示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1557c-191">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1557c-192"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>方法會在`Main()`若要取得已套用至型別，以及測試方法的自訂屬性 (<xref:System.Type>衍生自<xref:System.Reflection.MemberInfo>)。</span><span class="sxs-lookup"><span data-stu-id="1557c-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="1557c-193">傳回值<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>傳遞至`ShowAttributeData`方法。</span><span class="sxs-lookup"><span data-stu-id="1557c-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1557c-194"><paramref name="target" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1557c-194"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1557c-195">此為要擷取其自訂屬性資料的模組。</span><span class="sxs-lookup"><span data-stu-id="1557c-195">The module whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1557c-196">傳回 <see cref="T:System.Reflection.CustomAttributeData" /> 物件的清單，表示已套用至目標模組之屬性的資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span></span></summary>
        <returns><span data-ttu-id="1557c-197">物件的清單，表示已套用至目標模組之屬性的資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-197">A list of objects that represent data about the attributes that have been applied to the target module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1557c-198"><paramref name="target" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1557c-198"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1557c-199">此為要擷取其自訂屬性資料的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-199">The parameter whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1557c-200">傳回 <see cref="T:System.Reflection.CustomAttributeData" /> 物件的清單，表示已套用至目標參數之屬性的相關資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span></span></summary>
        <returns><span data-ttu-id="1557c-201">物件的清單，表示已套用至目標參數之屬性的相關資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-202">這個方法會提供替代<xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A>一律可以在僅限反映內容中使用的方法。</span><span class="sxs-lookup"><span data-stu-id="1557c-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-203">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-204">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-205">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-206">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-207">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-208">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-209">執行時，組件會將自己載入僅限反映的內容，並顯示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1557c-210">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1557c-211"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>方法會在`Main()`擷取自訂屬性套用至測試方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="1557c-212">傳回值<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>傳遞至`ShowAttributeData`方法。</span><span class="sxs-lookup"><span data-stu-id="1557c-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1557c-213"><paramref name="target" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1557c-213"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1557c-214">做為特定型別的雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-214">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="1557c-215">目前 <see cref="T:System.Object" /> 的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="1557c-215">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1557c-216">取得針對 <see cref="T:System.Reflection.CustomAttributeData" /> 物件所表示之屬性執行個體而指定的具名引數清單。</span><span class="sxs-lookup"><span data-stu-id="1557c-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="1557c-217">結構的集合，表示針對自訂屬性執行個體所指定的具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-218">這個方法會取得指定的引數所指定的自訂屬性執行個體，而不執行任何自訂屬性的程式碼。</span><span class="sxs-lookup"><span data-stu-id="1557c-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="1557c-219">因此，它可以用僅限反映內容中。</span><span class="sxs-lookup"><span data-stu-id="1557c-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="1557c-220">會傳回此清單會包含只有具名引數所指定的屬性執行個體。</span><span class="sxs-lookup"><span data-stu-id="1557c-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="1557c-221">使用<xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>方法來取得所指定的位置引數之屬性執行個體。</span><span class="sxs-lookup"><span data-stu-id="1557c-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-222">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-223">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-224">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-225">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-226">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-227">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-228">執行時，組件會將自己載入僅限反映的內容，並顯示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1557c-229">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1557c-230"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A>屬性用於`ShowAttributeData`方法，以顯示自訂屬性資料。</span><span class="sxs-lookup"><span data-stu-id="1557c-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="1557c-231">在此範例中，這個屬性用來顯示的屬性指定的具名引數清單。</span><span class="sxs-lookup"><span data-stu-id="1557c-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1557c-232">傳回自訂屬性的字串表示。</span><span class="sxs-lookup"><span data-stu-id="1557c-232">Returns a string representation of the custom attribute.</span></span></summary>
        <returns><span data-ttu-id="1557c-233">字串值，表示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-233">A string value that represents the custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1557c-234">字串值包含的屬性型別、 屬性參數和具名的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1557c-235">下列範例會定義具有四個建構函式和四個屬性的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1557c-236">兩個屬性都是唯讀的並設定使用位置參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1557c-237">其他兩個屬性是讀取/寫入，並可以設定只能透過命名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1557c-238">其中一個位置的屬性是字串、 陣列和一個具名的屬性是整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="1557c-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1557c-239">屬性會套用至組件、組件中宣告的類型、類型的方法，以及方法的參數。</span><span class="sxs-lookup"><span data-stu-id="1557c-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1557c-240">在這些情況下，會使用不同的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1557c-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="1557c-241">執行時，組件會將自己載入僅限反映的內容，並顯示自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1557c-242">套用至類型的屬性將示範陣列屬性，其中包含位置和具名引數。</span><span class="sxs-lookup"><span data-stu-id="1557c-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1557c-243">在此範例中，<xref:System.Reflection.CustomAttributeData.ToString%2A>方法會在`ShowAttributeData`方法，來識別要顯示資料的屬性。</span><span class="sxs-lookup"><span data-stu-id="1557c-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>