<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ModuleResolveEventHandler.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bc16b9b4673a68446507847618b1942ca871a8f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc16b9b4673a68446507847618b1942ca871a8f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The assembly that was the source of the event.</source>
          <target state="translated">事件來源的組件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The arguments supplied by the object describing the event.</source>
          <target state="translated">描述事件的物件所提供的引數。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph> event of an <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">代表將處理 <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph> 事件之方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The module that satisfies the request.</source>
          <target state="translated">滿足此要求的模組。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised.</source>
          <target state="translated">如果 common language runtime 類別載入器無法經由一般方法的組件內部模組參考解析，則會引發這個事件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The event handler for this delegate must locate and return a module that satisfies the request.</source>
          <target state="translated">此委派的事件處理常式必須找出並傳回滿足要求的模組。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The following example demonstrates the sequence of execution in which an event handler is called.</source>
          <target state="translated">下列範例會示範的執行稱為事件處理常式的順序。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>In this example, Server1 is an external module of the MySample class.</source>
          <target state="translated">在此範例中，Server1 會是外部 MySample 類別的模組。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>To compile and run the example</source>
          <target state="translated">若要編譯及執行範例</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Open a Command Prompt window and navigate to the directory that contains MySample.cs.</source>
          <target state="translated">開啟命令提示字元視窗，並瀏覽至包含 MySample.cs 的目錄。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Compile Server1 using the following command:</source>
          <target state="translated">編譯 Server1 使用下列命令：</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Compile MySample using the following command:</source>
          <target state="translated">編譯 MySample 使用下列命令：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Run MySample.exe.</source>
          <target state="translated">執行 MySample.exe。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The module file Server1.netmodule must be in a subdirectory named "subfolder" for this example to work properly.</source>
          <target state="translated">模組檔案 Server1.netmodule 必須在名為"的子資料夾"這個範例才能正常運作的子目錄中。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>