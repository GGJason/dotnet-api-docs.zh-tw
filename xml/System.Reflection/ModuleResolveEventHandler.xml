<Type Name="ModuleResolveEventHandler" FullName="System.Reflection.ModuleResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0b080100b943c211c8d36c955ad8cc237cc895b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37640053" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ModuleResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ModuleResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ModuleResolveEventHandler(sender As Object, e As ResolveEventArgs) As Module " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Module ^ ModuleResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ModuleResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Module" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Module</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="da7f9-101">事件來源的組件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da7f9-101">The assembly that was the source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="da7f9-102">描述事件的物件所提供的引數。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da7f9-102">The arguments supplied by the object describing the event.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="da7f9-103">代表將處理 <see cref="T:System.Reflection.Assembly" /> 的 <see cref="E:System.Reflection.Assembly.ModuleResolve" /> 事件之方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da7f9-103">Represents the method that will handle the <see cref="E:System.Reflection.Assembly.ModuleResolve" /> event of an <see cref="T:System.Reflection.Assembly" />.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="da7f9-104">滿足此要求的模組。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da7f9-104">The module that satisfies the request.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da7f9-105">如果 common language runtime 類別載入器無法解析的內部模組經由一般方法的組件的參考，則會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="da7f9-105">If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised.</span></span> <span data-ttu-id="da7f9-106">這個委派的事件處理常式必須找出並傳回滿足要求的模組。</span><span class="sxs-lookup"><span data-stu-id="da7f9-106">The event handler for this delegate must locate and return a module that satisfies the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da7f9-107">下列範例示範的執行在其中呼叫事件處理常式的順序。</span><span class="sxs-lookup"><span data-stu-id="da7f9-107">The following example demonstrates the sequence of execution in which an event handler is called.</span></span> <span data-ttu-id="da7f9-108">在此範例中，Server1 會是外部 MySample 類別的模組。</span><span class="sxs-lookup"><span data-stu-id="da7f9-108">In this example, Server1 is an external module of the MySample class.</span></span>  
  
### <a name="to-compile-and-run-the-example"></a><span data-ttu-id="da7f9-109">若要編譯和執行範例</span><span class="sxs-lookup"><span data-stu-id="da7f9-109">To compile and run the example</span></span>  
  
1.  <span data-ttu-id="da7f9-110">開啟 [命令提示字元] 視窗並瀏覽至包含 MySample.cs 的目錄。</span><span class="sxs-lookup"><span data-stu-id="da7f9-110">Open a Command Prompt window and navigate to the directory that contains MySample.cs.</span></span>  
  
2.  <span data-ttu-id="da7f9-111">編譯 Server1 使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="da7f9-111">Compile Server1 using the following command:</span></span>  
  
    ```console  
    csc /out:subfolder\Server1.netmodule /t:module Server1.cs  
    ```  
  
3.  <span data-ttu-id="da7f9-112">編譯 MySample 使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="da7f9-112">Compile MySample using the following command:</span></span>  
  
    ```console  
    csc /out:MySample.exe /t:exe /addmodule:subfolder\Server1.netmodule MySample.cs  
    ```  
  
4.  <span data-ttu-id="da7f9-113">執行 MySample.exe。</span><span class="sxs-lookup"><span data-stu-id="da7f9-113">Run MySample.exe.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da7f9-114">模組檔案 Server1.netmodule 必須位於名為"子資料夾"這個範例才能正常運作的子目錄。</span><span class="sxs-lookup"><span data-stu-id="da7f9-114">The module file Server1.netmodule must be in a subdirectory named "subfolder" for this example to work properly.</span></span>  
  
 [!code-csharp[System.Reflection.ModuleResolveEventHandler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/mysample.cs#1)]  
[!code-csharp[System.Reflection.ModuleResolveEventHandler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/server1.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>