<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ee28236ed05b5e16c8562811a785e42e58bbe86" />
    <Meta Name="ms.sourcegitcommit" Value="fbb23bed4669409528ea7027eeaf88a8663d0851" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/11/2018" />
    <Meta Name="ms.locfileid" Value="49088639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="79718-101">與 <see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch 介面</see>交互操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="79718-101">Interoperates with the <see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch interface</see>.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-102"><xref:System.Reflection.IReflect>介面用來與交互操作[IDispatch 介面](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)。</span><span class="sxs-lookup"><span data-stu-id="79718-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="79718-103"><xref:System.Reflection.IReflect> 定義的子集<xref:System.Type>反映方法。</span><span class="sxs-lookup"><span data-stu-id="79718-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="79718-104">實作這個介面可讓類型以自訂其行為，當從 COM 做為存取物件時`IDispatch`物件。</span><span class="sxs-lookup"><span data-stu-id="79718-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="79718-105"><xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler>類別可以用來封送處理該物件會實作<xref:System.Reflection.IReflect>或<xref:System.Runtime.InteropServices.Expando.IExpando>為 COM`IDispatch`物件，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="79718-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79718-106">要尋找的欄位名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-106">The name of the field to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="79718-107">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-107">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-108">傳回對應至指定之欄位和繫結端旗標的 <see cref="T:System.Reflection.FieldInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-109">
            <see cref="T:System.Reflection.FieldInfo" /> 物件，包含符合 <paramref name="bindingAttr" /> 中所指定搜尋條件約束 (Constraint) 的具名物件欄位資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="79718-110">物件會使用相同名稱，實作多重欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-110">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="79718-111">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-111">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-112">傳回 <see cref="T:System.Reflection.FieldInfo" /> 物件陣列，對應至目前類別的所有欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-113">
            <see cref="T:System.Reflection.FieldInfo" /> 物件陣列，包含符合 <paramref name="bindingAttr" /> 中所指定搜尋條件約束的這個反映物件所有欄位資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-114">比對是以名稱為根據。</span><span class="sxs-lookup"><span data-stu-id="79718-114">The match is based upon a name.</span></span> <span data-ttu-id="79718-115">每個欄位都必須有唯一的名稱。</span><span class="sxs-lookup"><span data-stu-id="79718-115">Each field must have a unique name.</span></span> <span data-ttu-id="79718-116"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType>旗標會指定在搜尋中，包含非公用方法。</span><span class="sxs-lookup"><span data-stu-id="79718-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="79718-117"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType>旗標會指定在搜尋中，包含公用方法。</span><span class="sxs-lookup"><span data-stu-id="79718-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79718-118">要尋找的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-118">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="79718-119">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-119">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-120">擷取 <see cref="T:System.Reflection.MemberInfo" /> 物件陣列，對應於所有公用成員或所有符合指定名稱的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-121">
            <see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，這些物件符合 <paramref name="name" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-122"><xref:System.Reflection.IReflect.GetMember%2A>方法會擷取陣列<xref:System.Reflection.MemberInfo>使用繫結屬性與名稱對應至所有公用成員或符合指定之名稱的所有成員的物件。</span><span class="sxs-lookup"><span data-stu-id="79718-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="79718-123">觀察到指定之名稱的大小寫是否忽略，依照<xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="79718-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="79718-124">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-124">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-125">擷取 <see cref="T:System.Reflection.MemberInfo" /> 物件陣列，對應至所有公用成員或所有目前類別的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-126">
            <see cref="T:System.Reflection.MemberInfo" /> 物件陣列，包含這個反映物件的所有成員資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-127">這個方法會擷取陣列<xref:System.Reflection.MemberInfo>使用對應至所有公用成員或目前類別的所有成員的繫結屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="79718-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="79718-128">它會傳回所有定義此物件成員的陣列。</span><span class="sxs-lookup"><span data-stu-id="79718-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79718-129">擷取 <see cref="T:System.Reflection.MethodInfo" /> 物件，對應至指定的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79718-130">要尋找的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-130">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="79718-131">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-131">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-132">擷取 <see cref="T:System.Reflection.MethodInfo" /> 物件，對應至所指定搜尋條件約束下的指定方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-133">
            <see cref="T:System.Reflection.MethodInfo" /> 物件，包含方法資訊，並且符合是根據 <paramref name="bindingAttr" /> 中所指定的方法名稱和搜尋條件約束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="79718-134">物件會使用相同名稱，實作多重方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-134">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79718-135">要尋找的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-135">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="79718-136">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-136">The binding attributes used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="79718-137">該物件會實作 <see cref="T:System.Reflection.Binder" />，其中包含與此方法相關的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="79718-138">陣列，用來在多載方法中選擇。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-138">An array used to choose among overloaded methods.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="79718-139">參數修飾詞的陣列，用來進行與參數簽章的繫結工作，其中該參數簽章的類別已修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-140">使用 <see cref="T:System.Reflection.MethodInfo" /> 陣列從多載方法中選擇，擷取對應於指定方法的 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-141">要求方法，符合所有指定參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-141">The requested method that matches all the specified parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-142">傳回值是根據 方法名稱、 相符項目<xref:System.Reflection.BindingFlags>列舉成員，所指定的型別轉換的類型`binder`參數，多載，而<xref:System.Reflection.ParameterInfo>描述方法的簽章。</span><span class="sxs-lookup"><span data-stu-id="79718-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="79718-143">物件會使用相同名稱，實作多重方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-143">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="79718-144">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-144">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-145">使用所有公用方法或所有目前類別的方法，擷取 <see cref="T:System.Reflection.MethodInfo" /> 物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-146">
            <see cref="T:System.Reflection.MethodInfo" /> 物件陣列，包含為符合 <paramref name="bindingAttr" /> 中所指定搜尋條件約束的這個反映物件定義的所有方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-147">非公用屬性`bindingAttr`會指出只會傳回公用方法。</span><span class="sxs-lookup"><span data-stu-id="79718-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="79718-148">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-148">The binding attribute used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-149">擷取 <see cref="T:System.Reflection.PropertyInfo" /> 物件陣列，對應於所有公用屬性或所有目前類別的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-150">所有屬性的 <see cref="T:System.Reflection.PropertyInfo" /> 物件陣列，定義於反映物件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79718-151">擷取 <see cref="T:System.Reflection.PropertyInfo" /> 物件，對應於指定屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79718-152">要尋找的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-152">The name of the property to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="79718-153">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-153">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-154">擷取 <see cref="T:System.Reflection.PropertyInfo" /> 物件，對應於指定搜尋條件約束下的指定屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-155">所找到屬性的 <see cref="T:System.Reflection.PropertyInfo" /> 物件 (符合 <paramref name="bindingAttr" /> 中所指定的搜尋條件約束) 或 <see langword="null" /> (如果未找到屬性)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="79718-156">物件會使用相同名稱，實作多重欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-156">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79718-157">要尋找的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-157">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="79718-158">繫結屬性，用來控制搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-158">The binding attribute used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="79718-159">該物件會實作 <see cref="T:System.Reflection.Binder" />，其中包含與此方法相關的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="79718-160">屬性的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-160">The type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="79718-161">陣列，用來在具有相同名稱的多載方法中選擇。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-161">An array used to choose among overloaded methods with the same name.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="79718-162">陣列，用來選擇參數修飾詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-162">An array used to choose the parameter modifiers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-163">擷取 <see cref="T:System.Reflection.PropertyInfo" /> 物件，對應至具有指定之搜尋條件約束的指定屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-164">
            <see cref="T:System.Reflection.PropertyInfo" /> 物件 (用於所找到的屬性，如果在這個反映物件中找到具有指定名稱的屬性) 或 <see langword="null" /> (如果找不到屬性)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-165">這個方法會擷取<xref:System.Reflection.PropertyInfo>指定搜尋條件約束對應至指定的屬性底下的物件。</span><span class="sxs-lookup"><span data-stu-id="79718-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="79718-166">類型陣列使用多載方法中進行選擇。</span><span class="sxs-lookup"><span data-stu-id="79718-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79718-167">要尋找的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-167">The name of the member to find.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="79718-168">其中一個 <see cref="T:System.Reflection.BindingFlags" /> 引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span>
          </span>
          <span data-ttu-id="79718-169">
            <c>invokeAttr</c> 參數可能是建構函式、方法、屬性或欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-169">The <c>invokeAttr</c> parameter may be a constructor, method, property, or field.</span>
          </span>
          <span data-ttu-id="79718-170">您必須指定適當的引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-170">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="79718-171">藉由將空字串 ("") 傳遞為成員名稱的方式，叫用類別的預設成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="79718-172">其中一個 <see cref="T:System.Reflection.BindingFlags" /> 位元旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span>
          </span>
          <span data-ttu-id="79718-173">實作 <see cref="T:System.Reflection.Binder" />，包含這個方法的相關屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="79718-174">要在其上叫用指定成員的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-174">The object on which to invoke the specified member.</span>
          </span>
          <span data-ttu-id="79718-175">對於靜態成員來說，會忽略這個參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-175">This parameter is ignored for static members.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="79718-176">物件陣列，包含要叫用的成員參數的數目、順序和型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="79718-177">如果沒有參數，則這是空陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-177">This is an empty array if there are no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="79718-178">
            <see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span>
          </span>
          <span data-ttu-id="79718-179">這個陣列和 <c>args</c> 參數具有相同的長度，並且表示中繼資料中被叫用成員的引數屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-179">This array has the same length as the <c>args</c> parameter, representing the invoked member's argument attributes in the metadata.</span>
          </span>
          <span data-ttu-id="79718-180">參數可以具有下列屬性：<see langword="pdIn" />、<see langword="pdOut" />、<see langword="pdRetval" />、<see langword="pdOptional" /> 和 <see langword="pdHasDefault" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span>
          </span>
          <span data-ttu-id="79718-181">這些分別代表 [In]、[Out]、[retval]、[optional] 和預設參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span>
          </span>
          <span data-ttu-id="79718-182">這些屬性是由各種互通性 (Interoperability) 服務所使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-182">These attributes are used by various interoperability services.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="79718-183">
            <see cref="T:System.Globalization.CultureInfo" /> 的執行個體，用於管理類型的強制型轉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="79718-184">例如，<c>culture</c> 會將表示 1000 的 <see langword="String" /> 轉換為 <see langword="Double" /> 值，因為 1000 在不同文化特性中有不同的表示方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-184">For example, <c>culture</c> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="79718-185">如果這個參數是 <see langword="null" />，則會使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="79718-186">參數的 <see langword="String" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-186">A <see langword="String" /> array of parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79718-187">叫用指定成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-187">Invokes a specified member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79718-188">指定成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-188">The specified member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79718-189">根據指定繫結器和引動過程屬性的條件約束，所要叫用的方法必須可存取，並提供與指定引數清單最特定的符合項目。</span><span class="sxs-lookup"><span data-stu-id="79718-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="79718-190">如果方法宣告中的參數數目等於在指定的引數清單中，引數的數目和每個引數的型別可轉換為參數的型別繫結器，則會叫用方法。</span><span class="sxs-lookup"><span data-stu-id="79718-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79718-191">參數修飾詞的陣列傳遞至<xref:System.Reflection.IReflect.InvokeMember%2A>方法必須包含單一參數修飾詞。</span><span class="sxs-lookup"><span data-stu-id="79718-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="79718-192">當判斷哪一個引數必須以傳參考公開給 COM 時，會被視為只有第一個參數修飾詞</span><span class="sxs-lookup"><span data-stu-id="79718-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="79718-193">繫結器會尋找所有比對方法的詳細資訊，根據要求的繫結的類型 (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>，<xref:System.Reflection.IReflect.GetProperties%2A>等等)。</span><span class="sxs-lookup"><span data-stu-id="79718-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="79718-194">一組方法會依名稱、 目的引數，以及一組繫結器中所定義的搜尋修飾詞進行篩選。</span><span class="sxs-lookup"><span data-stu-id="79718-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="79718-195">方法選取之後，它會叫用，並協助工具已在該點。</span><span class="sxs-lookup"><span data-stu-id="79718-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="79718-196">搜尋可能會控制哪一組方法會搜尋根據與方法關聯的協助工具屬性。</span><span class="sxs-lookup"><span data-stu-id="79718-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="79718-197"><xref:System.Reflection.Binder.BindToMethod%2A> 選取要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="79718-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="79718-198">預設繫結器會選取最特定的相符項目。</span><span class="sxs-lookup"><span data-stu-id="79718-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="79718-199">完全信任程式碼會略過存取限制。</span><span class="sxs-lookup"><span data-stu-id="79718-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="79718-200">也就是私用建構函式、 方法、 欄位和屬性可以存取和完全信任程式碼時，透過反映叫用。</span><span class="sxs-lookup"><span data-stu-id="79718-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79718-201">下列範例會取得的值<xref:System.DateTime.Now%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79718-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79718-202">一個以上的引數會指定給欄位 <see langword="set" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-202">More than one argument is specified for a field <see langword="set" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="79718-203">找不到欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-203">The field or property cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="79718-204">找不到方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-204">The method cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="79718-205">叫用私用 (Private) 成員，而不使用必要的 <see cref="T:System.Security.Permissions.ReflectionPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79718-206">取得表示 <see cref="T:System.Reflection.IReflect" /> 物件的基礎型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79718-207">表示 <see cref="T:System.Reflection.IReflect" /> 物件的基礎型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79718-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>