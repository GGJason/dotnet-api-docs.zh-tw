<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyAlgorithmIdAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512755f824c823f126369a62973777c6f490a6295.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12755f824c823f126369a62973777c6f490a6295</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyAlgorithmIdAttribute">
          <source>Specifies an algorithm to hash all files in an assembly.</source>
          <target state="translated">指定要雜湊組件中所有檔案的演算法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyAlgorithmIdAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyAlgorithmIdAttribute">
          <source>The file hash values and names in the assembly are stored in the assembly manifest.</source>
          <target state="translated">檔案雜湊值和組件中的名稱會儲存在組件資訊清單中。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyAlgorithmIdAttribute">
          <source>When a file is loaded, the hash value is used to verify that a file has not been changed since the manifest was built.</source>
          <target state="translated">載入檔案時，雜湊值用來確認該檔案尚未變更資訊清單建立之後。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyAlgorithmIdAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyAlgorithmIdAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyAlgorithmIdAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyAlgorithmIdAttribute.#ctor(System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>A member of <ph id="ph1">&lt;see langword="AssemblyHashAlgorithm" /&gt;</ph> that represents the hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="AssemblyHashAlgorithm" /&gt;</ph> 的成員，表示雜湊演算法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyAlgorithmIdAttribute.#ctor(System.Configuration.Assemblies.AssemblyHashAlgorithm)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyAlgorithmIdAttribute" /&gt;</ph> class with the specified hash algorithm, using one of the members of <ph id="ph2">&lt;see cref="T:System.Configuration.Assemblies.AssemblyHashAlgorithm" /&gt;</ph> to represent the hash algorithm.</source>
          <target state="translated">使用其中一個 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyAlgorithmIdAttribute" /&gt;</ph> 成員表示雜湊演算法，以指定的雜湊演算法初始化 <ph id="ph2">&lt;see cref="T:System.Configuration.Assemblies.AssemblyHashAlgorithm" /&gt;</ph> 類別新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyAlgorithmIdAttribute.#ctor(System.UInt32)">
          <source>An unsigned integer representing the hash algorithm.</source>
          <target state="translated">不帶正負號的整數，表示雜湊演算法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyAlgorithmIdAttribute.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyAlgorithmIdAttribute" /&gt;</ph> class with the specified hash algorithm, using an unsigned integer to represent the hash algorithm.</source>
          <target state="translated">使用不帶正負號的整數 (Unsigned Integer) 表示雜湊演算法，以指定的雜湊演算法初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyAlgorithmIdAttribute" /&gt;</ph> 類別新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyAlgorithmIdAttribute.AlgorithmId">
          <source>Gets the hash algorithm of an assembly manifest's contents.</source>
          <target state="translated">取得組件資訊清單內容的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyAlgorithmIdAttribute.AlgorithmId">
          <source>An unsigned integer representing the assembly hash algorithm.</source>
          <target state="translated">不帶正負號的整數，表示組件雜湊演算法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>