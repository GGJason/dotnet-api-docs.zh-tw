<Type Name="AmbiguousMatchException" FullName="System.Reflection.AmbiguousMatchException">
  <TypeSignature Language="C#" Value="public sealed class AmbiguousMatchException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AmbiguousMatchException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AmbiguousMatchException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbiguousMatchException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbiguousMatchException sealed : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="29da3-101">繫結至成員而使得一個以上的成員符合繫結準則時，所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="29da3-101">The exception that is thrown when binding to a member results in more than one member matching the binding criteria.</span></span> <span data-ttu-id="29da3-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="29da3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29da3-103">`AmbiguousMatchException` 會使用 HRESULT COR_E_AMBIGUOUSMATCH 0x8000211D 的值。</span><span class="sxs-lookup"><span data-stu-id="29da3-103">`AmbiguousMatchException` uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</span></span>  
  
 <span data-ttu-id="29da3-104">`AmbiguousMatchException`晚期繫結叫用成員，而多個多載符合繫結準則時，或一個以上的成員符合傳遞至反映方法可傳回單一結果的繫結準則時，會擲回 (例如， <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>或<xref:System.Type.GetProperty%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="29da3-104">An `AmbiguousMatchException` is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> or <xref:System.Type.GetProperty%2A?displayProperty=nameWithType>).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.SystemException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29da3-105">初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="29da3-105">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29da3-106">使用設定為 <see langword="null" /> 的空訊息字串和根本原因例外狀況，來初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="29da3-106">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with an empty message string and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29da3-107">`AmbiguousMatchException` 繼承自 <xref:System.Exception>。</span><span class="sxs-lookup"><span data-stu-id="29da3-107">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="29da3-108">這個建構函式設定的屬性`Exception`物件下表所示。</span><span class="sxs-lookup"><span data-stu-id="29da3-108">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="29da3-109">屬性</span><span class="sxs-lookup"><span data-stu-id="29da3-109">Property</span></span>|<span data-ttu-id="29da3-110">值</span><span class="sxs-lookup"><span data-stu-id="29da3-110">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="29da3-111">空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="29da3-111">The empty string ("").</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.SystemException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="29da3-112">字串，表示這個例外狀況擲回的原因。</span><span class="sxs-lookup"><span data-stu-id="29da3-112">A string indicating the reason this exception was thrown.</span></span></param>
        <summary><span data-ttu-id="29da3-113">使用在該類別中設定為指定訊息的訊息字串，和設定為 <see langword="null" /> 的根本原因例外狀況，來初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="29da3-113">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with its message string set to the given message and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29da3-114">`AmbiguousMatchException` 繼承自 <xref:System.Exception>。</span><span class="sxs-lookup"><span data-stu-id="29da3-114">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="29da3-115">這個建構函式設定的屬性`Exception`物件下表所示。</span><span class="sxs-lookup"><span data-stu-id="29da3-115">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="29da3-116">屬性</span><span class="sxs-lookup"><span data-stu-id="29da3-116">Property</span></span>|<span data-ttu-id="29da3-117">值</span><span class="sxs-lookup"><span data-stu-id="29da3-117">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="29da3-118">`message`字串。</span><span class="sxs-lookup"><span data-stu-id="29da3-118">The `message` string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="29da3-119">解釋例外狀況原因的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="29da3-119">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="29da3-120">做為目前例外狀況發生原因的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="29da3-120">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="29da3-121">如果 <c>inner</c> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外狀況的 <see langword="catch" /> 區塊中引發。</span><span class="sxs-lookup"><span data-stu-id="29da3-121">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="29da3-122">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="29da3-122">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29da3-123">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <xref:System.Exception.InnerException%2A> 屬性中包含對前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="29da3-123">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="29da3-124"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `null` 屬性沒有提供內部例外值給建構函式，則傳回 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="29da3-124">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="29da3-125">下表顯示 <xref:System.Reflection.AmbiguousMatchException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="29da3-125">The following table shows the initial property values for an instance of <xref:System.Reflection.AmbiguousMatchException>.</span></span>  
  
|<span data-ttu-id="29da3-126">屬性</span><span class="sxs-lookup"><span data-stu-id="29da3-126">Property</span></span>|<span data-ttu-id="29da3-127">值</span><span class="sxs-lookup"><span data-stu-id="29da3-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="29da3-128">內部例外狀況參考。</span><span class="sxs-lookup"><span data-stu-id="29da3-128">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="29da3-129">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="29da3-129">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="29da3-130">下列範例顯示兩個類別中，每個名為`Mymethod`。</span><span class="sxs-lookup"><span data-stu-id="29da3-130">The following example shows two classes, each named `Mymethod`.</span></span> <span data-ttu-id="29da3-131">其中一個類別會採用整數和另一個採用字串。</span><span class="sxs-lookup"><span data-stu-id="29da3-131">One class takes an integer and the other takes a string.</span></span> <span data-ttu-id="29da3-132">如果整數傳遞給`Mymethod`，則會使用第一個類別。</span><span class="sxs-lookup"><span data-stu-id="29da3-132">If an integer is passed to `Mymethod`, the first class is used.</span></span> <span data-ttu-id="29da3-133">如果將字串傳遞時，會使用第二個類別。</span><span class="sxs-lookup"><span data-stu-id="29da3-133">If a string is passed, the second class is used.</span></span> <span data-ttu-id="29da3-134">如果無法判斷其中`Mymethod`若要使用，`AmbiguousMatchException`就會擲回。</span><span class="sxs-lookup"><span data-stu-id="29da3-134">If it cannot be determined which `Mymethod` to use, `AmbiguousMatchException` is thrown.</span></span>  
  
 [!code-cpp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CS/source.cs#1)]
 [!code-vb[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>