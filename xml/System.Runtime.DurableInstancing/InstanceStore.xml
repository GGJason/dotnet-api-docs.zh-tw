<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e1c307c5d88796df0bd407c00fa925981bc8079" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53292324" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <TypeSignature Language="F#" Value="type InstanceStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="098ad-101">代表執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="098ad-101">Represents an instance store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-102">持續性提供者會透過 <xref:System.Runtime.DurableInstancing.InstanceStore> 類別的具體實作，提供執行個體存放區的存取。</span><span class="sxs-lookup"><span data-stu-id="098ad-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="098ad-103">即使命令已執行完成，持續性提供者仍可在傳遞至 TryCommand 的控制代碼上呼叫 InstanceHandle.Free。</span><span class="sxs-lookup"><span data-stu-id="098ad-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="098ad-104">但持續性提供者不得保留 InstanceHandle 或 InstanceOwner 物件的強式參考，因為如此會導致 InstanceStore 無法由記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="098ad-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="098ad-105">無法變更的持續性工作流程的工作流程定義。</span><span class="sxs-lookup"><span data-stu-id="098ad-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="098ad-106">如果工作流程定義之後它會保存變更，重新載入工作流程時，會損毀工作流程執行階段。</span><span class="sxs-lookup"><span data-stu-id="098ad-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="098ad-107">初始化 <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="098ad-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginExecute (handle, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="098ad-108">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-108">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="098ad-109">要執行的命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-109">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="098ad-110">命令執行的逾時值。</span><span class="sxs-lookup"><span data-stu-id="098ad-110">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="098ad-111">非同步回呼委派，此委派會接收到非同步作業完成的通知。</span><span class="sxs-lookup"><span data-stu-id="098ad-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="098ad-112">狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="098ad-112">The state information.</span></span></param>
        <summary><span data-ttu-id="098ad-113">以非同步方式執行持續性命令，例如 <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> 和 <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />。</span><span class="sxs-lookup"><span data-stu-id="098ad-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="098ad-114">非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="098ad-114">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-115">主機會以非同步方式呼叫 <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> 方法，對執行個體控制代碼執行持續性命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="098ad-116">主機會透過叫用 <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 方法，取得執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="098ad-117">執行個體控制代碼可繫結至表示命令內容和目標的實體，例如執行個體、執行個體擁有者或執行個體鎖定。</span><span class="sxs-lookup"><span data-stu-id="098ad-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="098ad-118">一次只能針對一個執行個體控制代碼發出一個指令。</span><span class="sxs-lookup"><span data-stu-id="098ad-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="098ad-119">執行個體內容。</span><span class="sxs-lookup"><span data-stu-id="098ad-119">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="098ad-120">要執行的持續性命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-120">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="098ad-121">命令執行的逾時值。</span><span class="sxs-lookup"><span data-stu-id="098ad-121">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="098ad-122">非同步回呼委派，此委派會接收到非同步作業完成的通知。</span><span class="sxs-lookup"><span data-stu-id="098ad-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="098ad-123">狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="098ad-123">The state information.</span></span></param>
        <summary><span data-ttu-id="098ad-124">持續性提供者會實作這個方法，如此可決定是否能夠執行特定的持續性命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span></span> <span data-ttu-id="098ad-125">如果命令可以執行，則以非同步方式執行命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-125">If the command can be executed, executes the command asynchronously.</span></span></summary>
        <returns><span data-ttu-id="098ad-126">非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="098ad-126">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-127">如果命令可以執行，持續性提供者可以在 InstancePersistenceContext 上呼叫相關的方法，以提供命令的結果。</span><span class="sxs-lookup"><span data-stu-id="098ad-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="098ad-128">即使這個方法會宣告為`virtual`而非`abstract`，沒有任何實作。</span><span class="sxs-lookup"><span data-stu-id="098ad-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="098ad-129">必須覆寫這個方法，以便提供的功能。</span><span class="sxs-lookup"><span data-stu-id="098ad-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginWaitForEvents (handle, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="098ad-130">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-130">An instance handle.</span></span></param>
        <param name="timeout"><span data-ttu-id="098ad-131">作業逾時之後的週期。</span><span class="sxs-lookup"><span data-stu-id="098ad-131">The period after which the operation times out.</span></span></param>
        <param name="callback"><span data-ttu-id="098ad-132">在非同步作業完成後所呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="098ad-132">The method to be called after the asynchronous operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="098ad-133">包含有與非同步作業相關聯之狀態資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-133">An object containing the state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="098ad-134">開始非同步作業，以接聽由特定執行個體控制代碼的執行個體存放區引發的任何事件。</span><span class="sxs-lookup"><span data-stu-id="098ad-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span></span></summary>
        <returns><span data-ttu-id="098ad-135">傳回 <see cref="T:System.IAsyncResult" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-135">Returns an <see cref="T:System.IAsyncResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="098ad-136">建立執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-136">Creates an instance handle.</span></span> <span data-ttu-id="098ad-137">如果 DefaultInstanceOwner 已設定，此值會自動繫結為新控制代碼的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : unit -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="098ad-138">建立執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-138">Creates an instance handle.</span></span></summary>
        <returns><span data-ttu-id="098ad-139">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-139">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="098ad-140">執行個體識別碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-140">An instance identifier.</span></span> <span data-ttu-id="098ad-141">不得為 Guid.Empty。</span><span class="sxs-lookup"><span data-stu-id="098ad-141">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="098ad-142">建立執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-142">Creates an instance handle.</span></span>  <span data-ttu-id="098ad-143">如果 DefaultInstanceOwner 已設定，此值會自動繫結為新控制代碼的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="098ad-144">傳遞為參數的執行個體識別碼會自動繫結為新控制代碼的執行個體。</span><span class="sxs-lookup"><span data-stu-id="098ad-144">The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="098ad-145">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-145">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="098ad-146">執行個體的擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-146">The owner of an instance.</span></span></param>
        <summary><span data-ttu-id="098ad-147">建立執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-147">Creates an instance handle.</span></span> <span data-ttu-id="098ad-148">如果傳遞為參數的執行個體擁有者不是 Null，則此值會自動繫結為新控制代碼的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="098ad-149">(否則，將不會繫結程序任何執行個體擁有者，即使 DefaultInstanceOwner 已設定)。</span><span class="sxs-lookup"><span data-stu-id="098ad-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span></span></summary>
        <returns><span data-ttu-id="098ad-150">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-150">The instance handle.</span></span> <span data-ttu-id="098ad-151">Null 值表示新控制代碼不應自動繫結至執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner * Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle (owner, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="098ad-152">表示執行個體擁有者的 InstanceOwner 物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-152">An InstanceOwner object  that represents the owner of an instance.</span></span> <span data-ttu-id="098ad-153">傳遞 Null 做為這個參數的值，表示新控制代碼不應自動繫結至執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span></span></param>
        <param name="instanceId"><span data-ttu-id="098ad-154">執行個體識別碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-154">An instance identifier.</span></span> <span data-ttu-id="098ad-155">不得為 Guid.Empty。</span><span class="sxs-lookup"><span data-stu-id="098ad-155">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="098ad-156">建立執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-156">Creates an instance handle.</span></span> <span data-ttu-id="098ad-157">如果傳遞為參數的執行個體擁有者不是 Null，則此值會自動繫結為新控制代碼的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="098ad-158">(否則，將不會繫結程序任何執行個體擁有者，即使 DefaultInstanceOwner 已設定)。傳遞為參數的執行個體識別碼會自動繫結為新控制代碼的執行個體。</span><span class="sxs-lookup"><span data-stu-id="098ad-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="098ad-159">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-159">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceOwner with get, set" Usage="System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="098ad-160">取得或設定預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-160">Gets or sets the default instance owner.</span></span></summary>
        <value><span data-ttu-id="098ad-161">預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-161">The default instance owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-162">有些主機會讀取這個屬性以推斷要使用的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="098ad-163">WorkflowApplication 可使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="098ad-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="098ad-164">WorkflowServiceHost 不會使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="098ad-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="098ad-165">不再需要 DefaultInstanceOwner 屬性時，必須將該屬性設定為 null。</span><span class="sxs-lookup"><span data-stu-id="098ad-165">The DefaultInstanceOwner propery must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="098ad-166">如果 DefaultInstanceOwner 不是 null，InstanceStore 物件可能無法由記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="098ad-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="098ad-167">即使這個方法會宣告為`virtual`而非`abstract`，沒有任何實作。</span><span class="sxs-lookup"><span data-stu-id="098ad-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="098ad-168">必須覆寫這個方法，以便提供的功能。</span><span class="sxs-lookup"><span data-stu-id="098ad-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="098ad-169">運算的結果。</span><span class="sxs-lookup"><span data-stu-id="098ad-169">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="098ad-170">結束非同步作業。</span><span class="sxs-lookup"><span data-stu-id="098ad-170">Ends the asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="098ad-171">表示命令成功完成後之執行個體已知狀態的 InstanceView 物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-172">如果 BeginExecute 是在交易下呼叫，這個狀態可能包含未認可資料。</span><span class="sxs-lookup"><span data-stu-id="098ad-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="098ad-173">一旦異動認可成功，InstanceView 物件中的資料可視為已認可。</span><span class="sxs-lookup"><span data-stu-id="098ad-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTryCommand : IAsyncResult -&gt; bool&#xA;override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="instanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="098ad-174">運算的結果。</span><span class="sxs-lookup"><span data-stu-id="098ad-174">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="098ad-175">結束非同步作業。</span><span class="sxs-lookup"><span data-stu-id="098ad-175">Ends an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="098ad-176">如果不支援傳遞至 BeginTryCommand 方法的命令，持續性提供者實作應傳回 false。</span><span class="sxs-lookup"><span data-stu-id="098ad-176">A persistence provider implementation should return false if it doesn't support the command passed to the BeginTryCommand method.</span></span> <span data-ttu-id="098ad-177">否則應傳回 true 或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="098ad-177">Otherwise it should return true or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="098ad-178">即使這個方法會宣告為`virtual`而非`abstract`，沒有任何實作。</span><span class="sxs-lookup"><span data-stu-id="098ad-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="098ad-179">必須覆寫這個方法，以便提供的功能。</span><span class="sxs-lookup"><span data-stu-id="098ad-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForEvents : IAsyncResult -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.EndWaitForEvents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="098ad-180">透過 Begin 方法交給用戶端的 IAsyncResult 物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-180">An IAsyncResult object that was handed over to the client by the Begin method.</span></span></param>
        <summary><span data-ttu-id="098ad-181">結束由 <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法啟始的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="098ad-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="098ad-182">傳回 <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 物件的清單。</span><span class="sxs-lookup"><span data-stu-id="098ad-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.Execute (handle, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="098ad-183">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-183">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="098ad-184">要執行的命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-184">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="098ad-185">作業的逾時值。</span><span class="sxs-lookup"><span data-stu-id="098ad-185">The timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="098ad-186">以同步方式執行持續性命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-186">Executes a persistence command synchronously.</span></span> <span data-ttu-id="098ad-187">持續性命令的範例包含：<see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> 和 <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />。</span><span class="sxs-lookup"><span data-stu-id="098ad-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="098ad-188">表示命令成功完成後之執行個體已知狀態的 InstanceView 物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span></span>  <span data-ttu-id="098ad-189">如果 Execute 是在異動下呼叫，這個狀態可能包含未認可資料。</span><span class="sxs-lookup"><span data-stu-id="098ad-189">If Execute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="098ad-190">一旦交易認可成功，InstanceView 物件中的資料可視為已認可。</span><span class="sxs-lookup"><span data-stu-id="098ad-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-191">主機會呼叫 <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> 方法，對執行個體控制代碼執行持續性命令，而該控制代碼會由主機叫用 <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 方法而取得。</span><span class="sxs-lookup"><span data-stu-id="098ad-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="098ad-192">執行個體控制代碼可繫結至表示命令內容和目標的實體，例如執行個體、執行個體擁有者或執行個體鎖定。</span><span class="sxs-lookup"><span data-stu-id="098ad-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="098ad-193">一次只能針對一個執行個體控制代碼發出一個指令。</span><span class="sxs-lookup"><span data-stu-id="098ad-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="098ad-194">如果這個方法執行<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>，它會建立<xref:System.Runtime.DurableInstancing.InstanceOwner>並將它繫結至執行個體。</span><span class="sxs-lookup"><span data-stu-id="098ad-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="098ad-195">這表示沒有其他處理序能夠存取該工作流程;如果在程序結束時，就無法復原或執行工作流程。</span><span class="sxs-lookup"><span data-stu-id="098ad-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="098ad-196">如果這類工作流程會執行一次，<xref:System.Runtime.DurableInstancing.InstanceLockedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="098ad-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="098ad-197">如果<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>是未使用，執行個體存放區會建立暫存<xref:System.Runtime.DurableInstancing.InstanceOwner>，將會在程序結束時刪除。</span><span class="sxs-lookup"><span data-stu-id="098ad-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="098ad-198">不過，如果在程序結束之前的工作流程的最後持續點，此例外狀況，除非這段期間中指定**HostLockRenewalPeriod**參數已過期。</span><span class="sxs-lookup"><span data-stu-id="098ad-198">However, if the process ends before the workflow's final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.GetEvents : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent[]" Usage="instanceStore.GetEvents owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="098ad-199">表示執行個體擁有者的 <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span></span></param>
        <summary><span data-ttu-id="098ad-200">取得繫結至 <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> 物件的所有信號事件。</span><span class="sxs-lookup"><span data-stu-id="098ad-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span></span></summary>
        <returns><span data-ttu-id="098ad-201">傳回 <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="098ad-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceOwners : unit -&gt; System.Runtime.DurableInstancing.InstanceOwner[]" Usage="instanceStore.GetInstanceOwners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="098ad-202">取得每一個已繫結至有效執行個體控制代碼、或尚未由記憶體回收的 InstanceOwner 物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span></span></summary>
        <returns><span data-ttu-id="098ad-203">執行個體的擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-203">The owner of the instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-204">傳回 InstanceOwner 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="098ad-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="abstract member OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit&#xA;override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="instanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="098ad-205">釋放的執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-205">The instance handle that was freed.</span></span></param>
        <param name="userContext"><span data-ttu-id="098ad-206">從 OnNewInstanceHandle 傳回持續性提供者的使用者內容資訊，如果未覆寫 OnNewInstanceHandle，則為 Null。</span><span class="sxs-lookup"><span data-stu-id="098ad-206">The persistence provider's user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span></span></param>
        <summary><span data-ttu-id="098ad-207">釋放執行個體控制代碼時叫用。</span><span class="sxs-lookup"><span data-stu-id="098ad-207">Invoked when an instance handle is freed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="abstract member OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj&#xA;override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="instanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="098ad-208">執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-208">An instance handle.</span></span></param>
        <summary><span data-ttu-id="098ad-209">新執行個體控制代碼建立時叫用。</span><span class="sxs-lookup"><span data-stu-id="098ad-209">Invoked when a new instance handle is created.</span></span></summary>
        <returns><span data-ttu-id="098ad-210">物件。</span><span class="sxs-lookup"><span data-stu-id="098ad-210">An object.</span></span>  <span data-ttu-id="098ad-211">當使用控制代碼執行命令且控制代碼已釋放時，這個使用者內容物件將提供給持續性提供者使用。</span><span class="sxs-lookup"><span data-stu-id="098ad-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ResetEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.ResetEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="098ad-212">較早收到信號而且要重設的持續性事件。</span><span class="sxs-lookup"><span data-stu-id="098ad-212">The persistence event that was signaled earlier and to be reset.</span></span></param>
        <param name="owner"><span data-ttu-id="098ad-213">與持續性事件相關聯的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-213">The instance owner associated with the persistence event.</span></span></param>
        <summary><span data-ttu-id="098ad-214">重設信號事件，並從執行個體擁有者維護的信號事件清單中移除事件。</span><span class="sxs-lookup"><span data-stu-id="098ad-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.SignalEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.SignalEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="098ad-215">要收到信號的持續性事件。</span><span class="sxs-lookup"><span data-stu-id="098ad-215">The persistence event to be signaled.</span></span></param>
        <param name="owner"><span data-ttu-id="098ad-216">執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="098ad-216">The instance owner.</span></span></param>
        <summary><span data-ttu-id="098ad-217">執行個體存放區會叫用這個方法以對事件發出信號。</span><span class="sxs-lookup"><span data-stu-id="098ad-217">An instance store invokes this method to signal an event.</span></span> <span data-ttu-id="098ad-218">訂閱這個持續性事件的工作流程主機會收到信號，並執行適當的動作。</span><span class="sxs-lookup"><span data-stu-id="098ad-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool&#xA;override this.TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool" Usage="instanceStore.TryCommand (context, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="098ad-219">執行個體內容。</span><span class="sxs-lookup"><span data-stu-id="098ad-219">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="098ad-220">要執行的命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-220">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="098ad-221">作業的逾時值。</span><span class="sxs-lookup"><span data-stu-id="098ad-221">Timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="098ad-222">持續性提供者會實作這個方法，如此可決定是否可以執行特定的持續性命令，以及是否能夠以非同步方式執行可執行的命令。</span><span class="sxs-lookup"><span data-stu-id="098ad-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span></span></summary>
        <returns><span data-ttu-id="098ad-223">若不支援傳遞為參數的命令，則持續性提供者實作應傳回 <see langword="false" />；否則應傳回 <see langword="true" /> 或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="098ad-223">A persistence provider implementation should return <see langword="false" /> if it doesn't support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="098ad-224">如果命令可以執行，持續性提供者可以在 <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> 上呼叫相關的方法，以提供命令的結果。</span><span class="sxs-lookup"><span data-stu-id="098ad-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.WaitForEvents (handle, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="098ad-225">已繫結至事件的執行個體控制代碼。</span><span class="sxs-lookup"><span data-stu-id="098ad-225">The instance handle that is bound to the event.</span></span></param>
        <param name="timeout"><span data-ttu-id="098ad-226">等候作業逾時之後的時間範圍。</span><span class="sxs-lookup"><span data-stu-id="098ad-226">The time span after which the waiting operation times out.</span></span></param>
        <summary><span data-ttu-id="098ad-227">工作流程主機通常會叫用這個方法，等候事件收到信號。</span><span class="sxs-lookup"><span data-stu-id="098ad-227">A workflow host typically invokes this method to wait for an event to be signaled.</span></span></summary>
        <returns><span data-ttu-id="098ad-228"><see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 物件的清單。</span><span class="sxs-lookup"><span data-stu-id="098ad-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>