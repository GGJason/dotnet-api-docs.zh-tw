<Type Name="InstancePersistenceCommand" FullName="System.Runtime.DurableInstancing.InstancePersistenceCommand">
  <TypeSignature Language="C#" Value="public abstract class InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstancePersistenceCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstancePersistenceCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceCommand abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="87919-101">所有持續性相關命令的基底類別。</span><span class="sxs-lookup"><span data-stu-id="87919-101">Base class for all persistence related commands.</span></span> <span data-ttu-id="87919-102">命令可由其名稱辨別。</span><span class="sxs-lookup"><span data-stu-id="87919-102">Commands are distinguished by their Name.</span></span> <span data-ttu-id="87919-103">通常，命令也可由其衍生型別辨別。</span><span class="sxs-lookup"><span data-stu-id="87919-103">Usually commands can also be distinguished by their derived type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstancePersistenceCommand (System.Xml.Linq.XName name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.#ctor(System.Xml.Linq.XName)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As XName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstancePersistenceCommand(System::Xml::Linq::XName ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="87919-104">命令的 XName (命名空間和名稱的結合)。</span><span class="sxs-lookup"><span data-stu-id="87919-104">The XName (the combination of namespace and name) of the command.</span></span></param>
        <summary><span data-ttu-id="87919-105">初始化 <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="87919-105">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected internal virtual bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property AutomaticallyAcquiringLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AutomaticallyAcquiringLock { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87919-106">表示命令是否可以嘗試取得執行個體上的鎖定。</span><span class="sxs-lookup"><span data-stu-id="87919-106">Indicates whether the command could attempt to acquire a lock on the instance.</span></span></summary>
        <value>
          <span data-ttu-id="87919-107">如果命令會取得執行個體上的鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="87919-107"><see langword="true" /> if the command acquires a lock on the instance;, otherwise <see langword="false" />.</span></span> <span data-ttu-id="87919-108">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="87919-108">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87919-109">命令類別，衍生自這個類別可以覆寫此屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="87919-109">The command classes that derive from this class can override this property to set it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsTransactionEnlistmentOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsTransactionEnlistmentOptional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87919-110">傳回值，這個值表示執行這個命令時，持續性提供者是否可以選擇不登記環境異動 (Transaction.Currnet)。</span><span class="sxs-lookup"><span data-stu-id="87919-110">Returns a value that indicates whether the persistence provider may choose not to enlist in the ambient transaction (Transaction.Currnet) when executing this command.</span></span></summary>
        <value>
          <span data-ttu-id="87919-111">如果這個命令之交易中的登記是選擇項，則為 <see langword="True" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="87919-111"><see langword="True" /> if enlisting in the transaction is optional for this command, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87919-112">命令類別，衍生自這個類別可以覆寫此屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="87919-112">The command classes that derive from this class can override this property to set it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87919-113">取得持續性命令的名稱。</span><span class="sxs-lookup"><span data-stu-id="87919-113">Gets the name of the persistence command.</span></span></summary>
        <value><span data-ttu-id="87919-114">XName (命名空間和名稱的結合)。</span><span class="sxs-lookup"><span data-stu-id="87919-114">An XName (the combination of namespace and name).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected internal virtual void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Validate (view As InstanceView)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Validate(System::Runtime::DurableInstancing::InstanceView ^ view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view"><span data-ttu-id="87919-115">表示執行個體控制代碼目前狀態的 <see cref="T:System.Runtime.DurableInstancing.InstanceView" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="87919-115">An <see cref="T:System.Runtime.DurableInstancing.InstanceView" /> object representing the current state of the instance handle.</span></span></param>
        <summary><span data-ttu-id="87919-116">驗證命令。</span><span class="sxs-lookup"><span data-stu-id="87919-116">Validates the command.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87919-117">命令會覆寫 Validate 以確保命令目前是有效可執行的。</span><span class="sxs-lookup"><span data-stu-id="87919-117">Commands override Validate to ensure that a command is valid to execute at the current time.</span></span> <span data-ttu-id="87919-118">如果命令無效，無法針對傳遞做為參數的 InstanceView 執行命令，實作應擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="87919-118">Implementations should throw an InvalidOperationException if the command is not valid to execute against the InstanceView passed as a parameter.</span></span>  <span data-ttu-id="87919-119">命令傳遞至 InstanceStore.TryCommand 前，Validate 方法會由 InstanceStore 呼叫。</span><span class="sxs-lookup"><span data-stu-id="87919-119">The Validate method is called by InstanceStore before the command is passed to InstanceStore.TryCommand.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>