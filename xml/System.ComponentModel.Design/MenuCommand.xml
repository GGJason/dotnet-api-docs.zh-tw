<Type Name="MenuCommand" FullName="System.ComponentModel.Design.MenuCommand">
  <TypeSignature Language="C#" Value="public class MenuCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuCommand" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="41ecd-101">表示 Windows 功能表或工具列命令項目。</span><span class="sxs-lookup"><span data-stu-id="41ecd-101">Represents a Windows menu or toolbar command item.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ecd-102"><xref:System.ComponentModel.Design.MenuCommand>類別代表 Windows 功能表或工具列命令的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="41ecd-102">The <xref:System.ComponentModel.Design.MenuCommand> class represents information about a Windows menu or toolbar command.</span></span> <span data-ttu-id="41ecd-103"><xref:System.ComponentModel.Design.IMenuCommandService>介面可讓您新增<xref:System.ComponentModel.Design.MenuCommand>Visual Studio 功能表上的物件。</span><span class="sxs-lookup"><span data-stu-id="41ecd-103">The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add <xref:System.ComponentModel.Design.MenuCommand> objects to the Visual Studio menu.</span></span>  
  
 <span data-ttu-id="41ecd-104">這個類別會提供下列成員：</span><span class="sxs-lookup"><span data-stu-id="41ecd-104">This class provides the following members:</span></span>  
  
-   <span data-ttu-id="41ecd-105">您可以將附加命令的事件處理常式的事件處理常式屬性。</span><span class="sxs-lookup"><span data-stu-id="41ecd-105">An event-handler property to which you can attach an event handler for the command.</span></span>  
  
-   <span data-ttu-id="41ecd-106">A<xref:System.ComponentModel.Design.CommandID>唯一識別命令的屬性。</span><span class="sxs-lookup"><span data-stu-id="41ecd-106">A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command.</span></span>  
  
-   <span data-ttu-id="41ecd-107"><xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>執行命令的方法。</span><span class="sxs-lookup"><span data-stu-id="41ecd-107">An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command.</span></span>  
  
-   <span data-ttu-id="41ecd-108"><xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A>就可以覆寫處理選取新的命令時，就會發生此事件的方法。</span><span class="sxs-lookup"><span data-stu-id="41ecd-108">An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected.</span></span>  
  
-   <span data-ttu-id="41ecd-109">布林值旗標狀態，以指出命令是否<xref:System.ComponentModel.Design.MenuCommand.Checked%2A>， <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>， <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>，或<xref:System.ComponentModel.Design.MenuCommand.Visible%2A>。</span><span class="sxs-lookup"><span data-stu-id="41ecd-109">Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.</span></span>  
  
-   <span data-ttu-id="41ecd-110"><xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A>屬性，指出 OLE 命令命令的狀態碼。</span><span class="sxs-lookup"><span data-stu-id="41ecd-110">An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command.</span></span>  
  
-   <span data-ttu-id="41ecd-111">覆寫<xref:System.ComponentModel.Design.MenuCommand.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="41ecd-111">An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ecd-112">下列程式碼範例會建立<xref:System.ComponentModel.Design.MenuCommand>物件，會設定其屬性，並將它加入至<xref:System.ComponentModel.Design.IMenuCommandService>。</span><span class="sxs-lookup"><span data-stu-id="41ecd-112">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 <span data-ttu-id="41ecd-113">建立的執行個體`Component1`類別在表單上，並在設計環境類似 Visual Studio 中開啟表單。</span><span class="sxs-lookup"><span data-stu-id="41ecd-113">Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio.</span></span> <span data-ttu-id="41ecd-114">按下 F1 鍵，要叫用<xref:System.ComponentModel.Design.MenuCommand>。</span><span class="sxs-lookup"><span data-stu-id="41ecd-114">Press the F1 key to invoke the <xref:System.ComponentModel.Design.MenuCommand>.</span></span>  
  
 [!code-cpp[MenuCommand Example#10](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#10)]
 [!code-csharp[MenuCommand Example#10](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#10)]
 [!code-vb[MenuCommand Example#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="41ecd-115">系統資源的完整存取權。</span><span class="sxs-lookup"><span data-stu-id="41ecd-115">for full access to system resources.</span></span> <span data-ttu-id="41ecd-116">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />， <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-116">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="41ecd-117">相關聯的狀態：</span><span class="sxs-lookup"><span data-stu-id="41ecd-117">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
    <altmember cref="T:System.ComponentModel.Design.IMenuCommandService" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.EventHandler handler, class System.ComponentModel.Design.CommandID command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As EventHandler, command As CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuCommand(EventHandler ^ handler, System::ComponentModel::Design::CommandID ^ command);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler" />
        <Parameter Name="command" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="41ecd-118">當使用者選取功能表項目或工具列按鈕時，所引發的事件。</span><span class="sxs-lookup"><span data-stu-id="41ecd-118">The event to raise when the user selects the menu item or toolbar button.</span></span></param>
        <param name="command"><span data-ttu-id="41ecd-119">唯一命令 ID，連結這個功能表命令到環境的功能表。</span><span class="sxs-lookup"><span data-stu-id="41ecd-119">The unique command ID that links this menu command to the environment's menu.</span></span></param>
        <summary><span data-ttu-id="41ecd-120">初始化 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="41ecd-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommand" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41ecd-121">下列程式碼範例會建立<xref:System.ComponentModel.Design.MenuCommand>物件，會設定其屬性，並將它加入至<xref:System.ComponentModel.Design.IMenuCommandService>物件。</span><span class="sxs-lookup"><span data-stu-id="41ecd-121">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IMenuCommandService" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public virtual bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-122">取得或設定值，表示是否檢查這個功能表項目。</span><span class="sxs-lookup"><span data-stu-id="41ecd-122">Gets or sets a value indicating whether this menu item is checked.</span></span></summary>
        <value>
          <span data-ttu-id="41ecd-123">如果項目已經核取，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-123"><see langword="true" /> if the item is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CommandChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CommandChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CommandChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CommandChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-124">發生於功能表命令變更時。</span><span class="sxs-lookup"><span data-stu-id="41ecd-124">Occurs when the menu command changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ecd-125">如果已檢查或停用，可以變更命令。</span><span class="sxs-lookup"><span data-stu-id="41ecd-125">A command can change if it becomes checked or disabled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandID">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.CommandID CommandID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.CommandID CommandID" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.CommandID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommandID As CommandID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::CommandID ^ CommandID { System::ComponentModel::Design::CommandID ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-126">取得與這個功能表命令相關的 <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-126">Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> associated with this menu command.</span></span></summary>
        <value><span data-ttu-id="41ecd-127">與功能表命令相關的 <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-127">The <see cref="T:System.ComponentModel.Design.CommandID" /> associated with the menu command.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-128">取得值，表示是否可以使用這個功能表項目。</span><span class="sxs-lookup"><span data-stu-id="41ecd-128">Gets a value indicating whether this menu item is available.</span></span></summary>
        <value>
          <span data-ttu-id="41ecd-129">如果項目是啟用的，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-129"><see langword="true" /> if the item is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41ecd-130">下列程式碼範例會建立<xref:System.ComponentModel.Design.MenuCommand>物件，會設定其屬性，並將它加入至<xref:System.ComponentModel.Design.IMenuCommandService>。</span><span class="sxs-lookup"><span data-stu-id="41ecd-130">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41ecd-131">叫用命令。</span><span class="sxs-lookup"><span data-stu-id="41ecd-131">Invokes the command.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41ecd-132">叫用命令。</span><span class="sxs-lookup"><span data-stu-id="41ecd-132">Invokes the command.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invoke (arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invoke(System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg"><span data-ttu-id="41ecd-133">命令所使用的選擇性引數。</span><span class="sxs-lookup"><span data-stu-id="41ecd-133">An optional argument for use by the command.</span></span></param>
        <summary><span data-ttu-id="41ecd-134">叫用具有指定參數的命令。</span><span class="sxs-lookup"><span data-stu-id="41ecd-134">Invokes the command with the given parameter.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="41ecd-135">這個方法的預設實作會忽略<paramref name="arg" />，但衍生類別可能會覆寫這個方法，並使用它。</span><span class="sxs-lookup"><span data-stu-id="41ecd-135">The default implementation of this method ignores <paramref name="arg" />, but deriving classes may override this method and use it.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OleStatus">
      <MemberSignature Language="C#" Value="public virtual int OleStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OleStatus" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.OleStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OleStatus As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OleStatus { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-136">取得這個功能表項目的 OLE 命令狀態程式碼。</span><span class="sxs-lookup"><span data-stu-id="41ecd-136">Gets the OLE command status code for this menu item.</span></span></summary>
        <value><span data-ttu-id="41ecd-137">整數，含有反映這個功能表項目狀態之狀態旗標的混合。</span><span class="sxs-lookup"><span data-stu-id="41ecd-137">An integer containing a mixture of status flags that reflect the state of this menu item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCommandChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommandChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommandChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommandChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="41ecd-138">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-138">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="41ecd-139">引發 <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="41ecd-139">Raises the <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ecd-140">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="41ecd-140">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="41ecd-141">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="41ecd-141">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="41ecd-142"><xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="41ecd-142">The <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="41ecd-143">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="41ecd-143">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="41ecd-144">在覆寫<see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="41ecd-144">When overriding <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-145">取得與 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 關聯的公用屬性。</span><span class="sxs-lookup"><span data-stu-id="41ecd-145">Gets the public properties associated with the <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span></span></summary>
        <value><span data-ttu-id="41ecd-146"><see cref="T:System.Collections.IDictionary" />，包含 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 的公用屬性。</span><span class="sxs-lookup"><span data-stu-id="41ecd-146">An <see cref="T:System.Collections.IDictionary" /> containing the public properties of the <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ecd-147">所有的功能表命令儲存中的公用屬性<xref:System.ComponentModel.Design.MenuCommand.Properties%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="41ecd-147">All menu commands store their public properties in the <xref:System.ComponentModel.Design.MenuCommand.Properties%2A> collection.</span></span> <span data-ttu-id="41ecd-148">屬性字典中的索引鍵是屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="41ecd-148">The key in the properties dictionary is the property name.</span></span> <span data-ttu-id="41ecd-149">這允許一般列舉的屬性，並提供一致的基底，從中可新增新的屬性而不需修改類別定義。</span><span class="sxs-lookup"><span data-stu-id="41ecd-149">This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supported">
      <MemberSignature Language="C#" Value="public virtual bool Supported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Supported" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Supported" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Supported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Supported { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-150">取得或設定值，表示是否支援這個功能表項目。</span><span class="sxs-lookup"><span data-stu-id="41ecd-150">Gets or sets a value indicating whether this menu item is supported.</span></span></summary>
        <value>
          <span data-ttu-id="41ecd-151">如果支援項目 (預設)，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-151"><see langword="true" /> if the item is supported, which is the default; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41ecd-152">下列程式碼範例會建立<xref:System.ComponentModel.Design.MenuCommand>物件，會設定其屬性，並將它加入至<xref:System.ComponentModel.Design.IMenuCommandService>。</span><span class="sxs-lookup"><span data-stu-id="41ecd-152">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41ecd-153">傳回這個功能表命令的字串表示。</span><span class="sxs-lookup"><span data-stu-id="41ecd-153">Returns a string representation of this menu command.</span></span></summary>
        <returns><span data-ttu-id="41ecd-154">包含 <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /> 屬性值的字串，後面附加任何已設定之旗標的名稱，並以 (|) 隔開。</span><span class="sxs-lookup"><span data-stu-id="41ecd-154">A string containing the value of the <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /> property appended with the names of any flags that are set, separated by pipe bars (|).</span></span> <span data-ttu-id="41ecd-155">這些旗標屬性包含 <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" />、<see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" />、<see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /> 和 <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-155">These flag properties include <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Supported" />, and <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41ecd-156">取得或設定值，表示功能表項目是否為可見。</span><span class="sxs-lookup"><span data-stu-id="41ecd-156">Gets or sets a value indicating whether this menu item is visible.</span></span></summary>
        <value>
          <span data-ttu-id="41ecd-157">如果項目為可見的，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="41ecd-157"><see langword="true" /> if the item is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41ecd-158">下列程式碼範例會建立<xref:System.ComponentModel.Design.MenuCommand>物件，會設定其屬性，並將它加入至<xref:System.ComponentModel.Design.IMenuCommandService>。</span><span class="sxs-lookup"><span data-stu-id="41ecd-158">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>