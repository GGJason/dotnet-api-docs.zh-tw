<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d862169c56567e926bc58c0f8ad535e530ee90e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dfe30-101">提供可以讓設計工具存取和篩選 <see cref="T:System.ComponentModel.TypeDescriptor" /> 物件字典的介面，在該物件中儲存了屬性 (Property)、屬性 (Attribute) 甚至是元件設計工具可公開至設計階段環境的事件描述項。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dfe30-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfe30-102"><xref:System.ComponentModel.Design.IDesignerFilter> 可讓設計工具來篩選其相關聯的元件會透過公開的屬性、 屬性和事件描述元組<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="dfe30-103">這個介面的方法名稱開頭為`Pre`稱為名稱開頭為方法之前立即`Post`。</span><span class="sxs-lookup"><span data-stu-id="dfe30-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="dfe30-104">如果您想要加入屬性、 事件或屬性描述項，使用<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dfe30-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="dfe30-105">如果您想要變更或移除屬性、 事件或屬性描述元，使用<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dfe30-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfe30-106">下列範例示範的覆寫<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>，新增屬性在設計工具的 [屬性] 視窗選取設計工具的控制項設計階段時。</span><span class="sxs-lookup"><span data-stu-id="dfe30-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="dfe30-107">請參閱範例的<xref:System.Windows.Forms.Design.ControlDesigner>類別，如完整的設計工具範例會使用<xref:System.ComponentModel.Design.IDesignerFilter>介面。</span><span class="sxs-lookup"><span data-stu-id="dfe30-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="dfe30-108">元件類別的 <see cref="T:System.Attribute" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="dfe30-109">屬性字典中索引鍵為屬性的 <see cref="P:System.Attribute.TypeId" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfe30-110">在衍生類別中覆寫時，允許設計工具可以變更或移除透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 所公開之屬性集中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfe30-111">這個方法可用來變更或移除字典中的實作這個介面設計工具關聯的元件會透過公開的屬性項目<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="dfe30-112">屬性的字典中的索引鍵是屬性的類型識別碼。</span><span class="sxs-lookup"><span data-stu-id="dfe30-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="dfe30-113">物件是類型<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="dfe30-114">這個方法之後，立即呼叫<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="dfe30-115">屬性的型別 ID 可以是任何物件。</span><span class="sxs-lookup"><span data-stu-id="dfe30-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="dfe30-116">根據預設，<xref:System.Attribute>傳回其<xref:System.Type>的值作為其<xref:System.Attribute.TypeId%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="dfe30-117">您可以檢查<xref:System.Attribute.TypeId%2A>等價與已知的字典中的屬性<xref:System.Attribute.TypeId%2A>屬性來識別它，或使用<xref:System.Reflection>識別本身的屬性物件。</span><span class="sxs-lookup"><span data-stu-id="dfe30-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="dfe30-118">當屬性具有相同<xref:System.Attribute.TypeId%2A>將元件加入現有或繼承的屬性，新的屬性會取代舊的屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="dfe30-119">對於許多屬性，相同類型的新屬性將會取代任何先前屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="dfe30-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="dfe30-120">不過，某些類型的屬性傳回<xref:System.Attribute.TypeId%2A>，選擇性地區分屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="dfe30-121">例如，若要提供不同類型的同時作用中的設計工具對於類型，例如<xref:System.ComponentModel.Design.IRootDesigner>和<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>類別會傳回<xref:System.Attribute.TypeId%2A>可唯一識別的屬性和基底設計工具型別。</span><span class="sxs-lookup"><span data-stu-id="dfe30-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="dfe30-122"><xref:System.ComponentModel.DesignerAttribute>建構函式可讓您指定特定的類型，除了在設計工具的基底設計工具的型別和<xref:System.ComponentModel.DesignerAttribute>傳回<xref:System.Attribute.TypeId%2A>，以反映此。</span><span class="sxs-lookup"><span data-stu-id="dfe30-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="dfe30-123">因此當您新增新<xref:System.ComponentModel.DesignerAttribute>與設計工具的基底類型，針對現有的基底設計工具的型別相同型別的<xref:System.ComponentModel.DesignerAttribute>，舊的屬性會取代新的屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dfe30-124">
            <para>您可以直接篩選字典可透過存取<paramref name="attributes" />參數，或者您可以將它保留不變。如果您正在覆寫這個方法，請執行您自己的篩選之後呼叫的基底實作。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-124">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="dfe30-125">
            <see cref="T:System.ComponentModel.EventDescriptor" /> 物件，表示元件類別的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-125">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="dfe30-126">事件字典中的索引鍵是事件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-126">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfe30-127">在衍生類別中覆寫時，允許設計工具可以變更或移除透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 所公開之屬性集中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-127">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfe30-128">這個方法可用來變更或移除字典中的公開會透過事件的項目<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-128">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="dfe30-129">中的事件字典的索引鍵是事件的名稱。</span><span class="sxs-lookup"><span data-stu-id="dfe30-129">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="dfe30-130">物件是類型<xref:System.ComponentModel.EventDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-130">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="dfe30-131">這個方法之後，立即呼叫<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-131">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dfe30-132">
            <para>您可以直接篩選字典可透過存取<paramref name="events" />參數，或者您可以將它保留不變。如果您正在覆寫這個方法，請執行您自己的篩選之後呼叫的基底實作。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-132">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="dfe30-133">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件，表示元件類別的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-133">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="dfe30-134">屬性字典中的索引鍵是屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-134">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfe30-135">在衍生類別中覆寫時，允許設計工具可以變更或移除透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 所公開之屬性集中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-135">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfe30-136">這個方法可用來變更或移除的公開會透過屬性字典中的項目<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-136">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="dfe30-137">屬性字典中的索引鍵是屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="dfe30-137">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="dfe30-138">物件是類型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-138">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="dfe30-139">這個方法之後，立即呼叫<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-139">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dfe30-140">
            <para>您可以直接篩選字典可透過存取<paramref name="properties" />參數，或者您可以將它保留不變。如果您正在覆寫這個方法，請執行您自己的篩選之後呼叫的基底實作。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-140">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="dfe30-141">元件類別的 <see cref="T:System.Attribute" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-141">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="dfe30-142">屬性字典中索引鍵為屬性的 <see cref="P:System.Attribute.TypeId" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-142">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfe30-143">在衍生類別中覆寫時，允許設計工具可以將項目加入到透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-143">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfe30-144">這個方法可用來將項目加入至實作這個介面設計工具關聯的元件會透過公開的屬性字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-144">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="dfe30-145">屬性的字典中的索引鍵是屬性的類型識別碼。</span><span class="sxs-lookup"><span data-stu-id="dfe30-145">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="dfe30-146">物件是類型<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-146">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="dfe30-147">這個方法之前，立即呼叫<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-147">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="dfe30-148">屬性的型別 ID 可以是任何物件。</span><span class="sxs-lookup"><span data-stu-id="dfe30-148">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="dfe30-149">根據預設，<xref:System.Attribute>傳回其<xref:System.Type>的值作為其<xref:System.Attribute.TypeId%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-149">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="dfe30-150">您可以檢查<xref:System.Attribute.TypeId%2A>等價與已知的字典中的屬性<xref:System.Attribute.TypeId%2A>屬性來識別它，或使用<xref:System.Reflection>識別本身的屬性物件。</span><span class="sxs-lookup"><span data-stu-id="dfe30-150">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="dfe30-151">當屬性具有相同<xref:System.Attribute.TypeId%2A>將元件加入現有或繼承的屬性，新的屬性會取代舊的屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-151">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="dfe30-152">對於許多屬性，相同類型的新屬性將會取代任何先前屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="dfe30-152">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="dfe30-153">不過，某些類型的屬性傳回<xref:System.Attribute.TypeId%2A>，選擇性地區分屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-153">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="dfe30-154">例如，若要提供不同類型的同時作用中的設計工具對於類型，例如<xref:System.ComponentModel.Design.IRootDesigner>和<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>類別會傳回<xref:System.Attribute.TypeId%2A>可唯一識別的屬性和基底設計工具型別。</span><span class="sxs-lookup"><span data-stu-id="dfe30-154">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="dfe30-155"><xref:System.ComponentModel.DesignerAttribute>建構函式可讓您指定特定的類型，除了在設計工具的基底設計工具的型別和<xref:System.ComponentModel.DesignerAttribute>傳回<xref:System.Attribute.TypeId%2A>，以反映此。</span><span class="sxs-lookup"><span data-stu-id="dfe30-155">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="dfe30-156">因此當您新增新<xref:System.ComponentModel.DesignerAttribute>與設計工具的基底類型，針對現有的基底設計工具的型別相同型別的<xref:System.ComponentModel.DesignerAttribute>，舊的屬性會取代新的屬性。</span><span class="sxs-lookup"><span data-stu-id="dfe30-156">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dfe30-157">
            <para>您可以直接篩選字典可透過存取<paramref name="attributes" />參數，或者您可以將它保留不變。如果您正在覆寫這個方法，請執行您自己的篩選之後呼叫的基底實作。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-157">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="dfe30-158">
            <see cref="T:System.ComponentModel.EventDescriptor" /> 物件，表示元件類別的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-158">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="dfe30-159">事件字典中的索引鍵是事件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-159">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfe30-160">在衍生類別中覆寫時，允許設計工具可以將項目加入到透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的事件集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-160">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfe30-161">這個方法可用來將項目加入至設計工具會透過公開的事件字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-161">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="dfe30-162">中的事件字典的索引鍵是事件的名稱。</span><span class="sxs-lookup"><span data-stu-id="dfe30-162">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="dfe30-163">物件是類型<xref:System.ComponentModel.EventDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-163">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="dfe30-164">這個方法之前，立即呼叫<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-164">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dfe30-165">
            <para>您可以直接修改字典可透過存取<paramref name="events" />參數，或者您可以將它保留不變。如果您正在覆寫這個方法，呼叫基底實作，才能執行您自己的篩選。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-165">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="dfe30-166">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件，表示元件類別的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-166">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="dfe30-167">屬性字典中的索引鍵是屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-167">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfe30-168">在衍生類別中覆寫時，允許設計工具可以將項目加入到透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-168">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfe30-169">這個方法可用來將項目加入至設計工具會透過公開的屬性字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-169">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="dfe30-170">屬性字典中的索引鍵是屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="dfe30-170">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="dfe30-171">物件是類型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-171">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="dfe30-172">這個方法之前，立即呼叫<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>。</span><span class="sxs-lookup"><span data-stu-id="dfe30-172">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dfe30-173">
            <para>您可以直接修改字典可透過存取<paramref name="properties" />參數，或者您可以將它保留不變。如果您正在覆寫這個方法，呼叫基底實作，才能執行您自己的篩選。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dfe30-173">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>