<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="976c49c5d36348692e3a77461d5fbbd4d7aa2874" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48630528" /></Metadata><TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMenuCommandService" />
  <TypeSignature Language="F#" Value="type IMenuCommandService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e23f8-101">提供方法，用來管理可於設計模式中使用的全域設計工具動詞命令和功能表命令，以及顯示捷徑功能表的某些型別。</span><span class="sxs-lookup"><span data-stu-id="e23f8-101">Provides methods to manage the global designer verbs and menu commands available in design mode, and to show some types of shortcut menus.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-102">這個介面會提供方法來：</span><span class="sxs-lookup"><span data-stu-id="e23f8-102">This interface provides methods to:</span></span>  
  
-   <span data-ttu-id="e23f8-103">尋找、 叫用、 新增和移除全域設計工具動詞命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-103">Find, invoke, add and remove global designer verb commands.</span></span>  
  
-   <span data-ttu-id="e23f8-104">尋找、 叫用、 新增和移除標準功能表命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-104">Find, invoke, add and remove standard menu commands.</span></span>  
  
-   <span data-ttu-id="e23f8-105">修改標準功能表命令相關聯的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e23f8-105">Alter the event handlers associated with standard menu commands.</span></span>  
  
-   <span data-ttu-id="e23f8-106">顯示標準命令的捷徑功能表與功能表關聯<xref:System.ComponentModel.Design.CommandID>。</span><span class="sxs-lookup"><span data-stu-id="e23f8-106">Display a shortcut menu of standard commands that is associated with a menu <xref:System.ComponentModel.Design.CommandID>.</span></span>  
  
 <span data-ttu-id="e23f8-107">設計工具動詞命令表示會列出在設計模式中的捷徑功能表的自訂命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-107">Designer verbs represent custom-defined commands that are listed on the shortcut menu in design mode.</span></span> <span data-ttu-id="e23f8-108">設計工具動詞命令可將指定的文字標籤。</span><span class="sxs-lookup"><span data-stu-id="e23f8-108">A designer verb can provide a specified text label.</span></span> <span data-ttu-id="e23f8-109">每個設計工具動詞命令會自動指派一個唯一<xref:System.ComponentModel.Design.CommandID>。</span><span class="sxs-lookup"><span data-stu-id="e23f8-109">Each designer verb is automatically assigned a unique <xref:System.ComponentModel.Design.CommandID>.</span></span> <span data-ttu-id="e23f8-110">設計工具可以提供設計工具動詞命令，透過其<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>屬性，但這些時，才會使用目前選取的設計工具元件。</span><span class="sxs-lookup"><span data-stu-id="e23f8-110">A designer can provide designer verbs through its <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property, but these are only available when the designer's component is currently selected.</span></span> <span data-ttu-id="e23f8-111">全域設計工具動詞命令是可以從設計模式的捷徑功能表，無論所選元件存取的設計工具動詞命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-111">Global designer verbs are designer verb commands that can be accessed from a design-mode shortcut menu regardless of the selected component.</span></span> <span data-ttu-id="e23f8-112">此介面可讓您管理的全域設計模式中可用的設計工具動詞命令集。</span><span class="sxs-lookup"><span data-stu-id="e23f8-112">This interface allows you to manage the set of global designer verbs that are available in design mode.</span></span>  
  
 <span data-ttu-id="e23f8-113">您可以加入全域設計工具動詞命令，使用<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法，而且您可以移除全域設計工具動詞命令，使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-113">You can add a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method, and you can remove a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> method.</span></span> <span data-ttu-id="e23f8-114">您可以叫用設計工具動詞命令，使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法，如果您知道<xref:System.ComponentModel.Design.CommandID>的動詞命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-114">You can invoke a designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method if you know the <xref:System.ComponentModel.Design.CommandID> of the verb.</span></span> <span data-ttu-id="e23f8-115"><xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A>此介面的屬性包含目前的快顯功能表中顯示的設計工具動詞命令集。</span><span class="sxs-lookup"><span data-stu-id="e23f8-115">The <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> property of this interface contains the current set of designer verb commands to display in a shortcut menu.</span></span> <span data-ttu-id="e23f8-116">這組設計工具動詞命令是由所有全域設計工具動詞命令和任何目前所選元件的設計工具提供的任何設計工具動詞命令所組成。</span><span class="sxs-lookup"><span data-stu-id="e23f8-116">This set of designer verb commands consists of all global designer verbs and any designer verbs offered by the designer of any currently selected component.</span></span> <span data-ttu-id="e23f8-117">每次選取或取消選取此選項與供應項目設計工具動詞命令的設計工具的元件時，都會更新此動詞命令集。</span><span class="sxs-lookup"><span data-stu-id="e23f8-117">This set of verbs is updated each time a component with a designer offering designer verb commands is selected or deselected.</span></span>  
  
 <span data-ttu-id="e23f8-118">功能表命令僅限於一組預先定義的標準命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-118">Menu commands are limited to the set of predefined standard commands.</span></span> <span data-ttu-id="e23f8-119">大部分的預先定義的標準命令定義於<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="e23f8-119">Most of the predefined standard commands are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations.</span></span> <span data-ttu-id="e23f8-120">您可以新增、 移除及叫用功能表命令和搜尋功能表命令已加入至功能表，使用這個介面的方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-120">You can add, remove, and invoke menu commands, and search for menu commands that have been added to a menu using methods of this interface.</span></span>  
  
 <span data-ttu-id="e23f8-121">您可以使用標準功能表命令新增<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法，並移除標準功能表命令，使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-121">You can add a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method, and remove a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method.</span></span> <span data-ttu-id="e23f8-122">您可以將事件處理常式附加至預先定義的標準功能表命令依照文件中詳述的程序<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-122">You can attach an event handler to a predefined standard menu command by following the procedure detailed in the documentation for the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method.</span></span> <span data-ttu-id="e23f8-123">您可以擷取的功能表命令<xref:System.ComponentModel.Design.CommandID>如果它尚未加入至功能表使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-123">You can retrieve a menu command by <xref:System.ComponentModel.Design.CommandID> if it has been added to a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method.</span></span> <span data-ttu-id="e23f8-124">您可以叫用功能表命令或設計工具動詞命令<xref:System.ComponentModel.Design.CommandID>使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-124">You can invoke a menu command or designer verb command by <xref:System.ComponentModel.Design.CommandID> using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e23f8-125">嘗試加入功能表命令與現有<xref:System.ComponentModel.Design.CommandID>將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e23f8-125">An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e23f8-126">當新增功能表命令時，務必檢查，尚不需功能表使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用更聰明地處理的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e23f8-126">When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e23f8-127">功能表命令加入功能表中，還有其<xref:System.ComponentModel.Design.MenuCommand.Visible%2A>或是<xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>屬性設為`false`。</span><span class="sxs-lookup"><span data-stu-id="e23f8-127">A menu command can be added to a menu, and have its <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> or <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> properties set to `false`.</span></span> <span data-ttu-id="e23f8-128">如果您以視覺化方式找不到已加入的功能表的功能表命令，其中一個屬性可能具有已設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="e23f8-128">If you cannot visually locate a menu command that has been added on a menu, one of these properties may have been set to `false`.</span></span>  
  
 <span data-ttu-id="e23f8-129">您可以顯示包含功能表命令，在指定的位置，使用某些標準的快顯功能表<xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-129">You can show certain standard shortcut menus containing menu commands at a specified location using the <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> method.</span></span> <span data-ttu-id="e23f8-130">這個方法的文件包含一個表格，列出指定有效的選單，以顯示之命令識別碼。</span><span class="sxs-lookup"><span data-stu-id="e23f8-130">The documentation for this method contains a table listing the command IDs that specify the valid menus to show.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e23f8-131">此範例示範如何使用<xref:System.ComponentModel.Design.IMenuCommandService>新增<xref:System.ComponentModel.Design.MenuCommand>。</span><span class="sxs-lookup"><span data-stu-id="e23f8-131">This example demonstrates using the <xref:System.ComponentModel.Design.IMenuCommandService> to add a <xref:System.ComponentModel.Design.MenuCommand>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="e23f8-132">要加入的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-132">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</span></span></param>
        <summary><span data-ttu-id="e23f8-133">將指定的標準功能表命令加入至功能表。</span><span class="sxs-lookup"><span data-stu-id="e23f8-133">Adds the specified standard menu command to the menu.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-134"><xref:System.Windows.Forms.Design.MenuCommands>並<xref:System.ComponentModel.Design.StandardCommands>列舉型別包含<xref:System.ComponentModel.Design.CommandID>識別碼的預先定義的標準命令和功能表命令已與相關聯的特定功能表上的位置。</span><span class="sxs-lookup"><span data-stu-id="e23f8-134">The <xref:System.Windows.Forms.Design.MenuCommands> and <xref:System.ComponentModel.Design.StandardCommands> enumerations contain <xref:System.ComponentModel.Design.CommandID> identifiers for predefined standard commands and menu commands that are already associated with a location on a particular menu.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e23f8-135">嘗試加入功能表命令與現有<xref:System.ComponentModel.Design.CommandID>將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e23f8-135">An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e23f8-136">當新增功能表命令時，務必檢查，尚不需功能表使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用更聰明地處理的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e23f8-136">When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.</span></span>  
  
 <span data-ttu-id="e23f8-137">您可以將事件處理常式附加至預先定義的功能表命令，使用下列程序：</span><span class="sxs-lookup"><span data-stu-id="e23f8-137">You can attach an event handler to a predefined menu command with the following procedure:</span></span>  
  
1.  <span data-ttu-id="e23f8-138">如果要連結的事件處理常式的功能表命令加入功能表，或位於與<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法，請考慮是否要更新版本中，還原此功能表命令，以及是否要叫用目前的事件處理常式中，從新的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e23f8-138">If the menu command to link with an event handler has been added to a menu, or is located with the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, consider whether you wish to restore this menu command later, and whether you want to invoke the current event handler from your new event handler.</span></span> <span data-ttu-id="e23f8-139">如果功能表命令或鏈結的事件處理常式的引動過程，可能會還原您的程式碼，請務必儲存某處的功能表命令的參考。</span><span class="sxs-lookup"><span data-stu-id="e23f8-139">If your code might restore the menu command or chain the invocation of event handlers, be sure to store a reference to the menu command somewhere.</span></span>  
  
2.  <span data-ttu-id="e23f8-140">確定任何先前已存在的功能表命令具有相同<xref:System.ComponentModel.Design.CommandID>已經移除了功能表使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-140">Ensure that any previously existing menu command with the same <xref:System.ComponentModel.Design.CommandID> has been removed from the menu using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method.</span></span>  
  
3.  <span data-ttu-id="e23f8-141">建立新<xref:System.ComponentModel.Design.MenuCommand>並指定事件處理常式的建構函式，連同<xref:System.ComponentModel.Design.CommandID>代表新增的命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-141">Create a new <xref:System.ComponentModel.Design.MenuCommand> and specify your event handler in the constructor, along with a <xref:System.ComponentModel.Design.CommandID> representing the command to add.</span></span> <span data-ttu-id="e23f8-142">每個標準功能表命令會新增至預先定義的功能表位置相關聯。</span><span class="sxs-lookup"><span data-stu-id="e23f8-142">Each standard menu command is associated with a predefined menu location where it is added to.</span></span> <span data-ttu-id="e23f8-143">支援的命令識別碼中所定義<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="e23f8-143">The supported command IDs are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations.</span></span>  
  
4.  <span data-ttu-id="e23f8-144">如果您想要叫用任何預先存在的事件處理常式，功能表命令，呼叫<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>您已取代會處理功能表命令的叫用事件的事件處理常式從功能表的功能表命令的方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-144">If you want to invoke any preexisting event handler for the menu command, call the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the menu command you have replaced on the menu from the event handler that handles the invoke event of your menu command.</span></span>  
  
5.  <span data-ttu-id="e23f8-145">如果您想要在還原中預先存在的功能表命令，您已取代的事件處理常式，加入已儲存時，預先存在的功能表命令，移除取代功能表命令之後建立。</span><span class="sxs-lookup"><span data-stu-id="e23f8-145">If you are interested in restoring the event handler of a preexisting menu command that you have replaced, add the stored, preexisting menu command after you remove the replacement menu command you created.</span></span> <span data-ttu-id="e23f8-146">您可能想要新增此行為，以`Dispose`您類型的方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-146">You may want to add this behavior to the `Dispose` method for your type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e23f8-147">指定之 <see cref="T:System.ComponentModel.Design.CommandID" /> 的 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 已經出現在功能表上。</span><span class="sxs-lookup"><span data-stu-id="e23f8-147">The <see cref="T:System.ComponentModel.Design.CommandID" /> of the specified <see cref="T:System.ComponentModel.Design.MenuCommand" /> is already present on a menu.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="e23f8-148">要加入的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-148">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</span></span></param>
        <summary><span data-ttu-id="e23f8-149">加入指定的設計工具動詞命令至全域設計工具動詞命令集。</span><span class="sxs-lookup"><span data-stu-id="e23f8-149">Adds the specified designer verb to the set of global designer verbs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-150">元件，提供設計工具動詞命令的設計人員應該使用<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>其設計工具，而不是呼叫此方法的屬性。</span><span class="sxs-lookup"><span data-stu-id="e23f8-150">Designers of components that provide designer verbs should use the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of their designer rather than calling this method.</span></span> <span data-ttu-id="e23f8-151">這個方法會將全域的設計工具動詞命令，可以從設計模式，不論目前選取的元件中以滑鼠右鍵按一下捷徑功能表存取。</span><span class="sxs-lookup"><span data-stu-id="e23f8-151">This method adds a global designer verb that can be accessed from the right-click shortcut menu in design mode regardless of the currently selected component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="iMenuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="e23f8-152">要搜尋的 <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-152">The <see cref="T:System.ComponentModel.Design.CommandID" /> to search for.</span></span></param>
        <summary><span data-ttu-id="e23f8-153">搜尋指定的命令 ID，並傳回與它相關聯的功能表命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-153">Searches for the specified command ID and returns the menu command associated with it.</span></span></summary>
        <returns><span data-ttu-id="e23f8-154">與這個命令 ID 相關連的 <see cref="T:System.ComponentModel.Design.MenuCommand" />，或 <see langword="null" /> (如果找不到命令)。</span><span class="sxs-lookup"><span data-stu-id="e23f8-154">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the command ID, or <see langword="null" /> if no command is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="iMenuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="e23f8-155">要搜尋和執行之命令的 <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-155">The <see cref="T:System.ComponentModel.Design.CommandID" /> of the command to search for and execute.</span></span></param>
        <summary><span data-ttu-id="e23f8-156">叫用功能表或與指定之命令 ID 相符的設計工具動詞命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-156">Invokes a menu or designer verb command matching the specified command ID.</span></span></summary>
        <returns><span data-ttu-id="e23f8-157">如果找到命令且叫用成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-157"><see langword="true" /> if the command was found and invoked successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-158">這個方法會搜尋功能表命令或使用設計工具動詞<xref:System.ComponentModel.Design.CommandID>符合指定<xref:System.ComponentModel.Design.CommandID>。</span><span class="sxs-lookup"><span data-stu-id="e23f8-158">This method searches for a menu command or designer verb with a <xref:System.ComponentModel.Design.CommandID> matching the specified <xref:System.ComponentModel.Design.CommandID>.</span></span> <span data-ttu-id="e23f8-159">這個方法會先搜尋內設計工具動詞命令集合，其中包含全域和作用中提供設計工具動詞命令，再繼續進行搜尋 中，如果有必要，請透過全域環境命令服務。</span><span class="sxs-lookup"><span data-stu-id="e23f8-159">This method first searches within the designer verbs collection consisting of global and active designer-provided verbs before continuing the search, if necessary, through the global environment command service.</span></span> <span data-ttu-id="e23f8-160">如果找到相符的功能表命令或設計工具動詞命令，則會叫用命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-160">If a matching menu command or designer verb is located, the command is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="e23f8-161">要移除的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-161">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to remove.</span></span></param>
        <summary><span data-ttu-id="e23f8-162">從功能表移除指定的標準功能表命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-162">Removes the specified standard menu command from the menu.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-163">這個方法會移除指定<xref:System.ComponentModel.Design.MenuCommand>如果找到它。</span><span class="sxs-lookup"><span data-stu-id="e23f8-163">This method removes the specified <xref:System.ComponentModel.Design.MenuCommand> if it is found.</span></span> <span data-ttu-id="e23f8-164">這個方法不會引發例外狀況或傳回值，如果指定<xref:System.ComponentModel.Design.MenuCommand>找不到。</span><span class="sxs-lookup"><span data-stu-id="e23f8-164">This method does not raise an exception or return a value if the specified <xref:System.ComponentModel.Design.MenuCommand> is not found.</span></span> <span data-ttu-id="e23f8-165">使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法，以判斷是否<xref:System.ComponentModel.Design.MenuCommand>比對指定<xref:System.ComponentModel.Design.CommandID>位於功能表上。</span><span class="sxs-lookup"><span data-stu-id="e23f8-165">Use the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method to determine whether a <xref:System.ComponentModel.Design.MenuCommand> matching a specified <xref:System.ComponentModel.Design.CommandID> is located on a menu.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="e23f8-166">要移除的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-166">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to remove.</span></span></param>
        <summary><span data-ttu-id="e23f8-167">從全域設計工具動詞命令的集合移除指定的設計工具動詞命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-167">Removes the specified designer verb from the collection of global designer verbs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-168">如果在全域設計工具動詞命令集合內，這個方法會移除指定的全域設計工具動詞命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-168">This method removes the specified global designer verb if it is within the global designer verbs collection.</span></span> <span data-ttu-id="e23f8-169">您可以將設計工具動詞命令新增至全域設計工具動詞命令集合使用<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e23f8-169">You can add a designer verb to the global designer verbs collection using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="iMenuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID"><span data-ttu-id="e23f8-170">捷徑功能表要顯示的 <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="e23f8-170">The <see cref="T:System.ComponentModel.Design.CommandID" /> for the shortcut menu to show.</span></span></param>
        <param name="x"><span data-ttu-id="e23f8-171">X 座標，要在該螢幕座標上顯示捷徑功能表。</span><span class="sxs-lookup"><span data-stu-id="e23f8-171">The x-coordinate at which to display the menu, in screen coordinates.</span></span></param>
        <param name="y"><span data-ttu-id="e23f8-172">Y 座標，要在該螢幕座標上顯示捷徑功能表。</span><span class="sxs-lookup"><span data-stu-id="e23f8-172">The y-coordinate at which to display the menu, in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="e23f8-173">在指定位置顯示指定的捷徑功能表。</span><span class="sxs-lookup"><span data-stu-id="e23f8-173">Shows the specified shortcut menu at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-174"><xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>方法可以顯示任何下列 Visual Studio 捷徑功能表，其中包含指定點上的功能表命令：</span><span class="sxs-lookup"><span data-stu-id="e23f8-174">The <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> method can display any of the following Visual Studio shortcut menus containing menu commands at a specified point:</span></span>  
  
|<span data-ttu-id="e23f8-175">功能表</span><span class="sxs-lookup"><span data-stu-id="e23f8-175">Menu</span></span>|<span data-ttu-id="e23f8-176">CommandID</span><span class="sxs-lookup"><span data-stu-id="e23f8-176">CommandID</span></span>|  
|----------|---------------|  
|<span data-ttu-id="e23f8-177">顯示容器的捷徑功能表</span><span class="sxs-lookup"><span data-stu-id="e23f8-177">The shortcut menu displayed for a container</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|<span data-ttu-id="e23f8-178">元件匣中顯示的捷徑功能表</span><span class="sxs-lookup"><span data-stu-id="e23f8-178">The shortcut menu displayed for the component tray</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|<span data-ttu-id="e23f8-179">顯示選取範圍的捷徑功能表</span><span class="sxs-lookup"><span data-stu-id="e23f8-179">The shortcut menu displayed for a selection</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|<span data-ttu-id="e23f8-180">紙匣選取顯示的快顯功能表</span><span class="sxs-lookup"><span data-stu-id="e23f8-180">The shortcut menu displayed for a tray selection</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 <span data-ttu-id="e23f8-181">這個方法也可以顯示其他已註冊的捷徑功能表。</span><span class="sxs-lookup"><span data-stu-id="e23f8-181">This method can also display other registered shortcut menus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e23f8-182">取得目前可用的設計工具動詞命令集合。</span><span class="sxs-lookup"><span data-stu-id="e23f8-182">Gets a collection of the designer verbs that are currently available.</span></span></summary>
        <value><span data-ttu-id="e23f8-183"><see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />，包含目前可用的設計工具動詞命令。</span><span class="sxs-lookup"><span data-stu-id="e23f8-183">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> that contains the designer verbs that are currently available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e23f8-184">目前可用的設計工具動詞命令的集合，包含所有全域設計工具動詞命令，藉由新增<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>在這個介面，以及個別設計工具的動詞命令所提供的方法<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>個別設計工具的屬性。</span><span class="sxs-lookup"><span data-stu-id="e23f8-184">The set of currently available designer verbs consists of all global designer verbs, which are added by the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method on this interface, and individual designer verbs, which are offered by the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of individual designers.</span></span> <span data-ttu-id="e23f8-185">如果全域動詞命令的名稱衝突的設計工具動詞名稱，設計工具提供的設計工具動詞命令的優先順序較高。</span><span class="sxs-lookup"><span data-stu-id="e23f8-185">If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>