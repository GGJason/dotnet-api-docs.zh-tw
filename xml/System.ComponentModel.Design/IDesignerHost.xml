<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a5d45bd683269ed3912d04dd336b2bccc6e7449" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerHost : System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerHost&#xA;Implements IServiceContainer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerHost : System::ComponentModel::Design::IServiceContainer" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="734a6-101">提供用來管理設計工具異動和元件的介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="734a6-101">Provides an interface for managing designer transactions and components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-102"><xref:System.ComponentModel.Design.IDesignerHost> 是適用於.NET Framework 的表單設計工具架構提供支援給設計工具異動元件管理的介面。</span><span class="sxs-lookup"><span data-stu-id="734a6-102"><xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</span></span>  
  
 <span data-ttu-id="734a6-103">.NET Framework 不提供此介面的實作。</span><span class="sxs-lookup"><span data-stu-id="734a6-103">The .NET Framework does not provide an implementation of this interface.</span></span> <span data-ttu-id="734a6-104">介面是由支援設計工具的開發工具實作。</span><span class="sxs-lookup"><span data-stu-id="734a6-104">The interface is implemented by development tools that support designers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734a6-105">下列程式碼範例示範如何取得<xref:System.ComponentModel.Design.IDesignerHost>從設計工具或站台的元件的服務介面。</span><span class="sxs-lookup"><span data-stu-id="734a6-105">The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.</span></span>  
  
 [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 <span data-ttu-id="734a6-106">下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.IDesignerHost>清單專案元件的介面。</span><span class="sxs-lookup"><span data-stu-id="734a6-106">The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.</span></span>  
  
 [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>
        <span data-ttu-id="734a6-107">若要取得的實作<see cref="T:System.ComponentModel.Design.IDesignerHost" />從開發環境中，呼叫<see cref="M:System.ComponentModel.Component.GetService(System.Type)" />您的元件在設計模式中使用中時，傳遞的型別<see cref="T:System.ComponentModel.Design.IDesignerHost" />要求<see cref="T:System.ComponentModel.Design.IDesignerHost" />服務介面。</span>
        <span class="sxs-lookup">
          <span data-stu-id="734a6-107">To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.</span>
        </span>
        <span data-ttu-id="734a6-108">
          <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 提供與設計工具狀態相關的下列成員：</span>
        <span class="sxs-lookup">
          <span data-stu-id="734a6-108">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:</span>
        </span>  
  
-   <span data-ttu-id="734a6-109"><see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />屬性會指出是否正在載入設計工具或文件。</span><span class="sxs-lookup"><span data-stu-id="734a6-109">The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.</span></span>  
  
-   <span data-ttu-id="734a6-110"><see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />顯示器之前啟動設計工具時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-110">The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.</span></span>  
  
-   <span data-ttu-id="734a6-111"><see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />停用設計工具時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-111">The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.</span></span>  
  
-   <span data-ttu-id="734a6-112"><see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />載入文件之後，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-112">The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.</span></span>  
  
-   <span data-ttu-id="734a6-113"><see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" />方法啟動設計工具。</span><span class="sxs-lookup"><span data-stu-id="734a6-113">The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.</span></span><span data-ttu-id="734a6-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> 提供管理元件相關的下列成員：</span><span class="sxs-lookup"><span data-stu-id="734a6-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:</span></span>  
  
-   <span data-ttu-id="734a6-115"><see cref="P:System.ComponentModel.Design.IDesignerHost.Container" />屬性會指出容器的設計工具主應用程式。</span><span class="sxs-lookup"><span data-stu-id="734a6-115">The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.</span></span>  
  
-   <span data-ttu-id="734a6-116"><see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />屬性表示的根元件的基底類別。</span><span class="sxs-lookup"><span data-stu-id="734a6-116">The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.</span></span>  
  
-   <span data-ttu-id="734a6-117"><see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />屬性表示的根元件類別的名稱。</span><span class="sxs-lookup"><span data-stu-id="734a6-117">The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.</span></span>  
  
-   <span data-ttu-id="734a6-118"><see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />方法會建立指定的類型的元件。</span><span class="sxs-lookup"><span data-stu-id="734a6-118">The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.</span></span>  
  
-   <span data-ttu-id="734a6-119"><see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />方法會終結指定的元件。</span><span class="sxs-lookup"><span data-stu-id="734a6-119">The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.</span></span>  
  
-   <span data-ttu-id="734a6-120"><see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />方法取得與指定的元件相關聯的設計工具。</span><span class="sxs-lookup"><span data-stu-id="734a6-120">The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.</span></span>  
  
-   <span data-ttu-id="734a6-121"><see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />方法會取得具有指定名稱之類型的執行個體。</span><span class="sxs-lookup"><span data-stu-id="734a6-121">The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.</span></span><span data-ttu-id="734a6-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> 提供管理交易相關的下列成員：</span><span class="sxs-lookup"><span data-stu-id="734a6-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:</span></span>  
  
-   <span data-ttu-id="734a6-123"><see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />屬性會指出設計工具是否在交易中。</span><span class="sxs-lookup"><span data-stu-id="734a6-123">The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.</span></span>  
  
-   <span data-ttu-id="734a6-124"><see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />屬性會指出目前的交易描述。</span><span class="sxs-lookup"><span data-stu-id="734a6-124">The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.</span></span>  
  
-   <span data-ttu-id="734a6-125"><see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />交易完成時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-125">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.</span></span>  
  
-   <span data-ttu-id="734a6-126"><see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />完成交易時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-126">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.</span></span>  
  
-   <span data-ttu-id="734a6-127"><see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />交易開始時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-127">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.</span></span>  
  
-   <span data-ttu-id="734a6-128"><see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />開始交易時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-128">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.</span></span>  
  
-   <span data-ttu-id="734a6-129"><see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />方法會建立並傳回新的交易。</span><span class="sxs-lookup"><span data-stu-id="734a6-129">The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="734a6-130">啟動這個主應用程式正在裝載的設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-130">Activates the designer that this host is hosting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-131">設計工具應該啟動，才能顯示其使用者介面。</span><span class="sxs-lookup"><span data-stu-id="734a6-131">Designers should be activated before they display their user interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberSignature Language="VB.NET" Value="Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-132">發生於這個設計工具啟動時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-132">Occurs when this designer is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-133">設計工具就會顯示之前啟動。</span><span class="sxs-lookup"><span data-stu-id="734a6-133">A designer is activated before it is displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-134">取得這個設計工具主應用程式的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-134">Gets the container for this designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="734a6-135">這個主應用程式 (Host) 的 <see cref="T:System.ComponentModel.IContainer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-135">The <see cref="T:System.ComponentModel.IContainer" /> for this host.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-136">這<xref:System.ComponentModel.IContainer>包含目前的設計模式文件的元件。</span><span class="sxs-lookup"><span data-stu-id="734a6-136">This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document.</span></span> <span data-ttu-id="734a6-137">您可以列出或存取目前的設計模式文件透過元件的任何<xref:System.ComponentModel.IContainer.Components%2A>這個成員<xref:System.ComponentModel.IContainer>。</span><span class="sxs-lookup"><span data-stu-id="734a6-137">You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-138">建立指定型別的元件，並將其加入至設計文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-138">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="734a6-139">要建立的元件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-139">The type of the component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="734a6-140">建立指定型別的元件，並將其加入至設計文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-140">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="734a6-141">新建立的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-141">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-142">如果型別無法解析成該物件會實作<xref:System.ComponentModel.IComponent>，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="734a6-142">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="734a6-143">這個方法不會指定元件的名稱。</span><span class="sxs-lookup"><span data-stu-id="734a6-143">This method does not specify a name for the component.</span></span> <span data-ttu-id="734a6-144">方法會建立元件，並將它加入至設計工具的容器。</span><span class="sxs-lookup"><span data-stu-id="734a6-144">The method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type, name As String) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="734a6-145">要建立的元件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-145">The type of the component to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="734a6-146">元件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-146">The name for the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="734a6-147">建立指定型別和名稱的元件，並將其加入至設計文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-147">Creates a component of the specified type and name, and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="734a6-148">新建立的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-148">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-149">如果型別無法解析成該物件會實作<xref:System.ComponentModel.IComponent>，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="734a6-149">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="734a6-150">這個方法會建立元件，並將它加入至設計工具的容器。</span><span class="sxs-lookup"><span data-stu-id="734a6-150">This method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-151">建立 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />，它可以封裝事件序列，以改善效能，並啟用復原和取消復原支援功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-151">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction () As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="734a6-152">建立 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />，它可以封裝事件序列，以改善效能，並啟用復原和取消復原支援功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-152">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="734a6-153">
            <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-153">A new instance of <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="734a6-154">完成異動步驟時，您應該呼叫這個物件上的 <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-154">When you complete the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-155">這個方法會建立<xref:System.ComponentModel.Design.DesignerTransaction>，可以用來封裝一系列的作業。</span><span class="sxs-lookup"><span data-stu-id="734a6-155">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="734a6-156">設計工具交易可以改善效能、 減少重繪閃動因多個更新作業，在程序並啟用要復原的大部分作業。</span><span class="sxs-lookup"><span data-stu-id="734a6-156">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="734a6-157">長時間作業牽涉到多個元件可以引發許多事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-157">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="734a6-158">這些事件可能會造成副作用，例如閃爍或效能降低。</span><span class="sxs-lookup"><span data-stu-id="734a6-158">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="734a6-159">當多個元件上一次作業或單一元件上設定多個屬性時，您可以執行這些變更在交易內改善效能。</span><span class="sxs-lookup"><span data-stu-id="734a6-159">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="734a6-160">某些作業處理<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>和<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>事件，並執行工作時，才在交易進行中。</span><span class="sxs-lookup"><span data-stu-id="734a6-160">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="734a6-161">如需有關如何使用交易的詳細資訊，請參閱文件<xref:System.ComponentModel.Design.DesignerTransaction>。</span><span class="sxs-lookup"><span data-stu-id="734a6-161">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction (description As String) As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction(System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="734a6-162">新建立的異動的標題或描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-162">A title or description for the newly created transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="734a6-163">使用指定的異動描述，建立 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />，它可以用來封裝事件序列，以改善效能，並啟用復原和取消復原支援功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-163">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="734a6-164">新的 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-164">A new <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="734a6-165">完成異動步驟時，您應該呼叫這個物件上的 <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-165">When you have completed the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-166">這個方法會建立<xref:System.ComponentModel.Design.DesignerTransaction>，可以用來封裝一系列的作業。</span><span class="sxs-lookup"><span data-stu-id="734a6-166">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="734a6-167">設計工具交易可以改善效能、 減少重繪閃動因多個更新作業，在程序並啟用要復原的大部分作業。</span><span class="sxs-lookup"><span data-stu-id="734a6-167">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="734a6-168">長時間作業牽涉到多個元件可以引發許多事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-168">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="734a6-169">這些事件可能會造成副作用，例如閃爍或效能降低。</span><span class="sxs-lookup"><span data-stu-id="734a6-169">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="734a6-170">當多個元件上一次作業或單一元件上設定多個屬性時，您可以執行這些變更在交易內改善效能。</span><span class="sxs-lookup"><span data-stu-id="734a6-170">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="734a6-171">某些作業處理<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>和<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>事件，並執行工作時，才在交易進行中。</span><span class="sxs-lookup"><span data-stu-id="734a6-171">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="734a6-172">如需有關如何使用交易的詳細資訊，請參閱文件<xref:System.ComponentModel.Design.DesignerTransaction>。</span><span class="sxs-lookup"><span data-stu-id="734a6-172">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-173">發生於這個設計工具停用時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-173">Occurs when this designer is deactivated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-174">它不會再顯示之前，會停用設計工具。</span><span class="sxs-lookup"><span data-stu-id="734a6-174">A designer is deactivated just before it is no longer displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DestroyComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DestroyComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="734a6-175">要終結的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-175">The component to destroy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="734a6-176">終結指定的元件，並將其從設計工具容器移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-176">Destroys the specified component and removes it from the designer container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesigner (component As IComponent) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::IDesigner ^ GetDesigner(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="734a6-177">要為其擷取設計工具的 <see cref="T:System.ComponentModel.IComponent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-177">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the designer for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="734a6-178">取得含有指定元件的設計工具執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-178">Gets the designer instance that contains the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="734a6-179">
            <see cref="T:System.ComponentModel.Design.IDesigner" /> 或 <see langword="null" /> (如果指定元件沒有設計工具)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-179">An <see cref="T:System.ComponentModel.Design.IDesigner" />, or <see langword="null" /> if there is no designer for the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="734a6-180">要載入的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-180">The name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="734a6-181">取得指定的、完整的型別名稱的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-181">Gets an instance of the specified, fully qualified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="734a6-182">指定型別名稱的型別物件，或 <see langword="null" /> (如果找不到型別)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-182">The type object for the specified type name, or <see langword="null" /> if the type cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTransaction { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-183">取得數值，指示設計工具主應用程式目前是否在異動中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-183">Gets a value indicating whether the designer host is currently in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="734a6-184">如果異動正在進行中，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-184">
              <see langword="true" /> if a transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-185">發生於這個設計工具完成載入其文件時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-185">Occurs when this designer completes loading its document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-186">設計工具完成載入其文件之後，就會發生此事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-186">This event occurs after a designer completes loading its document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-187">取得數值，指示設計工具主應用程式目前是否正在載入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-187">Gets a value indicating whether the designer host is currently loading the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="734a6-188">如果設計工具主應用程式目前正在載入文件，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-188">
              <see langword="true" /> if the designer host is currently loading the document; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RootComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-189">取得用來做為目前設計根元件之基底類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-189">Gets the instance of the base class used as the root component for the current design.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="734a6-190">根元件類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-190">The instance of the root component class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-191">這個基底類別通常是<xref:System.Windows.Forms.Form>或<xref:System.Windows.Forms.UserControl>執行個體; 它會定義為其使用者的衍生的類別會擴充的類別。</span><span class="sxs-lookup"><span data-stu-id="734a6-191">This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponentClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootComponentClassName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-192">取得正在設計的類別的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-192">Gets the fully qualified name of the class being designed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="734a6-193">基底元件類別的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-193">The fully qualified name of the base component class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosed As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-194">加入 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> 事件的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-194">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-195">關閉交易之後，就會發生此事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-195">This event occurs after a transaction is closed.</span></span>  
  
 <span data-ttu-id="734a6-196">有時候，交易可以變更多個值。</span><span class="sxs-lookup"><span data-stu-id="734a6-196">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="734a6-197">交易方法提供方法來防止效能，並且重繪閃動以避免重複處理的問題。</span><span class="sxs-lookup"><span data-stu-id="734a6-197">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="734a6-198">這些方法會延遲處理，直到異動關閉之後。</span><span class="sxs-lookup"><span data-stu-id="734a6-198">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosing As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-199">加入 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> 事件的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-199">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-200">交易完成之前，就會發生此事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-200">This event occurs just before a transaction is completed.</span></span>  
  
 <span data-ttu-id="734a6-201">有時候，交易可以變更多個值。</span><span class="sxs-lookup"><span data-stu-id="734a6-201">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="734a6-202">交易方法提供方法來防止效能，並且重繪閃動以避免重複處理的問題。</span><span class="sxs-lookup"><span data-stu-id="734a6-202">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="734a6-203">這些方法會延遲處理，直到異動關閉之後。</span><span class="sxs-lookup"><span data-stu-id="734a6-203">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-204">取得目前異動的描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-204">Gets the description of the current transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="734a6-205">目前異動的描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-205">A description of the current transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-206">描述是使用指定的最後一個描述<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="734a6-206">The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-207">加入 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> 事件的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-207">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-208">當交易開始時，就會發生此事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-208">This event occurs when a transaction has begun.</span></span>  
  
 <span data-ttu-id="734a6-209">有時候，交易可以變更多個值。</span><span class="sxs-lookup"><span data-stu-id="734a6-209">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="734a6-210">交易方法提供方法來防止效能，並且重繪閃動以避免重複處理的問題。</span><span class="sxs-lookup"><span data-stu-id="734a6-210">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="734a6-211">這些方法會延遲處理，直到異動關閉之後。</span><span class="sxs-lookup"><span data-stu-id="734a6-211">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpening;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="734a6-212">加入 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> 事件的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="734a6-212">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734a6-213">若要開始交易時，就會發生此事件。</span><span class="sxs-lookup"><span data-stu-id="734a6-213">This event occurs when a transaction is about to begin.</span></span>  
  
 <span data-ttu-id="734a6-214">這個方法可讓設計工具主應用程式用戶端之前，其他處理常式會收到通知，交易已開始執行作業。</span><span class="sxs-lookup"><span data-stu-id="734a6-214">This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</span></span> <span data-ttu-id="734a6-215">指定的處理常式會呼叫只有當第一次呼叫<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>進行。</span><span class="sxs-lookup"><span data-stu-id="734a6-215">The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made.</span></span> <span data-ttu-id="734a6-216">後續的呼叫不會產生此事件，直到所有的交易物件已經處置。</span><span class="sxs-lookup"><span data-stu-id="734a6-216">Subsequent calls do not generate this event until all transaction objects have been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
  </Members>
</Type>