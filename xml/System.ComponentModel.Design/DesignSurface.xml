<Type Name="DesignSurface" FullName="System.ComponentModel.Design.DesignSurface">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3aa7493e17750216c5342b1ee5e784080710e3a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurface extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurface" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurface&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurface : IDisposable, IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4ce7c-101">呈現可供設計元件的使用者介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ce7c-101">Presents a user interface for designing components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-102"><xref:System.ComponentModel.Design.DesignSurface>類別會實作使用者感知為設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-102">The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer.</span></span> <span data-ttu-id="4ce7c-103"><xref:System.ComponentModel.Design.DesignSurface> 為使用者介面使用者操作來變更設計階段功能。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-103"><xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features.</span></span> <span data-ttu-id="4ce7c-104"><xref:System.ComponentModel.Design.DesignSurface> 提供的完全獨立的設計介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-104"><xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.</span></span>  
  
 <span data-ttu-id="4ce7c-105"><xref:System.ComponentModel.Design.DesignSurface>類別可做為獨立的設計工具中，或它可能會令人敬謝<xref:System.ComponentModel.Design.DesignSurfaceManager>類別，以提供裝載多個應用程式的通用實作<xref:System.ComponentModel.Design.DesignSurface>物件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-105">The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span>  
  
 <span data-ttu-id="4ce7c-106"><xref:System.ComponentModel.Design.DesignSurface>類別可由本身，或使用者可以從中衍生新類別，將它擴大的行為。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-106">The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.</span></span>  
  
 <span data-ttu-id="4ce7c-107"><xref:System.ComponentModel.Design.DesignSurface>類別會自動提供數個設計階段服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-107">The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically.</span></span> <span data-ttu-id="4ce7c-108"><xref:System.ComponentModel.Design.DesignSurface>類別會加入其所有的服務在其建構函式。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-108">The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor.</span></span> <span data-ttu-id="4ce7c-109">大部分的服務可覆寫並取代在受保護<xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-109">Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="4ce7c-110">若要取代的服務，覆寫建構函式，呼叫基底，並進行任何變更透過受保護<xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-110">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="4ce7c-111">所有服務，會加入至服務容器，以及實作<xref:System.IDisposable>設計介面中遭處置時進行處置。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-111">All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed.</span></span> <span data-ttu-id="4ce7c-112">一組預設的可取代服務<xref:System.ComponentModel.Design.DesignSurface>類別會提供下表所示。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-112">The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.</span></span>  
  
|<span data-ttu-id="4ce7c-113">服務</span><span class="sxs-lookup"><span data-stu-id="4ce7c-113">Service</span></span>|<span data-ttu-id="4ce7c-114">描述</span><span class="sxs-lookup"><span data-stu-id="4ce7c-114">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IExtenderProviderService>|<span data-ttu-id="4ce7c-115">可讓不屬於容器的元件集合，提供它們自己的擴充性提供者的物件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-115">Enables objects that are not part of the container’s components collection to provide their own extender providers.</span></span>|  
|<xref:System.ComponentModel.Design.IExtenderListService>|<span data-ttu-id="4ce7c-116">使用<xref:System.ComponentModel.TypeDescriptor>以取得擴充性提供者的清單。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-116">Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers.</span></span> <span data-ttu-id="4ce7c-117">與此服務，可以即時容器之外的擴充性提供者。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-117">With this service, extender providers can live outside of the container.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="4ce7c-118">提供設計工具中繼資料攔截程序。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-118">Provides designer metadata hooks.</span></span> <span data-ttu-id="4ce7c-119">這是中繼資料篩選的主要介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-119">This is the primary interface for metadata filtering.</span></span>|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="4ce7c-120">可用來在設計工具中選取的元件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-120">Provides a way to select components in the designer.</span></span>|  
|<xref:System.ComponentModel.Design.IReferenceService>|<span data-ttu-id="4ce7c-121">提供方法，以取得物件的名稱，即使這些物件未設置。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-121">Provides a way to get a name for objects, even when those objects are not sited.</span></span>|  
|<xref:System.ComponentModel.Design.DesignSurface>|<span data-ttu-id="4ce7c-122">提供設計介面做為服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-122">Offers the design surface itself as a service.</span></span>|  
|<xref:System.ComponentModel.Design.DesignerOptionService>|<span data-ttu-id="4ce7c-123">提供基底類別，用於取得和設定設計工具的選項值。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-123">Provides a base class for getting and setting option values for a designer.</span></span>|  
  
 <span data-ttu-id="4ce7c-124">下表顯示非可取代預設提供的服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-124">The following table shows the non-replaceable services provided by default.</span></span>  
  
|<span data-ttu-id="4ce7c-125">服務</span><span class="sxs-lookup"><span data-stu-id="4ce7c-125">Service</span></span>|<span data-ttu-id="4ce7c-126">描述</span><span class="sxs-lookup"><span data-stu-id="4ce7c-126">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="4ce7c-127">會對元件的變更會引發事件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-127">Raises events as changes are made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="4ce7c-128">控制存取類型、 服務和交易。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-128">Controls access to types, services, and transactions.</span></span> <span data-ttu-id="4ce7c-129">設計工具的主要介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-129">Master interface for designers.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="4ce7c-130">擁有正在設計的元件組。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-130">Owns the set of components that are being designed.</span></span> <span data-ttu-id="4ce7c-131">每個設計工具有<xref:System.ComponentModel.IContainer>擁有的元件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-131">Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.</span></span>|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="4ce7c-132">衍生自<xref:System.IServiceProvider>並可提供方法來加入和移除服務，從設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-132">Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.</span></span>|  
  
 <span data-ttu-id="4ce7c-133">這些服務，除了<xref:System.ComponentModel.Design.DesignSurface>類別也提供可透過元件的站台的單一服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-133">In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site.</span></span> <span data-ttu-id="4ce7c-134">此服務是唯一的每個元件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-134">This service is unique for each component.</span></span> <span data-ttu-id="4ce7c-135">下表會顯示無法取代的服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-135">The following table shows the services that cannot be replaced.</span></span>  
  
|<span data-ttu-id="4ce7c-136">服務</span><span class="sxs-lookup"><span data-stu-id="4ce7c-136">Service</span></span>|<span data-ttu-id="4ce7c-137">描述</span><span class="sxs-lookup"><span data-stu-id="4ce7c-137">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IDictionaryService>|<span data-ttu-id="4ce7c-138">可以用來儲存有關元件的任意資料的索引鍵/值組的泛型字典。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-138">A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</span></span>|  
|<xref:System.ComponentModel.INestedContainer>|<span data-ttu-id="4ce7c-139">容器可讓元件至設計工具中新增其他子元件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-139">A container that enables a component to add additional child components to the designer.</span></span> <span data-ttu-id="4ce7c-140">這些元件將是設計介面的一部分，但不是會參與序列化。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-140">These components will be part of the design surface, but will not participate in serialization.</span></span> <span data-ttu-id="4ce7c-141">當您想要設計的控制項時還能夠公開本身的區域在設計工具中，這非常有用，但是您不想要參與序列化的區域。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-141">This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</span></span>|  
  
 <span data-ttu-id="4ce7c-142">除了<xref:System.ComponentModel.ISite>，站台也會實作下列介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-142">In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4ce7c-143">檢查存在這些介面，而非使用任意轉型，因為其他站台的實作可能無法實作它們。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-143">Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</span></span>  
  
|<span data-ttu-id="4ce7c-144">服務</span><span class="sxs-lookup"><span data-stu-id="4ce7c-144">Service</span></span>|<span data-ttu-id="4ce7c-145">描述</span><span class="sxs-lookup"><span data-stu-id="4ce7c-145">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="4ce7c-146">可用來取得特定站台服務的容器。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-146">Provides a way to get to the container of site-specific services.</span></span> <span data-ttu-id="4ce7c-147">例如，<xref:System.ComponentModel.Design.IDictionaryService>是站台特有的服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-147">For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service.</span></span> <span data-ttu-id="4ce7c-148">與此服務，您可以新增其他站台特有的服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-148">With this service, you can add additional site-specific services.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="4ce7c-149">系統資源的完整存取權。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ce7c-149">for full access to system resources.</span>
      </span>
      <span data-ttu-id="4ce7c-150">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />， <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ce7c-150">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="4ce7c-151">相關聯的狀態：</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ce7c-151">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-152">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-152">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-153">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-153">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-154">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-154">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="4ce7c-155">父服務提供者，如果未使用父代解析服務，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-155">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-156">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-156">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-157">當`parentProvide`已存在，在介面中所包含的設計工具可以從應用程式中擷取服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-157">When `parentProvide` is present, designers contained within the surface can retrieve services from the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-158">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-158">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(Type ^ rootComponentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="4ce7c-159">要建立的根元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-159">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-160">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-160">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-161">當您使用<xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A>建構函式，它會建立簡單的設計工具載入器，亦會建立指定類型的元件，並於結束載入程序。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-161">When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="4ce7c-162">這是直接的方法建立設計工具中的，假設所有儲存的狀態會在外部完成。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-162">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="4ce7c-163">就內部而言，這會呼叫<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>和傳遞根元件類型。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-163">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ce7c-164"><xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A>多載不會受到<xref:System.Windows.Forms.Design.DesignerOptions>。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-164">The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>.</span></span> <span data-ttu-id="4ce7c-165"><xref:System.Windows.Forms.Design.DesignerOptions>載入設計介面之前，必須是服務容器中。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-165">The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads.</span></span> <span data-ttu-id="4ce7c-166">如果您需要存取<xref:System.Windows.Forms.Design.DesignerOptions>、 呼叫空的建構函式、 新增<xref:System.Windows.Forms.Design.DesignerOptions>至<xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>呼叫<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>與`rootComponentType`。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-166">If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-167">
            <paramref name="rootComponent" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-167">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-168">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-168">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider, class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider, rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider, Type ^ rootComponentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="4ce7c-169">父服務提供者，如果未使用父代解析服務，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-169">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <param name="rootComponentType">
          <span data-ttu-id="4ce7c-170">要建立的根元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-170">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-171">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-171">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-172">使用<xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A>建構函式建立簡單的設計工具載入器會建立指定類型的元件，然後結束 載入程序。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-172">Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="4ce7c-173">這是直接的方法建立設計工具中的，假設所有儲存的狀態會在外部完成。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-173">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="4ce7c-174">就內部而言，這會呼叫<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>和傳遞根元件類型。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-174">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-175">
            <paramref name="rootComponent" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-175">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-176">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-176">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-177">開始載入處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-177">Begins the loading process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.ComponentModel.Design.Serialization.DesignerLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (loader As DesignerLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(System::ComponentModel::Design::Serialization::DesignerLoader ^ loader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" />
      </Parameters>
      <Docs>
        <param name="loader">
          <span data-ttu-id="4ce7c-178">用於載入設計工具的設計工具載入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-178">The designer loader to use for loading the designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-179">使用指定的設計工具載入器開始載入處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-179">Begins the loading process with the given designer loader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-180">因此載入可能會繼續進行這個呼叫傳回之後，可以是非同步，設計工具載入。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-180">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="4ce7c-181">附加事件處理常式<xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>設計介面已完成載入時收到通知的事件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-181">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="4ce7c-182">之後<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>是呼叫，您可以立即取得檢視的設計工具中，因為設計工具載入器必須提供至少根元件以非同步方式載入時。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-182">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-183">
            <paramref name="loader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-183">
              <paramref name="loader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-184">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-184">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(Type ^ rootComponentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="4ce7c-185">要在設計模式中建立的元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-185">The type of component to create in design mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-186">開始載入處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-186">Begins the loading process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-187">當`rootComponentType`指定，則預設設計工具載入器，只需要建立的執行個體`rootComponentType`將使用。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-187">When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used.</span></span> <span data-ttu-id="4ce7c-188">因此載入可能會繼續進行這個呼叫傳回之後，可以是非同步，設計工具載入。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-188">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="4ce7c-189">附加事件處理常式<xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>設計介面已完成載入時收到通知的事件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-189">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="4ce7c-190">之後<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>是呼叫，您可以立即取得檢視的設計工具中，因為設計工具載入器必須提供至少根元件以非同步方式載入時。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-190">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ce7c-191"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>方法會建立元件類型的執行個體，並初始化這個執行個體的設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-191">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance.</span></span> <span data-ttu-id="4ce7c-192"><xref:System.ComponentModel.Design.DesignSurface.Loaded>此方法傳回之前，就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-192">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-193">
            <paramref name="rootComponentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-193">
              <paramref name="rootComponentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-194">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-194">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ComponentContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer ComponentContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer ComponentContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentContainer As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ ComponentContainer { System::ComponentModel::IContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-195">取得設計介面內的 <see cref="T:System.ComponentModel.IContainer" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-195">Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ce7c-196">設計介面內的 <see cref="T:System.ComponentModel.IContainer" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-196">The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-197"><xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>屬性會保留目前處於設計模式下的所有物件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-197">The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode.</span></span> <span data-ttu-id="4ce7c-198">當元件加入至<xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>，其設計工具中，如果有的話，會載入。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-198">When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded.</span></span> <span data-ttu-id="4ce7c-199">元件設置的網站提供的完整存取權的設計介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-199">The component is sited with a site that provides full access to the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-200">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-200">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IComponent CreateComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateComponent (componentType As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="4ce7c-201">要建立的元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-201">The type of component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-202">建立元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-202">Creates an instance of a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ce7c-203">新建立的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-203">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-204"><xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A>方法由設計介面的呼叫<xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A>方法來建立元件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-204">The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component.</span></span> <span data-ttu-id="4ce7c-205">應該建立元件，並將它加入至設計介面上的公用容器中。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-205">The component should be created and added to the public container on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-206">
            <paramref name="componentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-206">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-207">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-207">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, bool rootDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDesigner (component As IComponent, rootDesigner As Boolean) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, bool rootDesigner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="rootDesigner" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="4ce7c-208">應當為其建立設計工具的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-208">The component for which the designer should be created.</span>
          </span>
        </param>
        <param name="rootDesigner">
          <span data-ttu-id="4ce7c-209">
            <see langword="true" /> 表示建立根設計工具，<see langword="false" /> 表示建立一般設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-209">
              <see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-210">在將元件加入容器時建立設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-210">Creates a designer when a component is added to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ce7c-211">要求之設計工具的執行個體，如果找不到相符的設計工具，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-211">An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-212"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A>方法由設計介面的呼叫<xref:System.ComponentModel.IContainer>元件加入至容器中時。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-212">The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container.</span></span> <span data-ttu-id="4ce7c-213">這個方法會建立設計工具，但不會初始化。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-213">This method creates a designer, but does not initialize it.</span></span> <span data-ttu-id="4ce7c-214">當它傳回時，設計工具是由容器初始化。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-214">When it returns, the designer is initialized by the container.</span></span>  
  
 <span data-ttu-id="4ce7c-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> 可以建立兩個不同類型的設計工具： 根設計工具和一般設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers.</span></span> <span data-ttu-id="4ce7c-216">根目錄設計工具是在設計介面中，它的定義是新增至容器的第一個元件的根元件的設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-216">A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</span></span> <span data-ttu-id="4ce7c-217">與一般設計工具的根目錄設計工具不同，因為他們負責顯示給使用者的使用者介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-217">Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</span></span> <span data-ttu-id="4ce7c-218">根目錄設計工具通常會協調設計介面上設計工具，可提供此介面的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-218">Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</span></span>  
  
 <span data-ttu-id="4ce7c-219">這個方法的預設實作會委派至<xref:System.ComponentModel.TypeDescriptor>，並傳入<xref:System.ComponentModel.Design.IRootDesigner>為根目錄設計工具，設計工具的型別或<xref:System.ComponentModel.Design.IDesigner>一般設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-219">The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers.</span></span> <span data-ttu-id="4ce7c-220">您可以覆寫這個方法來要求特定類型的設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-220">You can override this method to request a specific type of designer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-221">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-221">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-222">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-222">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal virtual object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4ce7c-223">要建立的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-223">The type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-224">建立指定型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-224">Creates an instance of the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ce7c-225">新建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-225">The newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-226">如果`type`是<xref:System.ComponentModel.IComponent>，<xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A>搜尋的型別建構函式<xref:System.ComponentModel.IContainer>首先，後面接著空的建構函式。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-226">If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-227">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-227">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-228">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-228">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNestedContainer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-229">建立適合的容器，以巢狀控制項或元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-229">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="4ce7c-230">能夠管理巢狀容器的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-230">The component that manages the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-231">建立適合的容器，以巢狀控制項或元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-231">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ce7c-232">巢狀容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-232">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-233">將元件加入巢狀容器會建立它的設計工具並使其適合所有服務可從設計介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-233">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="4ce7c-234">加入巢狀容器的元件不會參與序列化。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-234">Components added to nested containers do not participate in serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-235">
            <paramref name="owningComponent" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-235">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-236">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-236">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent, containerName As String) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent, System::String ^ containerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="4ce7c-237">能夠管理巢狀容器的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-237">The component that manages the nested container.</span>
          </span>
        </param>
        <param name="containerName">
          <span data-ttu-id="4ce7c-238">巢狀容器的其他名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-238">An additional name for the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-239">建立適合的容器，以巢狀控制項或元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-239">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ce7c-240">巢狀容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-240">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-241">將元件加入巢狀容器會建立它的設計工具並使其適合所有服務可從設計介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-241">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="4ce7c-242">加入巢狀容器的元件不會參與序列化。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-242">Components added to nested containers do not participate in serialization.</span></span>  
  
 <span data-ttu-id="4ce7c-243">您可以提供其他名稱<xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A>方法藉由傳遞值到`containerName`。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-243">You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ce7c-244">
            <paramref name="owningComponent" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-244">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-245">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-245">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-246">釋放 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-246">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-247">釋放 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-247">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-248">公用<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>方法會依循標準<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-248">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="4ce7c-249">呼叫這個方法會終結在設計介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-249">Calling this method destroys the design surface.</span></span> <span data-ttu-id="4ce7c-250">這個方法的受保護的版本是`virtual`就會遵循一般<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-250">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ce7c-251">因為<xref:System.ComponentModel.Design.DesignSurface>並沒有任何原生程式碼以清除，它並沒有完成項呼叫<xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-251">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span></span> <span data-ttu-id="4ce7c-252">如果您需要呼叫<xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>，您必須自己加入完成項。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-252">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="4ce7c-253"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 使用完畢時，請呼叫 <xref:System.ComponentModel.Design.DesignSurface>。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-253">Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="4ce7c-254"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 方法會將 <xref:System.ComponentModel.Design.DesignSurface> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-254">The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state.</span></span> <span data-ttu-id="4ce7c-255">在呼叫<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>，您必須釋放所有參考<xref:System.ComponentModel.Design.DesignSurface>讓記憶體回收行程可以回收記憶體的<xref:System.ComponentModel.Design.DesignSurface>所佔用。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-255">After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying.</span></span> <span data-ttu-id="4ce7c-256">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-256">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ce7c-257">在您釋放最後一個 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 參考之前，請務必呼叫 <xref:System.ComponentModel.Design.DesignSurface>。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-257">Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="4ce7c-258">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.ComponentModel.Design.DesignSurface> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-258">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4ce7c-259">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-259">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-260">釋放 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-260">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-261">公用<xref:System.ComponentModel.Design.DesignSurface.Dispose>方法會依循標準<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-261">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="4ce7c-262">呼叫這個方法會終結在設計介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-262">Calling this method destroys the design surface.</span></span> <span data-ttu-id="4ce7c-263">這個方法的受保護的版本是`virtual`就會遵循一般<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-263">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ce7c-264">因為<xref:System.ComponentModel.Design.DesignSurface>並沒有任何原生程式碼以清除，它並沒有完成項呼叫<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-264">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span></span> <span data-ttu-id="4ce7c-265">如果您需要呼叫<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>，您必須自己加入完成項。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-265">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="4ce7c-266">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-266">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="4ce7c-267">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-267">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="4ce7c-268"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-268"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="4ce7c-269">當`disposing`參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.ComponentModel.Design.DesignSurface>參考。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-269">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references.</span></span> <span data-ttu-id="4ce7c-270">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-270">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4ce7c-271">
              <see langword="Dispose" /> 可以被其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4ce7c-271">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="4ce7c-272">在覆寫<see langword="Dispose(Boolean)" />小心不要參考物件已處置過的早期呼叫中<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4ce7c-272">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="4ce7c-273">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4ce7c-273">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="4ce7c-274">如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4ce7c-274">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-275">發生於處置設計介面時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-275">Occurs when the design surface is disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-276">介面已處置的時，才會公開<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>方法<xref:System.ComponentModel.Design.DesignSurface>呼叫。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-276">The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtelLoading">
      <MemberSignature Language="C#" Value="public bool DtelLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtelLoading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property DtelLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtelLoading { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-277">取得值，指出是否正在載入 [設計階段錯誤清單]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-277">Gets a value indicating whether the **Design-time Error List** is loading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ce7c-278">
            <see langword="true" /> 如果**設計階段錯誤清單**已載入，否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-278">
              <see langword="true" /> if the **Design-time Error List** is loading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-279">序列化對設計介面的變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-279">Serializes changes to the design surface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-280"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A>推播至設計介面向序列化程式所做的變更，可以呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-280">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer.</span></span> <span data-ttu-id="4ce7c-281">這可確保在設計介面和其序列化的狀態會同步處理。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-281">This ensures that the design surface and its serialized state are synchronized.</span></span> <span data-ttu-id="4ce7c-282">這個方法的實際實作轉寄到與設計介面關聯的設計工具載入器。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-282">The actual implementation of this method is forwarded to the designer loader associated with design surface.</span></span> <span data-ttu-id="4ce7c-283">設計工具載入器可能會選擇變更直到延後<xref:System.ComponentModel.Design.DesignSurface.Flush%2A>呼叫時，或它可能會選擇要保留的最新狀態的所有使用者變更序列化的資料。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-283">The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes.</span></span> <span data-ttu-id="4ce7c-284"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A>方法可確保不論設計工具載入器選擇要使用的模式，同步序列化的狀態是與實際的設計介面。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-284">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flushed">
      <MemberSignature Language="C#" Value="public event EventHandler Flushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Flushed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Flushed" />
      <MemberSignature Language="VB.NET" Value="Public Event Flushed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Flushed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-285">發生於呼叫 <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> 的 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 方法時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-285">Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-286">首先，排清設計工具載入器，然後<xref:System.ComponentModel.Design.DesignSurface.Flushed>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-286">The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="4ce7c-287">要擷取的服務類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-287">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-288">取得服務容器中的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-288">Gets a service from the service container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ce7c-289">實作 <paramref name="serviceType" /> 或是其衍生類別的物件，如果服務不存在於服務容器中，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-289">An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-290"><xref:System.ComponentModel.Design.DesignSurface.GetService%2A>方法會擷取在設計介面的服務容器中的服務。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-290">The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container.</span></span> <span data-ttu-id="4ce7c-291">此外，這個方法會轉送至設計介面在建構階段指定任何服務提供者。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-291">In addition, this will forward to any service provider that was given to the design surface at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-292">取得值，指出目前是否已載入設計介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-292">Gets a value indicating whether the design surface is currently loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ce7c-293">如果目前已載入設計介面則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-293">
              <see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.LoadedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.LoadedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Loaded As LoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::LoadedEventHandler ^ Loaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.LoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-294">發生於完成設計工具載入時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-294">Occurs when the designer load has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-295"><xref:System.ComponentModel.Design.DesignSurface.Loaded>成功載入，以及失敗的項目就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-295">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones.</span></span> <span data-ttu-id="4ce7c-296">如果此事件處理常式中的程式碼擲回例外狀況，在設計工具將會卸載。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-296">If code in this event handler throws an exception, the designer is unloaded.</span></span>  
  
 <span data-ttu-id="4ce7c-297"><xref:System.ComponentModel.Design.LoadedEventArgs>物件可用來判斷如果載入成功，而且同時可提供載入期間發生之錯誤的清單。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-297">The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ce7c-298">前提是序列化系統可以容忍錯誤，可能會成功的載入，發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-298">Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection LoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection LoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadErrors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ LoadErrors { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-299">傳回載入錯誤的集合或 Void 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-299">Returns a collection of loading errors or a void collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ce7c-300">載入錯誤的 <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-300">A <see cref="T:System.Collections.ICollection" /> of loading errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public event EventHandler Loading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Event Loading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loading;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-301">發生於即將載入設計工具時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-301">Occurs when the designer is about to be loaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoaded(class System.ComponentModel.Design.LoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoaded (e As LoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoaded(System::ComponentModel::Design::LoadedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ce7c-302">
            <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-302">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-303">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-303">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoading">
      <MemberSignature Language="C#" Value="protected virtual void OnLoading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoading(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ce7c-304">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-304">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-305">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-305">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloaded (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloaded(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloaded (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloaded(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ce7c-306">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-306">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-307">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-307">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloading">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloading(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ce7c-308">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-308">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-309">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-309">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnViewActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewActivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ce7c-310">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-310">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ce7c-311">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-311">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-312">取得服務容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-312">Gets the service container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ce7c-313">服務容器，該容器為設計介面中包含的設計工具提供所有服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-313">The service container that provides all services to designers contained within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-314">在建構階段<xref:System.ComponentModel.Design.DesignSurface>將預設的服務加入到此服務容器。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-314">At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container.</span></span> <span data-ttu-id="4ce7c-315">預設服務處於目前狀態，或者您可以將它們移除並取代它們。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-315">You can leave the default services in their present state, or you can remove them and replace them with your own.</span></span> <span data-ttu-id="4ce7c-316">預設的服務是所有要求所建立，因此不會遺失任何在建構階段加入它們的效能。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-316">The default services are all demand-created, so there is no loss in performance for adding them at construction time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-317">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-317">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-318">發生於設計工具完成卸載時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-318">Occurs when a designer has finished unloading.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event EventHandler Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloading;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-319">發生於即將卸載設計工具時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-319">Occurs when a designer is about to unload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-320">當設計工具卸載時，就會終結該設計工具的整個狀態，包括設計工具的檢視。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-320">When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</span></span> <span data-ttu-id="4ce7c-321">檢視應該會在這次沒有父代。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-321">The view should be unparented at this time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public object View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object View" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ View { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-322">取得根設計工具的檢視。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-322">Gets the view for the root designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ce7c-323">根設計工具的檢視。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-323">The view for the root designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-324"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>必須先啟動載入程序呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-324">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process.</span></span> <span data-ttu-id="4ce7c-325">很可能傳回檢視設計工具載入器完成載入，因為根設計工具中，提供檢視，是由設計工具載入器建立的第一個物件之前。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-325">It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</span></span> <span data-ttu-id="4ce7c-326">如果無法使用，以檢視<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-326">If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="4ce7c-327">檢視技術概念已過時。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-327">The notion of a view technology is obsolete.</span></span> <span data-ttu-id="4ce7c-328">但是，仍在介面中的回溯相容性的根設計工具。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-328">But, it remains in the interfaces for root designers for backward compatibility.</span></span> <span data-ttu-id="4ce7c-329">其用途隱藏的任何人使用<xref:System.ComponentModel.Design.DesignSurface>物件。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-329">Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="4ce7c-330"><xref:System.ComponentModel.Design.DesignSurface.View%2A>屬性隱藏檢視技術，藉由傳遞回根目錄設計工具支援的技術。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-330">The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ce7c-331">下列程式碼範例示範如何<xref:System.ComponentModel.Design.DesignSurface.View%2A>隱藏檢視技術。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-331">The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.</span></span>  
  
 ```csharp 
 IRootDesigner d;  
  
 ViewTechnology[] supported = d.SupportedTechnologies;  
  
 return d.GetView(supported[0]);
 ``` 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4ce7c-332">設計介面未在載入，設計工具載入器尚未建立根設計工具，或設計介面已完成載入但已失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-332">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</span>
          </span>
          <span data-ttu-id="4ce7c-333">
            <see cref="P:System.Exception.InnerException" /> 中有更詳細的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-333">More information may available in the <see cref="P:System.Exception.InnerException" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4ce7c-334">設計工具已載入，但是它並未提供與這個設計介面相容的檢視。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-334">The designer loaded, but it does not offer a view compatible with this design surface.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4ce7c-335">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-335">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ViewActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ViewActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewActivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      <MemberSignature Language="VB.NET" Value="Public Event ViewActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewActivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ce7c-336">發生於已在 <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 上呼叫 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 方法時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ce7c-336">Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ce7c-337">如果您想要支援<xref:System.ComponentModel.Design.IDesignerHost.Activate%2A>方法，您的事件處理常式應該啟用這個設計介面的視窗。</span><span class="sxs-lookup"><span data-stu-id="4ce7c-337">If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>