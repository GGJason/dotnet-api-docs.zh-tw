<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49d89-101">定義設計工具主應用程式 (Designer Host) 所支援的技術集合的識別項。</span><span class="sxs-lookup"><span data-stu-id="49d89-101">Defines identifiers for a set of technologies that designer hosts support.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d89-102">檢視配接器模型取代，並將功能加入<xref:System.ComponentModel.Design.ViewTechnology>功能; 不過，<xref:System.ComponentModel.Design.ViewTechnology>功能會保留回溯相容性及未來使用，如果您選擇。</span><span class="sxs-lookup"><span data-stu-id="49d89-102">The view adapter model replaces and adds functionality to the <xref:System.ComponentModel.Design.ViewTechnology> feature; however, the <xref:System.ComponentModel.Design.ViewTechnology> feature is retained for both backward compatibility and future use, if you choose.</span></span> <span data-ttu-id="49d89-103">如需詳細資訊，請參閱 「.NET 圖形文件庫:: 範例設計工具 」 知識庫中的 Windows Form 在http://windowsforms.net/articles/shapedesigner.aspx。</span><span class="sxs-lookup"><span data-stu-id="49d89-103">For more information, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</span></span>  
  
 <span data-ttu-id="49d89-104"><xref:System.ComponentModel.Design.ViewTechnology> 定義可以指出要用來控制設計工具裝載的文件的顯示模式的識別項。</span><span class="sxs-lookup"><span data-stu-id="49d89-104"><xref:System.ComponentModel.Design.ViewTechnology> defines identifiers that can indicate the mode to use for controlling the display of a designer-hosted document.</span></span>  
  
 <span data-ttu-id="49d89-105">您只應該在設計工具的裝載環境中使用的預設值。</span><span class="sxs-lookup"><span data-stu-id="49d89-105">You should only use the Default value in your designer hosting environment.</span></span> <span data-ttu-id="49d89-106">在舊版的[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]、<xref:System.ComponentModel.Design.ViewTechnology.Default>列舉，指定的根目錄設計工具所支援的 UI 模型類型。</span><span class="sxs-lookup"><span data-stu-id="49d89-106">In previous versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the <xref:System.ComponentModel.Design.ViewTechnology.Default> enumeration specified the type of UI model supported by a root designer.</span></span> <span data-ttu-id="49d89-107">因為此模型不是可延伸的則您應該改用*檢視配接器*模型。</span><span class="sxs-lookup"><span data-stu-id="49d89-107">Because this model is not extensible, you should instead use a *view adapter* model.</span></span> <span data-ttu-id="49d89-108">檢視配接器是會調整成其他類型的物件類型。</span><span class="sxs-lookup"><span data-stu-id="49d89-108">A view adapter is a type that adapts an object of one type to another.</span></span>  
  
 <span data-ttu-id="49d89-109">例如，HTML 設計工具可能會傳回`DemoDOM`其檢視和樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="49d89-109">For example, an HTML designer might return a `DemoDOM` tree as its view.</span></span> <span data-ttu-id="49d89-110">HTML 設計工具傳回預設檢視的技術。</span><span class="sxs-lookup"><span data-stu-id="49d89-110">The HTML designer returns a view technology of Default.</span></span> <span data-ttu-id="49d89-111">Windows Form 裝載環境會有一或多個可用的檢視配接器類別。</span><span class="sxs-lookup"><span data-stu-id="49d89-111">A Windows Forms hosting environment would have one or more view adapter classes available.</span></span> <span data-ttu-id="49d89-112">如果可以轉換一個這類類別`DemoDOM`為 Windows Form 控制項，在裝載應用程式可支援這種類型的設計工具。</span><span class="sxs-lookup"><span data-stu-id="49d89-112">If one such class could convert the `DemoDOM` into a Windows Forms control, the hosting application can support this type of designer.</span></span> <span data-ttu-id="49d89-113">如果沒有配接器可以處理在設計工具傳回的資料類型<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>方法載入之設計工具將會失敗，和使用者會看到的錯誤。</span><span class="sxs-lookup"><span data-stu-id="49d89-113">If no adapter can handle the data type returned from the designer’s <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method, the load of the designer will fail, and the user will be presented with an error.</span></span>  
  
 <span data-ttu-id="49d89-114">Visual Studio 的可延伸的配置，以提供檢視配接器，所以它可以適用於任何 UI 技術。</span><span class="sxs-lookup"><span data-stu-id="49d89-114">Visual Studio has an extensible scheme for providing view adapters, so it can adapt to any UI technology.</span></span> <span data-ttu-id="49d89-115">協力廠商技術提供者也可以提供適當的檢視介面卡和其物件模型可立即使用。</span><span class="sxs-lookup"><span data-stu-id="49d89-115">Third-party technology providers can also offer an appropriate view adapter, and their object models are immediately consumable.</span></span>  
  
 <span data-ttu-id="49d89-116">如需使用檢視配接器的範例，請參閱 「.NET 圖形文件庫:: 範例設計工具 」 知識庫中的 Windows Form 在http://windowsforms.net/articles/shapedesigner.aspx。</span><span class="sxs-lookup"><span data-stu-id="49d89-116">For an example that uses view adapters, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d89-117">下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.ViewTechnology.Default>類別設計工具中的。</span><span class="sxs-lookup"><span data-stu-id="49d89-117">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology.Default> class in a designer.</span></span> <span data-ttu-id="49d89-118">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>介面。</span><span class="sxs-lookup"><span data-stu-id="49d89-118">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interface.</span></span>  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="49d89-119">指定預設檢視技術的支援。</span><span class="sxs-lookup"><span data-stu-id="49d89-119">Specifies the default view technology support.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d89-120">根目錄設計工具可能會傳回任何類型的物件，但此物件必須是與配接器的主控件技術相容。</span><span class="sxs-lookup"><span data-stu-id="49d89-120">The root designer may return any type of object, but the object must be compatible with an adapter for the technology of the host.</span></span> <span data-ttu-id="49d89-121">裝載環境，例如 Visual Studio 提供的方式來插入新的檢視技術配接器。</span><span class="sxs-lookup"><span data-stu-id="49d89-121">Hosting environments such as Visual Studio provide a way to plug in new view technology adapters.</span></span> <span data-ttu-id="49d89-122">Windows Form 設計工具的預設檢視物件是<xref:System.Windows.Forms.Control?displayProperty=nameWithType>執行個體。</span><span class="sxs-lookup"><span data-stu-id="49d89-122">The default view object for the Windows Forms designer is a <xref:System.Windows.Forms.Control?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d89-123">下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.ViewTechnology>類別設計工具中的。</span><span class="sxs-lookup"><span data-stu-id="49d89-123">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer.</span></span> <span data-ttu-id="49d89-124">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.ComponentModel.Design.IRootDesigner>介面。</span><span class="sxs-lookup"><span data-stu-id="49d89-124">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.</span></span>  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="49d89-125">表示直接將檢視物件傳遞至開發環境的模式。</span><span class="sxs-lookup"><span data-stu-id="49d89-125">Represents a mode in which the view object is passed directly to the development environment.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d89-126">檢視物件必須實作任何開發環境所需的介面。</span><span class="sxs-lookup"><span data-stu-id="49d89-126">The view object must implement any interfaces the development environment requires.</span></span> <span data-ttu-id="49d89-127">Visual Studio 開發環境支援 ActiveX 控制項、 將文件或實作可透過 Visual Studio VSI （Visual Studio 整合） 程式 IVsWindowPane 介面的物件的檢視表物件。</span><span class="sxs-lookup"><span data-stu-id="49d89-127">The Visual Studio development environment supports view objects that are either an ActiveX control, active document, or an object that implements the IVsWindowPane interface that is available through Visual Studio VSI (Visual Studio Integration) program.</span></span> <span data-ttu-id="49d89-128">Visual Studio 開發環境提供這項檢視技術支援。</span><span class="sxs-lookup"><span data-stu-id="49d89-128">The Visual Studio development environment provides support for this view technology.</span></span> <span data-ttu-id="49d89-129">不一定可以使用所有的開發環境中支援這個檢視技術。</span><span class="sxs-lookup"><span data-stu-id="49d89-129">Support for this view technology is not necessarily available in all development environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="49d89-130">表示 Windows Form 控制項物件為主要設計工具提供顯示方式的模式。</span><span class="sxs-lookup"><span data-stu-id="49d89-130">Represents a mode in which a Windows Forms control object provides the display for the root designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d89-131">設計工具主應用程式中填入在 Windows Form 控制項開發環境文件視窗。</span><span class="sxs-lookup"><span data-stu-id="49d89-131">The designer host fills the development environment document window with the Windows Forms control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d89-132">下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.ViewTechnology>類別設計工具中的。</span><span class="sxs-lookup"><span data-stu-id="49d89-132">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer.</span></span> <span data-ttu-id="49d89-133">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.ComponentModel.Design.LocalizationExtenderProvider>類別。</span><span class="sxs-lookup"><span data-stu-id="49d89-133">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.</span></span>  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>