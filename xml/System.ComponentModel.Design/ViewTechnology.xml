<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="459f390c97929264d6e88e0b246805ff33a0d5b3" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32036600" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義設計工具主應用程式 (Designer Host) 所支援的技術集合的識別項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檢視配接器模型取代，並將功能加入<xref:System.ComponentModel.Design.ViewTechnology>功能; 不過，<xref:System.ComponentModel.Design.ViewTechnology>功能會保留回溯相容性及未來使用，如果您選擇。 如需詳細資訊，請參閱 「.NET 圖形文件庫:: 範例設計工具 」 知識庫中的 Windows Form 在http://windowsforms.net/articles/shapedesigner.aspx。  
  
 <xref:System.ComponentModel.Design.ViewTechnology> 定義可以指出要用來控制設計工具裝載的文件的顯示模式的識別項。  
  
 您只應該在設計工具的裝載環境中使用的預設值。 在舊版的[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]、<xref:System.ComponentModel.Design.ViewTechnology.Default>列舉，指定的根目錄設計工具所支援的 UI 模型類型。 因為此模型不是可延伸的則您應該改用*檢視配接器*模型。 檢視配接器是會調整成其他類型的物件類型。  
  
 例如，HTML 設計工具可能會傳回`DemoDOM`其檢視和樹狀結構。 HTML 設計工具傳回預設檢視的技術。 Windows Form 裝載環境會有一或多個可用的檢視配接器類別。 如果可以轉換一個這類類別`DemoDOM`為 Windows Form 控制項，在裝載應用程式可支援這種類型的設計工具。 如果沒有配接器可以處理在設計工具傳回的資料類型<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>方法載入之設計工具將會失敗，和使用者會看到的錯誤。  
  
 Visual Studio 的可延伸的配置，以提供檢視配接器，所以它可以適用於任何 UI 技術。 協力廠商技術提供者也可以提供適當的檢視介面卡和其物件模型可立即使用。  
  
 如需使用檢視配接器的範例，請參閱 「.NET 圖形文件庫:: 範例設計工具 」 知識庫中的 Windows Form 在http://windowsforms.net/articles/shapedesigner.aspx。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.ViewTechnology.Default>類別設計工具中的。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>介面。  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指定預設檢視技術的支援。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根目錄設計工具可能會傳回任何類型的物件，但此物件必須是與配接器的主控件技術相容。 裝載環境，例如 Visual Studio 提供的方式來插入新的檢視技術配接器。 Windows Form 設計工具的預設檢視物件是<xref:System.Windows.Forms.Control?displayProperty=nameWithType>執行個體。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.ViewTechnology>類別設計工具中的。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.ComponentModel.Design.IRootDesigner>介面。  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>表示直接將檢視物件傳遞至開發環境的模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檢視物件必須實作任何開發環境所需的介面。 Visual Studio 開發環境支援 ActiveX 控制項、 將文件或實作可透過 Visual Studio VSI （Visual Studio 整合） 程式 IVsWindowPane 介面的物件的檢視表物件。 Visual Studio 開發環境提供這項檢視技術支援。 不一定可以使用所有的開發環境中支援這個檢視技術。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>表示 Windows Form 控制項物件為主要設計工具提供顯示方式的模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設計工具主應用程式中填入在 Windows Form 控制項開發環境文件視窗。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.ViewTechnology>類別設計工具中的。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.ComponentModel.Design.LocalizationExtenderProvider>類別。  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>