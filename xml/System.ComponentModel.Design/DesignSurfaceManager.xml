<Type Name="DesignSurfaceManager" FullName="System.ComponentModel.Design.DesignSurfaceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c135a4e8156bfd925bea508991b3701370925168" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurfaceManager extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurfaceManager&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9bfac-101">管理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 物件的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9bfac-101">Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-102"><xref:System.ComponentModel.Design.DesignSurfaceManager>類別設計為容器<xref:System.ComponentModel.Design.DesignSurface>物件。</span><span class="sxs-lookup"><span data-stu-id="9bfac-102">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="9bfac-103">它會提供該控制代碼之間，設計工具中，屬性視窗和其他全域物件的事件路由通用服務。</span><span class="sxs-lookup"><span data-stu-id="9bfac-103">It provides common services that handle event routing between designers, property windows, and other global objects.</span></span> <span data-ttu-id="9bfac-104">使用<xref:System.ComponentModel.Design.DesignSurfaceManager>是選擇性的但是如果您想要擁有數個設計工具視窗建議。</span><span class="sxs-lookup"><span data-stu-id="9bfac-104">Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.</span></span>  
  
 <span data-ttu-id="9bfac-105"><xref:System.ComponentModel.Design.DesignSurfaceManager>類別會自動提供數個設計階段服務。</span><span class="sxs-lookup"><span data-stu-id="9bfac-105">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically.</span></span> <span data-ttu-id="9bfac-106">您可以覆寫每個服務中受保護取代這些<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9bfac-106">You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="9bfac-107">若要取代的服務，覆寫建構函式，呼叫基底，並進行任何變更透過受保護<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9bfac-107">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="9bfac-108">所有的服務加入至服務容器中實作<xref:System.IDisposable>處置設計介面管理員時，會處置介面。</span><span class="sxs-lookup"><span data-stu-id="9bfac-108">All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed.</span></span> <span data-ttu-id="9bfac-109"><xref:System.ComponentModel.Design.DesignSurfaceManager>類別提供<xref:System.ComponentModel.Design.IDesignerEventService>為預設服務的介面。</span><span class="sxs-lookup"><span data-stu-id="9bfac-109">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service.</span></span> <span data-ttu-id="9bfac-110"><xref:System.ComponentModel.Design.IDesignerEventService> 提供通用的事件處理機制的設計工具事件。</span><span class="sxs-lookup"><span data-stu-id="9bfac-110"><xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events.</span></span> <span data-ttu-id="9bfac-111">這項機制，與應用程式會收到通知，當設計工具變成作用中。</span><span class="sxs-lookup"><span data-stu-id="9bfac-111">With this mechanism, an application is informed when a designer becomes active.</span></span> <span data-ttu-id="9bfac-112">服務會提供設計工具的集合和全域物件，例如 [屬性] 視窗中，可以監視選取的其中一個位置變更事件。</span><span class="sxs-lookup"><span data-stu-id="9bfac-112">The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="9bfac-113">系統資源的完整存取權。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9bfac-113">for full access to system resources.</span>
      </span>
      <span data-ttu-id="9bfac-114">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />， <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9bfac-114">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="9bfac-115">相關聯的狀態：</span>
      <span class="sxs-lookup">
        <span data-stu-id="9bfac-115">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-116">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-117">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager(IServiceProvider ^ parentProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="9bfac-118">父服務提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-118">A parent service provider.</span>
          </span>
          <span data-ttu-id="9bfac-119">如果設計介面管理員無法解析服務要求，則會將要求轉送至這個提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-119">Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bfac-120">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurface">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurface ActiveDesignSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveDesignSurface As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignSurface ^ ActiveDesignSurface { System::ComponentModel::Design::DesignSurface ^ get(); void set(System::ComponentModel::Design::DesignSurface ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-121">取得或設定使用中的設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-121">Gets or sets the active designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bfac-122">使用中的設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-122">The active designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-123"><xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A>屬性應該設定設計工具的使用者介面，每當設計工具會變成作用中視窗。</span><span class="sxs-lookup"><span data-stu-id="9bfac-123">The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window.</span></span> <span data-ttu-id="9bfac-124">這個屬性的預設實作會使用的預設實作<xref:System.ComponentModel.Design.IDesignerEventService>介面，以通知相關的人員的新設計工具目前為作用中。</span><span class="sxs-lookup"><span data-stu-id="9bfac-124">The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active.</span></span> <span data-ttu-id="9bfac-125">如果您提供自己的實作<xref:System.ComponentModel.Design.IDesignerEventService>，您應該覆寫此屬性，以適當地通知您的服務。</span><span class="sxs-lookup"><span data-stu-id="9bfac-125">If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately.</span></span> <span data-ttu-id="9bfac-126">這個屬性可以設定為`null`，指出沒有設計工具為作用中。</span><span class="sxs-lookup"><span data-stu-id="9bfac-126">This property can be set to `null`, indicating that no designer is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurfaceChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveDesignSurfaceChanged As ActiveDesignSurfaceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ActiveDesignSurfaceChangedEventHandler ^ ActiveDesignSurfaceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-127">發生於目前使用中的設計工具變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-127">Occurs when the currently active designer changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDesignSurface">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-128">建立設計介面的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-128">Creates an instance of a design surface.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface () As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-129">建立設計介面的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-129">Creates an instance of a design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bfac-130">新的設計介面執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-130">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="9bfac-131">父服務提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-131">A parent service provider.</span>
          </span>
          <span data-ttu-id="9bfac-132">將會建立新的合併服務提供者，它會首先尋求這個提供者的服務，然後將任何失敗委派給設計介面管理員物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-132">A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</span>
          </span>
          <span data-ttu-id="9bfac-133">這個合併提供者會傳入至 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-133">This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bfac-134">建立設計介面的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-134">Creates an instance of a design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bfac-135">新的設計介面執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-135">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-136">如果您想要輕鬆地加入每個設計工具的其他服務，使用`parentProvider`參數，以提供此設計介面的服務提供者。</span><span class="sxs-lookup"><span data-stu-id="9bfac-136">If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface.</span></span> <span data-ttu-id="9bfac-137"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法會建立合併的服務提供者，可滿足這兩個指定的服務提供者的服務要求以及<xref:System.ComponentModel.Design.DesignSurfaceManager>本身。</span><span class="sxs-lookup"><span data-stu-id="9bfac-137">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself.</span></span> <span data-ttu-id="9bfac-138"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法接著會傳遞到此服務提供者<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9bfac-138">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.</span></span>  
  
 <span data-ttu-id="9bfac-139">之後<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>傳回設計介面，<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法嘗試取得<xref:System.ComponentModel.Design.IDesignerEventService>。</span><span class="sxs-lookup"><span data-stu-id="9bfac-139">After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>.</span></span> <span data-ttu-id="9bfac-140">如果存在，而且如果它是服務的執行個體，<xref:System.ComponentModel.Design.DesignSurfaceManager>依預設，提供<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法會引發<xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated>事件。</span><span class="sxs-lookup"><span data-stu-id="9bfac-140">If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bfac-141">
            <paramref name="parentProvider" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-141">
              <paramref name="parentProvider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9bfac-142">如果提供外部服務的實作，則衍生自類別的責任<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />類別引發<see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" />事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="9bfac-142">If an external implementation of the service was provided, it is the responsibility of the class that derives from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class to raise the <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> event.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurfaceCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDesignSurfaceCore (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::DesignSurface ^ CreateDesignSurfaceCore(IServiceProvider ^ parentProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="9bfac-143">傳遞給設計介面的服務提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-143">A service provider to pass to the design surface.</span>
          </span>
          <span data-ttu-id="9bfac-144">這是 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 的執行個體或物件，該物件實作 <see cref="T:System.IServiceProvider" />，或表示 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 類別的服務提供者和外部傳遞的提供者之間的合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-144">This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bfac-145">建立設計介面的實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-145">Implementation that creates the design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bfac-146">新的設計介面執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-146">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-147"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>方法稱為由<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9bfac-147">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods.</span></span> <span data-ttu-id="9bfac-148">它是實際上會建立在設計介面的實作。</span><span class="sxs-lookup"><span data-stu-id="9bfac-148">It is the implementation that actually creates the design surface.</span></span> <span data-ttu-id="9bfac-149">預設實作只會傳回新<xref:System.ComponentModel.Design.DesignSurface>。</span><span class="sxs-lookup"><span data-stu-id="9bfac-149">The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="9bfac-150">您可能會覆寫這個方法以提供自訂物件衍生自<xref:System.ComponentModel.Design.DesignSurface>類別。</span><span class="sxs-lookup"><span data-stu-id="9bfac-150">You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceCreated">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceCreated As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-151">發生於設計工具建立時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-151">Occurs when a designer is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceDisposed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceDisposed As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceDisposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-152">發生於處置設計工具時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-152">Occurs when a designer is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignSurfaces As DesignSurfaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignSurfaceCollection ^ DesignSurfaces { System::ComponentModel::Design::DesignSurfaceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-153">取得設計介面的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-153">Gets a collection of design surfaces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bfac-154">目前由設計介面管理員裝載的設計介面集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-154">A collection of design surfaces that are currently hosted by the design surface manager.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-155"><xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A>屬性是直接頂端實作<xref:System.ComponentModel.Design.IDesignerEventService>，因此如果您提供該服務的實作，這個屬性會使用您的實作。</span><span class="sxs-lookup"><span data-stu-id="9bfac-155">The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-156">釋放 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-156">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-157">釋放 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-157">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-158">公用<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>方法會依循標準<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="9bfac-158">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="9bfac-159">呼叫這個方法會終結設計介面的管理員。</span><span class="sxs-lookup"><span data-stu-id="9bfac-159">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="9bfac-160">它也會處置服務容器，這會導致所有服務，可實作<xref:System.IDisposable>也被處置。</span><span class="sxs-lookup"><span data-stu-id="9bfac-160">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="9bfac-161">這個方法的受保護的版本是`virtual`就會遵循一般<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="9bfac-161">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bfac-162">因為<xref:System.ComponentModel.Design.DesignSurfaceManager>並沒有任何原生程式碼以清除，它並沒有完成項呼叫<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="9bfac-162">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="9bfac-163">如果您需要呼叫<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>，您必須自己加入完成項。</span><span class="sxs-lookup"><span data-stu-id="9bfac-163">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9bfac-164">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-164">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bfac-165">釋放 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-165">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-166">公用<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>方法會依循標準<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="9bfac-166">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="9bfac-167">呼叫這個方法會終結設計介面的管理員。</span><span class="sxs-lookup"><span data-stu-id="9bfac-167">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="9bfac-168">它也會處置服務容器，這會導致所有服務，可實作<xref:System.IDisposable>也被處置。</span><span class="sxs-lookup"><span data-stu-id="9bfac-168">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="9bfac-169">這個方法的受保護的版本是`virtual`就會遵循一般<xref:System.IDisposable>模式。</span><span class="sxs-lookup"><span data-stu-id="9bfac-169">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bfac-170">因為<xref:System.ComponentModel.Design.DesignSurfaceManager>並沒有任何原生程式碼以清除，它並沒有完成項呼叫<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="9bfac-170">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="9bfac-171">如果您需要呼叫<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>，您必須自己加入完成項。</span><span class="sxs-lookup"><span data-stu-id="9bfac-171">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="9bfac-172">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9bfac-172">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9bfac-173">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="9bfac-173">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9bfac-174"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="9bfac-174"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9bfac-175">當`disposing`參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.ComponentModel.Design.DesignSurfaceManager>參考。</span><span class="sxs-lookup"><span data-stu-id="9bfac-175">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references.</span></span> <span data-ttu-id="9bfac-176">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="9bfac-176">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9bfac-177">
              <see langword="Dispose" /> 可以被其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="9bfac-177">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="9bfac-178">在覆寫<see langword="Dispose(Boolean)" />小心不要參考物件已處置過的早期呼叫中<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="9bfac-178">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="9bfac-179">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="9bfac-179">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="9bfac-180">如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="9bfac-180">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="9bfac-181">要擷取的服務型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-181">The service type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bfac-182">取得設計介面管理員之服務容器中的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-182">Gets a service in the design surface manager’s service container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bfac-183">實作指定服務型別的物件，或指定服務型別之衍生類別的物件。否則，如果服務容器中不存在該服務，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-183">An object that implements, or is a derived class of, the given service type; otherwise, <see langword="null" /> if the service does not exist in the service container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-184"><xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A>方法會轉送至設計介面管理員在建構階段指定任何服務提供者。</span><span class="sxs-lookup"><span data-stu-id="9bfac-184">The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-185">發生於全域選取變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-185">Occurs when the global selection changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bfac-186">使用中的設計工具選取的元件集變更時，會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="9bfac-186">This event is raised when the active designer's selection of component set changes.</span></span> <span data-ttu-id="9bfac-187">這會對應到<xref:System.ComponentModel.Design.IDesignerEventService>介面。</span><span class="sxs-lookup"><span data-stu-id="9bfac-187">This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bfac-188">取得設計介面管理員的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-188">Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bfac-189">設計介面管理員的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bfac-189">The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9bfac-190">類別繼承自<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />類別可以用這個屬性來加入和移除服務。</span>
            <span class="sxs-lookup">
              <span data-stu-id="9bfac-190">Classes inheriting from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class can use this property to add and remove services.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>