<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5755a0f1e480cba3b8892b8ea4347b10bbfd4cc4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583853" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>顯示網頁上的按鈕控制項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#Introduction)  
  
-   [按鈕回傳行為 」 和 「 伺服器事件](#ButtonPostbackBehaviorandServerEvents)  
  
-   [用戶端指令碼處理 按鈕事件](#HandlingButtonEventsinClientScript)  
  
-   [按鈕控制項和驗證](#ButtonControlsAndValidation)  
  
-   [資料控制項中的按鈕](#ButtonsInDataControls)  
  
-   [資料繫結至控制項](#BindingDataToTheControls)  
  
-   [使用具有 UpdatePanel 控制項的按鈕](#UsingButtonsWithUpdatePanelControls)  
  
-   [宣告式語法](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>簡介  
 使用<xref:System.Web.UI.WebControls.Button>控制項來建立網頁，可讓使用者張貼至伺服器 頁面上的按鈕。 控制觸發程序，您可以控制它們來回應回傳伺服端程式碼中的事件。 它也可以引發事件，網頁回傳或可執行及取消送出的頁面之前，您可以處理的用戶端指令碼。  
  
> [!NOTE]
>  ASP.NET 包括各種類型的按鈕控制項，其中每個網頁以不同的方式出現。 它們是<xref:System.Web.UI.WebControls.Button>控制項，會轉譯成按鈕;<xref:System.Web.UI.WebControls.LinkButton>控制項，會轉譯成連結; 和<xref:System.Web.UI.WebControls.ImageButton>控制項，會轉譯成影像; 而<xref:System.Web.UI.WebControls.ImageMap>控制項，可讓您建立具有作用點圖形使用者可以按一下。 根據預設，所有按鈕控制項送都出頁面時按下。 您也可以使用<xref:System.Web.UI.HtmlControls.HtmlButton>和<xref:System.Web.UI.HtmlControls.HtmlInputButton>伺服端程式碼中進行程式設計來建立在頁面上的按鈕控制項。 如需 HTML 和 Web 伺服器控制項之間的差異詳細資訊，請參閱[ASP.NET Web 伺服器控制項概觀](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84)。  
  
 根據預設，<xref:System.Web.UI.WebControls.Button>控制項是送出按鈕。 送出按鈕沒有命令名稱 (所指定<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性) 只是網頁回傳至伺服器的文章與按鈕相關聯。 您可以提供的事件處理常式<xref:System.Web.UI.WebControls.Button.Click>按一下 [提交] 按鈕時，執行事件，以程式設計方式控制的動作。  
  
 在命令按鈕的命令名稱與按鈕相關聯，例如`Sort`，藉由設定<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性。 這可讓您建立多個<xref:System.Web.UI.WebControls.Button>Web 上的控制項頁面上，並以程式設計方式判斷哪些<xref:System.Web.UI.WebControls.Button>按一下控制項時。 您也可以使用<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性來提供其他資訊，才能執行這類命令的命令按鈕`Ascending`。 您可以提供的事件處理常式<xref:System.Web.UI.WebControls.Button.Command>事件，以程式設計方式控制的動作執行的命令按鈕。  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>按鈕回傳行為 」 和 「 伺服器事件  
 當使用者按一下任何 Web 伺服器控制項的按鈕時，網頁會傳送到伺服器。 這會導致處理網頁，並在伺服器端程式碼中引發任何暫止的事件。 所有頁面和控制處理都完成時，頁面呈現其本身的瀏覽器一次。  
  
 按鈕可以引發自己<xref:System.Web.UI.WebControls.Button.Click>事件或<xref:System.Web.UI.WebControls.Button.Command>事件，您可以使用伺服器端程式碼處理。 這是與不同事件在傳統的 HTML 頁面中，或在用戶端為基礎的 Web 應用程式，其中一個按鈕`onclick`使用 JavaScript 執行用戶端中處理事件。 如需詳細資訊，請參閱[ASP.NET Web Form 伺服器控制項事件模型](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)。  
  
 當使用者按一下按鈕控制項時，則會將頁面回傳至伺服器。 根據預設，頁面回傳至本身，  
  
 您可以設定將目前網頁到另一頁按鈕。 這可以是適用於建立多頁表單。 如需詳細資訊，請參閱[跨網頁張貼在 ASP.NET Web Form](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)。  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>用戶端指令碼處理 按鈕事件  
 伺服器事件，以及用戶端事件，可能會引發按鈕控制項。 伺服器事件之後會發生回傳，且您為網頁撰寫的伺服器端程式碼中處理。 用戶端事件用戶端指令碼，通常 ECMAScript (JavaScript)，以進行處理，以及送出頁面之前引發。 將用戶端事件加入至 ASP.NET 按鈕控制項，您可以執行工作，例如顯示確認對話方塊之前送出頁面上，且可能會取消提交。 如需詳細資訊，請參閱[用戶端指令碼中的 ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa)和[如何： 回應在用戶端指令碼按鈕 Web 伺服器控制項事件](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b)。  
  
 您也可以<xref:System.Web.UI.WebControls.Button>也用來執行回傳 （而不是只需執行的 HTTP POST 作業） 的 用戶端指令碼控制項。 這很有用，如果您想要以程式設計方式管理回傳，例如將它附加到頁面上的其他項目。 您可以設定<xref:System.Web.UI.WebControls.Button>控制項的<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性`true`造成<xref:System.Web.UI.WebControls.Button>控制項使用用戶端指令碼基礎回傳。  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>按鈕控制項和驗證  
 如果某個頁面包含 ASP.NET 驗證控制項中，依預設，按一下按鈕控制項會導致執行其檢查驗證程式控制項。 如果用戶端驗證已啟用的驗證程式控制項中，未送出頁面如果驗證檢查失敗。  
  
 下表描述按鈕控制項，可讓您更精確地控制驗證程序所支援的屬性。  
  
|屬性|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|指定是否按一下按鈕也會執行驗證檢查。 將此屬性設定為`false`以防止驗證檢查。|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|可讓您指定在按下按鈕時，要呼叫哪一個頁面上的驗證程式。 如果不建立任何驗證群組，按一下按鈕就會呼叫所有頁面上的驗證。|  
  
 如需詳細資訊，請參閱[驗證 ASP.NET 網頁中的使用者輸入](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>資料控制項中的按鈕  
 按鈕 Web 伺服器控制項通常用在資料控制項，例如在<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.GridView>，和<xref:System.Web.UI.WebControls.Repeater>清單控制項。 在這些情況下，您通常不回應直接按鈕 click 事件。 相反地，資料控制項中的按鈕會引發事件的特定資料控制項。 例如，在<xref:System.Web.UI.WebControls.DataList>控制項，可能會引發按鈕<xref:System.Web.UI.WebControls.DataList>控制項的<xref:System.Web.UI.WebControls.DataList.ItemCommand>而非引發的事件<xref:System.Web.UI.WebControls.Button>控制項的<xref:System.Web.UI.WebControls.Button.Click>事件。  
  
 因為資料繫結清單控制項可以包含有許多按鈕，您可以設定按鈕的<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性來指定要做為事件的一部分傳遞的值。 然後您就可以測試以查看哪一個按鈕已按下這個引數。  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>資料繫結至控制項  
 您可以為了控制它們的屬性設定按鈕的 Web 伺服器控制項繫結至資料來源以動態方式。 例如，您可以設定按鈕的<xref:System.Web.UI.WebControls.Button.Text%2A>使用資料繫結的屬性。  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>使用具有 UpdatePanel 控制項的按鈕  
 在局部網頁呈現可讓您能夠重新整理頁面上，不需回傳的部分。 <xref:System.Web.UI.UpdatePanel> 控制項可讓您將標示參與局部網頁呈現的網頁組件。 根據預設，在內部的控制項的行為<xref:System.Web.UI.UpdatePanel>控制，包括<xref:System.Web.UI.WebControls.Button>控制，是執行非同步回傳而非回傳。 這會重新整理的內容<xref:System.Web.UI.UpdatePanel>控制項的回傳的來源。  
  
 除了的案例是<xref:System.Web.UI.WebControls.Button>內部控制項<xref:System.Web.UI.UpdatePanel>控制項，您可以使用<xref:System.Web.UI.WebControls.Button>控制與<xref:System.Web.UI.UpdatePanel>控制項在下列案例：  
  
-   定義<xref:System.Web.UI.WebControls.Button>之外的控制項<xref:System.Web.UI.UpdatePanel>控制項作為<xref:System.Web.UI.AsyncPostBackTrigger>該面板的控制項。 按一下按鈕時，它會執行非同步回傳，並重新整理面板的內容。  
  
-   定義<xref:System.Web.UI.WebControls.Button>內部控制項<xref:System.Web.UI.UpdatePanel>控制項作為<xref:System.Web.UI.PostBackTrigger>面板。 按一下按鈕時，即使它是在執行回傳<xref:System.Web.UI.UpdatePanel>控制項。  
  
 如需有關局部網頁呈現，並使用<xref:System.Web.UI.UpdatePanel>控制項，請參閱[UpdatePanel 控制項概觀](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)和[局部網頁呈現概觀](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 下列程式碼範例示範如何建立提交<xref:System.Web.UI.WebControls.Button>張貼至伺服器的內容 Web 網頁的控制項。  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 下列程式碼範例示範如何建立命令<xref:System.Web.UI.WebControls.Button>排序清單的控制項。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Button" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.WebControls.Button>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立和初始化的新執行個體<xref:System.Web.UI.WebControls.Button>類別。  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，包含呈現在用戶端上的輸出資料流。</param>
        <summary>將 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的屬性加入到輸出資料流中，以在用戶端呈現。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A>在自訂的伺服器控制項的方法，讓<xref:System.Web.UI.WebControls.Button>文字一律會以紅色顯示。  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出按一下 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項時，是否執行驗證。</summary>
        <value>如果按一下 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項時會執行驗證，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，會執行頁面驗證時<xref:System.Web.UI.WebControls.Button>按一下控制項時。 頁面驗證會判斷是否與驗證頁面上的控制項通過所有驗證控制項所指定的驗證規則相關聯輸入的控制項。  
  
 您可以指定，或決定是否要在用戶端和伺服器上執行驗證時<xref:System.Web.UI.WebControls.Button>藉由按下控制項<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>屬性。 若要避免執行驗證，將<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>屬性`false`。  
  
> [!NOTE]
>  您應該設定<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>屬性`false`當您使用<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>回傳至其他頁面的屬性。 當張貼至不同頁面時，您應該明確檢查驗證。 如需範例，請參閱 < 備註 > 一節<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>屬性。  
  
 這個屬性通常會設定為`false`如`reset`或`clear`按鈕，以避免在按下按鈕時執行驗證。  
  
 時的值<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>屬性設定為`true`，您也可以使用<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>屬性，以指定的驗證群組名稱的<xref:System.Web.UI.WebControls.Button>驗證。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>以防止發生頁面驗證的屬性。 請注意，<xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>方法獨立啟動每個驗證控制項。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於按一下 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click>就會引發事件時<xref:System.Web.UI.WebControls.Button>按一下控制項時。 此事件通常使用於沒有命令名稱相關聯<xref:System.Web.UI.WebControls.Button>控制項 （例如，對於提交按鈕）。  
  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何指定及程式碼的事件處理常式<xref:System.Web.UI.WebControls.Button.Click>事件，以便在網站上顯示一則訊息頁面時<xref:System.Web.UI.WebControls.Button>按一下控制項時。  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於按一下 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command>就會引發事件時<xref:System.Web.UI.WebControls.Button>按一下控制項時。 此事件時常用的命令名稱，例如`Sort`，相關聯<xref:System.Web.UI.WebControls.Button>控制項。 這可讓您建立多個<xref:System.Web.UI.WebControls.Button>Web 上的控制項頁面上，並以程式設計方式判斷哪些<xref:System.Web.UI.WebControls.Button>按一下控制項時。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command>就會引發事件的形式在控制項階層架構透過`BubbleEvent`。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何指定及程式碼的事件處理常式<xref:System.Web.UI.WebControls.Button.Command>事件，以排序清單時<xref:System.Web.UI.WebControls.Button>按一下控制項時。 這個範例會指定事件處理常式以宣告方式，使用<xref:System.Web.UI.WebControls.Button.OnClick%2A>屬性<xref:System.Web.UI.WebControls.Button>控制項。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 下列程式碼範例示範如何指定事件處理常式，並以程式設計方式將它加入至事件中`Page_Load`方法。  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定選擇性 (Optional) 參數，與相關的 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 一起傳遞至 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 事件。</summary>
        <value>取得或設定選擇性 (Optional) 參數，與相關的 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 一起傳遞至 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 事件。 預設值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性來指定參數，可補充<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性。  
  
> [!NOTE]
>  雖然您可以設定<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>本身的屬性，它通常是僅使用時<xref:System.Web.UI.WebControls.Button.CommandName%2A>也設定屬性。  
  
 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性補充<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性可讓您提供執行命令的其他資訊。 例如，如果您設定<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性`Sort`和<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性`Ascending`，您指定要以遞增順序排序的命令。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性以建立<xref:System.Web.UI.WebControls.Button>清單依遞增順序排序的控制。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項關聯的命令名稱，這個命令名稱將傳遞至 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 事件。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的命令名稱。 預設值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您有多個<xref:System.Web.UI.WebControls.Button>控制項會在網頁上，使用<xref:System.Web.UI.WebControls.Button.CommandName%2A>與每個相關聯的屬性，指定，或決定的命令名稱<xref:System.Web.UI.WebControls.Button>控制項。 您可以設定<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性與任何字串，識別要執行的命令。 接著，您可以透過程式設計方式決定的命令名稱<xref:System.Web.UI.WebControls.Button>控制，並執行適當的動作。  
  
 其他資訊的命令，例如`Ascending`，可能會利用指定<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.CommandName%2A>屬性以建立<xref:System.Web.UI.WebControls.Button>排序清單的控制項。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立表示 <see cref="T:System.Web.UI.PostBackOptions" /> 控制項之回傳行為的 <see cref="T:System.Web.UI.WebControls.Button" /> 物件。</summary>
        <returns>
          <see cref="T:System.Web.UI.PostBackOptions" />，表示 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的回傳行為。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A>方法會建立<xref:System.Web.UI.PostBackOptions>物件，代表<xref:System.Web.UI.WebControls.Button>控制項的回傳行為。 <xref:System.Web.UI.PostBackOptions>物件通常隨後會傳遞至<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType>方法，用來取得用戶端指令碼函式的參考，叫用時，會導致回傳至網頁伺服器。  
  
 在擴充主要由控制項開發人員使用這個方法<xref:System.Web.UI.WebControls.Button>類別。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您可以覆寫<see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />衍生類別來修改回傳的選項按鈕控制項，或按一下按鈕時呼叫用戶端指令碼中的方法。確定呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />方法，使標準回傳選項所設定。</para>
        </block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 控制項的 <see cref="T:System.Web.UI.WebControls.Button" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click>就會引發事件時<xref:System.Web.UI.WebControls.Button>按一下控制項時。 此事件通常使用於沒有命令名稱相關聯<xref:System.Web.UI.WebControls.Button>控制項 （例如，對於提交按鈕）。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何指定及程式碼的事件處理常式<xref:System.Web.UI.WebControls.Button.Click>為了在網頁上顯示簡單訊息的事件。  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 事件引發時執行的用戶端指令碼。</summary>
        <value>當 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 事件引發時執行的用戶端指令碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.OnClientClick%2A>屬性來指定其他的用戶端指令碼時執行<xref:System.Web.UI.WebControls.Button>控制項的<xref:System.Web.UI.WebControls.Button.Click>就會引發事件。 您指定這個屬性會在轉譯的指令碼<xref:System.Web.UI.WebControls.Button>控制項的`OnClick`屬性除了控制項的預先定義的用戶端指令碼。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 本主題隨附了含有原始程式碼的 Visual Studio Web 站台專案：[下載](http://go.microsoft.com/fwlink/?LinkId=192871)。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.OnClientClick%2A>屬性來指定其他的用戶端指令碼時執行<xref:System.Web.UI.WebControls.Button>按一下控制項時。  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 控制項的 <see cref="T:System.Web.UI.WebControls.Button" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command>就會引發事件時<xref:System.Web.UI.WebControls.Button>按一下控制項時。 此事件時常用的命令名稱，例如`Sort`，相關聯<xref:System.Web.UI.WebControls.Button>控制項。 這可讓您建立多個<xref:System.Web.UI.WebControls.Button>Web 上的控制項頁面上，並以程式設計方式判斷哪些<xref:System.Web.UI.WebControls.Button>按一下控制項時。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command>就會引發事件的形式在控制項階層架構透過`BubbleEvent`。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Button.OnCommand%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何指定及程式碼的事件處理常式<xref:System.Web.UI.WebControls.Button.Command>事件，以排序清單時<xref:System.Web.UI.WebControls.Button>按一下控制項時。 這個範例會指定事件處理常式以宣告方式，使用<xref:System.Web.UI.WebControls.Button.OnClick%2A>屬性<xref:System.Web.UI.WebControls.Button>控制項。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 下列程式碼範例示範如何指定事件處理常式，並以程式設計方式將它加入至事件中`Page_Load`方法。  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>判斷按鈕在用戶端上呈現之前是否已按下。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.OnPreRender%2A>衍生的自訂類別時，方法使用主要由控制項開發人員<xref:System.Web.UI.WebControls.Button>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當按下 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項時，從目前的網頁要張貼到之目的地網頁的 URL。</summary>
        <value>當按下 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項時，從目前的網頁要張貼到之目的地網頁的 URL。 預設值是空字串 ("")，會使頁面回傳到本身。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>屬性可讓您執行 post 使用跨網頁<xref:System.Web.UI.WebControls.Button>控制項。  
  
> [!NOTE]
>  只有正確指定的路徑會使用這個屬性。 例如，相對路徑 (Test/default.aspx)，絕對路徑 (https://localhost/WebApp/default.aspx)和虛擬 (~ \Test\default.aspx) 正常運作。 格式不正確的路徑這類 「 / Test/default.aspx"或"\Test\default.aspx 」 無法運作。 請參閱[ASP.NET Web 專案路徑](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd)如需有關建立正確路徑的討論。  
  
 設定<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>屬性至網頁的 URL 時張貼<xref:System.Web.UI.WebControls.Button>按一下控制項時。 例如，指定`Page2.aspx`會使得包含的網頁<xref:System.Web.UI.WebControls.Button>張貼到控制項`Page2.aspx`。 如果您未指定的值<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>屬性頁面回傳至本身。  
  
> [!IMPORTANT]
>  當執行伺服器端驗證使用的控制項與跨網頁回傳時，您應該檢查頁面的<xref:System.Web.UI.Page.IsValid%2A>屬性是`true`之前處理回傳。 在跨網頁回傳，若要檢查頁面須<xref:System.Web.UI.Page.PreviousPage%2A>。 下列的 VB 程式碼會示範方式：  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 如需有關跨網頁公佈技術的詳細資訊，請參閱[跨網頁張貼在 ASP.NET Web Form](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>屬性來執行跨網頁回傳。 當使用者按一下<xref:System.Web.UI.WebControls.Button>控制項，在網頁回傳至指定的目標頁面的文字方塊中輸入的值<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>屬性。 若要執行此範例中，您也必須為這個程式碼範例的相同目錄中建立目標頁面的檔案。 目標頁面的程式碼提供一個範例中。  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType>屬性來存取從另一個頁面使用的已張貼值<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>屬性。 此頁面取得公佈前一個分頁的並向使用者顯示的字串。 如果您嘗試直接執行這個程式碼範例，您就會發生錯誤，因為值`text`欄位就是`null`。 請改用此程式碼建立目標網頁，並將檔案放在與前一個範例的程式碼相同的目錄。 檔案的名稱必須對應到指定的值<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>前一個範例中的屬性。 當您執行先前的範例程式碼時，這個網頁會在頁面間張貼發生時自動執行。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">事件的引數。</param>
        <summary>回傳至伺服器時，便會引發 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件會在內部使用<xref:System.Web.UI.WebControls.Button>控制項，它按一下時，引發<xref:System.Web.UI.WebControls.Button.Click>事件，而且如果定義，<xref:System.Web.UI.WebControls.Button.Command>事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件，表示要在用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將控制項的內容呈現在指定的寫入器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.WebControls.Button.RenderContents%2A>自訂的伺服器中的方法控制，好讓它永遠都會顯示下列自訂文字<xref:System.Web.UI.WebControls.Button>伺服器控制項。  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">事件的引數。</param>
        <summary>回傳至伺服器時，便會引發 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件會在內部使用<xref:System.Web.UI.WebControls.Button>控制項，它按一下時，引發<xref:System.Web.UI.WebControls.Button.Click>事件，而且如果定義，<xref:System.Web.UI.WebControls.Button.Command>事件。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A>方法，使它一定會引發<xref:System.Web.UI.WebControls.Button.OnClick%2A>中自訂事件<xref:System.Web.UI.WebControls.Button>控制項。  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示於 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項中的文字標題。</summary>
        <value>顯示於 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項中的文字標題。 預設值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.Text%2A>屬性來指定，或判斷要在顯示的標題<xref:System.Web.UI.WebControls.Button>控制項。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.Text%2A>屬性來指定中顯示的標題<xref:System.Web.UI.WebControls.Button>控制項。  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項使用用戶端瀏覽器的送出機制或 ASP.NET 回傳機制。</summary>
        <value>如果控制項使用用戶端瀏覽器的送出機制則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性來指定是否<xref:System.Web.UI.WebControls.Button>控制項使用的用戶端瀏覽器的提交機制或 ASP.NET 回傳機制。 根據預設值，這個屬性是`true`，因而導致<xref:System.Web.UI.WebControls.Button>控制項使用的瀏覽器送出的機制。 如果您指定`false`，ASP.NET 網頁架構會將用戶端指令碼加入至頁面以表單張貼至伺服器。  
  
 當<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性是`false`，控制項開發人員可以使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法以傳回用戶端回傳事件<xref:System.Web.UI.WebControls.Button>。 所傳回的字串<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法包含用戶端函式呼叫的文字，而且可以插入到用戶端事件處理常式。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性，以指定的送出機制，<xref:System.Web.UI.WebControls.Button>控制使用回傳至伺服器時。 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性設定為`false`，導致該按鈕可以使用 ASP.NET 回傳機制。 如果您要檢視使用您的瀏覽器檢視原始碼命令所呈現頁面的原始程式碼，您會看到用戶端指令碼，已加入 ASP.NET 網頁架構以表單張貼至伺服器。  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項群組，<see cref="T:System.Web.UI.WebControls.Button" /> 控制項會在回傳至伺服器時，針對這個群組進行驗證。</summary>
        <value>控制項群組，<see cref="T:System.Web.UI.WebControls.Button" /> 控制項會在回傳至伺服器時，針對這個群組進行驗證。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 驗證群組可讓您將驗證頁面上的控制項指派給特定的類別。 每個驗證群組可以獨立於其他的驗證群組頁面上進行驗證。 使用<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>屬性，以指定的驗證群組名稱的<xref:System.Web.UI.WebControls.Button>控制項回傳至伺服器時，會驗證。  
  
 此屬性沒有作用時，才值<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>屬性設定為`true`。 當您指定的值<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>屬性，只是指定群組的成員驗證控制項的驗證時<xref:System.Web.UI.WebControls.Button>控制項回傳至伺服器。 如果您未指定此屬性的值和<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>屬性設定為`true`，控制項回傳至伺服器時，會驗證所有驗證控制項在頁面上驗證群組未指派。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>屬性來指定要驗證時的控制項<xref:System.Web.UI.WebControls.Button>控制項回傳至伺服器。 此頁面包含從使用者擷取資料的三個文字方塊和三個<xref:System.Web.UI.WebControls.RequiredFieldValidator>控制項，以確保該使用者不會讓文字方塊空白。 <xref:System.Web.UI.WebControls.RequiredFieldValidator>控制項中的前兩個文字方塊`PersonalInfoGroup`驗證群組和<xref:System.Web.UI.WebControls.RequiredFieldValidator>控制項中的第三個文字方塊是`LocationInfoGroup`驗證群組。 當`Button1`按一下時，驗證群組中的控制項`PersonalInfoGroup`會進行驗證。 當`Button2`按一下時，驗證群組中的控制項`LocationInfoGroup`會進行驗證。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>