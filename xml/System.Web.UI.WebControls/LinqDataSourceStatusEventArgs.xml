<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ef52ad56e9cfa9547b24b47a2d6f4a4e6ee0e40" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36581351" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> 以及 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> 事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>類別可讓您檢查已執行的資料作業的結果<xref:System.Web.UI.WebControls.LinqDataSource>控制項。 A<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>物件傳遞至事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>， <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>， <xref:System.Web.UI.WebControls.LinqDataSource.Selected>，和<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件<xref:System.Web.UI.WebControls.LinqDataSource>控制項。  
  
 如果已順利完成資料操作，產生的資料物件會儲存在<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性和<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性是`null`。 如果資料作業失敗，資料作業期間發生的例外狀況會儲存在<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性和<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性是`null`。 如果處理的例外狀況由<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性，將<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>屬性`true`，因此不會擲回例外狀況。  
  
 擷取透過查詢所傳回的資料記錄的總數<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>屬性。  
  
   
  
## Examples  
 下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件。 中的事件處理常式中，如果<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性是`null`，物件中擷取識別碼的產品<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性。 產品識別碼是資料表的主索引鍵，由資料庫所設定，因此值未知的插入作業完成之前。 如果例外狀況訊息會記錄<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性不等於`null`。 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>屬性設定為`true`。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">資料作業期間發生的錯誤。</param>
        <summary>使用因為資料作業而發生的例外狀況，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料作業期間擲回例外狀況時，會使用這個建構函式。 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性會自動設定為`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">包含資料作業所產生資料的物件。</param>
        <summary>使用包含資料作業所產生資料的物件，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料作業已完成且未產生錯誤時，會使用這個建構函式。 `result`參數包含物件，表示資料作業的結果。 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性會自動設定為`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">包含資料作業所產生資料的物件。</param>
        <param name="totalRowCount">從資料擷取作業傳回的資料列數目。</param>
        <summary>使用包含資料作業所產生資料和所傳回資料列數的物件，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得在資料作業期間擲回的例外狀況。</summary>
        <value>如果發生錯誤，則為表示例外狀況的 <see cref="T:System.Exception" /> 物件，否則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果資料作業期間引發例外狀況，例外狀況會儲存在<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性。 您可以建立事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>， <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>， <xref:System.Web.UI.WebControls.LinqDataSource.Selected>，和<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件和例外狀況，如果有的話，擷取透過<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性。  
  
   
  
## Examples  
 下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件。 中的事件處理常式中，如果<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性是`null`，物件中擷取識別碼的產品<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性。 產品識別碼是資料表的主索引鍵，並設定資料庫，所以直到完成插入作業時，才會知道值。 如果例外狀況訊息會記錄<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性不等於`null`。 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>屬性設定為`true`。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示是否處理了例外狀況以及是否不應再度擲回此例外狀況。</summary>
        <value>如果例外狀況已處理則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以建立事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>， <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>， <xref:System.Web.UI.WebControls.LinqDataSource.Selected>，和<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件，以檢視這些作業期間發生任何例外狀況。 如果您處理的例外狀況，而不想要再次擲回，設定<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>屬性`true`。 如果您未設定<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>屬性`true`，例外狀況會傳播至呼叫堆疊中下一個事件處理常式。  
  
   
  
## Examples  
 下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件。 中的事件處理常式中，如果<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性是`null`，物件中擷取識別碼的產品<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性。 產品識別碼是資料表的主索引鍵，由資料庫所設定，因此值未知的插入作業完成之前。 如果例外狀況訊息會記錄<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性不等於`null`。 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>屬性設定為`true`。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得表示資料作業結果的物件。</summary>
        <value>包含資料作業所產生資料的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>來檢查值的屬性傳回的資料作業。 您可以擷取來自資料作業的輸出參數，或修改查詢所傳回的值。  
  
 儲存在資料<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性取決於已執行資料作業的類型。 當您刪除資料，<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性包含在指定之型別的物件<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性，與已刪除資料來源的原始值。 當您插入或更新資料，<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性包含在指定之型別的物件<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性，使用已儲存至資料來源的新值。 當您選取的資料，<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性包含查詢的結果。  
  
 如果選取的查詢牽涉到群組資料，或選取子集屬性中指定的類型從<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性，<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性包含動態建立類型的物件。 否則，<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性包含在指定之型別的物件<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性。  
  
   
  
## Examples  
 下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件。 中的事件處理常式中，如果<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性是`null`，物件中擷取識別碼的產品<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性。 產品識別碼是資料表的主索引鍵，由資料庫所設定，因此值未知的插入作業完成之前。 如果例外狀況訊息會記錄<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性不等於`null`。 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>屬性設定為`true`。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料擷取作業中資料集的資料列總數。</summary>
        <value>資料擷取作業中資料集的資料列總數。如果資料修改作業期間建立了 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 物件，則為 -1；如果您將 <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> 設為 <see langword="true" /> 並且將 <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> 設為 <see langword="false" />，藉此啟用自訂的分頁，則為 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>資料擷取作業期間取得資料集內的記錄數目的屬性。 一般而言，當您要顯示的資料頁，並想要顯示的記錄總數擷取這個屬性。  
  
 當資料分頁中的值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>屬性可能會從查詢所傳回的資料列的實際數目不同。 這是因為查詢傳回的資料列所需的資料頁面的數目。  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>屬性只有在存取中的事件處理常式時，包含從查詢的記錄數目<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件。 當在屬性經過存取的事件處理常式從<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>， <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>，或<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件，<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>屬性包含-1。  
  
 值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>屬性相依於<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性<xref:System.Web.UI.WebControls.LinqDataSource>控制項，然後在`AllowPaging`資料繫結控制項的屬性。 下表摘要說明可能的值為<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>屬性。  
  
|LinqDataSource 控制項的自動產生資料頁屬性|資料繫結控制項 AllowPaging 屬性|TotalRowCount 屬性|結果|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|查詢的記錄數目。|自動分頁的資料。|  
|`false`|`false`|查詢的記錄數目。|資料未分頁。|  
|`true`|`false`|-1|資料未分頁。|  
|`false`|`true`|值，您指派給<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>屬性中的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。|資料分頁根據的值，指定當您自訂分頁。|  
  
   
  
## Examples  
 下列範例顯示具有 Web 網頁<xref:System.Web.UI.WebControls.LinqDataSource>控制項，<xref:System.Web.UI.WebControls.GridView>控制項和<xref:System.Web.UI.WebControls.Literal>控制項。 <xref:System.Web.UI.WebControls.LinqDataSource>控制項定義的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 下列範例顯示的事件處理常式的程式碼<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件。 值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>屬性指派給<xref:System.Web.UI.WebControls.Literal>控制項。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>