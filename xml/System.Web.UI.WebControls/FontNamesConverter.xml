<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e2c595f1d13193e688435d0337edc0c688e2721" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598422" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在包含字型名稱清單的字串與代表個別名稱的字串陣列之間轉換。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>轉換單一字串，包含一份包含個別名稱的字串陣列的字型名稱，這個類別的方法。 每個字串中的字型名稱必須以逗號分隔。 例如，字串"新細明體，逾新明體，新細明體"，轉換成陣列，其中包含字串"新細明體"、"時間新細明體"和"新細明體"。 請注意，逗號會移除以及任何空白字元開頭或結尾的字型名稱。 不會移除空白字元中間字型名稱。  
  
 <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A>方法執行反向作業。 它會將轉換包含單一字串，包含名稱的清單以個別的字型名稱的字串陣列。 例如，陣列，其中包含字串"新細明體"、"時間新細明體"和"新細明體"轉換成字串"新細明體，時間新增新細明體，"。 請注意，逗號會自動插入之間沒有任何空白字元的字型名稱。  
  
 呼叫<xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>方法以驗證可以呼叫之前進行轉換<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.FontNamesConverter>類別，以將含有清單的字型名稱的字串轉換為包含個別名稱的字串陣列。 再轉換回單一字串，顯示的字串陣列。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FontNamesConverter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您永遠不應該直接存取型別轉換子。 請改為使用中呼叫適當的轉換程式<xref:System.ComponentModel.TypeDescriptor>物件。 如需詳細資訊，請參閱中的範例<xref:System.ComponentModel.TypeConverter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 物件，提供關於型別轉換內容的詳細資訊。 您可以選擇性地為這個參數傳入 <see langword="null" />。</param>
        <param name="sourceType">
          <see cref="T:System.Type" />，表示要從其中轉換的資料型別。</param>
        <summary>判斷這個轉換子是否能夠轉換指定資料型別的物件成為包含個別字型名稱的字串陣列。</summary>
        <returns>
          如果型別可以轉換則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>方法，以判斷指定的資料類型是否可以轉換成包含個別的字型名稱的字串陣列。  
  
> [!NOTE]
>  這個轉換器只能從轉換`string`資料型別。 `sourceType`參數必須是型別<xref:System.String>。 否則，這個方法會傳回`false`來表示，所以無法轉換指定的資料類型。  
  
 您可以選擇傳入`null`如`context`參數。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> 方法。 此範例會判斷指定的資料類型是否可以轉換成字串的陣列，其中包含個別字型名稱，然後再執行轉換。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 物件，提供關於型別轉換內容的詳細資訊。 這個參數不能使用於這個方法。 它保留做為這個方法的未來版本。 您可以選擇性地為這個參數傳入 <see langword="null" />。</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> 物件，表示關於文化特性的詳細資訊，例如語言、日曆系統等等。 這個參數不能使用於這個方法。 它保留做為這個方法的未來版本。 您可以選擇性地為這個參數傳入 <see langword="null" />。</param>
        <param name="value">
          <see cref="T:System.Object" /> 執行個體，代表要從其中轉換的來源字串。</param>
        <summary>轉換表示字型名稱清單的字串為包含個別字型名稱的字串陣列。</summary>
        <returns>
          <see cref="T:System.Object" /> 執行個體，表示包含個別字型名稱的字串陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>方法，將轉換包含一份包含個別名稱的字串陣列的字型名稱的字串。 每個字串中的字型名稱必須以逗號分隔。 例如，字串"新細明體，逾新明體，新細明體"，轉換成陣列，其中包含字串"新細明體"、"時間新細明體"和"新細明體"。 請注意，逗號會移除以及任何空白字元開頭或結尾的字型名稱。 不會移除空白字元中間字型名稱。  
  
> [!NOTE]
>  `context`和`culture`參數不會用於此版本的方法; 它們是保留供未來版本的方法。 您可以選擇傳入`null`為這些參數。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A>方法，將含有清單的字型名稱的字串轉換到包含個別名稱的字串陣列。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> 不是 <see cref="T:System.String" /> 型別。</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 物件，提供關於型別轉換內容的詳細資訊。 這個參數不能使用於這個方法。 它保留做為這個方法的未來版本。 您可以選擇性地為這個參數傳入 <see langword="null" />。</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> 物件，表示關於文化特性的詳細資訊，例如語言、日曆系統等等。 這個參數不能使用於這個方法。 它保留做為這個方法的未來版本。 您可以選擇性地為這個參數傳入 <see langword="null" />。</param>
        <param name="value">表示要做為字串來源陣列之轉換來源的物件。</param>
        <param name="destinationType">
          <see cref="T:System.Object" /> 執行個體物件，表示要轉換成的資料型別。 這個參數必須屬於 <see cref="T:System.String" /> 型別。</param>
        <summary>從包含個別字型名稱的字串陣列，建立表示字型名稱清單的字串。</summary>
        <returns>
          <see cref="T:System.Object" /> 執行個體，表示包含字型名稱清單的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A>方法，將轉換包含單一字串，包含名稱的清單以個別的字型名稱的字串陣列。 例如，陣列，其中包含字串"新細明體"、"時間新細明體"和"新細明體"轉換成字串"新細明體，時間新增新細明體，"。 請注意，逗號會自動插入之間沒有任何空白字元的字型名稱。  
  
> [!NOTE]
>  這個轉換器只能轉換`string`資料型別。 `destinationType`參數必須是型別<xref:System.String>。  
  
> [!NOTE]
>  `context`和`culture`參數不會用於此版本的方法; 它們是保留供未來版本的方法。 您可以選擇傳入`null`為這些參數。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A>方法，將轉換包含個別的名稱，以單一字串，包含一份字型名稱的字串陣列。  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> 不是 <see cref="T:System.String" /> 型別。</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>