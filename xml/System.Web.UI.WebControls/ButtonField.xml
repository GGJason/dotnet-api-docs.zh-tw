<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a03d51b698f5b8c27557ac49671da91354f9a2f8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37742938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示在資料繫結控制項中顯示為按鈕的欄位。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField>類別由資料繫結控制項 (例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) 中顯示按鈕會顯示每一筆記錄。 <xref:System.Web.UI.WebControls.ButtonField>物件顯示的方式會依據資料繫結控制項中使用。 例如，<xref:System.Web.UI.WebControls.GridView>控制項顯示<xref:System.Web.UI.WebControls.ButtonField>物件做為資料行，而<xref:System.Web.UI.WebControls.DetailsView>控制項所顯示的是它的資料列。  
  
 按下按鈕欄位中的按鈕，就會引發命令事件的父資料繫結控制項。 您可以提供自訂的常式，以藉由提供命令事件的事件處理常式在按一下命令按鈕時執行。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>控制會引發<xref:System.Web.UI.WebControls.GridView.RowCommand>事件，而<xref:System.Web.UI.WebControls.DetailsView>控制引發<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>事件。  
  
 若要判斷引發命令事件記錄的索引，請使用<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>資料繫結控制項傳遞至命令事件的事件引數的屬性。 <xref:System.Web.UI.WebControls.ButtonField>類別會自動填入<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>具有適當的索引值的屬性。  
  
 若要指定要顯示的按鈕類型，請使用<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性。 當顯示 [連結] 或 [命令] 按鈕，使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性來指定要顯示在按鈕的標題。  
  
> [!NOTE]
>  如果您設定<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性中中的所有按鈕<xref:System.Web.UI.WebControls.ButtonField>共用相同的標題。  
  
 或者，您可以繫結<xref:System.Web.UI.WebControls.ButtonField>物件至資料來源中的欄位。 這可讓您顯示不同的標題中的按鈕<xref:System.Web.UI.WebControls.ButtonField>物件。 指定之欄位中的值會用於按鈕的文字標題。 設定<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>要繫結屬性<xref:System.Web.UI.WebControls.ButtonField>物件至資料來源中的欄位。  
  
 當顯示為影像按鈕，使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>屬性來指定要顯示在按鈕的影像<xref:System.Web.UI.WebControls.ButtonField>物件。  
  
> [!NOTE]
>  中的所有按鈕<xref:System.Web.UI.WebControls.ButtonField>物件共用相同的映像。  
  
 您可以隱藏<xref:System.Web.UI.WebControls.ButtonField>藉由設定資料繫結控制項中的物件<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>屬性設`false`。  
  
 <xref:System.Web.UI.WebControls.ButtonField>物件可讓您自訂其頁首和頁尾區段。 若要在頁首或頁尾區段顯示標題，請設定<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>或<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>屬性，分別。 而不是顯示文字標頭區段中，您可以藉由設定顯示映像<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>屬性。 若要隱藏的標頭一節<xref:System.Web.UI.WebControls.ButtonField>物件，設定<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>屬性設`false`。  
  
> [!NOTE]
>  某些資料繫結控制項 (例如<xref:System.Web.UI.WebControls.GridView>控制項) 即可顯示或隱藏只控制項的整個標頭區段。 不支援這些資料繫結控制項<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>的個別按鈕欄位的屬性。 顯示或隱藏的資料繫結控制項的整個標頭區段 （如果有的話），請使用`ShowHeader`控制項的屬性。  
  
 您也可以自訂的外觀<xref:System.Web.UI.WebControls.ButtonField>藉由設定欄位的不同部分的樣式屬性的物件 （例如字型色彩、 背景色彩等等）。 下表列出不同的樣式屬性。  
  
|樣式屬性|樣式設定|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|子系 Web 伺服器控制項的<xref:System.Web.UI.WebControls.ButtonField>。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|頁尾區段的<xref:System.Web.UI.WebControls.ButtonField>。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|標頭區段<xref:System.Web.UI.WebControls.ButtonField>。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|資料中的項目<xref:System.Web.UI.WebControls.ButtonField>。|  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ButtonField>物件，以顯示資料行中的命令按鈕的<xref:System.Web.UI.WebControls.GridView>控制項。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A>建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.ButtonField>類別。 將欄位加入至動態建立的資料繫結控制項時，通常會使用這個建構函式。  
  
 若要新增<xref:System.Web.UI.WebControls.ButtonField>動態物件的資料繫結控制項中，建立新<xref:System.Web.UI.WebControls.ButtonField>物件、 設定其屬性，並將其加入資料繫結控制項的欄位集合。 例如，如果您使用<xref:System.Web.UI.WebControls.GridView>控制項，新增<xref:System.Web.UI.WebControls.ButtonField>物件到<xref:System.Web.UI.WebControls.GridView.Columns%2A>集合。  
  
> [!NOTE]
>  雖然您可以將欄位加入動態資料繫結控制項中，欄位應該宣告為靜態，並接著顯示或隱藏，為適當的。 以靜態方式宣告所有欄位，可都減少父資料繫結控制項的檢視狀態的大小。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 M:System.Web.UI.WebControls.ButtonField.#ctor 建構函式來新增<xref:System.Web.UI.WebControls.ButtonField>物件以動態方式為<xref:System.Web.UI.WebControls.GridView>控制項。  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字串，表示按一下 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 物件中的按鈕時要執行的動作。</summary>
        <value>按一下 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中的按鈕時要執行的動作名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>屬性，以建立關聯的命令名稱，例如`"Add"`或是`"Remove"`，使用中的按鈕<xref:System.Web.UI.WebControls.ButtonField>物件。 您可以設定<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>屬性，以任何字串，識別要在按一下 [命令] 按鈕時執行的動作。 您可以透過程式設計方式判斷事件處理常式中的命令名稱並執行適當的動作。  
  
> [!NOTE]
>  中的所有按鈕<xref:System.Web.UI.WebControls.ButtonField>物件共用相同的命令名稱。  
  
 資料繫結控制項辨識某些命令名稱，並會自動引發和處理控制項的適當事件。 會辨識下列的命令名稱：  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 要叫用分頁，設定<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>來`"Page"`和<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>內含<xref:System.Web.UI.WebControls.Button>控制`"First"`， `"Last"`， `"Prev"`， `"Next"`，或頁面數目。 不過，由於<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>for<xref:System.Web.UI.WebControls.ButtonField>控制項永遠是整數的資料列索引，<xref:System.Web.UI.WebControls.ButtonField>控制項不是適用於叫用分頁。 同樣地，雖然您可以叫用設定排序<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>要`"Sort"`，則<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>屬性<xref:System.Web.UI.WebControls.ButtonField>控制項永遠是整數資料列索引。 基於這個理由，<xref:System.Web.UI.WebControls.ButtonField>控制項不是適用於叫用排序。 自訂命令名稱，例如`"Add"`和`"Remove"`，您必須撰寫事件代碼，請檢查命令名稱，並執行某些自訂動作。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.DataControlCommands>。  
  
> [!NOTE]
>  並非所有的命令名稱可識別每個資料繫結控制項。 比方說，`"New"`無法辨識<xref:System.Web.UI.WebControls.GridView>控制項並`"Select"`無法辨識<xref:System.Web.UI.WebControls.DetailsView>控制項。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>屬性，以指定的按鈕中的命令名稱<xref:System.Web.UI.WebControls.ButtonField>物件的<xref:System.Web.UI.WebControls.GridView>控制項。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">要將目前 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 之屬性複製到的 <see cref="T:System.Web.UI.WebControls.ButtonField" />。</param>
        <summary>將目前 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 物件的屬性複製到指定的 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>方法是協助程式方法，以供<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>方法來複製目前的內容<xref:System.Web.UI.WebControls.ButtonFieldBase>-衍生物件<xref:System.Web.UI.WebControls.DataControlField>所建立的物件<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />方法在衍生類別中，呼叫<see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />方法，以確保會複製物件的所有屬性的基底類別。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立並傳回 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 類別的新執行個體。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> 類別的新執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A>方法是協助程式方法，以供<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>若要建立空的基底類別方法<xref:System.Web.UI.WebControls.ButtonField>要複製目前的內容物件<xref:System.Web.UI.WebControls.ButtonField>-衍生物件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>覆寫<see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" />方法，以傳回衍生的類別的新執行個體。請勿呼叫<see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" />基底類別的方法。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料欄位的名稱，其值為繫結至由 <see cref="P:System.Web.UI.WebControls.Button.Text" /> 物件所呈現之 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 屬性。</summary>
        <value>要繫結至 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 的欄位的名稱。 預設值是空字串 ("")，表示未設定 <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> 屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性<xref:System.Web.UI.WebControls.ButtonField>物件設定為<xref:System.Web.UI.WebControls.ButtonType.Button>或是<xref:System.Web.UI.WebControls.ButtonType.Link>值，請使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性來指定繫結至欄位的名稱<xref:System.Web.UI.WebControls.ButtonField>物件。 欄位的值隨即顯示在按鈕的文字為<xref:System.Web.UI.WebControls.ButtonField>物件。 （選擇性） 您可以格式化所顯示的文字，藉由設定<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>屬性。  
  
 而不是使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>要繫結屬性<xref:System.Web.UI.WebControls.ButtonField>物件的欄位從資料來源，您可以使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性，以顯示靜態文字中按鈕的文字<xref:System.Web.UI.WebControls.ButtonField>物件。 當<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性時，每個按鈕都共用相同的標題。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>並<xref:System.Web.UI.WebControls.ButtonField.Text%2A>同時設定了屬性，<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性會優先。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性來指定要顯示的欄位<xref:System.Web.UI.WebControls.ButtonField>資料行<xref:System.Web.UI.WebControls.GridView>控制項。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字串，指定欄位值的顯示格式。</summary>
        <value>格式字串，指定欄位值的顯示格式。 預設為空字串 ("")，表示未將特殊格式套用至該欄位值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>屬性，以指定的值，會顯示在自訂的顯示格式<xref:System.Web.UI.WebControls.ButtonField>物件。 如果<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>未設定屬性、 欄位的值會顯示不含任何特殊格式設定。  
  
> [!NOTE]
>  套用的格式字串時，才<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性設定。  
  
 格式字串可以是任何常值字串，而且通常包含欄位值的預留位置。 例如，在格式字串`"Item Value: {0}"`，則`{0}`預留位置取代欄位的值，當它出現在<xref:System.Web.UI.WebControls.ButtonField>物件。 格式字串的其餘部分會顯示為常值文字。  
  
> [!NOTE]
>  如果格式字串不包含預留位置，從資料來源欄位的值不會包含在最後顯示的文字。  
  
 預留位置組成兩個組件，並以冒號分隔及包裝在表單中大括號 { `A` : `Bxx` }。 冒號之前的值 (`A`一般範例中) 中以零為起始的參數清單中指定的欄位值的索引。  
  
> [!NOTE]
>  這`A`參數是格式化的語法的一部分。 因為每個資料格中只能有一個欄位的值，這個值只可以設定為 0。  
  
 冒號和冒號之後的值是選擇性的。 冒號後面的字元 (`B`一般範例中) 指定用來顯示值的格式。 下表列出常見的格式。  
  
|格式字元|描述|  
|----------------------|-----------------|  
|`C`|以貨幣格式顯示數值。|  
|`D`|以十進位格式顯示數值。|  
|`E`|以科學記號 （指數） 格式顯示數值。|  
|`F`|固定格式顯示數值。|  
|`G`|以一般格式顯示數值。|  
|`N`|以數字格式顯示數值。|  
|`X`|以十六進位格式顯示數值。|  
  
> [!NOTE]
>  除了`X`，格式字元不區分大小寫。 `X`格式字元會顯示在指定的情況下的十六進位字元。  
  
 格式字元後的值 (`xx`一般範例中) 指定有效位數或小數位數，若要顯示的數目。 例如，格式字串`"{0:F2}"`會顯示兩個小數位數定點數字。  
  
 如需格式化字串的詳細資訊，請參閱[格式化類型](~/docs/standard/base-types/formatting-types.md)。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>屬性，以指定的欄位值的自訂的顯示格式。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">要格式化的欄位值。</param>
        <summary>格式化 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 物件中儲存格的指定欄位值。</summary>
        <returns>欄位值，已轉換為 <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> 屬性所指定的格式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A>方法是用來轉換成格式所指定的欄位值的 helper 方法<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>屬性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在擴充<see cref="T:System.Web.UI.WebControls.ButtonField" />類別，您可以覆寫<see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />執行自訂格式化常式的方法。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要顯示於 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 物件中之每個按鈕的影像。</summary>
        <value>要顯示於 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中之每個按鈕的影像。 預設值是空字串 ("")，表示未設定 <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> 屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>的屬性<xref:System.Web.UI.WebControls.ButtonField>物件設定為<xref:System.Web.UI.WebControls.ButtonType.Image>值，請使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>屬性來指定要顯示之每個按鈕的影像。 此映像可以是任何檔案格式 （.jpg、.gif、.bmp、 等等），只要用戶端瀏覽器支援該格式。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>屬性來指定要在每個按鈕顯示之影像<xref:System.Web.UI.WebControls.ButtonField>物件。 若要顯示此程式碼範例，您必須提供自己的映像。  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">
          <see langword="true" /> 表示啟用排序，否則為 <see langword="false" />。</param>
        <param name="control">擁有 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 的資料控制項。</param>
        <summary>初始化目前的 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 物件。</summary>
        <returns>
          <see langword="false" />，表示控制項無需重新繫結至資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A>方法會呼叫用的資料控制項<xref:System.Web.UI.WebControls.ButtonField>物件相關聯執行基本的物件初始化的欄位，欄位絕不會新增至資料列集合之前的執行個體。 資料控制項，例如<xref:System.Web.UI.WebControls.DetailsView>並<xref:System.Web.UI.WebControls.GridView>，呼叫<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>方法中的其`CreateChildControls`方法之前其他方法，例如`CreateRow`，呼叫以建立特定的資料列與資料。  
  
 呼叫<xref:System.Web.UI.WebControls.ButtonField.Initialize%2A>方法，當您撰寫自訂的資料繫結控制項時，會使用<xref:System.Web.UI.WebControls.TableCell>物件來執行基本的初始設定<xref:System.Web.UI.WebControls.ButtonField>物件。 實作這個方法，如果您<xref:System.Web.UI.WebControls.ButtonField>-衍生的型別需要的任何物件初始化之前它會填入,<xref:System.Web.UI.WebControls.TableCell>物件的資料或控制項<xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您應該覆寫<see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />方法，並傳回<see langword="true" />，如果在回傳時才能正常運作的欄位順序中執行資料繫結所需要的欄位。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">要初始化的 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />。</param>
        <param name="cellType">
          <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 值，表示資料列 (標頭、頁尾或資料) 的型別。</param>
        <param name="rowState">其中一個 <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值。</param>
        <param name="rowIndex">資料列之以零起始的索引。</param>
        <summary>初始化指定的 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> 物件為指定的資料列狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>方法會建立所指定的按鈕類型<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>屬性並將它加入<xref:System.Web.UI.Control.Controls%2A>的集合<xref:System.Web.UI.WebControls.DataControlFieldCell>物件。 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>的屬性<xref:System.Web.UI.WebControls.Button>控制設為  `rowIndex`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要顯示於 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 物件中之每個按鈕的靜態標題。</summary>
        <value>顯示於 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中之每個按鈕的標題。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>的屬性<xref:System.Web.UI.WebControls.ButtonField>物件設定為<xref:System.Web.UI.WebControls.ButtonType.Button>或<xref:System.Web.UI.WebControls.ButtonType.Link>值，請使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性，以顯示靜態文字中按鈕的標題<xref:System.Web.UI.WebControls.ButtonField>。 每個按鈕都共用相同的標題。  
  
 而不是使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性，以顯示靜態文字<xref:System.Web.UI.WebControls.ButtonField>物件，您可以使用<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>要繫結屬性<xref:System.Web.UI.WebControls.ButtonField>至資料來源中的欄位。 欄位的值隨即顯示為按鈕的標題。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>並<xref:System.Web.UI.WebControls.ButtonField.Text%2A>同時設定了屬性，<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>屬性會優先。  
  
 這個屬性的值會儲存檢視狀態中。  
  
 此屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱 <<c0> <xref:System.ComponentModel.LocalizableAttribute> 並[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ButtonField.Text%2A>屬性來指定要顯示在每個按鈕的標題<xref:System.Web.UI.WebControls.ButtonField>物件。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 物件中所包含的控制項是否支援回呼 (Callback)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>方法是協助程式方法，用來判斷控制項是否包含在<xref:System.Web.UI.WebControls.ButtonField>物件支援回呼。 這個方法會實作為空方法 （不包含任何程式碼的方法） 來指出支援回呼。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>衍生自類別<see cref="T:System.Web.UI.WebControls.BoundField" />類別可以覆寫<see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />方法，以表示該欄位所包含的控制項是否支援回呼。若要指出支援回呼，實作<see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />方法作為空方法不會擲回例外狀況; 否則發生例外狀況描述為什麼不支援回呼的有用訊息與。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>