<Type Name="Xml" FullName="System.Web.UI.WebControls.Xml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3911495cfd2b8bef3770e6308342070eb2c50655" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Xml : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Xml extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Xml" />
  <TypeSignature Language="VB.NET" Value="Public Class Xml&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Xml : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type Xml = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false, true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Displays an XML document without formatting or using Extensible Stylesheet Language Transformations (XSLT).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#introduction)  
  
-   [指定 XML 資料](#specifying_xml_data)  
  
-   [指定的 XSL 轉換](#specifying_an_xsl_transformation)  
  
-   [宣告式語法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>簡介  
 使用<xref:System.Web.UI.WebControls.Xml>控制項來顯示未格式化，或使用 XSL 轉換 XML 文件的內容。  
  
<a name="specifying_xml_data"></a>   
## <a name="specifying-xml-data"></a>指定 XML 資料  
 設定的三個屬性其中一個來指定要顯示的 XML 文件。 這三個屬性都代表不同類型的 XML 文件就可以顯示出來。 您可以顯示<xref:System.Xml.XmlDocument?displayProperty=nameWithType>，XML 字串或藉由設定適當的屬性 XML 檔案。 下表列出用於指定 XML 文件的屬性。  
  
|屬性|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Xml.Document%2A>|設定 XML 文件使用<xref:System.Xml.XmlDocument?displayProperty=nameWithType>物件。 **警告：** 這個屬性已經過時。 其中一個其他屬性的使用本節所列的設定內容的 XML<xref:System.Web.UI.WebControls.Xml>控制項。|  
|<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|設定使用字串的 XML 文件。 **注意：** 這個屬性通常以宣告方式設定放置文字的開頭和結尾之間`<asp:Xml>`標記<xref:System.Web.UI.WebControls.Xml>控制項。|  
|<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|設定使用檔案的 XML 文件。|  
  
> [!NOTE]
>  至少其中一個 XML 文件屬性必須設定為顯示 XML 文件。 如果設定多個 XML 文件屬性，則會顯示最後一個屬性集合中所參考的 XML 文件。 其他屬性中的文件會被忽略。  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a>指定的 XSL 轉換  
 您可以選擇性地指定格式的 XML 文件，藉由設定兩個屬性的其中一個輸出資料流寫入之前的 XSL 轉換 (XSLT) 樣式表。 兩個屬性都代表不同類型的 XSL 轉換樣式表可以用來格式化 XML 文件。 您可以格式化 XML 文件具有<xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=nameWithType>物件，或使用 XSL 轉換樣式表檔案設定適當的屬性。 如果未不指定任何 XSL 轉換樣式表，則使用預設格式顯示 XML 文件。 下表列出針對指定的 XSL 轉換樣式表的屬性。  
  
|屬性|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Xml.Transform%2A>|使用指定的 XML 文件格式化<xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType>物件。 **注意：** 使用<xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType>物件需要`Full Trust`權限。|  
|<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|格式化 XML 文件，使用指定的 XSL 轉換樣式表檔案。|  
  
> [!NOTE]
>  XSL 轉換樣式表是選擇性的。 您不需要設定<xref:System.Web.UI.WebControls.Xml.Transform%2A>或<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>屬性。 如果這兩個 XSL 轉換樣式表屬性已設定，最後一個屬性設定會決定哪些 XSL 轉換樣式表用來格式化 XML 文件。 會忽略其他屬性。  
  
 <xref:System.Web.UI.WebControls.Xml>類別也提供<xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A>屬性，可讓您使用選擇性引數提供的 XSL 轉換樣式表。 引數可以是 XSL 轉換 (XSLT) 參數或擴充物件。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:Xml  
    DocumentSource="uri"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformSource="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 下列程式碼範例示範如何建立<xref:System.Xml.XmlDocument>和<xref:System.Xml.Xsl.XslTransform>範例 XML 檔案和 XSL 轉換樣式表的物件。 物件然後用於 XML 控制項所顯示的 XML 文件。  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlDocument" />
    <altmember cref="T:System.Xml.Xsl.XslTransform" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.TransformArgumentList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Xml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Xml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="xml.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An <see cref="T:System.Object" /> that represents the parsed element.</param>
        <summary>Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.WebControls.Xml.AddParsedSubObject%2A>中自訂方法<xref:System.Web.UI.WebControls.Xml>伺服器控制項。  
  
 [!code-aspx-csharp[CustomXmlAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/CS/custom_xml_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomXmlAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/VB/custom_xml_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomXmlAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/CS/custom_xml_addparsedsubobject.cs#2)]
 [!code-vb[CustomXmlAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/VB/custom_xml_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="obj" /> is not of type <see cref="T:System.Web.UI.LiteralControl" />.</exception>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.Xml.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Overrides the <see cref="P:System.Web.UI.Control.ClientID" /> property and returns the base server control identifier.</summary>
        <value>基底伺服器控制識別項。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Xml.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Overrides the <see cref="P:System.Web.UI.Control.Controls" /> property and returns the base <see cref="T:System.Web.UI.ControlCollection" /> collection.</summary>
        <value>基底<see cref="T:System.Web.UI.ControlCollection" />集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="xml.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:System.Web.UI.EmptyControlCollection" /> object.</summary>
        <returns>Always returns an <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.CreateControlCollection%2A>主要由控制項開發人員擴充功能的使用方法<xref:System.Web.UI.WebControls.Xml>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument Document { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Document" />
      <MemberSignature Language="VB.NET" Value="Public Property Document As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDocument ^ Document { System::Xml::XmlDocument ^ get(); void set(System::Xml::XmlDocument ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Xml.XmlDocument with get, set" Usage="System.Web.UI.WebControls.Xml.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is the XPathNavigator property. Create a System.Xml.XPath.XPathDocument and call CreateNavigator() to create an XPathNavigator. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Xml.XmlDocument" /> to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
        <value>
          <see cref="T:System.Xml.XmlDocument" />中顯示<see cref="T:System.Web.UI.WebControls.Xml" />控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.Document%2A> 屬性已經過時。 若要指定將會顯示在 XML<xref:System.Web.UI.WebControls.Xml>控制，請使用<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>屬性或<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>屬性。 如需有關這些替代選項的詳細資訊，請參閱類別概觀<xref:System.Web.UI.WebControls.Xml>控制項。  
  
 若要顯示在 XML 文件<xref:System.Web.UI.WebControls.Xml>中其中一種方式指定控制項。 您可以指定<xref:System.Xml.XmlDocument?displayProperty=nameWithType>物件、 XML 字串或藉由設定適當的屬性的 XML 檔案。 <xref:System.Web.UI.WebControls.Xml.Document%2A>屬性用來指定<xref:System.Xml.XmlDocument?displayProperty=nameWithType>（代表 XML 文件） 在控制項中顯示。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立<xref:System.Xml.XmlDocument>和<xref:System.Xml.Xsl.XslTransform>範例 XML 檔案和 XSL 轉換樣式表的物件。 物件然後用於 XML 控制項所顯示的 XML 文件。  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocument" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="DocumentContent">
      <MemberSignature Language="C#" Value="public string DocumentContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.DocumentContent" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentContent : string with get, set" Usage="System.Web.UI.WebControls.Xml.DocumentContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets a string that contains the XML document to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
        <value>字串，包含 XML 文件中顯示<see cref="T:System.Web.UI.WebControls.Xml" />控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要顯示在 XML 文件<xref:System.Web.UI.WebControls.Xml>中其中一種方式指定控制項。 您可以指定<xref:System.Xml.XmlDocument?displayProperty=nameWithType>物件、 XML 字串或藉由設定適當的屬性的 XML 檔案。 <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>屬性用來指定要在控制項中顯示的 XML 字串 （表示 XML 文件）。 <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>屬性不是通常是以程式設計方式設定，或設定控制項屬性。 相反地，XML 字串通常設定以宣告方式放置文字的開頭和結尾之間`<asp:Xml>`控制項的標記。  
  
> [!NOTE]
>  雖然<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>屬性同時包含`get`和`set`存取子中，只有`set`存取子是很有用。 如果您使用`get`存取子，<xref:System.String.Empty?displayProperty=nameWithType>傳回。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="DocumentSource">
      <MemberSignature Language="C#" Value="public string DocumentSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentSource : string with get, set" Usage="System.Web.UI.WebControls.Xml.DocumentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path to an XML document to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
        <value>若要顯示在 XML 文件的路徑<see cref="T:System.Web.UI.WebControls.Xml" />控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要顯示在 XML 文件<xref:System.Web.UI.WebControls.Xml>中其中一種方式指定控制項。 您可以指定<xref:System.Xml.XmlDocument?displayProperty=nameWithType>物件、 XML 字串或藉由設定適當的屬性的 XML 檔案。 <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>屬性用來指定要在控制項中顯示 （代表 XML 文件） 的 XML 檔案的路徑。 您可以使用相對或絕對路徑。 相對路徑與相關位置的 Web Form 網頁或使用者控制項檔案的位置，但未指定伺服器上的完整路徑。 路徑是相對於網頁上的位置。 這可讓您容易到另一個目錄移動整個站台伺服器上沒有程式碼中的檔案更新的路徑。 絕對路徑會提供完整路徑，所以移動到另一個目錄的站台需要更新程式碼。  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示使用 XSL 轉換中的 XML 文件<xref:System.Web.UI.WebControls.Xml>控制項。  
  
 [!code-aspx-csharp[XmlControlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlControlClassExample/CS/xmlcontrolcs.aspx#1)]
 [!code-aspx-vb[XmlControlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlControlClassExample/VB/xmlcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.Xml.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Overrides the <see cref="P:System.Web.UI.Control.EnableTheming" /> property. This property is not supported by the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
        <value>一律傳回 <see langword="false" />。 不支援這個屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.EnableTheming%2A>屬性繼承自<xref:System.Web.UI.Control>類別，但不適用於<xref:System.Web.UI.WebControls.Xml>類別。 任何嘗試設定這個屬性的值會擲回<xref:System.NotSupportedException>例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt is made to set the value of this property.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="override this.FindControl : string -&gt; System.Web.UI.Control" Usage="xml.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The identifier for the control to be found.</param>
        <summary>Searches the page naming container for the specified server control.</summary>
        <returns>The specified control; otherwise, <see langword="null" /> if the specified control does not exist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="xml.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Overrides the <see cref="M:System.Web.UI.Control.Focus" /> method. This method is not supported by the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.Focus%2A>方法繼承自<xref:System.Web.UI.Control>類別，但它不是適用於<xref:System.Web.UI.WebControls.Xml>類別。 任何嘗試叫用此方法會擲回<xref:System.NotSupportedException>例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt is made to invoke this method.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="xml.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets design-time data for a control.</summary>
        <returns>An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.GetDesignModeState%2A>方法是 helper 方法，用來取得目前的設計階段狀態<xref:System.Web.UI.WebControls.Xml>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberSignature Language="F#" Value="override this.HasControls : unit -&gt; bool" Usage="xml.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the server control contains any child controls.</summary>
        <returns>
          <see langword="true" /> if the control contains other controls; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="xml.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">The result of the output stream.</param>
        <summary>Renders the results to the output stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.WebControls.Xml.Render%2A>自訂的伺服器控制項中的方法，讓<xref:System.Web.UI.WebControls.Xml>控制項一律會顯示與映像。  
  
 [!code-aspx-csharp[CustomXmlRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlRender/CS/custom_xml_rendercs.aspx#1)]
 [!code-aspx-vb[CustomXmlRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlRender/VB/custom_xml_rendervb.aspx#1)]  
  
 [!code-csharp[CustomXmlRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlRender/CS/custom_xml_render.cs#2)]
 [!code-vb[CustomXmlRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlRender/VB/custom_xml_render.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.Xml.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Overrides the <see cref="P:System.Web.UI.Control.SkinID" /> property. This property is not supported by the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
        <value>一律會傳回空字串 ("")。 不支援這個屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.SkinID%2A>屬性繼承自<xref:System.Web.UI.Control>類別，但不適用於<xref:System.Web.UI.WebControls.Xml>類別。 任何嘗試設定這個屬性的值會擲回<xref:System.NotSupportedException>例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt is made to set the value of this property.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.XslTransform Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XslTransform Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As XslTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::XslTransform ^ Transform { System::Xml::Xsl::XslTransform ^ get(); void set(System::Xml::Xsl::XslTransform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.Xsl.XslTransform with get, set" Usage="System.Web.UI.WebControls.Xml.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XslTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Xml.Xsl.XslTransform" /> object that formats the XML document before it is written to the output stream.</summary>
        <value>
          <see cref="T:System.Xml.Xsl.XslTransform" />格式化 XML 文件寫入輸出資料流之前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用<xref:System.Web.UI.WebControls.Xml>控制項以顯示 XML 文件，您可以選擇性地指定寫入輸出資料流中有兩種之前格式化 XML 文件，可延伸樣式表語言轉換 (XSLT) 樣式表。 您可以格式化 XML 文件，其中一種<xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType>物件或 XSL 轉換樣式表檔案。 如果未不指定任何 XSL 轉換文件，則使用預設的格式顯示 XML 文件。 <xref:System.Web.UI.WebControls.Xml.Transform%2A>屬性用來指定<xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType>物件 （代表 XSL 轉換的文件） 用來格式化 XML 文件寫入輸出資料流之前。  
  
> [!NOTE]
>  使用<xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType>物件需要`Full Trust`權限。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立<xref:System.Xml.XmlDocument>和<xref:System.Xml.Xsl.XslTransform>範例 XML 檔案和 XSL 轉換樣式表的物件。 物件然後用於 XML 控制項所顯示的 XML 文件。  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformArgumentList : System.Xml.Xsl.XsltArgumentList with get, set" Usage="System.Web.UI.WebControls.Xml.TransformArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Xml.Xsl.XsltArgumentList" /> that contains a list of optional arguments passed to the style sheet and used during the Extensible Stylesheet Language Transformation (XSLT).</summary>
        <value>A <see cref="T:System.Xml.Xsl.XsltArgumentList" /> ，其中包含選擇性引數傳遞給樣式表和 XSL 轉換期間使用的清單。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A>屬性提供 XSL 轉換樣式表使用選擇性引數。 引數可以是 XSLT 參數或擴充物件。  
  
 如需有關使用<xref:System.Xml.Xsl.XsltArgumentList?displayProperty=nameWithType>類別，請參閱[樣式表參數和擴充物件的 XsltArgumentList](~/docs/standard/data/xml/xsltargumentlist-for-style-sheet-parameters-and-extension-objects.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="TransformSource">
      <MemberSignature Language="C#" Value="public string TransformSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.TransformSource" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransformSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformSource : string with get, set" Usage="System.Web.UI.WebControls.Xml.TransformSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path to an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream.</summary>
        <value>格式化 XML 文件寫入輸出資料流之前的 XSL 轉換樣式表路徑。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用<xref:System.Web.UI.WebControls.Xml>控制項以顯示 XML 文件，您可以選擇性地指定格式的 XML 文件寫入輸出資料流中有兩種之前的 XSL 轉換樣式表。 您可能可以格式化 XML 文件具有<xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType>物件，或使用 XSL 轉換樣式表檔案。 如果未不指定任何 XSL 轉換樣式表，則使用預設格式顯示 XML 文件。 <xref:System.Web.UI.WebControls.Xml.TransformSource%2A>屬性用來指定用來格式化 XML 文件寫入輸出資料流之前 （代表執行 XSL 轉換樣式表） XSL 轉換樣式表檔案的路徑。 您可以使用相對或絕對路徑。 相對路徑與相關位置的 Web Form 網頁或使用者控制項檔案的位置，但未指定伺服器上的完整路徑。 路徑是相對於網頁上的位置。 這可讓您容易到另一個目錄移動整個站台伺服器上沒有程式碼中的檔案更新的路徑。 絕對路徑會提供完整路徑，所以移動到另一個目錄的站台需要更新程式碼。  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示使用 XSL 轉換中的 XML 文件<xref:System.Web.UI.WebControls.Xml>控制項。  
  
 [!code-aspx-csharp[XmlControlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlControlClassExample/CS/xmlcontrolcs.aspx#1)]
 [!code-aspx-vb[XmlControlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlControlClassExample/VB/xmlcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      </Docs>
    </Member>
    <Member MemberName="XPathNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator XPathNavigator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.XPathNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Property XPathNavigator As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathNavigator ^ XPathNavigator { System::Xml::XPath::XPathNavigator ^ get(); void set(System::Xml::XPath::XPathNavigator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPathNavigator : System.Xml.XPath.XPathNavigator with get, set" Usage="System.Web.UI.WebControls.Xml.XPathNavigator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a cursor model for navigating and editing the XML data associated with the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
        <value>
          <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以用來建立關聯<xref:System.Xml.XPath.XPathNavigator>物件<xref:System.Web.UI.WebControls.Xml>控制項。  
  
 <xref:System.Xml.XPath.XPathNavigator>實作的類別，從建立物件<xref:System.Xml.XPath.IXPathNavigable>介面，例如<xref:System.Xml.XPath.XPathDocument>和<xref:System.Xml.XmlDocument>類別。 <xref:System.Xml.XPath.XPathNavigator> 所建立的物件<xref:System.Xml.XPath.XPathDocument>物件是唯讀的與<xref:System.Xml.XPath.XPathNavigator>所建立的物件<xref:System.Xml.XmlDocument>物件可以進行編輯。 <xref:System.Xml.XPath.XPathNavigator>物件的唯讀或可編輯的狀態用來決定<xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>屬性<xref:System.Xml.XPath.XPathNavigator>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>