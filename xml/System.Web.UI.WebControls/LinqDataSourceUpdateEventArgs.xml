<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSourceUpdateEventArgs.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ad4de834753cb8cf7c08131b0ca92f63c49de8d7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad4de834753cb8cf7c08131b0ca92f63c49de8d7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /&gt;</ph> event.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /&gt;</ph> 事件的資料。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object is passed to any event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>物件傳遞至任何事件處理常式<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object to examine the data before the update operation is executed in the data source.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>資料來源中執行更新作業之前，請檢查資料的物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</source>
          <target state="translated">您可以再驗證資料、 檢查資料類別，所擲回驗證例外狀況或變更的值更新之前。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can also cancel the update operation.</source>
          <target state="translated">您也可以取消更新作業。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> object contains the data that was originally retrieved from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>物件包含原先是從資料來源擷取的資料。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> object contains the data that will be saved in the data source during the update operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>物件包含的更新作業將會儲存在資料來源的資料。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If the object that represents the data source throws a validation exception before updating the data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property contains an instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.</source>
          <target state="translated">代表資料來源的物件，就會擲回驗證例外狀況，然後再更新資料，如果<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>屬性包含的執行個體<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can retrieve all the validation exceptions through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property.</source>
          <target state="translated">您可以擷取到的所有驗證例外狀況<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If no validation exception is thrown, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property contains <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果沒有驗證擲回例外狀況，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>屬性包含<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If you handle the validation exceptions and do not want the exception to be re-thrown, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果您處理驗證例外狀況，而且不想要重新擲回的例外狀況，設定<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values from the data source in view state on the Web page, except those whose <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph> attribute is marked as <ph id="ph3">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>原始值的資料來源檢視中的控制存放區狀態在網頁上，除了其<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph>屬性標示為<ph id="ph3">`UpdateCheck.Never`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>LINQ to SQL automatically checks the integrity of the data before updating the data.</source>
          <target state="translated">LINQ to SQL 會自動檢查更新資料之前的資料的完整性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>It does this by comparing the current values in the data source with the original values stored in view state.</source>
          <target state="translated">它會藉由比較資料來源中的目前值與儲存檢視狀態中的原始值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>LINQ to SQL raises an exception if the values in the data source have changed.</source>
          <target state="translated">如果資料來源中的值已變更，LINQ to SQL 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can perform additional data validation by creating a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">您可以執行額外的資料驗證所建立的處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">此範例示範如何比較屬性從<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>屬性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>屬性來判斷是否中的值<ph id="ph3">`Category`</ph>屬性已變更。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果是這樣，<ph id="ph1">`CategoryChanged`</ph>中物件屬性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>屬性設定為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">它藉由顯示任何驗證例外狀況訊息<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>The exception that occurred when validating the data to update.</source>
          <target state="translated">在驗證要更新的資料時所發生的例外狀況。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class with the specified exception.</source>
          <target state="translated">使用指定的例外狀況，初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the initial values that were retrieved from the data source.</source>
          <target state="translated">具有 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> 屬性中指定之型別的物件，包含從資料來源擷取的初始值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the values that will be saved in the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> 屬性中指定之型別的物件，包含將儲存在資料來源中的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>Gets the exception that was thrown while the data was being validated before the update operation.</source>
          <target state="translated">取得更新作業之前的資料驗證期間所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>The exception, if an error occurred; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果發生錯誤則為例外狀況，否則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>If a validation exception is raised before the update operation is performed, the exception is stored in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">如果在執行更新作業之前引發驗證例外狀況，例外狀況會儲存在<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the exception through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">中的事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件，您可以擷取到的例外狀況<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">它藉由顯示任何驗證例外狀況訊息<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</source>
          <target state="translated">取得或設定值，這個值表示是否處理了例外狀況以及是否不應再度擲回此例外狀況。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果例外狀況已處理則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to examine validation exceptions that occurred before the update operation.</source>
          <target state="translated">您可以建立事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件，以檢查更新作業之前發生的驗證例外狀況。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>If you handle the exception and do not want it to be thrown again, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果您處理的例外狀況，而不想要再次擲回，設定<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the exception will be propagated to the next event handler in the call stack.</source>
          <target state="translated">如果您未設定<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>，例外狀況會傳播至呼叫堆疊中下一個事件處理常式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">它藉由顯示任何驗證例外狀況訊息<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>Gets the object that contains the values that will be saved in the data source.</source>
          <target state="translated">取得物件，該物件包含會儲存在資料來源中的值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the data to save.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> 屬性中指定之型別的物件，包含要儲存的資料。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>Create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event and retrieve the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to validate the data.</source>
          <target state="translated">建立事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件並擷取<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>屬性來驗證資料。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>You can also change the data or cancel the update operation.</source>
          <target state="translated">您也可以變更的資料，或取消更新作業。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">此範例示範如何比較屬性從<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>屬性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>屬性來判斷是否中的值<ph id="ph3">`Category`</ph>屬性已變更。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果是這樣，<ph id="ph1">`CategoryChanged`</ph>中物件屬性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>屬性設定為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>Gets the object that contains the values that were originally retrieved from the data source.</source>
          <target state="translated">取得物件，這個物件包含原先從資料來源擷取的資料。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the data that was retrieved from the data source.</source>
          <target state="translated">具有 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> 屬性中指定之型別的物件，包含從資料來源擷取的資料。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>檢查針對資料來源中的目前值的原始值，並且將取消更新作業，或採取其他動作的屬性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property contains values for only the properties that are persisted in view state in the Web page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>屬性包含值只有在檢視中保存的屬性狀態網頁中。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>A property is persisted under these circumstances:</source>
          <target state="translated">屬性會保存在這些情況下：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>When it is displayed in a data-bound control.</source>
          <target state="translated">當它被顯示在資料繫結控制項。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType&gt;</ph> attribute is set to <ph id="ph3">`Always`</ph> or <ph id="ph4">`WhenChanged`</ph>.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType&gt;</ph>屬性設為<ph id="ph3">`Always`</ph>或<ph id="ph4">`WhenChanged`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;</ph> property is set to <ph id="ph2">`Never`</ph> and the value is not displayed in a data-bound control, the value is not stored in the Web page.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;</ph>屬性設定為<ph id="ph2">`Never`</ph>值不會顯示在資料繫結控制項，此值不會儲存在網頁上。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>In that case, it cannot be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property.</source>
          <target state="translated">在此情況下，它無法指派給<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">此範例示範如何比較屬性從<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>屬性和<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>屬性來判斷是否中的值<ph id="ph3">`Category`</ph>屬性已變更。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果是這樣，<ph id="ph1">`CategoryChanged`</ph>中物件屬性<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>屬性設定為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>