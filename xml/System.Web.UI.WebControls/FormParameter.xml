<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cf87e99ad252ff64c76c999800bd25f90971677" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55422636" /></Metadata><TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>將 HTTP 要求 <see cref="P:System.Web.HttpRequest.Form" /> 欄位的值繫結至參數物件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Web.UI.WebControls.FormParameter>類別中的表單變數的值繫結<xref:System.Web.HttpRequest.Form%2A>来用於參數化的查詢或命令的參數集合。 將資料繫結至參數的控制項可能會擲回例外狀況，如果<xref:System.Web.UI.WebControls.FormParameter>指定但沒有對應的表單變數會傳遞。 如果您的表單變數傳遞沒有對應的值，它們也可能會顯示任何資料。 設定<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>若要避免這些情況下，在適當的地方。  
  
 <xref:System.Web.UI.WebControls.FormParameter>類別會提供<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>屬性，可識別要繫結，除了繼承的表單變數名稱<xref:System.Web.UI.WebControls.Parameter>類別。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不會驗證表單項目以任何方式; 所傳遞的值便會使用原始值。 在大部分情況下，您可以驗證的值<xref:System.Web.UI.WebControls.FormParameter>它正由資料來源控制項所處理的事件，例如之前`Selecting`， `Updating`， `Inserting`，或`Deleting`您使用的資料來源控制項所公開的事件。 如果參數的值未通過驗證測試，您可以藉由設定取消資料作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>相關聯的屬性<xref:System.ComponentModel.CancelEventArgs>類別`true`。  
  
   
  
## Examples  
 下列程式碼範例示範如何將資料插入資料庫，使用<xref:System.Web.UI.WebControls.SqlDataSource>控制項和簡單的 ASP.NET Web 網頁。 目前的資料，資料表中的資料會顯示在<xref:System.Web.UI.WebControls.DropDownList>控制項。 您可以藉由輸入值中的新增記錄<xref:System.Web.UI.WebControls.TextBox>控制項，然後按一下按鈕。 按一下按鈕時，將指定的值插入資料庫，而<xref:System.Web.UI.WebControls.DropDownList>會重新整理。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 類別的新執行個體。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 類別未命名的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>物件以建立<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>建構函式會以其所有屬性的預設值初始化。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>初始化為<xref:System.String.Empty?displayProperty=nameWithType>。 此外，<xref:System.Web.UI.WebControls.Parameter.Name%2A>屬性會初始化為<xref:System.String.Empty?displayProperty=nameWithType>，則<xref:System.Web.UI.WebControls.Parameter.Type%2A>屬性會初始化為<xref:System.TypeCode.Object?displayProperty=nameWithType>，則<xref:System.Web.UI.WebControls.Parameter.Direction%2A>屬性會初始化為<xref:System.Data.ParameterDirection.Input>，和<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>屬性會初始化為 null (`Nothing` Visual Basic 中)。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不會驗證表單項目以任何方式; 所傳遞的值便會使用原始值。 在大部分情況下，您可以驗證的值<xref:System.Web.UI.WebControls.FormParameter>它正由資料來源控制項所處理的事件，例如之前`Selecting`， `Updating`， `Inserting`，或`Deleting`您使用的資料來源控制項所公開的事件。 如果參數的值未通過驗證測試，您可以藉由設定取消資料作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>相關聯的屬性<xref:System.ComponentModel.CancelEventArgs>類別`true`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original"><see cref="T:System.Web.UI.WebControls.FormParameter" /> 執行個體，目前執行個體的初始化來源。</param>
        <summary>使用 <paramref name="original" /> 參數所指定的執行個體值，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>建構函式`protected`複製建構函式用來複製<xref:System.Web.UI.WebControls.FormParameter>執行個體。 值<xref:System.Web.UI.WebControls.FormParameter>，包括<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>， <xref:System.Web.UI.WebControls.Parameter.Name%2A>，和<xref:System.Web.UI.WebControls.Parameter.Type%2A>傳輸到新的執行個體。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="formField">參數物件所繫結的表單變數名稱。 預設為 <see cref="F:System.String.Empty" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 類別的新命名執行個體，使用指定字串識別要繫結的表單變數欄位。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>物件以建立<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>建構函式會初始化使用指定的參數名稱和識別參數繫結至之表單變數的字串。 <xref:System.Web.UI.WebControls.Parameter.Type%2A>和<xref:System.Web.UI.WebControls.Parameter.Direction%2A>屬性會初始化使用預設值。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不會驗證表單項目以任何方式; 所傳遞的值便會使用原始值。 在大部分情況下，您可以驗證的值<xref:System.Web.UI.WebControls.FormParameter>它正由資料來源控制項所處理的事件，例如之前`Selecting`， `Updating`， `Inserting`，或`Deleting`您使用的資料來源控制項所公開的事件。 如果參數的值未通過驗證測試，您可以藉由設定取消資料作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>相關聯的屬性<xref:System.ComponentModel.CancelEventArgs>類別`true`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="dbType">參數的資料庫型別。</param>
        <param name="formField">參數物件所繫結的表單變數名稱。</param>
        <summary>使用指定的字串識別要繫結的表單變數欄位，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="type">參數所代表的型別。 預設為 <see cref="F:System.TypeCode.Object" />。</param>
        <param name="formField">參數物件所繫結的表單變數名稱。 預設為 <see cref="F:System.String.Empty" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 類別的新命名和強型別執行個體，使用指定字串識別要繫結的表單變數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>物件以建立<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>建構函式會使用指定的參數名稱，初始化<xref:System.Web.UI.WebControls.Parameter.Type%2A>，和識別參數繫結至之表單變數的字串。 只有<xref:System.Web.UI.WebControls.Parameter.Direction%2A>和<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>屬性會初始化使用預設值。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不會驗證表單項目以任何方式; 所傳遞的值便會使用原始值。 在大部分情況下，您可以驗證的值<xref:System.Web.UI.WebControls.FormParameter>它正由資料來源控制項所處理的事件，例如之前`Selecting`， `Updating`， `Inserting`，或`Deleting`您使用的資料來源控制項所公開的事件。 如果參數的值未通過驗證測試，您可以藉由設定取消資料作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>相關聯的屬性<xref:System.ComponentModel.CancelEventArgs>類別`true`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目前 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 執行個體的複製。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormParameter" />，為目前執行個體的完全複製。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.Clone%2A>方法呼叫<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>複製建構函式來初始化的新執行個體<xref:System.Web.UI.WebControls.FormParameter>類別目前的執行個體的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">要求的目前 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control"><see cref="T:System.Web.UI.Control" />，與使用 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 的網頁關聯。</param>
        <summary>更新並傳回 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 物件的值。</summary>
        <returns>物件，表示已更新的目前參數值。 如果內容或要求為 null (在 Visual Basic 中為 <see langword="Nothing" />)，<see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 方法會傳回 null。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter>嘗試繫結到表單變數每次<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>呼叫方法。  
  
 `context`參數由<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法來擷取要求的指定的表單欄位的值。 `control`參數會被忽略。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參數所繫結的表單變數名稱。</summary>
        <value>識別參數所繫結之表單變數的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>識別傳入的名稱/值組<xref:System.Web.HttpRequest.Form%2A>集合。 雖然<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>屬性會識別組，名稱<xref:System.Web.UI.WebControls.FormParameter>在執行階段繫結至其對應的值。 如果預期的表單變數的字串名稱/值組不會傳遞給集合中的 ASP.NET 網頁<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法來繫結參數的值<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>屬性，如果已設定。 如果<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>未設定，<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法時，無法將參數繫結的值。  
  
   
  
## Examples  
 下列程式碼範例示範如何以顯示 已篩選的資料，使用<xref:System.Web.UI.WebControls.ObjectDataSource>控制項和<xref:System.Web.UI.WebControls.FormParameter>來擷取的中介層商務物件中的資料和<xref:System.Web.UI.WebControls.GridView>控制項來顯示結果。  
  
 在程式碼範例所組成<xref:System.Web.UI.WebControls.TextBox>，則<xref:System.Web.UI.WebControls.GridView>控制項，<xref:System.Web.UI.WebControls.ObjectDataSource>控制項，並送出 按鈕。 根據預設，<xref:System.Web.UI.WebControls.TextBox>會填入其中一個 Northwind Traders 員工的名稱。 <xref:System.Web.UI.WebControls.GridView>會顯示在名稱所識別之員工的資訊<xref:System.Web.UI.WebControls.TextBox>。 若要擷取另一位員工的資料，請輸入中的員工的完整名稱<xref:System.Web.UI.WebControls.TextBox>，然後按一下按鈕。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性會指定用來篩選所擷取的資料運算式<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>。 這個屬性會使用參數預留位置中所包含的參數評估<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合。 在此範例中，是參數預留位置<xref:System.Web.UI.WebControls.FormParameter>的值繫結<xref:System.Web.UI.WebControls.TextBox>控制項。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下列程式碼範例會顯示先前的程式碼範例所使用的中介層商務物件。 此範例包含兩個基本的類別：`EmployeeLogic`類別會封裝商務邏輯和`NorthwindEmployee`類別是包含只載入和保存資料層中的資料所需的基本功能的模型類別。 為了簡單起見，`EmployeeLogic`類別會建立一組靜態的資料，而不是從資料層擷取資料。 它也很有用的此範例中，因為此範例依賴使用者提供示範篩選是 Northwind Traders 員工的完整名稱。 如需完整的實用範例，您必須編譯，並使用這些類別提供的 ASP.NET 程式碼範例。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>不會驗證表單項目以任何方式; 所傳遞的值便會使用原始值。 在大部分情況下，您可以驗證的值<xref:System.Web.UI.WebControls.FormParameter>它正由資料來源控制項所處理的事件，例如之前`Selecting`， `Updating`， `Inserting`，或`Deleting`您使用的資料來源控制項所公開的事件。 如果參數的值未通過驗證測試，您可以藉由設定取消資料作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>相關聯的屬性<xref:System.ComponentModel.CancelEventArgs>類別`true`。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">資料來源控制項搭配使用參數</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出參數中的用戶端輸入是否已驗證。</summary>
        <value>如果用戶端輸入已驗證，則為 <see langword="true" />，否則為<see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>