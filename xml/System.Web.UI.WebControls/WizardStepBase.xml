<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5981e7c18390097f7357c75fda929484a656009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality required by a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您無法直接建立的執行個體<xref:System.Web.UI.WebControls.WizardStepBase>類別。 相反地，此類別會繼承由<xref:System.Web.UI.WebControls.WizardStep>類別和<xref:System.Web.UI.WebControls.TemplatedWizardStep>類別提供的步驟，以做為精靈的控制項中的基本功能。  
  
 您可以從衍生<xref:System.Web.UI.WebControls.WizardStepBase>類別來建立自訂的類別，表示精靈控制項中的唯一步驟。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the user is allowed to return to the current step from a subsequent step in a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</summary>
        <value>
          <see langword="true" /> 如果使用者被允許傳回目前的步驟。否則， <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>屬性可以用來強制執行線性瀏覽方式<xref:System.Web.UI.WebControls.Wizard>控制項。 如果每個步驟都有其<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>屬性設定為`false`，使用者不能已存取之後，回到的步驟。 您可以使用這項功能的其中一個案例是不允許使用者回到的步驟，因為您會將資料保存到資料庫，為每個步驟完成之後完成。 如果您將資料儲存在每個步驟之後，允許使用者返回步驟，變更後已儲存的資訊已儲存的資料可能會損毀。 藉由設定<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>屬性`false`，一旦使用者已離開步驟，他或她將無法返回並變更任何值。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>屬性會決定如何及何時**上一步**不呈現 按鈕。 下表描述**上一步**按鈕呈現行為。  
  
|情節|行為|  
|--------------|--------------|  
|線性： 步驟 1 已<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>設`false`移至步驟 2 的使用者動作。|步驟 2 不會顯示**上一步** 按鈕。|  
|非線性： 步驟 1 已<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>設`false`移至步驟 3 的使用者動作。|步驟 3 不會顯示**上一步** 按鈕。|  
|提要欄位按鈕： 步驟 2 中有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>設`false`，<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>設為`true`，使用者按一下 [資訊看板] 按鈕。|[資訊看板] 會自動停用任何按鈕時<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>設`false`。 如果使用者按一下按鈕時，會忽略的動作。|  
|線性和非線性具有自訂範本： 此步驟中有自訂巡覽樣板。|沒有自動隱藏或顯示發生如果<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>設`false`當您使用範本瀏覽。 **上一步**按鈕應該選用的範本。|  
|使用 Visual Studio 設計工具和<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>： 控制項有 5 個步驟，您在步驟 4，處理和執行網頁。|步驟 4 時<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>，然後在**上一步**按鈕會呈現。 **上一步**按鈕只隱藏的<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>設<xref:System.Web.UI.WebControls.WizardStepType.Step>歷程記錄中的上一個步驟時具有<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>設`false`。 步驟 4 會先轉譯並在歷程記錄中沒有任何步驟，因為**上一步**不隱藏按鈕。|  
|啟動步驟並非線性導覽： 使用者造訪步驟 3 和步驟 4 和步驟 1 已<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>設<xref:System.Web.UI.WebControls.WizardStepType.Start>。|精靈不會新增**上一步**按鈕時<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>設<xref:System.Web.UI.WebControls.WizardStepType.Start>不論使用者如何巡覽至該步驟。|  
|歷程記錄中的相同步驟： 使用者造訪步驟 3 其中<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>設<xref:System.Web.UI.WebControls.WizardStepType.Step>和使用者不會認可它們的動作。 他們再按一下步驟 3 一步 按鈕。|精靈控制項會檢查是否要**上一步**歷程記錄中的步驟是使用者目前是在 「 相同 」 步驟。 如果步驟相同，精靈控制項往回查看歷程記錄來判斷上述的 「 其他 」 步驟，與基底的顯示**上一步**按鈕和目的地取決於 「 不同逐步 」 記錄中。|  
  
> [!NOTE]
>  當<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>屬性設定為`false`，但<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>父控制項的屬性<xref:System.Web.UI.WebControls.WizardStepBase>設`true`，按一下 [資訊看板] 區域中的按鈕沒有任何作用。 [資訊看板] 區域通常會顯示提供非線性導覽，所以如果您未使用的非線性導覽功能，您可能想要設定<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>屬性`false`。  
  
 無法設定這個屬性的主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>停止中的步驟，將使用者屬性<xref:System.Web.UI.WebControls.Wizard>後已存取控制。 在範例中，`Step1`步驟都有其<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>屬性設定為`false`。 在使用者離開`Step1`步驟中，沒有上一步按鈕是否出現在`Step2`步驟。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
        <value>
          <see langword="true" /> 若要使用佈景主題。否則， <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>屬性會指出是否啟用佈景主題，以供<xref:System.Web.UI.WebControls.WizardStepBase>控制項。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>屬性也會影響是否啟用佈景主題的控制項集合中包含的控制項。 當<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>屬性是`true`，要套用的控制項面板會搜尋應用程式的佈景主題目錄。 如果特定的控制項面板佈景主題目錄中，未套用面板。 當<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>屬性是`false`，不會搜尋主題目錄和值<xref:System.Web.UI.Control.SkinID%2A>屬性不使用。  
  
 控制項可以覆寫<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>值由其父控制項或包含網頁的設定。 比方說，如果<xref:System.Web.UI.WebControls.WizardStepBase>控制項有<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>設`false`，您可以選擇性地將佈景主題套用至內含精靈步驟，藉由設定子控制項<xref:System.Web.UI.Control.EnableTheming%2A>屬性`true`上個別子控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
        <value>指派給控制項的程式設計識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>識別，並參考中的 Web Form 網頁的特定精靈步驟控制項的屬性。 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>值會變成網頁中的控制項執行個體的名稱; 這可讓您輕鬆地存取特定的步驟，在該頁面的程式碼。 例如，如果您設定<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>屬性<xref:System.Web.UI.WebControls.WizardStepBase>控制項至 「 步驟 1 」 中，您可以參考在該頁面的程式碼精靈步驟的子控制項`Step1.Controls`。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase>控制項可確保每個步驟<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>步驟是新增或修改設計階段時，控制項具有有效的唯一識別碼。 例如，當您設定<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>步驟在執行階段中，它無法符合另一個步驟中所包含的識別項<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控制項，而且無法符合<xref:System.Web.UI.Control.ID%2A>包含<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控制項。  
  
   
  
## Examples  
 下列程式碼範例會定義三個精靈的步驟<xref:System.Web.UI.WebControls.Wizard>Web Form 頁面中的控制項。 網頁的程式碼，在精靈的步驟執行個體命名為依識別碼值，並做為程式碼中參考這些`WizardStep1`， `WizardStep2`，和`WizardStep3`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was set to an invalid identifier string at design time.  -or-  The property was set to the same identifier as the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.  -or-  The property was set to the same identifier as another step in the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the that represents the control state to be restored.</param>
        <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> method.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name associated with a step in a control that acts as a wizard.</summary>
        <value>做為精靈的控制項中的步驟與關聯的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>屬性會傳回字串，識別精靈控制項中的步驟。 如果指定的值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>屬性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>屬性會傳回該值。 如果未不指定任何值，如<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>屬性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>屬性傳回的值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>屬性。 如果未指定任何值<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>或<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>屬性，<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>屬性會傳回`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Outputs the content of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of navigation user interface (UI) to display for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 列舉值。 預設值是 <see langword="WizardStepType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>屬性來指定要顯示的步驟中的導覽按鈕的型別<xref:System.Web.UI.WebControls.Wizard>控制項。 如果您指定這個屬性的值，任何步驟標示為<xref:System.Web.UI.WebControls.WizardStepType.Complete>會顯示在 [資訊看板] 以停用狀態。  
  
 如果您未指定此屬性的值，預設值是`WizardStepType.Auto`。  
  
 下表列出可用的設定<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>屬性及步驟的產生的行為：  
  
 `WizardStepType.Auto`  
 瀏覽步驟呈現 UI 是由宣告該步驟的順序決定。  
  
 `WizardStepType.Complete`  
 步驟是要顯示的最後一個。 沒有瀏覽按鈕會呈現。  
  
 `WizardStepType.Finish`  
 步驟是最終資料集合的步驟。 完成 5d; 和上一步 按鈕會呈現巡覽。  
  
 `WizardStepType.Start`  
 步驟是要顯示的第一個。 上一步按鈕不會呈現。  
  
 `WizardStepType.Step`  
 步驟是開始和完成步驟之間的任何步驟。 瀏覽呈現上一個 和 下一步 按鈕。 這個步驟類型是用於覆寫<xref:System.Web.UI.WebControls.WizardStepType.Auto>步驟類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled.</summary>
        <value>使用中的步驟的標題<see cref="T:System.Web.UI.WebControls.Wizard" />控制要啟用 [資訊看板] 功能時。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>屬性來顯示使用者易記的標題中的步驟<xref:System.Web.UI.WebControls.Wizard>控制要啟用 [資訊看板] 功能時。 如果<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>屬性未設定，並啟用 [資訊看板] 功能時，值<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>屬性會顯示 [資訊看板] 按鈕。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>屬性來顯示使用者易記的標題中的步驟<xref:System.Web.UI.WebControls.Wizard>控制項。 在範例中，`Step1`並沒有其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>設定屬性，讓它出現在<xref:System.Web.UI.WebControls.Wizard>"WizardStep1"控制項。 `Step2` 沒有其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>設定屬性，因此它會顯示為 「 步驟 2 」。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" />物件的父控制項衍生自<see cref="T:System.Web.UI.WebControls.WizardStepBase" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>