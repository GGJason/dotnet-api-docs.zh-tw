<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54a4b7702eacd60d84d350582ce858f3761d3148" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30596352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b71ce-101">提供 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> 事件的資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b71ce-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b71ce-102"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>物件傳遞至任何事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="b71ce-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b71ce-103"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>屬性包含要插入的資料。</span><span class="sxs-lookup"><span data-stu-id="b71ce-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="b71ce-104">您可以使用<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>插入作業會在執行中的資料來源之前，請檢查資料的物件。</span><span class="sxs-lookup"><span data-stu-id="b71ce-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="b71ce-105">您可以再驗證資料、 檢查驗證錯誤，從 資料類別，或變更的值更新之前。</span><span class="sxs-lookup"><span data-stu-id="b71ce-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="b71ce-106">您也可以取消插入作業。</span><span class="sxs-lookup"><span data-stu-id="b71ce-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="b71ce-107">如果物件，表示資料來源擲回驗證例外狀況之前它會插入資料，<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>屬性包含的執行個體<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>類別。</span><span class="sxs-lookup"><span data-stu-id="b71ce-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="b71ce-108">您可以擷取到的所有驗證例外狀況<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b71ce-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="b71ce-109">如果沒有驗證擲回例外狀況，<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>屬性包含`null`。</span><span class="sxs-lookup"><span data-stu-id="b71ce-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="b71ce-110">如果您處理驗證例外狀況，而且不想要重新擲回的例外狀況，設定<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="b71ce-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b71ce-111">下列範例示範的處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="b71ce-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b71ce-112">從物件<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>屬性會轉型為類型，名為`Product`。</span><span class="sxs-lookup"><span data-stu-id="b71ce-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="b71ce-113">`DateModified`屬性`Product`物件設定為目前的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="b71ce-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="b71ce-114">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="b71ce-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b71ce-115">它藉由顯示任何驗證例外狀況訊息<xref:System.Web.UI.WebControls.Label>控制項。</span><span class="sxs-lookup"><span data-stu-id="b71ce-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b71ce-116">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject">
          <span data-ttu-id="b71ce-117">包含要插入之資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-117">An object that contains the data to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b71ce-118">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="b71ce-119">在驗證要插入的資料時所發生的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-119">The exception that occurred when the data to insert was being validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b71ce-120">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 類別的新執行個體，並指定提供的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b71ce-121">取得插入作業之前的資料驗證期間所擲回的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b71ce-122">如果發生錯誤則為例外狀況，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b71ce-123">若執行插入作業之前擲回驗證例外狀況，例外狀況會儲存在<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b71ce-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="b71ce-124">中的處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，您可以擷取到的例外狀況<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b71ce-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b71ce-125">下列範例示範的處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="b71ce-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b71ce-126">它藉由顯示任何驗證例外狀況訊息<xref:System.Web.UI.WebControls.Label>控制項。</span><span class="sxs-lookup"><span data-stu-id="b71ce-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b71ce-127">取得或設定值，這個值表示是否處理了例外狀況以及是否不應再度擲回此例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b71ce-128">如果例外狀況已處理則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-128">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b71ce-129">您可以建立事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，以檢查所插入作業之前發生驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b71ce-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="b71ce-130">如果您處理的例外狀況，而不想要再次擲回，設定<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="b71ce-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="b71ce-131">如果您未設定<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>屬性`true`，例外狀況會傳播至呼叫堆疊中下一個事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="b71ce-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b71ce-132">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="b71ce-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b71ce-133">它藉由顯示任何驗證例外狀況訊息<xref:System.Web.UI.WebControls.Label>控制項。</span><span class="sxs-lookup"><span data-stu-id="b71ce-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b71ce-134">取得包含要插入之資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-134">Gets the object that contains the data to insert.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b71ce-135">包含要插入之資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b71ce-135">An object that contains the data to insert.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b71ce-136"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>屬性包含會插入至資料來源的資料。</span><span class="sxs-lookup"><span data-stu-id="b71ce-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="b71ce-137">建立的處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件並擷取<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>屬性，就可以驗證資料、 變更資料，或執行資料作業之前，取消插入作業。</span><span class="sxs-lookup"><span data-stu-id="b71ce-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="b71ce-138"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>屬性會傳回型別的物件<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="b71ce-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="b71ce-139">您可以將此物件代表的資料類別的型別轉型。</span><span class="sxs-lookup"><span data-stu-id="b71ce-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b71ce-140">下列範例示範的處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="b71ce-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b71ce-141">從物件<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>屬性會轉型為類型，名為`Product`。</span><span class="sxs-lookup"><span data-stu-id="b71ce-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="b71ce-142">`DateModified`屬性`Product`物件設定為目前的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="b71ce-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>