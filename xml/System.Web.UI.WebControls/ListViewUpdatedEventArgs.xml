<Type Name="ListViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.ListViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b83b5a8ac98deaa5b4b1e07b297219c2637c8607" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599082" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewUpdatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> 事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>控制引發<xref:System.Web.UI.WebControls.ListView.ItemUpdated>事件時<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>方法呼叫，或在控制項中的 [更新] 按鈕按一下時，但之後<xref:System.Web.UI.WebControls.ListView>控制更新的項目。 (更新 按鈕是一個按鈕其`CommandName`屬性設定為 「 更新 」。)這可讓您提供事件處理方法，執行自訂的常式，每當發生此事件，例如檢查更新作業的結果。  
  
 A<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>物件傳遞至事件處理方法。 這個物件可讓您決定更新項目數目，並取得可能發生的任何例外狀況。 若要判斷，更新作業所影響的項目數目，請使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>屬性。 若要判斷是否有發生任何例外狀況，請使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>屬性。 您可以指出是否已處理例外狀況的事件處理方法中設定<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>屬性。 您可以使用來存取原始的欄位值<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A>屬性。 您可以使用存取更新的欄位值<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A>屬性。  
  
 根據預設，<xref:System.Web.UI.WebControls.ListView>項目之後更新作業傳回唯讀模式。 如果您處理更新作業期間發生的例外狀況，則可以保留<xref:System.Web.UI.WebControls.ListView>處於編輯模式，藉由設定項目<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>屬性`true`。  
  
 如需 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> 類別之執行個體的初始屬性值清單，請參閱 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.%23ctor%2A> 建構函式。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>物件，以判斷是否更新作業期間發生例外狀況。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewUpdatedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewUpdatedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">更新作業所影響的資料列數目。</param>
        <param name="exception">在執行更新作業時引發的例外狀況 (如果有的話)。 如果沒有引發任何例外狀況，請使用 <see langword="null" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>類別。  
  
> [!NOTE]
>  在引發事件時，這個建構函式主要會由控制項開發人員使用。  
  
 下表所顯示的是 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> 類別之執行個體的初始屬性值。  
  
|屬性|Initial value|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>|`affectedRows` 參數的值。|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType>中所包含的物件`e`參數。|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>|`false`。|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>|`false`。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得更新作業所影響的資料列數目。</summary>
        <value>更新作業所影響的資料列數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>屬性來判斷受到更新作業的資料列數目，所傳回的資料來源。 由於通常只有一個項目更新時，這個屬性通常會包含值為 0 或 1。  
  
 有時在更新作業期間可能發生錯誤不會引發例外狀況。 在此情況下，<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>屬性可以用來驗證已更新項目。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>屬性，確認已更新項目。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>類別。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得更新作業中引發的例外狀況 (如果有的話)。</summary>
        <value>在更新作業中引發的例外狀況 (如果有的話)，而如果沒有引發例外狀況則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>屬性來判斷例外狀況 （如果有的話） 進行更新作業時所引發。 如果沒有引發例外狀況，則這個屬性會傳回`null`。  
  
> [!NOTE]
>  如果引發例外狀況和您處理的例外狀況的事件處理常式中，設定中<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>屬性`true`。 否則，<xref:System.Web.UI.WebControls.ListView>控制項會重新擲回例外狀況。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>屬性來判斷是否更新作業期間發生例外狀況。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>類別。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否在事件期間處理更新作業中引發的例外狀況。</summary>
        <value>
          如果例外狀況在事件處理常式中已經過處理，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在更新作業期間引發例外狀況時，使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>屬性，指出您是否已處理的事件期間的例外狀況。 如果這個屬性設定為`true`，例外狀況處理，而且不會重新擲回由視為<xref:System.Web.UI.WebControls.ListView>控制項。 如果這個屬性設定為`false`、<xref:System.Web.UI.WebControls.ListView>控制項會重新擲回例外狀況。 若要判斷引發的例外狀況，請使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>屬性。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>屬性來表示，已處理例外狀況的事件處理常式。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>類別。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控制項是否在更新作業後停留在編輯模式中。</summary>
        <value>
          如果控制項在更新作業後停留在編輯模式中則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Web.UI.WebControls.ListView>控制項之後更新作業傳回唯讀模式。 設定<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>屬性`true`指定<xref:System.Web.UI.WebControls.ListView>控制項應該仍會處於編輯模式。 這也會保留使用者輸入的值。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>屬性，以保留<xref:System.Web.UI.WebControls.ListView>控制項處於編輯模式時發生例外狀況。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>類別。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字典，其包含已更新項目的新值。</summary>
        <value>已更新項目的新值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A>用來存取新的欄位值，更新項目的屬性。 例如，您可以使用這些值來記錄更新的項目。  
  
 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A>屬性會傳回該物件會實作<xref:System.Collections.Specialized.IOrderedDictionary>介面。 物件包含<xref:System.Collections.DictionaryEntry>代表更新的項目欄位的物件。  
  
> [!NOTE]
>  捷徑，您可以使用的索引子<xref:System.Collections.Specialized.IOrderedDictionary>物件來存取該欄位值直接。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字典，其包含已更新項目的原始值。</summary>
        <value>已更新項目的原始值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A>屬性來存取原始欄位值的更新的項目。 例如，您可以使用這些值來記錄更新的項目。  
  
 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A>屬性會傳回該物件會實作<xref:System.Collections.Specialized.IOrderedDictionary>介面。 物件包含<xref:System.Collections.DictionaryEntry>代表更新的項目欄位的物件。  
  
> [!NOTE]
>  捷徑，您可以使用的索引子<xref:System.Collections.Specialized.IOrderedDictionary>物件來存取該欄位值直接。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>