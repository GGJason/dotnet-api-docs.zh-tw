<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48cd03e607059cb02b3178a4950d40c6d29bee20" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36578477" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type WebControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>充當基底類別，以定義通用於 <see cref="N:System.Web.UI.WebControls" /> 命名空間 (Namespace) 上所有控制項的方法、屬性和事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl>類別會提供屬性、 方法和通用於所有的 Web 伺服器控制項的事件。 您可以控制的外觀和行為的 Web 伺服器控制項，藉由設定這個類別中定義的屬性。 比方說，控制使用的背景色彩和字型色彩的控制項<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>和<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>屬性，分別。 在控制項上可以顯示框線，控制項的框線寬度、 樣式、 框線樣式和的框線色彩設定<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>， <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>，和<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>屬性。 Web 伺服器控制項的大小可以指定使用<xref:System.Web.UI.WebControls.WebControl.Height%2A>和<xref:System.Web.UI.WebControls.WebControl.Width%2A>屬性。  
  
 設定特定的屬性，可以指定控制項的行為。 您可以啟用和停用的控制項，藉由設定<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性。 控制項定位順序中的位置由設定<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>屬性。 您可以設定來指定工具提示控制項<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>屬性。  
  
> [!NOTE]
>  並非所有控制項都支援這個類別中定義的每個屬性。 如需是否支援某屬性的特定資訊，請參閱特定控制項的文件。  
  
> [!NOTE]
>  這個類別中的某些屬性不同的呈現，根據瀏覽器。 某些屬性不會呈現，而其他人呈現，但是沒有任何作用。 <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>屬性<xref:System.Web.HttpBrowserCapabilities>物件可以決定將 Web 伺服器控制項呈現的方式。 瀏覽器支援 HTML 4.0<xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>屬性會包含一般<xref:System.Web.HttpBrowserCapabilities>物件，且大部分的內容將會使用來呈現 HTML 4.0 的樣式屬性。 將會使用瀏覽器支援 HTML 4.0 並不清楚的<xref:System.Web.UI.Html32TextWriter>物件。 這會自動對應到任何相關的 HTML 3.2 標記屬性的樣式屬性。 在某些情況下，例如與<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>屬性，樣式屬性將會轉換成其他標記，例如`<font>`標記。 在某些情況下，會有沒有對應執行。 如特定屬性在不同的瀏覽器中的呈現方式的詳細資訊，請參閱特定屬性的文件。  
  
 如需執行個體的初始屬性值的清單<xref:System.Web.UI.WebControls.WebControl>，請參閱<xref:System.Web.UI.WebControls.WebControl.%23ctor%2A>建構函式。  
  
   
  
## Examples  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebControl" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebControl" /> 類別的新執行個體，這個執行個體表示 <see langword="Span" /> HTML 標記。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式用來初始化的新執行個體<xref:System.Web.UI.WebControls.WebControl>表示類別`Span`HTML 項目。  
  
 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.WebControls.WebControl>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Span> 列舉值。|  
  
> [!NOTE]
>  不會直接呼叫這個建構函式。 相反地，它通常稱為初始化衍生類別的建構函式<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>屬性<xref:System.Web.UI.HtmlTextWriterTag.Span>列舉值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : string -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">HTML 標記。</param>
        <summary>使用指定的 HTML 標記，初始化 <see cref="T:System.Web.UI.WebControls.WebControl" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.WebControls.WebControl>類別使用指定的 HTML 標記。  
  
 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.WebControls.WebControl>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Unknown> 列舉值。|  
|`TagName`|`tag` 參數的值。|  
  
> [!NOTE]
>  不會直接呼叫這個建構函式。 相反地，它通常稱為初始化衍生類別的建構函式<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>和<xref:System.Web.UI.WebControls.WebControl.TagName%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : System.Web.UI.HtmlTextWriterTag -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag">其中一個 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</param>
        <summary>使用指定的 HTML 標記，初始化 <see cref="T:System.Web.UI.WebControls.WebControl" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.WebControls.WebControl>類別使用指定<xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType>值。  
  
 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.WebControls.WebControl>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag>所指定的列舉值`tag`參數。|  
  
   
  
## Examples  
 下列範例示範如何使用的建構函式<xref:System.Web.UI.WebControls.WebControl>類別來建立`TextArea`HTML 項目，並顯示在 Web Form 頁面。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定便捷鍵 (Access Key)，可讓您快速巡覽至 Web 伺服器控制項。</summary>
        <value>快速巡覽至 Web 伺服器控制項的便捷鍵。 預設值為 <see cref="F:System.String.Empty" />，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>屬性來指定 Web 伺服器控制項的鍵盤快速鍵。 這可讓您快速地巡覽至控制項的鍵盤上按下 ALT 鍵和指定的字元。 例如，設定控制項的便捷鍵至字串`"D"`表示使用者可以按下 ALT + D 巡覽至控制項。  
  
 只包含單一字元字串所允許之<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>屬性。 如果您嘗試設定此屬性的值既不是`null`， <xref:System.String.Empty>，也為單一字元字串，擲回例外狀況。  
  
> [!NOTE]
>  只在 Internet Explorer 4.0 和更新版本支援此屬性。  
  
   
  
## Examples  
 下列範例說明如何設定和使用<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>屬性<xref:System.Web.UI.WebControls.TextBox>控制項。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的便捷鍵不是 <see langword="null" />、<see cref="F:System.String.Empty" /> 或單一字元字串。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要於用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將需要呈現的 HTML 屬性和樣式加入至指定的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 中。 這個方法主要由控制項開發人員使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要轉譯屬性和用戶端上的 Web 伺服器控制項的樣式，您通常會呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>和<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>方法成插入每個屬性，並個別為樣式<xref:System.Web.UI.HtmlTextWriter>輸出資料流。 若要簡化此程序，這個方法會封裝所有呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType>和<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>方法的每個屬性和相關聯的 Web 伺服器控制項的樣式。 所有屬性和樣式會都插入到<xref:System.Web.UI.HtmlTextWriter>單一方法呼叫中的輸出資料流。 這個方法通常會覆寫由控制項開發人員在衍生類別中插入適當的屬性和樣式以<xref:System.Web.UI.HtmlTextWriter>輸出資料流類別。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>方法無法用來插入用戶端指令碼。 若要使用用戶端指令碼，請參閱<xref:System.Web.UI.ClientScriptManager>類別。  
  
   
  
## Examples  
 下列範例示範如何建立衍生自類別<xref:System.Web.UI.WebControls.WebControl>類別。 基底實作<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>新增屬性適用於衍生類別中覆寫方法<xref:System.Web.UI.HtmlTextWriter>輸出資料流。  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.ApplyStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.ApplyStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.Web.UI.WebControls.Style" />，表示要複製的樣式。</param>
        <summary>將指定樣式的任何非空白項目加入到 Web 控制項中，覆寫控制項的任何現有的樣式項目。 這個方法主要由控制項開發人員使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>方法來套用樣式<xref:System.Web.UI.WebControls.DataGrid>控制項。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得任意屬性 (Attribute) 的集合 (只供呈現)，不與控制項上的屬性 (Property) 對應。</summary>
        <value>名稱和值配對的 <see cref="T:System.Web.UI.AttributeCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A>集合包含在 Web 伺服器控制項的開頭標記中宣告的所有屬性的集合。 這可讓您以程式設計方式控制與 Web 伺服器控制項相關聯的屬性。 您可以將屬性加入至集合，或從集合中移除屬性。  
  
> [!NOTE]
>  這個屬性會呈現在控制項的開頭標記，不論瀏覽器設定的集合中的所有屬性。 並非所有瀏覽器支援會轉譯每個屬性。 瀏覽器通常會忽略不支援的屬性。  
  
> [!NOTE]
>  您無法加入用戶端指令碼的<xref:System.Web.UI.WebControls.WebControl>執行個體使用<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>集合。 若要新增用戶端指令碼，請使用<xref:System.Web.UI.Page.ClientScript%2A>屬性<xref:System.Web.UI.Page>控制項。  
  
   
  
## Examples  
 下列範例說明如何<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>屬性<xref:System.Web.UI.WebControls.WebControl>可以用來執行 JavaScript 命令<xref:System.Web.UI.WebControls.TextBox>控制項遺失駐點。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項的背景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，代表控制項的背景色彩。 預設值為 <see cref="F:System.Drawing.Color.Empty" />，表示這個屬性尚未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>屬性來指定 Web 伺服器控制項的背景色彩。 這個屬性會設定使用<xref:System.Drawing.Color?displayProperty=nameWithType>物件。  
  
> [!NOTE]
>  這個屬性會呈現為特定的控制項。 例如， <xref:System.Web.UI.WebControls.Table>， <xref:System.Web.UI.WebControls.Panel>， <xref:System.Web.UI.WebControls.DataGrid>， <xref:System.Web.UI.WebControls.Calendar>，和<xref:System.Web.UI.WebControls.ValidationSummary>會呈現此屬性。 它也可用於<xref:System.Web.UI.WebControls.CheckBoxList>，<xref:System.Web.UI.WebControls.RadioButtonList>和<xref:System.Web.UI.WebControls.DataList>如果其`RepeatLayout`屬性是`RepeatLayout.Table`，而非`RepeatLayout.Flow`。  
  
 一般情況下，只會控制轉譯為的`<table>`標記可以顯示的背景色彩在 HTML 3.2 中，而幾乎任何控制項可以在 HTML 4.0 中。  
  
 控制項可呈現為`<span>`標記 (包括<xref:System.Web.UI.WebControls.Label>，則所有驗證控制項和清單控制項和其`RepeatLayout`屬性設定為`RepeatLayout.Flow`)，這個屬性會在 Microsoft Internet Explorer 版本 5 和更新版本，但不是在 Microsoft Internet Explorer 第 4 版。  
  
   
  
## Examples  
 下列範例說明如何設定<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>屬性<xref:System.Web.UI.WebControls.Table>控制項，它繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 控制項的框線色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，代表控制項的框線色彩。 預設值為 <see cref="F:System.Drawing.Color.Empty" />，表示這個屬性尚未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>屬性來指定 Web 伺服器控制項的框線色彩。 這個屬性會設定使用<xref:System.Drawing.Color>物件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>屬性會呈現只針對特定的控制項。 例如， <xref:System.Web.UI.WebControls.Table>， <xref:System.Web.UI.WebControls.Panel>， <xref:System.Web.UI.WebControls.DataGrid>， <xref:System.Web.UI.WebControls.Calendar>，和<xref:System.Web.UI.WebControls.ValidationSummary>控制項將會呈現此屬性。 它也可用於<xref:System.Web.UI.WebControls.CheckBoxList>， <xref:System.Web.UI.WebControls.RadioButtonList>，和<xref:System.Web.UI.WebControls.DataList>控制，如果其`RepeatLayout`屬性設定為`RepeatLayout.Table`，而非`RepeatLayout.Flow`。 不過，它會轉譯為`bordercolor`屬性，不是 HTML 3.2 標準的一部分。 `bordercolor`屬性適用於 Microsoft Internet Explorer 版本 3.0 或更新版本，但並非大多數其他瀏覽器。  
  
 當<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>屬性未設定，瀏覽器會使用其預設框線色彩。 請參閱您的瀏覽器，以判斷其預設的色彩配置。  
  
   
  
## Examples  
 下列範例說明如何設定<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>屬性<xref:System.Web.UI.WebControls.Table>控制項，它繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項的框線樣式。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.BorderStyle" /> 列舉值。 預設值為 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>屬性來指定 Web 伺服器控制項的框線樣式。 這個屬性會設定使用其中一種<xref:System.Web.UI.WebControls.BorderStyle>列舉值。 下表列出可能的值。  
  
|框線樣式|描述|  
|------------------|-----------------|  
|`NotSet`|未設定的框線樣式。|  
|`None`|沒有框線|  
|`Dotted`|點線框線。|  
|`Dashed`|虛線框線。|  
|`Solid`|實線框線。|  
|`Double`|雙實線框線。|  
|`Groove`|凹陷框線外觀的溝槽框線。|  
|`Ridge`|凸起框線外觀的脊狀框線。|  
|`Inset`|凹陷控制項外觀的嵌入框線。|  
|`Outset`|凸起控制項外觀的外圍框線。|  
  
> [!NOTE]
>  這個屬性將不會呈現在瀏覽器上早於 Microsoft Internet Explorer 4 的任何 Web 伺服器控制項。 在 HTML 3.2 中的，沒有對等。  
  
   
  
## Examples  
 下列範例說明如何設定<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>屬性<xref:System.Web.UI.WebControls.Table>控制項，它繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項的框線寬度。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" />，表示 Web 伺服器控制項的框線寬度。 預設值為 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>屬性可指定控制項的框線寬度。  
  
> [!NOTE]
>  這個屬性不適用於所有的 Web 伺服器控制項。 它只能套用至控制項顯示為資料表，例如<xref:System.Web.UI.WebControls.Table>和<xref:System.Web.UI.WebControls.DataGrid>。  
  
 此屬性設為<xref:System.Web.UI.WebControls.Unit>物件。 如果<xref:System.Web.UI.WebControls.Unit.Value%2A>屬性<xref:System.Web.UI.WebControls.Unit>包含負數時，會擲回例外狀況。  
  
> [!NOTE]
>  框線寬度僅以早於 Microsoft Internet Explorer 第 5 版的瀏覽器的像素為單位。 在 Microsoft Internet Explorer 5 和更新版本中支援所有的單位類型。 請參閱特定的控制項，如需詳細資訊。  
  
   
  
## Examples  
 下列範例說明如何設定<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>屬性<xref:System.Web.UI.WebControls.Table>控制項，繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的框線寬度為負值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 Web 伺服器控制項的樣式。 這個屬性主要由控制項開發人員使用。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" />，封裝 Web 伺服器控制項的外觀屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>屬性封裝的所有屬性<xref:System.Web.UI.WebControls.WebControl>類別，指定控制項的外觀，例如<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>和<xref:System.Web.UI.WebControls.WebControl.Font%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyleCreated : bool" Usage="System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Web.UI.WebControls.Style" /> 物件是否已經為 <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> 屬性建立。 這個屬性主要由控制項開發人員使用。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.Style" /> 物件已經為 <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> 屬性建立，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberSignature Language="F#" Value="member this.CopyBaseAttributes : System.Web.UI.WebControls.WebControl -&gt; unit" Usage="webControl.CopyBaseAttributes controlSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc">
          <see cref="T:System.Web.UI.WebControls.WebControl" />，表示其屬性被複製到呼叫這個方法的 Web 伺服器控制項上的來源控制項。</param>
        <summary>將不被 <see cref="P:System.Web.UI.WebControls.WebControl.Style" /> 物件封裝的屬性從指定的 Web 伺服器控制項複製到呼叫這個方法的 Web 伺服器控制項上。 這個方法主要由控制項開發人員使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A>方法複製<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>， <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>， <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>， <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>，和<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>從指定的 Web 伺服器控制項的內容從呼叫這個方法的 Web 伺服器控制項。 這常用在情況下，Web 伺服器控制項的運作方式是在轉譯正在使用的控制項，以動態方式建立新的控制項。 此方法是在此情況下很有用，因為它會複製所有的 Web 伺服器控制項不是由封裝屬性<xref:System.Web.UI.WebControls.Style>物件，以便可以置於最外層控制項所呈現的標記。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="controlSrc" /> 為 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style&#xA;override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="webControl.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立樣式物件，這個物件被 <see cref="T:System.Web.UI.WebControls.WebControl" /> 類別內部使用，以實作所有的樣式相關屬性。 這個方法主要由控制項開發人員使用。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" /> 是用來實作控制項所有樣式相關的屬性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A>方法用來建立樣式物件在內部用來實作所有的樣式相關屬性。 在衍生的類別可以覆寫這個方法，以建立適用於類別樣式。 這個方法主要由控制項開發人員使用。  
  
 **請注意**控制項開發人員應該傳回<xref:System.Web.UI.WebControls.Style>衍生自<xref:System.Web.UI.WebControls.Style>傳回基底控制項。 無法假設，<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>十分特定的樣式型別衍生的控制項可能會傳回不同的型別。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用戶端上 Web 伺服器控制項所呈現的階層式樣式表 (CSS)。</summary>
        <value>用戶端上 Web 伺服器控制項所呈現的 CSS 類別。 預設值為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>屬性來指定要在 Web 伺服器控制項的用戶端上呈現之 CSS 類別。 這個屬性會呈現的所有控制項的瀏覽器。 它一律會呈現為類別屬性，不論瀏覽器。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 例如，假設您有下列的 Web 伺服器控制項宣告：  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 下列 HTML 轉譯先前的 Web 伺服器控制項宣告用戶端上：  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
 如果您使用階層式樣式表 (CSS) 來自訂控制項的外觀，使用內嵌樣式或個別的 CSS 檔案，但非兩者。 使用內嵌樣式和個別的 CSS 檔案，可能會造成非預期的結果。  
  
> [!NOTE]
>  在瀏覽器不支援 CSS，設定<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>屬性會有任何作用。  
  
   
  
## Examples  
 下列範例說明如何使用<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>要變更的樣式屬性<xref:System.Web.UI.WebControls.HyperLink>控制項。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledCssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當控制項停用時，要套用至所轉譯 HTML 項目的 CSS 類別。</summary>
        <value>當控制項停用時，應該套用至所轉譯 HTML 項目的 CSS 類別。 預設值為 "aspNetDisabled"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以用來變更名稱轉譯為<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>個別 Web 控制項的屬性。 根據預設，這個屬性會傳回"aspNetDisabled"。  
  
 當<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>傳回衍生類別中覆寫`false`，值<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>屬性會呈現的值為`class`控制項的 HTML 項目的屬性。 在此情況下，如果沒有使用中的值<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>屬性，這兩個 CSS 類別將會套用到轉譯的 HTML 項目。 `class`屬性的值將會包含<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>屬性後面值<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>屬性，以空格分隔。  
  
 這個屬性是靜態的這表示您可以設定它僅適用於<xref:System.Web.UI.WebControls.WebControl>類別。 Web 應用程式中的所有控制項，會使用設定為任何值。 您無法指定不同的個別控制項的值。  
  
 如果您想要使用的類別名稱"aspNetDisabled 」 的預設值不同，您通常將程式碼放該怎麼做`Application_Start`Global.asax 檔案中，如下列範例所示的方法：  
  
```vb  
Private Sub Application_Start(  
    ByVal sender As Object, ByVal e As EventArgs)  
    WebControl.DisabledCssClass = "customDisabledClassName"  
End Sub  
```  
  
```csharp  
void Application_Start(object sender, EventArgs e)  
{  
    WebControl.DisabledCssClass = "customDisabledClassName";  
}  
```  
  
   
  
## Examples  
 下列範例顯示已停用呈現的 HTML<xref:System.Web.UI.WebControls.Label>負責控制何時<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>屬性是`false`，當<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>屬性具有預設值，以及當<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>屬性是空的。  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 下列範例會示範在相同的情況下呈現 HTML 除了<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>屬性具有值"SampleStyle"`:`  
  
 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`  
  
 如需詳細資訊，請參閱 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 屬性 (Property)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 Web 伺服器控制項是否啟用。</summary>
        <value>如果啟用控制項，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>控制項的屬性設定為`false`，通常是控制項呈現暗灰色。 如果控制項為輸入的項目，瀏覽器可防止使用者按一下或輸入它。 呈現伺服器控制項的 HTML 項目會標示為設定來停用其`disabled`屬性或其 CSS`class`屬性。 如需詳細資訊，請參閱 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 與 <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>。  
  
 這個屬性會控制階層中向傳播。 如果您停用容器控制項，也會停用該容器內的子控制項。 如需詳細資訊，請參閱 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 屬性 (Property)。  
  
> [!NOTE]
>  在自訂複合控制項中，尚未建立子控制項的控制項不適用這項繼承行為。 您就必須將啟用的狀態的子控制項時建立，或覆寫<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性呼叫<xref:System.Web.UI.Control.EnsureChildControls%2A>方法。  
  
> [!NOTE]
>  停用控制項時，只會防止使用者已透過瀏覽器 UI 控制項互動。 該使用者就可以製作送出回傳，即使已停用頁面上的控制項，此網頁所處理的要求。 處理回傳要求之前，請檢查並確定已啟用並顯示該控制項。  
  
 並非所有控制項都支援此屬性。 請參閱詳細資料的個別控制項。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列範例說明如何啟用和停用<xref:System.Web.UI.WebControls.TextBox>控制項，繼承自<xref:System.Web.UI.WebControls.WebControl>藉由設定的基底類別，其<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性以程式設計的方式。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出佈景主題是否套用至此控制項。</summary>
        <value>
          <see langword="true" /> 表示使用主題，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>屬性會指出是否啟用佈景主題，以供指定的控制項。 當<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>屬性是`true`，要套用的控制項面板中搜尋應用程式的佈景主題目錄。 如果特定的控制項面板佈景主題目錄中，不會套用面板。  
  
 當<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>屬性是`false`，不會搜尋主題目錄和內容<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>屬性不使用。  
  
 控制項可以覆寫<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>設定其父控制項或包含頁面的值。 例如，如果父控制項有<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>屬性設定為`false`，可以選擇性地將佈景主題套用至內含藉由設定父系的子控制項<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>屬性`true`個別的子系上控制項。  
  
 佈景主題，可以在頁面、 容器或控制層級啟用。 在頁面或容器層級停用主題時，會停用頁面或容器所包含的所有控制項佈景主題。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.WebControl.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與 Web 伺服器控制項關聯的字型屬性。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FontInfo" />，表示 Web 伺服器控制項的字型屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.Font%2A>屬性來指定 Web 伺服器控制項的字型屬性。 這個屬性包含可存取子屬性宣告的形式`Property-Subproperty`(例如`Font-Bold`) 或以程式設計方式在表單的`Property.Subproperty`(例如`Font.Bold`)。  
  
 所有的子屬性會呈現在 Microsoft Internet Explorer 的所有控制項的第 4 版之前的瀏覽器中。 它們是： <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>， <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>， <xref:System.Web.UI.WebControls.FontInfo.Name%2A>， <xref:System.Web.UI.WebControls.FontInfo.Names%2A>， <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>， <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>，和<xref:System.Web.UI.WebControls.FontInfo.Size%2A>(但是只有名為字型大小，例如`Small`， `Smaller`，依此類推，運作)。  
  
> [!NOTE]
>  雖然這些子屬性會呈現在 Microsoft Internet Explorer 第 4 版之前的瀏覽器中，HTML 轉譯是不同於更新版本的瀏覽器。 而不是轉譯為樣式屬性，這些子屬性會轉譯為 HTML 項目，例如`<b>`和`<font>`。  
  
 將不會在所有控制項的舊版瀏覽器呈現一個子屬性是<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>。  
  
   
  
## Examples  
 下列範例說明如何使用<xref:System.Web.UI.WebControls.WebControl.Font%2A>屬性，以收集從字型資訊<xref:System.Web.UI.WebControls.Label>控制項。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項的前景色彩 (通常是文字的色彩)。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示控制項的前景色彩。 預設值為 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>屬性來指定 Web 伺服器控制項的前景色彩。 前景色彩通常是文字的色彩。 這個屬性會呈現在瀏覽器上早於 Microsoft Internet Explorer 第 4 版的所有控制項，除了<xref:System.Web.UI.WebControls.Image>， <xref:System.Web.UI.WebControls.AdRotator>，<xref:System.Web.UI.WebControls.HyperLink>和<xref:System.Web.UI.WebControls.LinkButton>。  
  
> [!NOTE]
>  在瀏覽器上早於 Microsoft Internet Explorer 版本 4，這個屬性會呈現為`<font>`標記。  
  
   
  
## Examples  
 下列範例說明如何設定<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>屬性<xref:System.Web.UI.WebControls.Table>控制項，繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出控制項是否已經設定屬性。</summary>
        <value>如果控制項已經設定屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A>屬性會傳回`true`時<xref:System.Web.UI.WebControls.WebControl>執行個體都有屬性名稱/值組。 屬性中或在檢視狀態中，可以設定的屬性組。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項的高度。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" />，表示控制項的高度。 預設值為 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.Height%2A>屬性來指定 Web 伺服器控制項的高度。  
  
> [!NOTE]
>  這個屬性不會呈現在瀏覽器中的所有控制項早於 Microsoft Internet Explorer 第 4 版。 無法轉譯此屬性在較早的瀏覽器中的控制項包括<xref:System.Web.UI.WebControls.Label>， <xref:System.Web.UI.WebControls.HyperLink>， <xref:System.Web.UI.WebControls.LinkButton>，和任何驗證的控制項。 <xref:System.Web.UI.WebControls.CheckBoxList>，<xref:System.Web.UI.WebControls.RadioButtonList>和<xref:System.Web.UI.WebControls.DataList>也不會呈現此屬性在較早的瀏覽器時其`RepeatLayout`屬性設定為`RepeatLayout.Flow`。 此外，只有單位類型的`Pixel`和`Percentage`舊版瀏覽器都支援。  
  
 因為此屬性為非標準 HTML，Web 伺服器控制項顯示為資料表，例如<xref:System.Web.UI.WebControls.Table>和<xref:System.Web.UI.WebControls.DataGrid>，不支援此屬性在瀏覽器中早於 Microsoft Internet Explorer 第 4 版。  
  
> [!NOTE]
>  若要設定<xref:System.Web.UI.WebControls.WebControl.Height%2A>為單位的屬性類型，而不是預設值是`Pixel`，您必須建立新的單位類型指定您想要的單位類型。 例如，若要將控制項設定<xref:System.Web.UI.WebControls.WebControl.Height%2A>屬性 100 的百分比值，您可以執行下列：  
>   
>  `myWebControl.Width = Unit.Percentage(100);`  
>   
>  如需有關可用之單位類型<xref:System.Web.UI.WebControls.WebControl.Height%2A>屬性，請參閱<xref:System.Web.UI.WebControls.Unit>類別。  
  
   
  
## Examples  
 下列範例說明如何以宣告方式設定<xref:System.Web.UI.WebControls.WebControl.Height%2A>屬性<xref:System.Web.UI.WebControls.Table>控制項，繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">高度被設定為負值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出是否啟用控制項。</summary>
        <value>如果啟用 <see cref="T:System.Web.UI.WebControls.WebControl" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是唯讀屬性。 如果您想要停用的控制項，您設定其<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性`false`。  
  
 如果控制項不包含由另一個控制，此值的<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>屬性一定是相同的值<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>屬性有不同的值<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性如果控制項是其他控制項的子系，而且所有下列情況為真：  
  
-   值<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性或<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>父控制項的屬性是`false`。  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>子控制項的屬性設定為`true`。  
  
 在此情況下，子控制項會繼承父控制項的停用的狀態。 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>子控制項的屬性會傳回`false`表示控制項已停用，即使未明確停用的子控制項已藉由設定其<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性`false`。 父控制項本身可能有其<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性設定為`true`但可能會停用的狀態會繼承其父代，依此類推。  
  
 當 ASP.NET 呈現伺服器控制項的 HTML 項目時，會將標示之項目的設定來停用為其`disabled`屬性或其 CSS`class`屬性。 如需詳細資訊，請參閱 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 與 <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="webControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">物件，表示要還原的控制項狀態。</param>
        <summary>從使用 <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> 方法所儲存的先前要求來還原檢視狀態資訊。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。 不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A>方法還原期間先前儲存的檢視狀態資訊<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>要求。 <xref:System.Web.UI.WebControls.WebControl>類別會覆寫基底<xref:System.Web.UI.Control.LoadViewState%2A>方法以處理<xref:System.Web.UI.Control.ViewState%2A>， <xref:System.Web.UI.WebControls.WebControl.Style%2A>，和<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.MergeStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.MergeStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.Web.UI.WebControls.Style" />，表示要複製的樣式。</param>
        <summary>將指定樣式的任何非空白項目複製到 Web 控制項，但不覆寫控制項的任何現有樣式項目。 這個方法主要由控制項開發人員使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>方法，將合併的樣式的樣式<xref:System.Web.UI.WebControls.DataGrid>控制項。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收控制項內容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</param>
        <summary>將控制項呈現在指定的 HTML 寫入器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.Render%2A>方法主要由控制項開發人員使用。  
  
 <xref:System.Web.UI.WebControls.WebControl.Render%2A>方法會傳送至指定的 Web 控制項<xref:System.Web.UI.HtmlTextWriter>執行個體。 覆寫這個方法，以傳送到用戶端的自訂伺服器控制項。  
  
 <xref:System.Web.UI.WebControls.WebControl.Render%2A>方法會先呼叫<xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A>方法，然後在<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>方法，最後再<xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A>將控制項傳送至用戶端方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要於用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將控制項的 HTML 開頭標記呈現在指定的寫入器中。 這個方法主要由控制項開發人員使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這會變成公用，讓其他控制項可以呈現開頭和結尾標記的 Web 伺服器控制項之間的多個控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要於用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將控制項的內容呈現在指定的寫入器。 這個方法主要由控制項開發人員使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 覆寫<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>方法以呈現控制項的開始和結束標記之間的內容。 這個方法的預設實作會呈現任何子控制項。  
  
 如果您的控制項具有子控制項，您必須呼叫基底<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>方法或呼叫<xref:System.Web.UI.Control.RenderChildren%2A>想子控制項的文字寫入器中呈現的點。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要於用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將控制項的 HTML 結尾標記呈現至指定的寫入器。 這個方法主要由控制項開發人員使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這會變成公用，讓其他控制項可以呈現開頭和結尾標記的 Web 伺服器控制項之間的多個控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="webControl.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存叫用 <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> 方法後已修改的任何狀態。</summary>
        <returns>包含控制項目前檢視狀態的物件；如果沒有任何檢視狀態與控制項產生關聯，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>方法主要由控制項開發人員使用。  
  
 檢視狀態是累計的伺服器控制項的屬性值。 這些值會放在自動<xref:System.Web.UI.Control.ViewState%2A>伺服器控制項，也就是執行個體屬性的<xref:System.Web.UI.StateBag>類別。 <xref:System.Web.UI.Control.ViewState%2A>屬性值，然後會保存到字串物件的儲存狀態的伺服器控制項的生命週期的階段之後。 如需詳細資訊，請參閱[ASP.NET 網頁生命週期概觀](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)。  
  
 這個字串物件儲存檢視狀態時，會傳回至用戶端為的變數會儲存在隱藏 HTML`input`項目。 當您撰寫自訂的伺服器控制項時，您可以覆寫來改善效率<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>方法與修改<xref:System.Web.UI.Control.ViewState%2A>伺服器控制項屬性。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要套用至控制項的面板。</summary>
        <value>要套用至控制項之面板的名稱。 預設值為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項可以使用的面板包含一或多個主題目錄中的面板檔案中。 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>屬性會指定哪個這些要套用至控制項的面板。 面板是控制項專屬的特定;您無法共用不同類型的控制項之間的外觀設定。  
  
 如果您未設定<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>屬性，控制使用的預設面板有已定義。 例如，如果沒有面板識別碼定義為<xref:System.Web.UI.WebControls.Image>控制，則該面板適用於所有<xref:System.Web.UI.WebControls.Image>控制項，未明確參考識別碼的外觀和，未設定為停用主題設定。 如果未定義識別碼面板<xref:System.Web.UI.WebControls.Image>控制，則該面板僅適用於<xref:System.Web.UI.WebControls.Image>控制其<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>設為該識別碼。  
  
 如果主題目錄中的面板檔案未包含具有指定的面板<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>、<xref:System.ArgumentException>在執行階段擲回例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> 屬性中指定的面板不存在主題中。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.WebControls.WebControl.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得文字屬性的集合，將呈現為 Web 伺服器控制項的外部標記上的樣式屬性。</summary>
        <value>
          <see cref="T:System.Web.UI.CssStyleCollection" />，包含 HTML 樣式屬性以在 Web 伺服器控制項的外部標記上呈現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.Style%2A>管理呈現在 Web 伺服器控制項的外部標記的樣式屬性的集合。 這個屬性會呈現所有控制項的所有瀏覽器。  
  
> [!NOTE]
>  不支援樣式屬性的瀏覽器將會忽略呈現的 HTML。  
  
 設定透過強型別的樣式屬性的任何樣式值 (例如， `BackColor="Red"`) 會自動覆寫此集合中的對應值。  
  
 在此集合中設定的值不會自動反映的強類型的樣式屬性。  
  
   
  
## Examples  
 下列範例說明如何使用<xref:System.Web.UI.WebControls.WebControl.Style%2A>屬性來隱藏或顯示<xref:System.Web.UI.WebControls.Label>頁面上的控制項。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示當控制項的 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 屬性為 <see langword="false" /> 時，控制項是否應該將呈現之 HTML 項目的 <see langword="disabled" /> 屬性設為 "disabled"。</summary>
        <value>一定是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在衍生類別中，這個屬性會指出如何 ASP.NET 應該呈現 HTML 控制項的停用控制項時。  
  
## <a name="disabling-aspnet-web-controls"></a>停用 ASP.NET Web 控制項  
 當<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>ASP.NET 控制項的屬性設定為`false`（也就是當控制項已停用），其目的是 ASP.NET 應該呈現控制項在頁面中，但顯示在 停用狀態 （通常呈現暗灰色）。 如果父控制項已停用，則為停用，也會顯示該控制項的子系。 在此情況下，子控制項的<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>屬性設定為`false`，即使其<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>屬性可能會設定為`true`。  
  
 在 ASP.NET 3.5 和舊版中，當控制項的<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>屬性是`false`，ASP.NET 集`disabled`呈現控制項的 HTML 項目中屬性為"disabled"。 不過，可讓 HTML 4.01 標準`disabled`只在特定項目所使用的使用者輸入的屬性。 例如，`disabled`屬性所允許之`input`項目，但不適用於`span`項目。  
  
 大部分的瀏覽器支援僅顯示具有的項目停用的預設外觀`disabled`屬性。 不過，為了符合 HTML 標準，依預設 ASP.NET 4 略過無效的屬性。  
  
## <a name="how-the-supportsdisabledattribute-property-is-used"></a>如何使用 SupportsDisabledAttribute 屬性  
 如果<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>屬性是`true`，ASP.NET 會呈現`disabled`屬性停用控制項時。 如果這個屬性是`false`，ASP.NET 會呈現`class`屬性停用控制項時。  
  
 在衍生的類別覆寫這個屬性，傳回`false`如果下列所有條件都都成立：  
  
-   控制項呈現的 HTML 項目不支援`disabled`屬性。  
  
-   <xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性會指出低於 4.0 的 ASP.NET 版本號碼。  
  
 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>屬性不一定會指出呈現控制項的 HTML 項目是否支援 （允許）`disabled`屬性。 如果控制項的<xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性會指出 ASP.NET 版本號碼低於 4.0 中，控制項的值<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>屬性可能會傳回`true`即使呈現的 HTML 不支援`disabled`屬性。  
  
## <a name="backward-compatibility-for-disabled-controls"></a>停用的控制項的回溯相容性  
 當您使用 Visual Studio 升級至 ASP.NET 4 Web 專案，從較早版本時，Visual Studio 會自動設定`controlRenderingCompatibilityVersion`Web.config 檔案中的屬性 (將<xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性)，較早的版本號碼。 因為<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>屬性一律會傳回`true`時<xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性為低於 4.0，則這會導致要呈現已停用控制項的 HTML，如同在先前版本中的 Web 控制項。 如果您想要呈現使用 ASP.NET 4 中引入的演算法的 HTML 升級的網站時，您可以變更或移除`controlRenderingCompatibilityVersion`屬性。 如需詳細資訊，請參閱 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 屬性 (Property)。  
  
## <a name="setting-a-disabled-appearance-by-using-css"></a>使用 CSS 設定已停用的外觀  
 如果<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>控制項的屬性是`false`和控制項已停用 ASP.NET 設定`class`屬性的值呈現之 HTML 項目的<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType>屬性。 預設值<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType>屬性是 「 aspNetDisabled"。  
  
 若要提供已停用已停用控制項的外觀，您必須定義類別的值所表示的 CSS 規則<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType>屬性。  
  
 呈現的控制項中可能有多個值的 HTML 項目及其`class`屬性中的值是否其<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>屬性。 如需詳細資訊，請參閱 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 屬性 (Property)。  
  
   
  
## Examples  
 下列範例會顯示標記為已停用<xref:System.Web.UI.WebControls.Label>控制項：  
  
 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`  
  
 在 ASP.NET 3.5 和舊版中，這個標記會轉譯下列 HTML:  
  
 `<span id="Label1" disabled="disabled">Test</span>`  
  
 在 ASP.NET 4 中，如果值<xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性為 4.0 或更大，而且如果<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>屬性設定為其預設值，相同的標記會轉譯下列 HTML:  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">屬性的名稱。</param>
        <summary>使用指定的名稱，取得 Web 控制項的屬性。</summary>
        <returns>屬性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A>方法是明確介面成員實作。 它可用時，才執行個體<xref:System.Web.UI.WebControls.WebControl>類別轉換成<xref:System.Web.UI.IAttributeAccessor>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">屬性名稱/值組的名稱元件。</param>
        <param name="value">屬性名稱/值組的值元件。</param>
        <summary>將 Web 控制項的屬性設定為指定的名稱和值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A>方法是明確介面成員實作。 它可用時，才執行個體<xref:System.Web.UI.WebControls.WebControl>類別轉換成<xref:System.Web.UI.IAttributeAccessor>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項的定位索引。</summary>
        <value>Web 伺服器控制項的定位索引。 預設值為 <see langword="0" />，表示這個屬性尚未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>屬性來指定，或判斷 Web Form 網頁上的 Web 伺服器控制項的定位點索引。 當您按`Tab`索引鍵，Web 伺服器控制項接收焦點的順序由<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>每個控制項的屬性。 一開始載入頁面時，會接收第一個項目專注時`Tab`按鍵是網址列。 接下來，Web Form 頁面上的控制項被定位的遞增順序，根據值<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>屬性的每個控制項，從最小正整數，則為非零值開始。 如果多個控制項都共用相同的索引，控制項將會接收焦點 Web Form 網頁上宣告它們的順序。 最後，具有零的定位點索引控制項被定位宣告它們的順序。  
  
> [!NOTE]
>  只有具有非零值索引標籤索引的控制項將呈現`tabindex`屬性。  
  
 您可以移除 Web 伺服器控制項定位順序藉由設定<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>為負數值的屬性。  
  
> [!NOTE]
>  只在 Internet Explorer 4 和更新版本支援此屬性。  
  
   
  
## Examples  
 下列範例說明如何使用<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>屬性<xref:System.Web.UI.WebControls.WebControl>設定頁面上的控制項定位順序。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的定位索引不在 -32768 和 32767 之間。</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得對應至這個 Web 伺服器控制項的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。 這個屬性主要由控制項開發人員使用。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列舉值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>屬性來判斷<xref:System.Web.UI.HtmlTextWriterTag>這個 Web 伺服器控制項相關聯的值。 這個屬性主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Web.UI.WebControls.WebControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項標記的名稱。 這個屬性主要由控制項開發人員使用。</summary>
        <value>控制項標記的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.TagName%2A>與這個 Web 伺服器控制項相關聯的屬性，以判斷控制項標記的名稱。 這個屬性主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當滑鼠指標停留在 Web 伺服器控制項時顯示的文字。</summary>
        <value>當滑鼠停留在 Web 伺服器控制項時顯示的文字。 預設值為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>屬性來指定當滑鼠指標停留在 Web 伺服器控制項時顯示的自訂文字。  
  
> [!NOTE]
>  這個屬性會呈現所有瀏覽器。 不過，Microsoft Internet Explorer 會顯示為工具提示的這個屬性。 所有其他瀏覽器將會忽略這個屬性。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列範例說明如何設定<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>屬性<xref:System.Web.UI.WebControls.Button>控制項，它繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webControl.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>讓控制項追蹤其檢視狀態的變更，以便將這些變更儲存在物件的 <see cref="P:System.Web.UI.Control.ViewState" /> 屬性中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A>方法主要由控制項開發人員使用。  
  
 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A>標記中要開始追蹤並儲存變更的控制項檢視狀態的起點。 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A>會自動呼叫方法由 ASP.NET 伺服器控制項初始化時。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項的寬度。</summary>
        <value>此 <see cref="T:System.Web.UI.WebControls.Unit" /> 代表控制項的寬度。 預設值為 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebControl.Width%2A>屬性來指定 Web 伺服器控制項的寬度。  
  
> [!NOTE]
>  這個屬性不會呈現在瀏覽器中的所有控制項早於 Microsoft Internet Explorer 第 4 版。 無法轉譯此屬性在較早的瀏覽器中的控制項包括<xref:System.Web.UI.WebControls.Label>， <xref:System.Web.UI.WebControls.HyperLink>， <xref:System.Web.UI.WebControls.LinkButton>，和任何驗證的控制項。 <xref:System.Web.UI.WebControls.CheckBoxList>，<xref:System.Web.UI.WebControls.RadioButtonList>和<xref:System.Web.UI.WebControls.DataList>也不會呈現此屬性在較早的瀏覽器時其`RepeatLayout`屬性設定為`RepeatLayout.Flow`。 此外，只有單位類型的`Pixel`和`Percentage`舊版瀏覽器都支援。  
  
 因為此屬性為非標準 HTML，Web 伺服器控制項顯示為資料表，例如<xref:System.Web.UI.WebControls.Table>和<xref:System.Web.UI.WebControls.DataGrid>，不支援此屬性在瀏覽器中早於 Microsoft Internet Explorer 第 4 版。  
  
> [!NOTE]
>  若要設定<xref:System.Web.UI.WebControls.WebControl.Width%2A>以宣告方式為單位的屬性類型，而不是預設值是`Pixel`，您必須建立新的單位類型指定您想要的單位類型。 例如，若要將控制項設定<xref:System.Web.UI.WebControls.WebControl.Width%2A>屬性 100 的百分比值，您可以執行下列：  
>   
>  `myWebControl.width = Unit.Percentage(100);`  
>   
>  如需有關可用之單位類型<xref:System.Web.UI.WebControls.WebControl.Width%2A>屬性，請參閱<xref:System.Web.UI.WebControls.Unit>類別。  
  
   
  
## Examples  
 下列範例說明如何以宣告方式設定<xref:System.Web.UI.WebControls.WebControl.Width%2A>屬性<xref:System.Web.UI.WebControls.Table>控制項，繼承自<xref:System.Web.UI.WebControls.WebControl>基底類別。  
  
 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Web 伺服器控制項的寬度設定為負值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
  </Members>
</Type>