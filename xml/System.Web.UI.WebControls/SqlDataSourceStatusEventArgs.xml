<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35c362341828a3398efd2c97fc42dc3ecc6b2294" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36578839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供事件資料，在資料作業已完成之後，<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控制項會引發這個事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>類別用於<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>， <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>，和<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>原始檔控制中要執行的資料後傳遞資料庫作業的相關資訊的事件。 這項資訊包括作業所影響的資料列數目<xref:System.Data.Common.DbCommand>資料來源用來執行此作業，以及任何造成的例外狀況資訊的物件。 加入事件處理常式委派以處理<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>，<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>或<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件，您可以檢查這項資料，以及執行任何所需的其他後置處理。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource>控制項不僅會公開許多您可以使用基礎資料物件的資料作業過程中處理的事件。 下表列出的事件，以及相關聯<xref:System.EventArgs>和事件處理常式類別，更好引導您對應至資料的作業使用的生命週期的各種事件<xref:System.Web.UI.WebControls.SqlDataSource>控制項。  
  
|Event - 事件|EventArgs|事件處理常式|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 擷取資料之前發生。|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting><xref:System.Web.UI.WebControls.SqlDataSource.Updating>，<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>發生之前插入、 更新或刪除作業會執行。|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected><xref:System.Web.UI.WebControls.SqlDataSource.Inserted>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>，<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>發生之後資料擷取、 插入、 更新或刪除作業完成。|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>類別來檢查傳回值和輸出參數使用時所傳回的值<xref:System.Web.UI.WebControls.SqlDataSource>控制項搭配預存程序來擴展<xref:System.Web.UI.WebControls.GridView>控制項。 預存程序會選取資料，會顯示在<xref:System.Web.UI.WebControls.GridView>，但也會傳遞至呼叫端，例如整數輸出參數和傳回值的其他資訊。 參數的<xref:System.Web.UI.WebControls.SqlDataSource>預存程序會使用所含<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>集合，和包含的 Web form 中的資訊傳遞給預存程序的參數，以及將資訊傳遞的參數返回表單。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>這些參數的屬性設定為<xref:System.Data.ParameterDirection.Output>和<xref:System.Data.ParameterDirection.ReturnValue>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.Common.DbCommand" />，表示由 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控制項送出至資料庫的資料庫查詢、命令或預存程序。</param>
        <param name="affectedRows">資料庫作業所影響的資料列數目 (如果有的話)。</param>
        <param name="exception">資料庫作業擲回的 <see cref="T:System.Exception" /> (如果有的話)。</param>
        <summary>使用指定的輸出參數、傳回值，以及資料庫作業所影響的資料列數目，初始化 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料庫作業所影響的資料列數目。</summary>
        <value>資料庫作業所影響的資料列數目。 預設值為 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有作業都傳回作業所影響的資料列的數目。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A>屬性具有相同的傳回值的值<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>， <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>，和<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>方法。  
  
 當<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>方法呼叫和資料來源設定為<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>模式中，傳回值是 0，在所有情況下。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得送出至資料庫的資料庫命令。</summary>
        <value>
          <see cref="T:System.Data.Common.DbCommand" /> 物件，表示送出至資料庫的資料庫命令。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以處理<xref:System.Web.UI.WebControls.SqlDataSource.Selected>， <xref:System.Web.UI.WebControls.SqlDataSource.Updated>， <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>，或<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件來檢查及操作屬性<xref:System.Data.Common.DbCommand>所送出後<xref:System.Web.UI.WebControls.SqlDataSource>資料庫的控制項。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A>屬性可讓您透過執行資料庫作業後存取傳回的值與任何輸出參數值及其<xref:System.Data.Common.DbCommand.Parameters%2A>屬性，並將<xref:System.Data.Common.DbCommand.CommandText%2A>屬性，代表 SQL 查詢，命令，或已提交至資料庫的預存程序名稱。  
  
 任何輸出參數會從具有參數的明確地<xref:System.Data.ParameterDirection.InputOutput>或<xref:System.Data.ParameterDirection.Output>值<xref:System.Web.UI.WebControls.Parameter.Direction%2A>屬性<xref:System.Web.UI.WebControls.Parameter>物件。 傳回值是從參數具有<xref:System.Data.ParameterDirection.ReturnValue>值。  
  
   
  
## Examples  
 下列程式碼範例示範如何檢查輸出參數的值時使用<xref:System.Web.UI.WebControls.SqlDataSource>預存程序的控制項。 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>集合包含的參數，<xref:System.Web.UI.WebControls.SqlDataSource>使用預存程序，並將資訊從 Web form 預存程序傳遞的參數，以及將資訊傳遞至表單的參數所組成。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>類別。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料作業期間資料庫所擲回之任何例外狀況的包裝函式。</summary>
        <value>
          <see cref="T:System.Exception" />，包裝資料庫在其 <see cref="P:System.Exception.InnerException" /> 屬性中擲回的任何例外狀況。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception>屬性不是實際資料庫作業所擲回的例外狀況。 您可以擲回例外狀況使用存取<xref:System.Exception.InnerException%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否已處理資料庫擲回的例外狀況。</summary>
        <value>如果資料庫擲回的例外狀況已經過處理且不應由 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控制項擲回，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果資料庫就會擲回例外狀況，<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A>屬性設定為`false`和例外狀況包裝<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A>屬性。 如果您使用<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>，您可以檢查<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>屬性和處理例外狀況。 如果您處理的例外狀況時，設定<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A>屬性`true`或<xref:System.Web.UI.WebControls.SqlDataSource>控制項將會擲回例外狀況。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>