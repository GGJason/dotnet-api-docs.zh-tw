<Type Name="LinqDataSourceValidationException" FullName="System.Web.UI.WebControls.LinqDataSourceValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ae2ee400046dd5174c6de772663b3c4824cc3c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598462" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinqDataSourceValidationException extends System.Exception implements class System.Runtime.Serialization.ISerializable, class System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceValidationException&#xA;Inherits Exception&#xA;Implements IDynamicValidatorException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceValidationException : Exception, System::Web::DynamicData::IDynamicValidatorException" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicValidatorException</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1324e-101">說明在 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項插入、更新或刪除值之前，在驗證新值或修改值期間所發生的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1324e-101">Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324e-102"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException>類別包含型別轉換和屬性 setter 的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1324e-102">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions.</span></span> <span data-ttu-id="1324e-103">所有驗證期間所擲回的例外狀況都包含在<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="1324e-103">All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="1324e-104">您可以擷取每個驗證例外狀況逐一<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="1324e-104">You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span>  
  
 <span data-ttu-id="1324e-105">您通常會處理中的例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Updating>， <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>，和<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="1324e-105">You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events.</span></span> <span data-ttu-id="1324e-106">如果擲回驗證例外狀況，`Exception`屬性<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>， <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>，或<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>物件包含<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>物件。</span><span class="sxs-lookup"><span data-stu-id="1324e-106">If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object.</span></span> <span data-ttu-id="1324e-107">如果不擲回任何例外狀況，`Exception`屬性包含`null`。</span><span class="sxs-lookup"><span data-stu-id="1324e-107">If no exception is thrown, the `Exception` property contains `null`.</span></span>  
  
 <span data-ttu-id="1324e-108">若要處理驗證例外狀況，建立的處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Updating>， <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>，或<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="1324e-108">To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="1324e-109">事件處理常式中檢查是否`Exception`事件引數類別屬性包含值以外`null`。</span><span class="sxs-lookup"><span data-stu-id="1324e-109">In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`.</span></span> <span data-ttu-id="1324e-110">如果`Exception`屬性不是 null，所擲回一個或多個驗證例外狀況，以便您可以擷取中的每個驗證例外狀況<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1324e-110">If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span>  
  
 <span data-ttu-id="1324e-111">如果值不符合屬性類型，可能會發生驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1324e-111">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="1324e-112">例如，嘗試更新整數屬性，使用非數字字元，會導致驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1324e-112">For example, trying to update an integer property by using non-numeric characters causes a validation exception.</span></span> <span data-ttu-id="1324e-113">LINQ to SQL 類別也可以包含自訂的驗證準則，以確定屬性包含的值不在預期的範圍或模式。</span><span class="sxs-lookup"><span data-stu-id="1324e-113">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1324e-114">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="1324e-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1324e-115">它藉由顯示任何驗證例外狀況訊息<xref:System.Web.UI.WebControls.Label>控制項。</span><span class="sxs-lookup"><span data-stu-id="1324e-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1324e-116">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1324e-117">以系統提供的錯誤說明訊息，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a system-supplied message that describes the error.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324e-118">描述錯誤的系統提供的訊息會考量目前系統文化特性。</span><span class="sxs-lookup"><span data-stu-id="1324e-118">The system-supplied message that describes the error takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="1324e-119">下表顯示 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 類別執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="1324e-119">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="1324e-120">屬性</span><span class="sxs-lookup"><span data-stu-id="1324e-120">Property</span></span>|<span data-ttu-id="1324e-121">值</span><span class="sxs-lookup"><span data-stu-id="1324e-121">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1324e-122">`null`。</span><span class="sxs-lookup"><span data-stu-id="1324e-122">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1324e-123">系統提供的當地語系化描述。</span><span class="sxs-lookup"><span data-stu-id="1324e-123">A system-supplied localized description.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1324e-124">描述錯誤的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-124">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324e-125">使用指定的錯誤說明訊息，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324e-126">下表顯示 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 類別執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="1324e-126">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="1324e-127">屬性</span><span class="sxs-lookup"><span data-stu-id="1324e-127">Property</span></span>|<span data-ttu-id="1324e-128">值</span><span class="sxs-lookup"><span data-stu-id="1324e-128">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1324e-129">`null`。</span><span class="sxs-lookup"><span data-stu-id="1324e-129">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1324e-130">`message` 中指定的錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="1324e-130">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinqDataSourceValidationException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="1324e-131">存放序列物件資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-131">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1324e-132">關於來源或目的端的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-132">Context information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324e-133">使用序列化資料，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-133">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324e-134">重新構成經由資料流傳輸的例外狀況物件的還原序列化期間呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="1324e-134">This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary&lt;string,Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IDictionary(Of String, Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ innerExceptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1324e-135">描述錯誤的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-135">The message that describes the error.</span>
          </span>
        </param>
        <param name="innerExceptions">
          <span data-ttu-id="1324e-136">驗證例外狀況的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-136">The collection of validation exceptions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324e-137">使用指定的錯誤說明訊息和內部例外狀況的參考集合，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-137">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error, and a collection of references to inner exceptions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1324e-138">描述錯誤的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-138">The message that describes the error.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="1324e-139">做為目前例外狀況發生原因的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-139">The exception that is the cause of the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324e-140">使用指定的錯誤訊息和內部例外狀況的參考，初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-140">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified error message and a reference to the inner exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324e-141">您通常不會使用這個建構函式因為驗證例外狀況會儲存在<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>屬性，不<xref:System.Exception.InnerException%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1324e-141">You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="1324e-142">物件，存放擲回之例外狀況的序列化物件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-142">The object that holds the serialized object data for the exception that is being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1324e-143">關於來源或目的端的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-143">Context information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324e-144">取得例外狀況的相關資訊，並將此資訊加入至 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-144">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324e-145"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A>方法會加入至例外狀況資訊<xref:System.Runtime.Serialization.SerializationInfo>目標為序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="1324e-145">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="1324e-146">還原序列化期間的例外狀況重新組成從<xref:System.Runtime.Serialization.SerializationInfo>，會在資料流上傳輸。</span><span class="sxs-lookup"><span data-stu-id="1324e-146">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As IDictionary(Of String, Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ InnerExceptions { System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324e-147">取得在驗證新的或修改的資料時所發生的一個或多個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-147">Gets one or more exceptions that occurred when new or modified data was being validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324e-148">包含例外狀況的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324e-148">A collection that contains the exceptions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324e-149"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>集合包含所有更新之前的資料驗證期間所擲回驗證例外狀況、 插入或刪除作業。</span><span class="sxs-lookup"><span data-stu-id="1324e-149">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.</span></span> <span data-ttu-id="1324e-150">如果值不符合屬性類型，可能會發生驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1324e-150">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="1324e-151">例如，如果您嘗試使用非數字字元更新整數屬性，就會擲回驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1324e-151">For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.</span></span> <span data-ttu-id="1324e-152">LINQ to SQL 類別也可以包含自訂的驗證準則，以確定屬性包含的值不在預期的範圍或模式。</span><span class="sxs-lookup"><span data-stu-id="1324e-152">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1324e-153">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="1324e-153">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1324e-154">它藉由顯示任何驗證例外狀況訊息<xref:System.Web.UI.WebControls.Label>控制項。</span><span class="sxs-lookup"><span data-stu-id="1324e-154">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
                In e.Exception.InnerExceptions  
          Label1.Text &= innerException.Key & ": " & _   
                  innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)   
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
            e.Exception.InnerExceptions)  
        {  
            Label1.Text += innerException.Key + ": " +   
                innerException.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>