<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56793326c9289dc8571df36d7fa8e9d17af807b3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>支援 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控制項，並資料繫結控制項提供對關聯式資料庫執行 SQL 資料作業的介面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別主要為了用於資料繫結控制項，而不是網頁程式碼中的可程式化物件。  
  
 ASP.NET 資料來源控制項包含一個或多個資料來源檢視物件所代表的資料清單。 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別會擴充<xref:System.Web.UI.DataSourceView>類別，定義的功能<xref:System.Web.UI.WebControls.SqlDataSource>控制項與它相關聯，並實作資料來源控制項的基本資料功能。 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別實作的資料功能<xref:System.Web.UI.WebControls.SqlDataSource>控制，包括<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>， <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>， <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>，和<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>作業，排序、 篩選，以及管理會保留在檢視中的設定狀態。  
  
 雖然<xref:System.Web.UI.WebControls.SqlDataSourceView>物件並未直接公開網頁開發人員所<xref:System.Web.UI.WebControls.SqlDataSource>許多屬性是控制項。 資料來源檢視執行的最基本作業會從基礎資料庫使用的資料擷取<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>方法，擷取<xref:System.Collections.IEnumerable>資料項目的集合。 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別會實作從使用 SQL 查詢的關聯式資料庫擷取資料。 可以參數化 SQL 查詢，以取得更大的彈性和安全性。 下列資料擷取方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.SqlDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.SqlDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>事件  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Selected>事件  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>物件支援更新關聯式資料庫使用 SQL 命令中的資料。 可以參數化 SQL 命令，以取得更大的彈性和安全性。 資料繫結控制項，例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，可以執行使用自動更新設定<xref:System.Web.UI.WebControls.SqlDataSourceView>，而其他控制項不能。 下列的更新方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.SqlDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.SqlDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Updating>事件  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Updated>事件  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>支援關聯式資料庫中插入新的資料列。 SQL 命令中指定的<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>可以參數化屬性，取得更大的彈性和安全性。 資料繫結控制項，例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，可以設定為執行使用自動插入<xref:System.Web.UI.WebControls.SqlDataSourceView>，而其他控制項不能。 下列插入方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.SqlDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.SqlDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>事件  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>事件  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>物件也支援從關聯式資料庫中刪除資料。 如同其他命令的 SQL 命令中指定<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>可以參數化屬性，取得更大的彈性和安全性。 資料繫結控制項，例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，可以設定為執行使用自動刪除<xref:System.Web.UI.WebControls.SqlDataSourceView>，而其他控制項不能。 下列刪除方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.SqlDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.SqlDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>事件  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>事件  
  
 動態用來擷取資料時篩選資料的子句時，資料擷取是更強大。 換句話說，SQL 查詢使用靜態其中子句不是為有彈性且功能強大的 SQL 查詢在 WHERE 子句中的值會繫結至可能變更，例如 Web Form 網頁上的控制項中顯示的值的值。 而不會重建 SQL 查詢，並設定<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>每次載入頁面的屬性，您可以使用<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>屬性以套用動態篩選，來擷取資料。 這些屬性由實作<xref:System.Web.UI.WebControls.SqlDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.SqlDataSource>控制項資料繫結控制項和其他呼叫端。  
  
 您可以排序的資料，您使用擷取<xref:System.Web.UI.WebControls.SqlDataSource>控制項加入 ORDER BY 子句，這會導致資料庫以執行順序，當您擷取資料時，或擷取後，在記憶體中排序資料。 您可以提供的排序運算式<xref:System.Web.UI.WebControls.SqlDataSourceView>藉由設定<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>屬性<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞至<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>方法。 語法<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>屬性是相同的語法<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>屬性。 如果您使用預存程序來擷取資料時，您也可以使用<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>屬性，以指定的參數，專門用於排序預存程序呼叫的結果。  
  
 當多個使用者同時可以變更資料庫時，可能會缺少的並行存取衝突。 <xref:System.Web.UI.WebControls.SqlDataSource>控制項有透過控制項並行<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType>屬性。 中實作功能<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType>屬性。  
  
 類似其他許多的 Web 伺服器控制項，<xref:System.Web.UI.WebControls.SqlDataSourceView>實作<xref:System.Web.UI.IStateManager>介面並使用檢視狀態來追蹤其狀態在頁面的要求。 實作<xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>和屬性和<xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>， <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>，和<xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>方法可供啟用控制項檢視狀態的追蹤。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">與 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 關聯的資料來源控制項。</param>
        <param name="name">資料來源檢視的唯一名稱 (在擁有該資料來源檢視的資料來源控制項範圍內)。</param>
        <param name="context">目前的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>將指定之 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項設定為目前檢視的擁有人，初始化 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A>建構函式會呼叫<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>方法以傳回具有指定的資料來源檢視的新執行個體`name`參數。 <xref:System.Web.UI.WebControls.SqlDataSource>控制項都只有一個相關<xref:System.Web.UI.WebControls.SqlDataSourceView>物件在任何時候，而且一定名稱檢視`Table`，雖然此命名限制所加諸<xref:System.Web.UI.WebControls.SqlDataSource>不控制<xref:System.Web.UI.WebControls.SqlDataSourceView>。 您可以覆寫<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>方法，以支援使用不同的命名慣例的檢視。  
  
 <xref:System.Web.HttpContext>所傳遞物件`context`參數由用資料來源檢視來存取參數的物件，例如<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>和<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出當 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 集合中包含的任何參數評估為 <see langword="null" /> 時，是否取消資料擷取作業。</summary>
        <value>
          如果當 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 集合中包含的參數評估為 <see langword="true" /> 時取消資料擷取作業，則為 <see langword="null" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 物件是否支援刪除作業。</summary>
        <value>
          如果支援該作業，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A>屬性會傳回`true`如果<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>屬性設定。 如果所有的資料屬性未設定或未正確設定，刪除作業仍會失敗。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 物件是否支援插入作業。</summary>
        <value>
          如果支援該作業，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A>屬性會傳回`true`如果<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>屬性設定。 如果所有的資料屬性未設定或未正確設定，插入作業仍會失敗。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 物件是否支援對擷取的資料進行分頁。</summary>
        <value>
          所有情況下都是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>物件不支援分頁。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 物件是否除了支援擷取資料集以外，還支援擷取資料列的總數。</summary>
        <value>
          所有情況下都是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>物件不支援擷取資料列計數。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 物件是否支援對所擷取資料的排序檢視。</summary>
        <value>
          如果支援排序則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A>屬性會傳回`true`，如果目前<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>屬性設定為<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>值和<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>屬性設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 物件是否支援更新作業。</summary>
        <value>
          如果支援該作業，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A>屬性會傳回`true`如果<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>屬性設定。 如果所有的資料屬性未設定或未正確設定，刪除作業仍會失敗。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出在作業期間，當基礎資料庫的資料列資料發生變更時，<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控制項如何執行更新和刪除作業。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.ConflictOptions" /> 值。 預設值為 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性會決定是否要將舊的和新值的參數套用至`Update`方法。 例如，如果命令是由指定<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>屬性會傳回<xref:System.Data.DataSet>物件與資料行`Name`和`Number`，和<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.OverwriteChanges>值的建立參數`Name`和`Number`更新作業。 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值的建立參數`Name`， `Number`， `original_Name`，和`original_Number`。 (取決於原始值參數的完整名稱<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>。)然後，<xref:System.Web.UI.WebControls.SqlDataSourceView>物件決定的是方法中指定<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>屬性具有相符的參數。  
  
 並行存取控制是資料存放區使用的控制如何讀取和多個用戶端存取和管理相同的資料時，存放區中變更資料的技術。 例如，一個用戶端讀取資料並呈現給使用者，而另一個用戶端讀取相同的資料，並提供給不同的使用者。 如果兩個使用者更新的資料，並送出至資料存放區，無法預料的結果可能會發生，因為兩個用戶端可能會更新為相同的資料不同的值。 這被視為衝突。 藉由設定<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性<xref:System.Web.UI.ConflictOptions.CompareAllValues>值，更新作業然後比較原始資料來源，以便偵測衝突，並視需要處理這類舊的和新值。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值不是其中一個 <see cref="T:System.Web.UI.ConflictOptions" /> 值。</exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">要刪除的 <see cref="T:System.Collections.IDictionary" /> 作業之物件的 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 或資料列索引鍵值。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，包含的資料列值只有在 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 值時才會評估。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 字串、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> 集合中指定的任何參數，以及 <paramref name="keys" /> 和 <paramref name="oldValues" /> 集合中指定的值，執行刪除作業。</summary>
        <returns>表示從基礎資料庫刪除之資料列數的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>方法呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>方法，傳遞`keys`和`oldValues`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 不能以基礎資料來源建立連接。  
  
 \-或-  
  
 將 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 值，且不傳遞任何 <paramref name="oldValues" /> 參數。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> 屬性為 <see langword="false" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 會用來刪除基礎資料庫的資料。</summary>
        <value>SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 會用來刪除資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由於不同的資料庫產品使用不同的 SQL，SQL 字串的語法須視目前所使用的 ADO.NET 提供者 (可由 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 屬性識別) 而定。  
  
 如果 SQL 字串是參數型查詢或命令，參數的替代符號亦須視目前所使用的 ADO.NET 提供者而定。 例如，如果提供者是<xref:System.Data.SqlClient?displayProperty=nameWithType>，這是預設提供者<xref:System.Web.UI.WebControls.SqlDataSource>類別，參數的預留位置是`'@parameterName'`。 不過，如果提供者設定為<xref:System.Data.Odbc?displayProperty=nameWithType>或<xref:System.Data.OleDb?displayProperty=nameWithType>，參數的預留位置是`'?'`。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>可以是 SQL 字串或名稱的預存程序中，如果基礎資料庫支援預存程序。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>屬性儲存在檢視狀態。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>刪除訂單 Northwind 資料庫 Orders 資料表中的文字。 資料會從 Orders 資料表中擷取並顯示在<xref:System.Web.UI.WebControls.GridView>控制項。 <xref:System.Web.UI.WebControls.GridView>呈現**刪除**自動按鈕時<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>屬性設定為`true`自動填入<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>集合和呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>方法時**刪除**按鈕。 最後，因為此範例會刪除資料，加入事件處理常式是嘗試將資料庫備份至磁碟上的刪除作業之前執行。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> 屬性中的文字是 SQL 陳述式還是預存程序的名稱。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。 預設值為 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值不是其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於刪除作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>事件，以檢查值的刪除作業完成之後，輸出參數。 輸出參數都是從<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> 屬性所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> 屬性所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>屬性包含參數化的 SQL 查詢，<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>集合包含任何<xref:System.Web.UI.WebControls.Parameter>對應於 SQL 字串中的參數預留位置的物件。  
  
 參數名稱可能會受到<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>屬性; 具體來說，如果此名稱會識別主索引鍵，例如金鑰指定使用`DataKeyNames`屬性的資料繫結控制項，或在刪除和更新的案例<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值和一組`oldValues`傳遞至對應的資料方法。 在此情況下，格式字串套用至每個參數名稱`oldValues`集合。  
  
 根據 ADO.NET 提供者中的參數順序<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>集合可能十分重要。 <xref:System.Data.OleDb?displayProperty=nameWithType>和<xref:System.Data.Odbc?displayProperty=nameWithType>提供者將出現在參數化 SQL 查詢中參數的順序根據集合中的參數產生關聯。 <xref:System.Data.SqlClient?displayProperty=nameWithType>提供者，這是預設的 ADO.NET 提供者的<xref:System.Web.UI.WebControls.SqlDataSource>控制項，將集合中的參數使用 SQL 查詢中預留位置比對參數的名稱。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>文字，以從 Northwind 資料庫中刪除訂單。 一開始，資料會從 Orders 資料表中擷取並顯示在<xref:System.Web.UI.WebControls.DropDownList>控制項。 您必須明確宣告<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>屬性並呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>方法時使用資料繫結控制項，例如<xref:System.Web.UI.WebControls.DropDownList>(不像控制項，例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，這會自動填入參數和呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>上資料來源控制項的方法)。 在此範例中，<xref:System.Web.UI.WebControls.Button.OnClick%2A>事件委派給私用<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>事件處理常式，它會明確呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>方法<xref:System.Web.UI.WebControls.SqlDataSource>控制項。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在刪除作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.SqlDataSource>控制項執行刪除作業。  
  
 基礎資料來源的連接尚未開啟時，會呼叫事件處理常式委派。 因此，您無法取消<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>直接藉由呼叫作業<xref:System.Data.Common.DbCommand.Cancel%2A>方法<xref:System.Data.Common.DbCommand>所公開的物件<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>物件。 您可以不過，在作業取消藉由設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>至`true`。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何處理<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>進行刪除作業之前引發的事件。 因為此範例會從 Northwind 資料庫中，刪除資料<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>處理常式加入嘗試執行刪除作業之前，將資料庫備份至磁碟。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">要刪除的 <see cref="T:System.Collections.IDictionary" /> 作業之物件的 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 或資料列索引鍵值。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，包含的資料列值只有在 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 值時才會評估。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 字串、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> 集合中指定的任何參數，以及 <paramref name="keys" /> 和 <paramref name="oldValues" /> 集合中指定的值，執行刪除作業。</summary>
        <returns>表示從基礎資料庫刪除之資料列數的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別會實作繼承<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法，以從資料庫刪除資料。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>方法。  
  
 中所包含的值`keys`集合會評估並與包含的任何值合併<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>集合。 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值、 值中所包含的`oldValues`集合使用格式化<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>屬性且也合併。  
  
 執行刪除作業之前，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>事件。 您可以處理這個事件來檢查參數的值，並執行任何前置處理之前刪除。  
  
 若要執行刪除作業<xref:System.Web.UI.WebControls.SqlDataSourceView>物件組建<xref:System.Data.Common.DbCommand>物件使用<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>文字和任何相關聯<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>屬性，然後執行<xref:System.Data.Common.DbCommand>對基礎資料庫物件。 刪除作業完成之後，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>事件。 您可以處理這個事件來檢查任何傳回值和錯誤碼，並執行任何後續處理。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 不能以基礎資料來源建立連接。  
  
 \-或-  
  
 將 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 值，且不傳遞任何 <paramref name="oldValues" /> 參數。</exception>
        <exception cref="T:System.Web.HttpException">目前的使用者沒有存取資料庫的正確使用權限。  
  
 \-或-  
  
 控制項的執行個體為 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> 控制項，且拒絕存取指定給 <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> 屬性的路徑。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> 屬性為 <see langword="false" />。  
  
 \-或-  
  
 在使用 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> 控制項的執行個體之前，設計工具未正確對應設計階段相對路徑。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">值的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 屬性搭配使用，以執行插入資料庫作業。 如果沒有任何參數與查詢關聯，或 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 屬性不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 字串、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> 集合中指定的任何參數，以及 <paramref name="values" /> 集合中指定的值，執行插入作業。</summary>
        <returns>表示插入基礎資料庫之資料列數的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別會實作繼承<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法，以將資料插入資料庫。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>方法。  
  
 在執行插入作業之前，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>事件。 您可以處理這個事件來檢查參數的值，並執行之前插入任何前置處理。  
  
 若要執行插入作業，<xref:System.Web.UI.WebControls.SqlDataSourceView>物件組建<xref:System.Data.Common.DbCommand>物件使用<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>文字和任何相關聯<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>屬性，然後執行<xref:System.Data.Common.DbCommand>對基礎資料庫物件。 在插入完成後，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>事件。 您可以處理這個事件來檢查任何傳回值和錯誤碼，並執行任何後續處理。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 不能以基礎資料來源建立連接。</exception>
        <exception cref="T:System.Web.HttpException">目前的使用者不具有取得資料庫存取權的正確使用權限。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> 屬性為 <see langword="false" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 物件，用於針對資料要求基本資料擷取以外的作業。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 字串和 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 集合中的任何參數，從基礎資料庫擷取資料。</summary>
        <returns>資料列的 <see cref="T:System.Collections.IEnumerable" /> 清單。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別會實作繼承<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>方法來從資料庫擷取資料。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>方法。  
  
 執行資料擷取之前，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>事件。 您可以處理這個事件檢查參數的值，並執行任何前置處理，才能擷取資料。  
  
 若要執行操作，<xref:System.Web.UI.WebControls.SqlDataSourceView>物件組建<xref:System.Data.Common.DbCommand>物件使用<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>文字和任何相關聯<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>，並且對基礎資料庫來執行。 在作業完成之後，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSource.Selected>事件。 您可以處理這個事件來檢查任何傳回值、 錯誤代碼，並執行任何後續處理。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>方法會傳回<xref:System.Data.DataView>物件，如果<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>設<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>，或<xref:System.Data.IDataReader>物件，如果<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>設<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>。 關閉<xref:System.Data.IDataReader>當您完成讀取資料的物件。  
  
 如果<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>設<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>和啟用快取、<xref:System.Web.UI.WebControls.SqlDataSourceView>擷取資料和資料作業期間，將資料儲存至快取。 快取，已捨棄，或重新整理會根據建立的組合所指定的快取行為<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>屬性。  
  
> [!IMPORTANT]
>  當您使用用戶端模擬 Windows 驗證下的時，當第一位使用者存取資料時，會快取資料。 如果另一個使用者要求相同的資料時，會從快取中擷取的資料。 資料不會擷取藉由另一個呼叫資料庫來驗證使用者的存取資料。 如果您預期多個使用者存取資料，而且您希望每個擷取資料來驗證資料庫的安全性設定，請勿使用快取。  
  
 如果<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>設<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>和<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>已指定，則會評估與提供所有<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>和產生的篩選資料擷取作業期間，會套用至資料的清單。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">傳遞給 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法的 <paramref name="arguments" /> 指定資料來源應在擷取資料時執行一些額外工作，以透過擷取的資料啟用分頁或排序，但是資料來源控制項不支援所要求的功能。  
  
 \-或-  
  
 快取已啟用，但是資料來源的 <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> 屬性未設定為 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />。  
  
 \-或-  
  
 已設定 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> 屬性，但是 <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> 未設定為 <see cref="F:System.Data.CommandType.StoredProcedure" />。</exception>
        <exception cref="T:System.InvalidOperationException">資料來源無法建立資料庫連接。  
  
 \-或-  
  
 快取已啟用，但內部快取和命令類型不相符。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">主索引鍵的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性搭配使用，以執行更新資料庫作業。 如果沒有任何索引鍵與查詢關聯，或 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <param name="values">值的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性搭配使用，以執行更新資料庫作業。 如果沒有任何參數與查詢有關聯，或是 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，表示資料庫中的原始值。 如果沒有任何參數與查詢關聯，或 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 字串、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> 集合中指定的任何參數，以及 <paramref name="keys" />、<paramref name="values" /> 和 <paramref name="oldValues" /> 集合中指定的值，執行更新作業。</summary>
        <returns>表示基礎資料庫中更新之資料列數的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>類別會實作繼承<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>方法，以更新資料庫中的資料。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>方法。  
  
 中包含的值`keys`和`values`集合會評估並與所包含的任何值合併<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>集合。 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>中, 包含的值`oldValues`集合使用格式化<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>，也會合併。  
  
 在執行更新作業之前，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>事件。 您可以處理此事件，以檢查參數的值，並執行任何前置處理更新之前。  
  
 若要執行操作，<xref:System.Web.UI.WebControls.SqlDataSourceView>建置<xref:System.Data.Common.DbCommand>物件使用<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>文字和任何相關聯<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>屬性，然後執行<xref:System.Data.Common.DbCommand>對基礎資料庫物件。 在作業完成之後，<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>事件。 您可以處理這個事件來檢查任何傳回值和錯誤碼，並執行任何後續處理。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 不能以基礎資料來源建立連接。  
  
 \-或-  
  
 將 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 值，且不傳遞任何 <paramref name="oldValues" /> 參數。</exception>
        <exception cref="T:System.Web.HttpException">目前的使用者不具有取得資料庫存取權的正確使用權限。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> 屬性為 <see langword="false" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當呼叫 <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> 時會套用的篩選運算式。</summary>
        <value>字串，代表當使用 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法抓取資料時套用的篩選運算式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用於語法<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>屬性是格式字串樣式語法。 您可以包含在參數<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>屬性。 如果參數類型是字串或字元，請使用單引號括住參數。 如果參數是數值類型，就不需要引號。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>集合包含的參數，會評估中找到的預留位置<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource>控制項支援篩選的資料中的時，才`DataSet`模式。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>屬性儲存在檢視狀態。  
  
> [!IMPORTANT]
>  您應該先驗證您從用戶端接收任何篩選參數值。 執行階段只會取代篩選條件運算式的參數值並將其以套用<xref:System.Data.DataView>所傳回的物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 如果您使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性作為安全性考量，以限制所傳回的篩選發生之前，您必須驗證的參數值的項目數目。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Northwind 資料庫中擷取資料，並使用<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSource>套用任何時間的控制<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>方法會執行，以擷取資料。 在此範例中，<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>屬性包含篩選參數，而包含在預留位置<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>集合。 在此範例中，則 filter 參數是<xref:System.Web.UI.WebControls.ControlParameter>物件繫結至<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>屬性<xref:System.Web.UI.WebControls.DropDownList>控制項。 因為<xref:System.Web.UI.WebControls.DropDownList>控制項有其<xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>屬性設定為`true`中的任何變更<xref:System.Web.UI.WebControls.DropDownList>選取項目會造成頁面回傳至伺服器和<xref:System.Web.UI.WebControls.GridView>重新與新的篩選器的繫結至資料來源控制項的控制項。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">當 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> 處於 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 模式時設定了 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> 屬性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在篩選作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering>事件以執行驗證作業篩選參數值之前<xref:System.Web.UI.WebControls.SqlDataSourceView>物件會執行篩選作業。 您可以取消<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>方法藉由設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>物件`true`。 引發事件時，才<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>屬性設定。  
  
> [!IMPORTANT]
>  您應該先驗證您從用戶端接收任何篩選參數值。 執行階段只會取代篩選條件運算式的參數值並將其以套用<xref:System.Data.DataView>所傳回的物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 如果您使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性作為安全性考量，以限制所傳回的篩選發生之前，您必須驗證的參數值的項目數目。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> 字串中任何參數替代符號關聯的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，其中所包含的一組參數，與在 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> 屬性中找到的任何參數預留位置相關聯。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的參數<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>集合與相關聯的任何參數中指定的<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>屬性。 中所指定的參數預留位置<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>依順序評估和比對中的參數物件<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>集合時<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>方法呼叫。  
  
> [!IMPORTANT]
>  您應該先驗證您從用戶端接收任何篩選參數值。 執行階段只會取代篩選條件運算式的參數值並將其以套用<xref:System.Data.DataView>所傳回的物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 如果您使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性作為安全性考量，以限制所傳回的篩選發生之前，您必須驗證的參數值的項目數目。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Northwind 資料庫中擷取資料，並使用<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSource>套用任何時間的控制<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>方法會執行，以擷取資料。 在此範例中，<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>屬性包含篩選參數，而包含在預留位置<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>集合。 此外，filter 參數是<xref:System.Web.UI.WebControls.ControlParameter>物件繫結至<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>屬性<xref:System.Web.UI.WebControls.DropDownList>控制項。 因為<xref:System.Web.UI.WebControls.DropDownList>控制項有其<xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>屬性設定為`true`中的任何變更<xref:System.Web.UI.WebControls.DropDownList>選取項目會造成頁面回傳至伺服器的資訊和<xref:System.Web.UI.WebControls.GridView>重新繫結至資料來源控制項的控制項新的篩選條件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> 屬性之參數的 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />，用於執行插入資料庫作業。 如果沒有任何參數與查詢有關聯，或是 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 字串、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> 集合中指定的任何參數，以及 <paramref name="values" /> 集合中指定的值，執行插入作業。</summary>
        <returns>表示插入基礎資料庫之資料列數的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>方法呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>方法，傳遞`values`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 不能以基礎資料來源建立連接。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> 屬性為 <see langword="false" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 物件會用來將資料插入基礎資料庫。</summary>
        <value>SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 會用來插入資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由於不同的資料庫產品使用不同的 SQL，SQL 字串的語法須視目前所使用的 ADO.NET 提供者 (可由 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 屬性識別) 而定。 如果 SQL 字串是參數型查詢或命令，參數的替代符號亦須視目前所使用的 ADO.NET 提供者而定。 例如，如果提供者是<xref:System.Data.SqlClient?displayProperty=nameWithType>，這是預設提供者<xref:System.Web.UI.WebControls.SqlDataSource>類別，參數的預留位置是`'@parameterName'`。 不過，如果提供者設定為<xref:System.Data.Odbc?displayProperty=nameWithType>或<xref:System.Data.OleDb?displayProperty=nameWithType>，參數的預留位置是`'?'`。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>屬性可以是 SQL 字串或預存程序的名稱，如果資料來源支援預存程序。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>屬性儲存在檢視狀態。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何將資料插入資料庫，使用<xref:System.Web.UI.WebControls.SqlDataSource>控制項。 第二個程式碼範例示範如何從 Microsoft SQL Server 擷取資料、 它顯示在<xref:System.Web.UI.WebControls.GridView>控制項，然後使用<xref:System.Web.UI.WebControls.DetailsView>查看選取之資料列的詳細資料控制項<xref:System.Web.UI.WebControls.GridView>和形式插入新記錄。  
  
 下列程式碼範例示範如何將資料插入資料庫，使用<xref:System.Web.UI.WebControls.SqlDataSource>控制項。 資料表中目前的資料會顯示在<xref:System.Web.UI.WebControls.DropDownList>控制項。 您可以輸入中的值，以新增新記錄<xref:System.Web.UI.WebControls.TextBox>控制項，然後按一下 [**插入**] 按鈕。 當**插入**按一下按鈕時，指定的值會插入至資料庫和<xref:System.Web.UI.WebControls.DropDownList>會重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 下列程式碼範例示範如何從 SQL Server 擷取資料、 它顯示在<xref:System.Web.UI.WebControls.GridView>控制項，然後使用<xref:System.Web.UI.WebControls.DetailsView>查看選取之資料列的詳細資料控制項<xref:System.Web.UI.WebControls.GridView>和形式插入新記錄。  
  
 一開始，資料會顯示在<xref:System.Web.UI.WebControls.GridView>控制與選取的資料列的<xref:System.Web.UI.WebControls.GridView>也會顯示於<xref:System.Web.UI.WebControls.DetailsView>控制項。 <xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項使用不同的資料來源控制項; 相關聯的一個<xref:System.Web.UI.WebControls.DetailsView>具有<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性，請確認選取的資料列的<xref:System.Web.UI.WebControls.GridView>是顯示。  
  
 如果您按一下 自動產生**插入**按鈕<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>顯示不同的使用者介面，用來插入新的記錄。 此範例使用預存程序來插入記錄，並傳回插入的資料列的主索引鍵。 如果您在插入記錄，<xref:System.Web.UI.WebControls.DetailsView>會自動填入<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>集合的值繫結資料行和呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>方法。 <xref:System.Web.UI.WebControls.DetailsView>可推斷正確的參數，從任何<xref:System.Web.UI.WebControls.BoundField>物件和參數<xref:System.Web.UI.WebControls.TemplateField>物件時使用 ASP.NET 雙向資料繫結語法。 在此範例中，加入額外的參數<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>事件處理常式處理由預存程序的主索引鍵。  
  
 最後，會插入資料後<xref:System.Web.UI.WebControls.DetailsView>至資料庫中，控制項<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>事件處理常式會呼叫處理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>不會顯示事件，插入的資料列的主索引鍵的值，而<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法<xref:System.Web.UI.WebControls.GridView>控制項稱為明確地將資料重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 屬性中的文字是 SQL 陳述式還是預存程序的名稱。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。 該值是 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>屬性儲存在檢視狀態。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Microsoft SQL Server 擷取資料、 它顯示在<xref:System.Web.UI.WebControls.GridView>控制項，然後使用<xref:System.Web.UI.WebControls.DetailsView>查看選取之資料列的詳細資料控制項<xref:System.Web.UI.WebControls.GridView>和形式插入新記錄。  
  
 <xref:System.Web.UI.WebControls.GridView>控制項會顯示一組資料而<xref:System.Web.UI.WebControls.DetailsView>控制項會顯示特定資料列的詳細資料。 如果您按一下 自動產生**插入**按鈕<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>顯示不同的使用者介面，用來插入新的記錄。 此範例使用預存程序來插入記錄，並傳回插入的資料列的主索引鍵。 預存程序名稱設定<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>屬性，並由設定做為預存程序識別<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>值。  
  
 最後，會插入資料後<xref:System.Web.UI.WebControls.DetailsView>至資料庫中，控制項<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>事件處理常式會呼叫處理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>不會顯示事件，插入的資料列的主索引鍵的值，而<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法<xref:System.Web.UI.WebControls.GridView>控制項稱為明確地將資料重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值不是其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於插入作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>事件，以檢查的值插入作業完成之後，輸出參數。 輸出參數都是從<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Microsoft SQL Server 擷取資料並顯示在<xref:System.Web.UI.WebControls.GridView>控制項。 此範例也會使用<xref:System.Web.UI.WebControls.DetailsView>控制項來顯示詳細資料中所選取的資料列<xref:System.Web.UI.WebControls.GridView>，以及表單來插入新的記錄。  
  
 一開始，資料會顯示在<xref:System.Web.UI.WebControls.GridView>控制與選取的資料列的<xref:System.Web.UI.WebControls.GridView>也會顯示於<xref:System.Web.UI.WebControls.DetailsView>。 <xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項使用不同的資料來源控制項; 相關聯的一個<xref:System.Web.UI.WebControls.DetailsView>具有<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性，請確認選取的資料列的<xref:System.Web.UI.WebControls.GridView>是顯示。  
  
 如果您按一下 自動產生**插入**按鈕<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>顯示不同的使用者介面用來插入新的記錄。 此範例使用預存程序來插入記錄，並傳回插入的資料列的主索引鍵。 如果您在插入記錄，<xref:System.Web.UI.WebControls.DetailsView>會自動填入<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>集合的值繫結資料行和呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>方法。 <xref:System.Web.UI.WebControls.DetailsView>可推斷正確的參數，從任何<xref:System.Web.UI.WebControls.BoundField>物件和參數<xref:System.Web.UI.WebControls.TemplateField>物件時使用 ASP.NET 雙向資料繫結語法。 在此範例中，加入額外的參數<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>事件處理常式處理由預存程序的主索引鍵。  
  
 最後，會插入資料後<xref:System.Web.UI.WebControls.DetailsView>至資料庫中，控制項<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>事件處理常式會呼叫處理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>不會顯示事件，插入的資料列的主索引鍵的值，而<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法<xref:System.Web.UI.WebControls.GridView>控制項稱為明確地將資料重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在插入作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.SqlDataSource>控制項執行插入作業。  
  
 基礎資料來源的連接尚未開啟時，會呼叫事件處理常式委派。 因此，您無法取消資料庫作業來直接呼叫<xref:System.Data.Common.DbCommand.Cancel%2A>方法<xref:System.Data.Common.DbCommand>所公開的物件<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>物件。 您可以不過，將資料庫作業取消藉由設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>至`true`。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Microsoft SQL Server 擷取資料、 它顯示在<xref:System.Web.UI.WebControls.GridView>控制項。 此範例也會使用<xref:System.Web.UI.WebControls.DetailsView>控制項來顯示詳細資料中所選取的資料列<xref:System.Web.UI.WebControls.GridView>，以及表單來插入新的記錄。  
  
 一開始，資料會顯示在<xref:System.Web.UI.WebControls.GridView>控制與選取的資料列的<xref:System.Web.UI.WebControls.GridView>也會顯示於<xref:System.Web.UI.WebControls.DetailsView>控制項。 <xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項使用不同的資料來源控制項; 相關聯的一個<xref:System.Web.UI.WebControls.DetailsView>具有<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性，請確認選取的資料列的<xref:System.Web.UI.WebControls.GridView>是顯示。  
  
 如果您按一下 自動產生**插入**按鈕<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>顯示不同的使用者介面，用來插入新的記錄。 此範例使用預存程序來插入記錄，並傳回插入的資料列的主索引鍵。 如果您在插入記錄，<xref:System.Web.UI.WebControls.DetailsView>會自動填入<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>集合的值繫結資料行和呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>方法。 <xref:System.Web.UI.WebControls.DetailsView>可推斷正確的參數，從任何<xref:System.Web.UI.WebControls.BoundField>物件和參數<xref:System.Web.UI.WebControls.TemplateField>物件時使用 ASP.NET 雙向資料繫結語法。 在此範例中，加入額外的參數<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>事件處理常式處理由預存程序的主索引鍵。  
  
 最後，會插入資料後<xref:System.Web.UI.WebControls.DetailsView>至資料庫中，控制項<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>事件處理常式會呼叫處理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>不會顯示事件，插入的資料列的主索引鍵的值，而<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法<xref:System.Web.UI.WebControls.GridView>控制項稱為明確地將資料重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 屬性所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 屬性所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>屬性包含參數化的 SQL 查詢，<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>集合包含任何<xref:System.Web.UI.WebControls.Parameter>對應於 SQL 字串中的參數預留位置的物件。  
  
 根據 ADO.NET 提供者中的參數順序<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>集合可能十分重要。 <xref:System.Data.OleDb?displayProperty=nameWithType>和<xref:System.Data.Odbc?displayProperty=nameWithType>提供者建立關聯的參數在參數化 SQL 查詢中出現的順序根據集合中的參數。 <xref:System.Data.SqlClient?displayProperty=nameWithType>提供者，這是預設的 ADO.NET 提供者的<xref:System.Web.UI.WebControls.SqlDataSource>控制項，將產生關聯，集合中的參數符合參數在 SQL 查詢中的預留位置別名的名稱。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
   
  
## Examples  
 下列程式碼範例示範如何將資料插入資料庫，使用<xref:System.Web.UI.WebControls.SqlDataSource>控制項和簡單 Web Form 頁面。 資料表中目前的資料會顯示在<xref:System.Web.UI.WebControls.DropDownList>控制項。 您可以輸入中的值，以新增新記錄<xref:System.Web.UI.WebControls.TextBox>控制項，然後按一下 [**插入**] 按鈕。 當**插入**按一下按鈕時，指定的值會插入至資料庫和<xref:System.Web.UI.WebControls.DropDownList>會重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 物件是否正在將變更儲存到它的檢視狀態。</summary>
        <value>
          如果資料來源檢視標示為要儲存狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">代表要還原之 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 狀態的物件。</param>
        <summary>還原資料來源檢視之先前儲存的檢視狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法主要供[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]基礎結構，不適合直接從您的程式碼使用。  不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>方法還原檢視狀態資訊<xref:System.Web.UI.WebControls.SqlDataSourceView>物件所儲存的先前頁面要求從<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定格式字串，套用至傳遞給 <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> 或 <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> 方法之任何參數的名稱。</summary>
        <value>字串，表示套用至傳遞給 <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> 或 <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> 方法之任何 <paramref name="oldValues" /> 參數名稱的格式字串。 預設值為 "{0}"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>格式字串套用至主索引鍵，例如，藉以`DataKeyNames`或 delete 中的資料繫結控制項的屬性，並更新案例其中<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值和一組`oldValues`傳遞至對應的資料方法。 在此情況下，格式字串套用至每個參數名稱`oldValues`集合。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> 控制項完成刪除作業之後，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> 控制項嘗試刪除作業之前，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何處理<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>之前引發的事件<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>進行作業。 因為此範例會從 Northwind 資料庫中，刪除資料<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>處理常式加入嘗試執行刪除之前，將資料庫備份至磁碟。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> 控制項篩選選取作業的結果之前，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> 控制項完成插入作業之後，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Microsoft SQL Server 擷取資料、 它顯示在<xref:System.Web.UI.WebControls.GridView>控制項，然後使用<xref:System.Web.UI.WebControls.DetailsView>查看選取之資料列的詳細資料控制項<xref:System.Web.UI.WebControls.GridView>和形式插入新記錄。  
  
 一開始，資料會顯示在<xref:System.Web.UI.WebControls.GridView>控制與選取的資料列的<xref:System.Web.UI.WebControls.GridView>也會顯示於<xref:System.Web.UI.WebControls.DetailsView>控制項。 <xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項使用不同的資料來源控制項; 相關聯的一個<xref:System.Web.UI.WebControls.DetailsView>具有<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性，請確認選取的資料列的<xref:System.Web.UI.WebControls.GridView>是顯示。  
  
 如果您按一下 自動產生**插入**按鈕<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>顯示不同的使用者介面，用來插入新的記錄。 此範例使用預存程序來插入記錄，並傳回插入的資料列的主索引鍵。 如果您在插入記錄，<xref:System.Web.UI.WebControls.DetailsView>會自動填入<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>集合的值繫結資料行和呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>方法。 <xref:System.Web.UI.WebControls.DetailsView>可推斷正確的參數，從任何<xref:System.Web.UI.WebControls.BoundField>物件和參數<xref:System.Web.UI.WebControls.TemplateField>物件時使用 ASP.NET 雙向資料繫結語法。 在此範例中，加入額外的參數<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>事件處理常式處理由預存程序的主索引鍵。  
  
 最後，會插入資料後<xref:System.Web.UI.WebControls.DetailsView>至資料庫中，控制項<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>事件處理常式會呼叫處理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>不會顯示事件，插入的資料列的主索引鍵的值，而<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法<xref:System.Web.UI.WebControls.GridView>控制項稱為明確地將資料重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> 控制項嘗試插入作業之前，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Microsoft SQL Server 擷取資料、 它顯示在<xref:System.Web.UI.WebControls.GridView>控制項，然後使用<xref:System.Web.UI.WebControls.DetailsView>查看選取之資料列的詳細資料控制項<xref:System.Web.UI.WebControls.GridView>和形式插入新記錄。  
  
 一開始，資料會顯示在<xref:System.Web.UI.WebControls.GridView>控制與選取的資料列的<xref:System.Web.UI.WebControls.GridView>也會顯示於<xref:System.Web.UI.WebControls.DetailsView>控制項。 <xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項使用不同的資料來源控制項; 相關聯的一個<xref:System.Web.UI.WebControls.DetailsView>具有<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性，請確認選取的資料列的<xref:System.Web.UI.WebControls.GridView>是顯示。  
  
 如果您按一下 自動產生**插入**按鈕<xref:System.Web.UI.WebControls.DetailsView>控制項，<xref:System.Web.UI.WebControls.DetailsView>顯示不同的使用者介面，用來插入新的記錄。 此範例使用預存程序來插入記錄，並傳回插入的資料列的主索引鍵。 如果您在插入記錄，<xref:System.Web.UI.WebControls.DetailsView>會自動填入<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>集合的值繫結資料行和呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>方法。 <xref:System.Web.UI.WebControls.DetailsView>可推斷正確的參數，從任何<xref:System.Web.UI.WebControls.BoundField>物件和參數<xref:System.Web.UI.WebControls.TemplateField>物件時使用 ASP.NET 雙向資料繫結語法。 在此範例中，加入額外的參數<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>事件處理常式處理由預存程序的主索引鍵。  
  
 最後，會插入資料後<xref:System.Web.UI.WebControls.DetailsView>至資料庫中，控制項<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>事件處理常式會呼叫處理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>不會顯示事件，插入的資料列的主索引鍵的值，而<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法<xref:System.Web.UI.WebControls.GridView>控制項稱為明確地將資料重新整理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> 控制項完成資料擷取作業之後，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> 控制項嘗試資料擷取作業之前，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> 控制項完成更新作業之後，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示及更新從 ODBC 資料庫中擷取資料<xref:System.Web.UI.WebControls.GridView>控制項。 已成功更新記錄之後，<xref:System.Web.UI.WebControls.SqlDataSource.Updated>事件由執行後置處理步驟的傳送電子郵件訊息通知的事件處理常式。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />，其中包含事件資料。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> 控制項嘗試更新作業之前，引發 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示從 Microsoft SQL Server 資料庫中擷取資料<xref:System.Web.UI.WebControls.DropDownList>控制和更新記錄使用<xref:System.Web.UI.WebControls.TextBox>控制項。 此範例示範如何使用<xref:System.Data.Common.DbTransaction>物件時使用，將交易內容<xref:System.Web.UI.WebControls.SqlDataSource>控制項更新資料。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字串，用於將參數替代符號做為參數型 SQL 查詢中的前置詞。</summary>
        <value>"@" 字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL 查詢和命令可以參數化，因為它們包含在執行階段繫結至查詢的值的預留位置。 根據所設定的 ADO.NET 提供者<xref:System.Web.UI.WebControls.SqlDataSource>控制項，以識別<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>屬性，會評估參數的別名，或其順序在<xref:System.Web.UI.WebControls.ParameterCollection>物件。  
  
 如果<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>未設定或設為<xref:System.Data.SqlClient?displayProperty=nameWithType>，參數所評估的別名和<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>屬性用來加入的參數前置詞<xref:System.Web.UI.WebControls.Parameter.Name%2A>每個屬性<xref:System.Web.UI.WebControls.Parameter>物件存放至<xref:System.Web.UI.WebControls.ParameterCollection>期間的資料擷取或資料管理作業。 如果<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>屬性設定為<xref:System.Data.OleDb?displayProperty=nameWithType>或<xref:System.Data.Odbc?displayProperty=nameWithType>，會依順序評估參數而<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>和<xref:System.Web.UI.WebControls.Parameter.Name%2A>屬性會被忽略。  
  
 如果您擴充<xref:System.Web.UI.WebControls.SqlDataSourceView>類別，您可以覆寫<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>屬性，以提供的前置詞以外`"@"`必要字串。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">其中一個 <see cref="T:System.Web.UI.DataSourceCapabilities" /> 值，與檢視支援的功能做比較。</param>
        <summary>比較 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 作業所要求的功能與檢視所支援且由 <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> 方法呼叫的那些功能。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A>方法可由資料來源檢視來檢查每個由資料繫結控制項，要求的功能由表示<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞至<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>方法，並比較這些功能功能是由支援的資料來源檢視。 表示的功能<xref:System.Web.UI.DataSourceSelectArguments>物件，並不支援的資料來源檢視中，<xref:System.NotSupportedException>引發例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">資料來源未啟用選取的 <paramref name="capability" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存自頁面回傳至伺服器以來，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控制項檢視狀態的變更。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 檢視狀態變更的物件；如果沒有任何檢視狀態與物件關聯，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>方法主要由控制項開發人員使用。  
  
 檢視狀態是伺服器控制項的屬性值的累積。 這些值會自動放入<xref:System.Web.UI.Control.ViewState%2A>伺服器控制項，也就是執行個體屬性的<xref:System.Web.UI.StateBag>類別。 <xref:System.Web.UI.Control.ViewState%2A>的儲存狀態的伺服器控制項的生命週期階段之後，字串物件然後保存伺服器控制項的值。  
  
 字串物件的儲存狀態的伺服器控制項的生命週期階段之後持續性儲存檢視狀態時，會傳回至用戶端為儲存在 HTML 中的變數`Hidden`項目。 當您撰寫自訂的伺服器控制項時，您可以覆寫來改善效率<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>方法與修改`ViewState`伺服器控制項屬性。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" />，用於針對資料要求基本資料擷取以外的作業。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 字串和 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 集合中的任何參數，從基礎資料庫擷取資料。</summary>
        <returns>資料列的 <see cref="T:System.Collections.IEnumerable" /> 清單。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>方法呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>方法，傳遞`selectArgs`參數。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>方法會傳回<xref:System.Data.DataView>物件，如果<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>屬性設定為<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>值或其傳回<xref:System.Data.IDataReader>物件，如果<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>屬性設定為<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>值。 關閉<xref:System.Data.IDataReader>當您完成讀取資料的物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">傳遞給 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法的 <paramref name="selectArgs" /> 指定資料來源應在擷取資料時執行一些額外工作，以透過擷取的資料啟用分頁或排序，但是資料來源控制項不支援所要求的功能。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 不能以基礎資料來源建立連接。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 物件會用來擷取基礎資料庫的資料。</summary>
        <value>SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 會用來擷取資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由於不同的資料庫產品使用不同的 SQL，SQL 字串的語法須視目前所使用的 ADO.NET 提供者 (可由 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 屬性識別) 而定。 如果 SQL 字串是參數型查詢或命令，參數的替代符號亦須視目前所使用的 ADO.NET 提供者而定。 例如，如果提供者是<xref:System.Data.SqlClient?displayProperty=nameWithType>，這是預設提供者<xref:System.Web.UI.WebControls.SqlDataSource>類別，參數的預留位置是`'@parameterName'`。 不過，如果提供者設定為<xref:System.Data.Odbc?displayProperty=nameWithType>或<xref:System.Data.OleDb?displayProperty=nameWithType>，參數的預留位置是`'?'`。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>屬性可以是 SQL 字串或預存程序的名稱，如果資料來源支援預存程序。  
  
> [!IMPORTANT]
>  若要使用比 SQL 陳述式的預存程序更安全的做法是<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>屬性。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>屬性儲存在檢視狀態。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>基本的 SQL 查詢，以從 Microsoft SQL Server 資料庫擷取資料並顯示在文字<xref:System.Web.UI.WebControls.DropDownList>控制項。 第二個程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>可從 SQL Server 資料庫擷取資料，並顯示在預存程序名稱的文字<xref:System.Web.UI.WebControls.DropDownList>。  
  
 下列程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>基本的 SQL 查詢可從 SQL Server 資料庫擷取資料，並顯示在文字<xref:System.Web.UI.WebControls.DropDownList>控制項。 <xref:System.Web.UI.WebControls.Button>和<xref:System.Web.UI.WebControls.TextBox>控制項提供一個簡單的介面，以更新中所選使用者的地址作為<xref:System.Web.UI.WebControls.DropDownList>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 下列程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>可從 SQL Server 資料庫擷取資料，並顯示在預存程序名稱的文字<xref:System.Web.UI.WebControls.DropDownList>控制項。 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>屬性可以是 SQL 查詢或預存程序的名稱，如果資料來源支援預存程序。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> 屬性中的文字為 SQL 查詢還是預存程序的名稱。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。 預設值為 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>屬性儲存在檢視狀態。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>預存程序名稱的文字和<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>值可從 Microsoft SQL Server 資料庫擷取資料，並顯示在<xref:System.Web.UI.WebControls.DropDownList>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值不是其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料擷取作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Selected>事件，以檢查值的資料擷取作業完成之後，輸出參數。 輸出參數都是從<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在資料擷取作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.SqlDataSource>控制項執行資料擷取作業。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> 屬性所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> 屬性所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>屬性包含參數化的 SQL 查詢，<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>集合包含任何<xref:System.Web.UI.WebControls.Parameter>對應於 SQL 字串中的參數預留位置的物件。  
  
 根據 ADO.NET 提供者中的參數順序<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>集合可能十分重要。 <xref:System.Data.OleDb?displayProperty=nameWithType>和<xref:System.Data.Odbc?displayProperty=nameWithType>提供者建立關聯的參數在參數化 SQL 查詢中出現的順序根據集合中的參數。 <xref:System.Data.SqlClient?displayProperty=nameWithType>提供者，這是預設的 ADO.NET 提供者的<xref:System.Web.UI.WebControls.SqlDataSource>控制項，將產生關聯，集合中的參數符合參數在 SQL 查詢中的預留位置別名的名稱。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
   
  
## Examples  
 下列程式碼範例示範如何從 Microsoft SQL Server 中 Northwind 資料庫中擷取資料，藉由設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>SQL 查詢的屬性。 參數化 SQL 查詢中的預留位置和<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>屬性會對應到<xref:System.Web.UI.WebControls.ControlParameter>物件加入至<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>集合。 如此一來，<xref:System.Web.UI.WebControls.DropDownList>控制項，要<xref:System.Web.UI.WebControls.ControlParameter>未繫結，做為目標的篩選會顯示在<xref:System.Web.UI.WebControls.ListBox>控制項。  
  
> [!NOTE]
>  因為參數用在 WHERE 子句中，使用<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>屬性在這個程式碼範例在功能上等於使用這兩個<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>和<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>屬性。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定預存程序參數的名稱，用於在使用預存程序執行資料擷取時，對擷取的資料進行排序。</summary>
        <value>預存程序參數的名稱，用於在使用預存程序執行資料擷取時，對擷取的資料進行排序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>會評估屬性只有當 SQL 命令也就是包含<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>屬性是預存程序的名稱。 在此情況下，如果<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>屬性設定，其中包含用來排序結果的預存程序的參數名稱。  
  
 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>屬性設定，它會附加至<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>屬性。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />。</summary>
        <value>
          如果資料來源檢視標示為要儲存狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Web.UI.WebControls.SqlDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">代表要還原之 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 狀態的物件。</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Web.UI.WebControls.SqlDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IStateManager.SaveViewState" />。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 檢視狀態變更的物件；如果沒有任何檢視狀態與物件關聯，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Web.UI.WebControls.SqlDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IStateManager.TrackViewState" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Web.UI.WebControls.SqlDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>讓 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 追蹤其檢視狀態變更，以將變更儲存在控制項的 <see cref="T:System.Web.UI.StateBag" /> 物件中，並持續為相同頁面的其他要求進行追蹤。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">主索引鍵的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性搭配使用，以執行更新資料庫作業。 如果沒有任何索引鍵與查詢關聯，或 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <param name="values">值的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性搭配使用，以執行更新資料庫作業。 如果沒有任何參數與查詢有關聯，或是 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，表示資料庫中的原始值。 如果沒有任何參數與查詢有關聯，或是 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 不是參數型的 SQL 查詢，則會傳遞 <see langword="null" />。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 字串、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> 集合中指定的任何參數，以及 <paramref name="keys" />、<paramref name="values" /> 和 <paramref name="oldValues" /> 集合中指定的值，執行更新作業。</summary>
        <returns>表示基礎資料庫中更新之資料列數的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>方法呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>方法，傳遞`keys`， `values`，和`oldValues`參數。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.SqlDataSource>控制項來顯示資料<xref:System.Web.UI.WebControls.DropDownList>控制項及更新資料時**送出**按鈕。 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>屬性設為參數化的 SQL 陳述式和兩個<xref:System.Web.UI.WebControls.ControlParameter>參數加入<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>集合。 當**送出**按一下按鈕時，<xref:System.Web.UI.WebControls.Button.OnClick%2A>事件用於呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>方法明確。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 不能以基礎資料來源建立連接。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> 屬性為 <see langword="false" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 物件會用來更新基礎資料庫的資料。</summary>
        <value>SQL 字串，<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 會用來更新資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由於不同的資料庫產品使用不同的 SQL，SQL 字串的語法須視目前所使用的 ADO.NET 提供者 (可由 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 屬性識別) 而定。 如果 SQL 字串是參數型查詢或命令，參數的替代符號亦須視目前所使用的 ADO.NET 提供者而定。 例如，如果提供者是<xref:System.Data.SqlClient?displayProperty=nameWithType>，這是預設提供者<xref:System.Web.UI.WebControls.SqlDataSource>類別，參數的預留位置是`'@parameterName'`。 不過，如果提供者設定為<xref:System.Data.Odbc?displayProperty=nameWithType>或<xref:System.Data.OleDb?displayProperty=nameWithType>，參數的預留位置是`'?'`。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>屬性可以是 SQL 字串或預存程序的名稱，如果資料來源支援預存程序。  
  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>屬性儲存在檢視狀態。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSource>中使用 Microsoft SQL Server 資料庫的控制和更新資料<xref:System.Web.UI.WebControls.GridView>控制項。 第二個程式碼範例示範如何使用 ODBC 資料庫的資料更新<xref:System.Web.UI.WebControls.GridView>控制項。  
  
 下列程式碼範例示範如何設定<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSource>中使用 SQL Server 資料庫的控制和更新資料<xref:System.Web.UI.WebControls.GridView>控制項。 <xref:System.Web.UI.WebControls.GridView>控制項就會自動填入<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>集合中，推斷的參數<xref:System.Web.UI.WebControls.BoundField>物件，並呼叫<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>方法時**更新**上編輯連結<xref:System.Web.UI.WebControls.GridView>選取控制項。 這個範例也包含一些後置處理 — 記錄更新之後，會傳送電子郵件訊息通知。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 下列程式碼範例，這是在功能上等於先前的程式碼範例，示範如何更新 ODBC 資料庫使用中的資料<xref:System.Web.UI.WebControls.GridView>控制項。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>屬性設定為 ODBC 的 ADO.NET 提供者<xref:System.Data.Odbc?displayProperty=nameWithType>，而<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>屬性設定為 ODBC 資料來源名稱 (DSN) 的名稱。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性中的文字是 SQL 陳述式還是預存程序的名稱。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。 預設值為 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值不是其中一個 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於更新作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>事件，以檢查的值更新作業完成之後，輸出參數。 輸出參數都是從<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示和更新會從 ODBC 資料庫中擷取的資料<xref:System.Web.UI.WebControls.GridView>控制項。 已成功更新記錄之後，<xref:System.Web.UI.WebControls.SqlDataSource.Updated>事件由執行後置處理步驟的傳送電子郵件訊息通知的事件處理常式。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 屬性所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>屬性包含參數化的 SQL 查詢，<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>集合包含任何<xref:System.Web.UI.WebControls.Parameter>對應於 SQL 字串中的參數預留位置的物件。  
  
 參數名稱可能會受到<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>屬性; 具體來說，如果此名稱會識別主索引鍵，例如金鑰指定使用`DataKeyNames`屬性，或是在刪除然後再更新案例其中<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值和一組`oldValues`會傳遞至相對應的資料方法。 在此情況下，格式字串套用至每個參數名稱`oldValues`集合。  
  
 根據 ADO.NET 提供者中的參數順序<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>集合可能十分重要。 <xref:System.Data.OleDb?displayProperty=nameWithType>和<xref:System.Data.Odbc?displayProperty=nameWithType>提供者建立關聯的參數在參數化 SQL 查詢中出現的順序根據集合中的參數。 <xref:System.Data.SqlClient?displayProperty=nameWithType>提供者，這是預設的 ADO.NET 提供者的<xref:System.Web.UI.WebControls.SqlDataSource>控制項，將產生關聯，集合中的參數符合參數在 SQL 查詢中的預留位置別名的名稱。 如需有關參數化的 SQL 查詢和命令的詳細資訊，請參閱[使用參數與 SqlDataSource 控制項](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.SqlDataSource>控制項來顯示資料<xref:System.Web.UI.WebControls.DropDownList>控制項及更新資料時**送出**按鈕。 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>屬性設為參數化的 SQL 陳述式，而兩個<xref:System.Web.UI.WebControls.ControlParameter>參數加入<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>集合。 當**送出**按一下按鈕時，<xref:System.Web.UI.WebControls.Button.OnClick%2A>事件用於呼叫<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>方法明確。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在更新作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.SqlDataSource>控制項執行更新作業。  
  
 基礎資料來源的連接尚未開啟時，會呼叫事件處理常式委派。 因此，您無法在作業取消直接藉由呼叫<xref:System.Data.Common.DbCommand.Cancel%2A>方法<xref:System.Data.Common.DbCommand>所公開的物件<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>物件。 您可以不過，將資料庫作業取消藉由設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>至`true`。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示從 Microsoft SQL Server 資料庫中擷取資料<xref:System.Web.UI.WebControls.DropDownList>控制和更新記錄使用<xref:System.Web.UI.WebControls.TextBox>控制項。 此範例示範如何使用<xref:System.Data.Common.DbTransaction>物件時使用，將交易內容<xref:System.Web.UI.WebControls.SqlDataSource>控制項更新資料。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>