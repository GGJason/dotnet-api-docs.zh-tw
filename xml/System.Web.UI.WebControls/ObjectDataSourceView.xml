<Type Name="ObjectDataSourceView" FullName="System.Web.UI.WebControls.ObjectDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="909fabde6394947c567a34041088c25a82e0da0e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>支援 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控制項，並為資料繫結控制項提供與商務和資料物件進行資料作業的介面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>類別主要為了用於資料繫結控制項，而不是網頁程式碼中的可程式化物件。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>類別實作的資料功能<xref:System.Web.UI.WebControls.ObjectDataSource>控制，包括<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業、 排序、 篩選和設定的管理檢視中保留狀態。  
  
 A<xref:System.Web.UI.WebControls.ObjectDataSourceView>每個執行個體建立物件<xref:System.Web.UI.WebControls.ObjectDataSource>在執行階段類別。 資料作業的執行個體的呼叫<xref:System.Web.UI.WebControls.ObjectDataSource>類別會由執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件。 網頁開發人員不會存取執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceView>直接類別。 控制項開發人員可以建立自訂資料控制項擴充<xref:System.Web.UI.WebControls.ObjectDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSourceView>類別。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會使用反映的商務或資料物件上呼叫方法來執行資料作業。 在執行階段，<xref:System.Web.UI.WebControls.ObjectDataSource>控制建立類型所識別的執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>屬性，然後呼叫適當的方法，對於資料作業。 具現化的物件不會快取的記憶體<xref:System.Web.UI.WebControls.ObjectDataSourceView>。 建立物件，並針對每個資料方法呼叫中終結。 如果該方法是`static`(`Shared`在 Visual Basic 中)，不會建立執行個體，但仍會呼叫資料作業方法。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>不會直接公開給由網頁開發人員<xref:System.Web.UI.WebControls.ObjectDataSource>控制項。 相反地，屬性和方法<xref:System.Web.UI.WebControls.ObjectDataSourceView>透過存取<xref:System.Web.UI.WebControls.ObjectDataSource>。 例如，<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>的<xref:System.Web.UI.WebControls.ObjectDataSourceView>屬性設定的設定<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSource>。  
  
## <a name="retrieving-data"></a>擷取資料  
 資料來源檢視執行的最基本作業會從基礎資料存放區使用的資料擷取<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，擷取<xref:System.Collections.IEnumerable>資料項目的集合。 下列資料擷取方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件，並直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>事件  
  
## <a name="updating-data"></a>更新資料  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>物件支援的資料更新，藉由呼叫商務或資料物件的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性。 資料繫結控制項的自動更新，這類執行<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>控制項，將它們的參數中<xref:System.Collections.Specialized.IOrderedDictionary>介面<xref:System.Web.UI.WebControls.ObjectDataSourceView>並檢視物件合併這些參數的任何參數時在中找到<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。  
  
 下列的更新方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.ObjectDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件  
  
## <a name="inserting-data"></a>插入資料  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>物件支援插入新的資料列，藉由呼叫商務或資料物件的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性。 資料繫結控制項的自動執行，例如插入、<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，其參數中的傳遞<xref:System.Collections.Specialized.IOrderedDictionary>介面<xref:System.Web.UI.WebControls.ObjectDataSourceView>並檢視物件合併這些參數中所找到的任何參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。  
  
 下列插入方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.ObjectDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件  
  
## <a name="deleting-data"></a>刪除資料  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>物件呼叫由商務或資料物件方法來刪除資料的支援<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性。 資料繫結控制項的自動執行刪除，例如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>，其參數中的傳遞<xref:System.Collections.Specialized.IOrderedDictionary>介面<xref:System.Web.UI.WebControls.ObjectDataSourceView>並檢視物件合併這些參數中所找到的任何參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 下列刪除方法、 屬性和事件由實作<xref:System.Web.UI.WebControls.ObjectDataSourceView>和直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>網頁開發人員和其他呼叫端的控制項：  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 屬性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件  
  
## <a name="filtering-and-sorting-data"></a>篩選和排序資料  
 您可以動態篩選的資料時，更強大了擷取資料。 篩選為僅支援<xref:System.Web.UI.WebControls.ObjectDataSource>控制如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>物件。 您可以使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>屬性以套用動態篩選，來擷取資料。 這些屬性由實作<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件，並直接以公開其<xref:System.Web.UI.WebControls.ObjectDataSource>控制項資料繫結控制項和其他呼叫端。  
  
 您可以排序的資料，您使用擷取<xref:System.Web.UI.WebControls.ObjectDataSource>所擷取後，在記憶體中排序資料。 支援排序只有<xref:System.Web.UI.WebControls.ObjectDataSource>控制如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataTable>或<xref:System.Data.DataSet>。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>屬性一律會傳回`true`，因為<xref:System.Web.UI.WebControls.ObjectDataSourceView>無法判斷何種類型由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，而不需要呼叫方法。 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>屬性語法是一樣<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>屬性。  
  
## <a name="tracking-view-state"></a>追蹤檢視狀態  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>實作<xref:System.Web.UI.IStateManager>介面並使用檢視狀態來追蹤其狀態在頁面的要求。 實作<xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>方法可供啟用控制項檢視狀態的追蹤。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ObjectDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ObjectDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceView(System::Web::UI::WebControls::ObjectDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.ObjectDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">與 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 關聯的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />。</param>
        <param name="name">資料來源檢視的唯一名稱 (在擁有該資料來源檢視的資料來源控制項範圍內)。</param>
        <param name="context">目前的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>建構函式會呼叫<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法以傳回具有指定的資料來源檢視的新執行個體`viewName`參數。 <xref:System.Web.UI.WebControls.ObjectDataSource>控制項都只有一個相關<xref:System.Web.UI.WebControls.ObjectDataSourceView>在任何時間，並將永遠檢視`DefaultView`，雖然此命名限制所加諸<xref:System.Web.UI.WebControls.ObjectDataSource>不控制<xref:System.Web.UI.WebControls.ObjectDataSourceView>。 您可以覆寫<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法，以支援使用不同的命名慣例的檢視。  
  
 <xref:System.Web.HttpContext>所傳遞物件`context`由資料來源檢視來存取參數的物件，例如<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 物件是否支援刪除作業。</summary>
        <value>
          如果支援該作業，則為 <see langword="true" />，否則為 <see langword="false" />。 如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 屬性為空字串 ("")，則不支援刪除。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete%2A>屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性設定。 刪除作業仍會失敗，如果所有的資料屬性未設定或未正確設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 物件是否支援插入作業。</summary>
        <value>
          如果支援該作業，則為 <see langword="true" />，否則為 <see langword="false" />。 如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 屬性為空字串，則不支援插入。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert%2A>屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性設定。 插入作業仍會失敗，如果所有的資料屬性未設定或未正確設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 物件是否支援對擷取的資料進行分頁。</summary>
        <value>
          如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" /> 值設為 <see langword="true" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanPage%2A>屬性會指出是否<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件支援分頁。 如需有關分頁會受到詳細<xref:System.Web.UI.WebControls.ObjectDataSourceView>，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 物件是否除了支援擷取資料集以外，還支援擷取資料列的總數。</summary>
        <value>
          如果支援該作業，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>屬性設定。 方法會傳回計數應該傳回的資料列總數的可以分頁不在頁面中的資料列數目。 資料繫結控制項使用可以分頁來決定如何呈現分頁控制項的資料列的總數。 比方說，多少數字頁面巡覽區按鈕中呈現<xref:System.Web.UI.WebControls.GridView>控制呼叫器。 如需有關分頁支援的詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>呼叫期間檢查屬性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以確保您的資料來源控制項支援所設定的各種要求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控制項相關聯的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件，在基礎資料來源上是否支援排序的檢視。</summary>
        <value>
          <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Web.UI.WebControls.ObjectDataSource>排序資料的支援時<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法會傳回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>物件時，檢視物件無法判斷是否支援排序直到<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法呼叫，並傳回。 基於這個理由，<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>屬性一律會傳回`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 物件是否支援更新作業。</summary>
        <value>
          如果支援該作業，則為 <see langword="true" />，否則為 <see langword="false" />。 如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 屬性為空字串 ("")，則不支援更新。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate%2A>屬性會傳回`true`，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性設定。 更新作業仍會失敗，如果所有的資料屬性未設定或未正確設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，判斷在作業期間，當基礎資料儲存中資料列中的資料發生變更時，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控制項如何執行更新和刪除作業。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.ConflictOptions" /> 值。 預設值為 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性會決定是否要將舊的和新值的參數套用至`Update`方法。 比方說，如果該方法是由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性會傳回<xref:System.Data.DataTable>物件與資料行`Name`和`Number`，而<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.OverwriteChanges>值的建立參數`Name`和`Number`如`Update`方法。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值的名稱建立參數`Name`， `Number`， `original_Name`，和`original_Name`。 (取決於原始值參數的完整名稱<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>。)<xref:System.Web.UI.WebControls.ObjectDataSourceView>然後會判斷如果的方法，是在指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性具有相符的參數。  
  
 並行存取控制是資料存放區使用的控制如何讀取和多個用戶端存取和管理相同的資料時，存放區中變更資料的技術。 例如，一個用戶端讀取資料並呈現給使用者，而另一個用戶端讀取相同的資料，並提供給不同的使用者。 如果兩個使用者更新的資料，並送出至資料存放區，無法預料的結果可能會發生，因為兩個用戶端可能會更新為相同的資料不同的值。 這被視為衝突。 藉由設定<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性<xref:System.Web.UI.ConflictOptions.CompareAllValues>值`Update`方法可以然後比較舊的和新值來偵測衝突，以及處理它們，視原始資料來源。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值不是其中一個 <see cref="T:System.Web.UI.ConflictOptions" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出傳遞至更新、插入或刪除作業的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 值是否自動從 <see langword="null" /> 轉換為 <see cref="F:System.DBNull.Value" /> 值。</summary>
        <value>
          如果 <see cref="T:System.Web.UI.WebControls.Parameter" /> 物件中傳遞至 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 的 <see langword="true" /> 會自動轉換成 <see cref="F:System.DBNull.Value" /> 值，則為 <see langword="null" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會將轉換`null`至<xref:System.DBNull.Value?displayProperty=nameWithType>值會在執行階段發生錯誤。 使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull%2A>屬性，指出是否<xref:System.Web.UI.WebControls.Parameter>值傳遞給更新、 插入或刪除作業會自動轉換從`null`至<xref:System.DBNull.Value?displayProperty=nameWithType>值。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定類別的名稱，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控制項會將該名稱用於資料作業中的參數。 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控制項會使用指定的類別，而不是各種參數集合中的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 物件。</summary>
        <value>部分或完整類別名稱，識別 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可做為參數用於 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 或 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 作業的物件型別。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是指定數個參數傳遞給`Select`， `Update`， `Insert`，和`Delete`方法，您可以建立數個項目會彙總的一個物件。 這一個物件會傳遞至方法，而不是數個參數。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">索引鍵值的 <see cref="T:System.Collections.IDictionary" />，用於識別要刪除的項目。 這些參數與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 屬性搭配使用，以執行刪除作業。 如果沒有任何參數與此方法有關聯，則會傳遞 <see langword="null" />。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，包含用於比對資料來源中之項目的其他非索引鍵值。 只有在 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 欄位時，資料列值才會傳遞至方法。</param>
        <summary>藉由呼叫由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 屬性所識別的商務物件方法，同時使用指定的 <paramref name="keys" /> 和 <paramref name="oldValues" /> 集合，執行刪除作業。</summary>
        <returns>刪除之資料列的數目，如果數目不明，則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值為-1，表示已刪除資料列數目未知。 若要傳回不同的值，設定<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件處理常式。 受影響的資料列數目通常由`Delete`方法商務物件，而該值是可從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>參數<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件處理常式。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法，傳遞`keys`和`oldValues`集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件，檢查傳回值的值和輸出參數，或判斷是否發生例外狀況之後<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業已完成。 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>控制項刪除資料。 <xref:System.Web.UI.WebControls.GridView>一開始會顯示一組使用的方法，由所指定的所有員工<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>屬性來擷取資料的`EmployeeLogic`物件。 因為<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.GridView>控制自動顯示**刪除** 按鈕。  
  
 如果您按一下**刪除** 按鈕，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業使用的方法，由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性和任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此程式碼範例中，也會執行一些前置處理和後置處理步驟。 `NorthwindEmployeeDeleting`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>執行作業時，而`NorthwindEmployeeDeleted`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之後的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業完成之後，為執行例外狀況處理。 在此範例中，如果`NorthwindDataException`會擲回，它由處理這個委派。  
  
 若要檢查的實作`EmployeeLogic`中介層商務物件，使用這個程式碼範例，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件叫用 (Invoke) 以刪除資料之方法或函式的名稱。</summary>
        <value>字串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用於刪除資料之方法或函式的名稱。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所識別的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果執行個體方法，商務物件建立和終結所指定之方法的每次<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>呼叫屬性。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件，以使用之前所指定之方法的商務物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>呼叫屬性。 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>所指定的方法之後，就會引發的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>呼叫屬性。 如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。  
  
 如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>控制項搭配實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，包括參數在<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合不相符的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>方法簽章，資料來源擲回例外狀況。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性儲存在檢視狀態。  
  
 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>控制項刪除資料。 <xref:System.Web.UI.WebControls.GridView>一開始會顯示一組使用的方法，由所指定的所有員工<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>屬性來擷取資料的`EmployeeLogic`物件。 因為<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.GridView>控制自動顯示**刪除** 按鈕。  
  
 如果您按一下**刪除** 按鈕，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業使用的方法，由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性和任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此程式碼範例中，也會執行一些前置處理和後置處理步驟。 `NorthwindEmployeeDeleting`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>事件之前<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>執行作業時，而`NorthwindEmployeeDeleted`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件之後的<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>作業完成之後，為執行例外狀況處理。 在此範例中，如果`NorthwindDataException`會擲回，它由處理這個委派。  
  
 若要檢查的實作`EmployeeLogic`中介層商務物件，使用這個程式碼範例，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 方法所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 屬性指定之方法所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名稱和參數中所包含的型別<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合的名稱和類型中所指定之方法的參數，必須符合<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性簽章。 參數名稱會受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>屬性且區分大小寫。 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些參數所提供的集合中已明確指定任何參數資料繫結控制項。  
  
 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>，控制項執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業。 參數是可做為<xref:System.Collections.IDictionary>所存取的集合<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>控制項刪除資料。 <xref:System.Web.UI.WebControls.GridView>一開始會顯示一組使用的方法，由所指定的所有員工<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性來擷取資料的`EmployeeLogic`物件。 因為<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.GridView>控制自動顯示**刪除** 按鈕。  
  
 如果您按一下**刪除** 按鈕，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業使用的方法，由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性和任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此程式碼範例中，也會執行一些前置處理和後置處理步驟。 `NorthwindEmployeeDeleting`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>執行作業時，而`NorthwindEmployeeDeleted`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之後的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業完成之後，為執行例外狀況處理。 在此範例中，如果`NorthwindDataException`會擲回，它由處理這個委派。  
  
 若要檢查的實作`EmployeeLogic`中介層商務物件，使用這個程式碼範例，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出資料來源控制項是否支援對其擷取的資料集進行分頁。</summary>
        <value>
          如果資料來源控制項支援對其擷取的資料進行分頁則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由分頁<xref:System.Web.UI.WebControls.ObjectDataSourceView>控制項由設定<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>， <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>，和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceView>並定義`Select`中使用適當參數的商務物件方法。 當<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合包含兩個額外的參數，要求的第一個資料列和要求的資料列數目。 這兩個參數的命名方式所定義<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>屬性。 `Select`方法應傳回所要求的指定索引處開始的資料列數目。 因為資料可能不完整地分配依頁面大小，最後一頁可能會包含較少的資料列。 因此，要求的資料列數目是實際上會傳回的資料列的最大數目。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>呼叫期間檢查屬性<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法，以確保您的資料來源控制項支援所設定的各種要求的所有功能<xref:System.Web.UI.DataSourceSelectArguments>屬性。  
  
 資料繫結控制項相關聯的資料繫結控制項上啟用分頁時，呼叫`Select`方法的起始索引和所需的資料列數目。 此外，如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>屬性設定，將資料繫結控制項之前呈現頁面巡覽區控制項，呼叫的方法。 例如，如果<xref:System.Web.UI.WebControls.GridView>控制項具有分頁已啟用頁面大小為 5，而<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>方法會傳回 20，只有 4 個頁面都會顯示在頁面巡覽區。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">參數的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 屬性搭配使用，以執行刪除作業。 如果沒有任何參數與此方法有關聯，則會傳遞 <see langword="null" />。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，包含的資料列值只有在 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 欄位時才會評估。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 方法和指定的 <paramref name="keys" /> 與 <paramref name="oldValues" /> 集合，執行刪除作業。</summary>
        <returns>刪除之資料列的數目，如果數目不明，則為 -1。 如需詳細資訊，請參閱<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法，以從基礎資料存放區使用的商務物件中刪除資料。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>方法。  
  
 執行刪除作業之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件。 您可以處理此事件，以檢查參數的值，並執行任何前置處理之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>方法呼叫。  
  
 若要執行刪除作業<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性，以及任何相關的參數在`keys`和`oldValues`集合，然後執行它。 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件。 您可以處理這個事件來檢查任何傳回值和錯誤碼，並執行任何後續處理。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" /> 屬性會傳回 <see langword="false" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 屬性會設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 值，且沒有值傳入 <paramref name="oldValues" /> 集合。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">參數的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 屬性搭配使用，以執行插入作業。 如果沒有任何參數與此方法有關聯，則會傳遞 <see langword="null" />。</param>
        <summary>藉由呼叫由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 屬性所識別的商務物件方法，同時使用指定的 <paramref name="values" /> 集合，執行插入作業。</summary>
        <returns>插入之資料列的數目，如果數目不明，則為 -1。 如需詳細資訊，請參閱<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>將資料插入基礎資料存放區使用的商務物件的方法。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法。  
  
 在執行插入 之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件。 您可以處理此事件，以檢查參數的值，並執行任何前置處理之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法呼叫。  
  
 若要執行插入作業，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控制項使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性，以及任何相關的參數中`values`集合，並加以執行。 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>事件。 您可以處理這個事件來檢查任何傳回值、 錯誤代碼，並執行任何後續處理。  
  
 如需有關傳回插入的資料列數目的詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 屬性會傳回 <see langword="false" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="values" /> 為 <see langword="null" /> 或是空的。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" />，用於針對資料要求基本資料擷取以外的作業。</param>
        <summary>藉由呼叫由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 屬性所識別的方法並傳遞 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 集合中的任何值，可以從 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> 屬性所識別的物件中擷取值。</summary>
        <returns>資料列的 <see cref="T:System.Collections.IEnumerable" /> 清單。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法來擷取使用商務物件資料。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。  
  
 指定的方法可以有任何方法簽章，但是必須傳回類型的其中一個<xref:System.Web.UI.WebControls.ObjectDataSource>能夠成功呼叫其下表中列出的控制項。  
  
|傳回型別|動作|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable>傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataTable>|A<xref:System.Data.DataView>使用建立<xref:System.Data.DataTable>，並由傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataSet>|第一個<xref:System.Data.DataTable>的<xref:System.Data.DataSet>擷取和<xref:System.Data.DataView>建立並傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Object>|物件會包裝在一個項目<xref:System.Collections.IEnumerable>，並由傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
  
 執行資料擷取之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>事件。 您可以處理這個事件來檢查參數的值，並執行作業之前任何前置處理。  
  
 若要執行選取的操作，<xref:System.Web.UI.WebControls.ObjectDataSourceView>控制項使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性，以及任何相關的參數中<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合，然後執行它。 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>事件。 您可以處理這個事件來檢查任何傳回值和錯誤碼，並執行任何後續處理。  
  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>物件和快取已啟用，<xref:System.Web.UI.WebControls.ObjectDataSourceView>擷取的資料，並在作業期間，將資料儲存至快取。 快取，已捨棄，或重新整理會根據建立指定之組合的快取行為<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>和<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>屬性。  
  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>物件和<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>指定屬性，它會評估與提供所有<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>屬性和結果篩選條件會套用到期間資料清單<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>作業。  
  
 傳回選取的資料列數目的資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">傳遞給 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法的 <paramref name="arguments" /> 指定資料來源應在擷取資料時執行一些額外工作，以透過擷取的資料啟用分頁或排序，但是資料來源控制項不支援所要求的功能。  
  
 \-或-  
  
 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法傳回的物件不是 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />，且啟用了快取。 針對 <see cref="T:System.Data.DataSet" /> 控制項，只可以快取 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件。  
  
 \-或-  
  
 同時啟用快取和用戶端模擬。 啟用用戶端模擬時，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 不支援快取。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法傳回的物件為 <see cref="T:System.Data.DataSet" />，但在其 <see cref="P:System.Data.DataSet.Tables" /> 集合中沒有資料表。  
  
 \-或-  
  
 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" /> 屬性設為 <see langword="true" />，但 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" /> 和 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" /> 屬性都未設定。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">主索引鍵的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 屬性搭配使用，以執行更新資料庫作業。 如果沒有與方法關聯的索引鍵，則會傳遞 <see langword="null" />。</param>
        <param name="values">值的 <see cref="T:System.Collections.IDictionary" />，與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 搭配使用，以執行更新資料庫作業。 如果沒有任何參數與此方法有關聯，則會傳遞 <see langword="null" />。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，表示基礎資料存放區中的原始值。 如果沒有與查詢關聯的參數，則會傳遞 <see langword="null" />。</param>
        <summary>藉由呼叫由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 屬性所識別的方法，同時使用 <paramref name="keys" />、<paramref name="values" /> 或 <paramref name="oldValues" /> 集合中提供的任何參數，執行更新作業。</summary>
        <returns>更新之資料列的數目；如果數目不明，則為 -1。 如需詳細資訊，請參閱<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>類別會實作繼承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法來更新使用商務物件資料。 無法呼叫網頁開發人員和資料繫結控制項作者<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法直接; 相反地，使用公開<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>方法。  
  
 中所包含的值`keys`和`values`集合會評估並與包含的任何值合併<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值、 值中所包含的`oldValues`集合使用格式化<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>屬性且也合併。  
  
 在執行更新作業之前，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>事件。 您可以處理這個事件來檢查參數的值，並執行任何前置處理更新之前。 若要執行更新作業，<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反映以呼叫的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性，以及任何相關的參數在`keys`集合，並加以執行。 在作業完成之後，<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>呼叫方法來引發<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>事件。 您可以處理這個事件來檢查任何傳回值、 錯誤代碼，並執行任何後續處理。  
  
 如需有關傳回更新的資料列數目的詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 屬性會傳回 <see langword="false" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="oldValues" /> 是 <see langword="null" /> 或空的，而且 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定呼叫 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 屬性所識別之商務物件方法時套用的篩選條件運算式。</summary>
        <value>字串，表示使用 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 屬性所識別之商務物件方法擷取資料時套用的篩選條件運算式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控制項支援篩選的資料時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>， <xref:System.Data.DataView>，或<xref:System.Data.DataTable>物件。  
  
 用於語法<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性是格式字串樣式的運算式。 篩選運算式語法是相同的語法可接受的<xref:System.Data.DataView.RowFilter%2A>屬性因為篩選運算式會套用至<xref:System.Data.DataView.RowFilter%2A>屬性<xref:System.Data.DataView>傳回從執行物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 (如需詳細資訊，請參閱 <xref:System.Data.DataColumn.Expression%2A>)。如果您加入參數，以便<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合，您可以也包含格式字串的預留位置，例如`"{0}"`，在替換參數值的運算式。 根據中的參數索引來取代預留位置<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合。  
  
 您可以包含在參數<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。 如果參數類型是字串或字元類型，請使用單引號括住參數。 如果參數是數值類型，則不需要引號。<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合包含的參數，會評估中發現預留位置<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>屬性儲存在檢視狀態。  
  
> [!IMPORTANT]
>  建議您驗證您從用戶端接收任何篩選參數值。 執行階段只會取代篩選條件運算式的參數值並將其以套用<xref:System.Data.DataView>所傳回的物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 如果您使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性作為安全性考量，以限制所傳回的篩選發生之前，您必須驗證的參數值的項目數目。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何顯示篩選的資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>來自中介層商務物件擷取資料的控制項和<xref:System.Web.UI.WebControls.GridView>控制項來顯示結果。 第二個程式碼範例提供第一個程式碼範例中使用的中介層商務物件的範例。  
  
 下列程式碼範例示範如何顯示篩選的資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>來自中介層商務物件擷取資料的控制項和<xref:System.Web.UI.WebControls.GridView>控制項來顯示結果。 <xref:System.Web.UI.WebControls.ObjectDataSource>控制項可以篩選資料，只時擷取資料的方法會擷取為<xref:System.Data.DataSet>物件。 基於這個理由，<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性會識別擷取資料的商務物件方法<xref:System.Data.DataSet>。  
  
 程式碼範例包含<xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.GridView>控制項，<xref:System.Web.UI.WebControls.ObjectDataSource>控制項和**送出** 按鈕。 根據預設，<xref:System.Web.UI.WebControls.TextBox>會填入其中一個 Northwind Traders 員工的名稱。 <xref:System.Web.UI.WebControls.GridView>顯示員工中的名稱所識別的相關資訊<xref:System.Web.UI.WebControls.TextBox>。 中要擷取資料的另一位員工， <xref:System.Web.UI.WebControls.TextBox>，輸入員工的完整名稱，然後按一下**送出** 按鈕。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>屬性會指定用來篩選所擷取的資料運算式<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性。 它會使用參數預留位置中所包含的參數進行評估之<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合。 在此範例中，參數預留位置會受限於單一引號因為參數類型是可能含有空格的字串類型。 如果參數的型別是數值或日期類型，不需要繫結的引號。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下列程式碼範例提供上述的程式碼範例使用的中介層商務物件的範例。 程式碼範例是由兩個基本類別所組成：  
  
-   `EmployeeLogic`類別，這是封裝商務邏輯的類別。  
  
-   `NorthwindEmployee`類別，這是包含只需要以載入保存資料與資料層的基本功能的模型類別。  
  
 為了簡單起見，`EmployeeLogic`類別會建立一組靜態的資料，而非從資料層擷取資料。 它也很有用的此範例中，因為此範例依賴您提供示範篩選 Northwind Traders 員工的完整名稱。  
  
 如需完整的工作範例，您必須編譯，並使用這些類別提供的 Web Form 網頁程式碼範例。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定了 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 屬性，且 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法沒有傳回 <see cref="T:System.Data.DataSet" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在篩選作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>事件以執行驗證作業篩選參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控制項執行篩選作業。 您可以取消<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>藉由設定作業<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>物件`true`。 引發事件時，只有當<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性設定。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
> [!IMPORTANT]
>  您應該先驗證您從用戶端接收任何篩選參數值。 執行階段只會取代篩選條件運算式的參數值並將其以套用<xref:System.Data.DataView>所傳回的物件<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法。 如果您使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>屬性作為安全性考量，以限制所傳回的篩選發生之前，您必須驗證的參數值的項目數目。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 字串中任何參數替代符號相關聯的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，其中所包含的一組參數，與在 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 屬性中找到的任何參數預留位置相關聯。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控制項支援篩選的資料時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法會傳回<xref:System.Data.DataSet>， <xref:System.Data.DataTable>，或<xref:System.Data.DataView>物件。  
  
 中的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合與相關聯的任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>屬性。 中所指定的參數預留位置<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>屬性會對應到中的參數物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合時所指定的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>呼叫屬性。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何顯示篩選的資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>來自中介層商務物件擷取資料的控制項和<xref:System.Web.UI.WebControls.GridView>控制項來顯示結果。 第二個程式碼範例提供第一個程式碼範例中使用的中介層商務物件的範例。  
  
 下列程式碼範例示範如何顯示篩選的資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>來自中介層商務物件擷取資料的控制項和<xref:System.Web.UI.WebControls.GridView>控制項來顯示結果。 <xref:System.Web.UI.WebControls.ObjectDataSource>控制項可以篩選資料，只時擷取資料的方法會擷取為<xref:System.Data.DataSet>物件。 基於這個理由，<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性會識別擷取資料的商務物件方法<xref:System.Data.DataSet>。  
  
 程式碼範例包含<xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.GridView>控制項，<xref:System.Web.UI.WebControls.ObjectDataSource>控制項和**送出** 按鈕。 根據預設，<xref:System.Web.UI.WebControls.TextBox>會填入其中一個 Northwind Traders 員工的名稱。 <xref:System.Web.UI.WebControls.GridView>顯示員工中的名稱所識別的相關資訊<xref:System.Web.UI.WebControls.TextBox>。 中要擷取資料的另一位員工， <xref:System.Web.UI.WebControls.TextBox>，輸入員工的完整名稱，然後按一下**送出** 按鈕。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>屬性會指定用來篩選所指定的方法來擷取資料的運算式<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性。 它會使用參數預留位置中所包含的參數進行評估之<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合。 在此範例中，參數預留位置會受限於單一引號因為參數類型是可能含有空格的字串類型。 如果參數的型別是數值或日期類型，不需要繫結的引號。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合包含一個參數，<xref:System.Web.UI.WebControls.FormParameter>繫結至<xref:System.Web.UI.WebControls.TextBox>控制項。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下列程式碼範例提供上述的程式碼範例使用的中介層商務物件的範例。 程式碼範例是由兩個基本類別所組成：  
  
-   `EmployeeLogic`類別，這是封裝商務邏輯的類別。  
  
-   `NorthwindEmployee`類別，這是包含只需要以載入保存資料與資料層的基本功能的模型類別。  
  
 為了簡單起見，`EmployeeLogic`類別會建立一組靜態的資料，而非從資料層擷取資料。 它也很有用的此範例中，因為此範例依賴您提供示範篩選 Northwind Traders 員工的完整名稱。  
  
 如需完整的工作範例，您必須編譯，並使用這些類別提供的 Web Form 網頁程式碼範例。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定了 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 屬性，且 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法沒有傳回 <see cref="T:System.Data.DataSet" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">參數的 <see cref="T:System.Collections.IDictionary" /> 集合，與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 屬性搭配使用，以執行插入作業。 如果沒有任何參數與此方法有關聯，則會傳遞 <see langword="null" />。</param>
        <summary>藉由呼叫由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 屬性所識別的商務物件方法，同時使用指定的 <paramref name="values" /> 集合，執行插入作業。</summary>
        <returns>插入之資料列的數目，如果數目不明，則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的傳回值為-1，表示已插入資料列數目未知。 若要傳回不同的值，設定<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。 受影響的資料列數目通常由`Insert`方法商務物件，而該值是可從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法，傳遞`values`集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 屬性會傳回 <see langword="false" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>事件，檢查傳回值的值和輸出參數，或判斷是否發生例外狀況之後<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業已完成。 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>，控制項執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業。 參數是可做為<xref:System.Collections.IDictionary>所存取的集合<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.DetailsView>控制項以插入資料。 第二個程式碼範例提供第一個程式碼範例中使用的中介層商務物件的範例。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.DetailsView>控制項以插入資料。 <xref:System.Web.UI.WebControls.DetailsView>一開始會顯示新`NorthwindEmployee`記錄，以及自動產生**插入** 按鈕。 資料輸入的欄位之後<xref:System.Web.UI.WebControls.DetailsView>控制，請按一下**插入** 按鈕。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性會識別哪一種方法執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業。  
  
 在此程式碼範例中，`UpdateEmployeeInfo`方法用來執行插入; 不過它需要`NorthwindEmployee`來插入資料的參數。 基於這個理由，集合的字串，<xref:System.Web.UI.WebControls.DetailsView>控制項將會自動是不夠的。 `NorthwindEmployeeInserting`委派<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>處理物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件可讓您操作之前輸入的參數和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業會繼續進行。 因為`UpdateEmployeeInfo`方法需要`NorthwindEmployee`物件做為參數，其中一個是使用字串集合，建立及加入<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>使用參數名稱的集合 (`ne`) 該方法所預期。 使用現有的中介層物件做為資料來源，具有類型和方法不是特別針對搭配使用時，您可能會執行這些步驟<xref:System.Web.UI.WebControls.ObjectDataSource>控制項。  
  
 當<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>執行作業時，所識別的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>呼叫屬性。 如果`Insert`物件的方法有包含參數，參數的方法簽章<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合必須包含其名稱符合的方法簽章參數的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法順利完成。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下列程式碼範例提供上述的程式碼範例使用的中介層商務物件的範例。 程式碼範例是由兩個基本類別所組成：  
  
-   `EmployeeLogic`類別，這是無狀態的類別封裝商務邏輯。  
  
-   `NorthwindEmployee`類別，這是包含只需要以載入保存資料與資料層的基本功能的模型類別。  
  
 額外`NorthwindDataException`提供類別是為了方便起見。  
  
 如需完整的工作範例，您必須編譯，並使用這些類別。 `UpdateEmployeeInfo`方法未完全實作，因此您會將資料插入 Northwind Traders 資料庫時嘗試使用這個範例。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件叫用以插入資料之方法或函式的名稱。</summary>
        <value>字串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用於插入資料之方法或函式的名稱。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所識別的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果執行個體方法，商務物件建立和終結所指定之方法的每次<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>呼叫屬性。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件，以使用之前所指定之方法的商務物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>呼叫屬性。 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>所指定的方法之後，就會引發的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>呼叫屬性。 (`Dispose`呼叫時，只有當商務物件會實作<xref:System.IDisposable>介面。)如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。  
  
 如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>物件實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，在中包含的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合不符合所指定之方法的<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性簽章，資料來源擲回例外狀況。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性儲存在檢視狀態。  
  
 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何顯示篩選的資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.DetailsView>控制項以插入資料。 第二個程式碼範例提供第一個程式碼範例中使用的中介層商務物件的範例。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.DetailsView>控制項以插入資料。 <xref:System.Web.UI.WebControls.DetailsView>一開始會顯示新`NorthwindEmployee`記錄，以及自動產生**插入** 按鈕。 資料輸入的欄位之後<xref:System.Web.UI.WebControls.DetailsView>控制，請按一下**插入** 按鈕。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性會識別哪一種方法執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業。  
  
 在此程式碼範例中，`UpdateEmployeeInfo`方法用來執行插入; 不過，它需要`NorthwindEmployee`來插入資料的參數。 基於這個理由，集合的字串，<xref:System.Web.UI.WebControls.DetailsView>控制項將會自動是不夠的。 `NorthwindEmployeeInserting`委派<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>處理物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件可讓您操作之前輸入的參數和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業會繼續進行。 因為`UpdateEmployeeInfo`方法需要`NorthwindEmployee`物件做為參數，其中會使用字串集合來建立並加入至<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>使用參數名稱的集合 (`ne`) 該方法所預期。 使用現有的中介層物件做為資料來源，具有類型和方法不是特別針對搭配使用時，您可能會執行這些步驟<xref:System.Web.UI.WebControls.ObjectDataSource>控制項。  
  
 當<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>執行作業時，所識別的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>呼叫屬性。 如果`Insert`物件的方法有包含參數，參數的方法簽章<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合必須包含其名稱符合的方法簽章參數的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法順利完成。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下列程式碼範例提供先前的程式碼範例所使用的中介層商務物件的範例。 程式碼範例是由兩個基本類別和其他類別所組成：  
  
-   `EmployeeLogic`類別是無狀態的類別，封裝商務邏輯。  
  
-   `NorthwindEmployee`類別是模型類別，其中包含只需要以載入保存資料與資料層的基本功能。  
  
-   額外`NorthwindDataException`提供類別是為了方便起見。  
  
 如需完整的工作範例，您必須編譯，並使用這些類別。 `UpdateEmployeeInfo`方法未完全實作，因此您會將資料插入 Northwind Traders 資料庫時您試驗這個程式碼範例。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 方法所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 屬性所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名稱和參數中所包含的型別<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合的名稱和類型中所指定之方法的參數，必須符合<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性簽章。 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些參數所提供的集合中已明確指定任何參數資料繫結控制項。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何顯示篩選的資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.DetailsView>控制項以插入資料。 第二個程式碼範例提供的範例實作`Insert`第一個程式碼範例中使用的方法。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.DetailsView>控制項以插入資料。 <xref:System.Web.UI.WebControls.DetailsView>一開始會顯示新`NorthwindEmployee`記錄，以及自動產生**插入** 按鈕。 資料輸入的欄位之後<xref:System.Web.UI.WebControls.DetailsView>控制，請按一下**插入** 按鈕。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性會識別哪一種方法執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業。  
  
 如果您按一下**插入** 按鈕，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>作業使用的方法，由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>屬性和任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。 在此程式碼範例中，一個參數指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合對應至監督員的識別碼。 這是因為即使 ID 會顯示在<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合<xref:System.Web.UI.WebControls.DetailsView>控制項作為<xref:System.Web.UI.WebControls.BoundField>物件時，會以字串形式傳遞給<xref:System.Web.UI.WebControls.ObjectDataSource>控制項。 明確地將它加入<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合<xref:System.Web.UI.WebControls.Parameter.Type%2A>屬性設為<xref:System.TypeCode.Int32>值，它會傳遞正確<xref:System.Web.UI.WebControls.ObjectDataSource>給方法的`int`，不如`string`。  
  
 當<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>執行作業時，所識別的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>呼叫屬性。 如果`Insert`物件的方法有包含參數，參數的方法簽章<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合必須包含其名稱符合的方法簽章參數的參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>順利完成。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 下列程式碼範例提供的範例實作`Insert`先前的程式碼範例會使用的方法。 `InsertNewEmployeeWrapper`方法加入至`EmployeeLogic`中間層物件，以便更輕鬆地使用物件<xref:System.Web.UI.WebControls.ObjectDataSource>控制項在 Web 案例中，而不實際的商務邏輯的大量重寫。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件是否正在將變更儲存到它的檢視狀態。</summary>
        <value>
          如果資料來源檢視標示為要儲存狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">代表要還原之 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 狀態的物件。</param>
        <summary>還原資料來源檢視之先前儲存的檢視狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。  不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>方法還原檢視狀態資訊<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件所儲存的先前頁面要求從<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料擷取方法參數的名稱，用於指出為資料來源分頁支援所擷取的資料錄數目。</summary>
        <value>用於指出要擷取之資料錄數目的方法參數名稱。 預設值是<c>"maximumRows"</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>屬性用來支援資料來源分頁。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件建立由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 屬性所識別之型別的執行個體之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件商務物件，設定屬性上呼叫其他方法，或在執行前的商務物件的特定其他初始化<xref:System.Web.UI.WebControls.ObjectDataSource>控制呼叫`Data`商務物件的方法。 存取物件的參考<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>物件。  
  
 如果識別來執行資料作業的方法是`static`(`Shared`在 Visual Basic 中)，則<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>永遠不會引發事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件建立由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 屬性所識別之型別的執行個體之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控制項會自動呼叫的商務物件來建立和使用反映它的執行個體的預設建構函式。 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>事件，明確地呼叫另一個建構函式，以便將結果儲存至的物件執行個體設定<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性相關聯的<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 如果識別來執行資料作業的方法是`static`(`Shared`在 Visual Basic 中)，則<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>永遠不會引發事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件捨棄其所建立之物件的執行個體時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>商務物件的執行個體就會捨棄之前引發事件。 如果實作的商務物件<xref:System.IDisposable>介面，<xref:System.IDisposable.Dispose%2A>方法之後呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>就會引發事件。  
  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>事件物件上呼叫其他方法，並設定屬性，或執行清理之前終結物件的特定物件。 存取物件的參考<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>物件。  
  
 如果識別來執行資料作業的方法是`static`(`Shared`在 Visual Basic 中)，則<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>永遠不會引發事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定格式字串，套用至傳遞給 <see langword="Delete" /> 或 <see langword="Update" /> 方法之原始值的參數名稱。</summary>
        <value>字串，表示套用至傳遞給 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 或 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 方法之任何 <paramref name="oldValues" /> 名稱的格式字串。 預設值為 "{0}"，表示參數名稱只是欄位名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>格式字串套用至主索引鍵，例如識別與`DataKeyNames`屬性的資料繫結控制項，或在刪除和更新的案例，其中<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值和會傳遞至相對應的資料方法的原始值組。  
  
 兩個常見的案例，您可能會在其中變更<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>屬性如下：  
  
-   若要區分在更新舊的和新值。 當<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>屬性設定為<xref:System.Web.UI.ConflictOptions.CompareAllValues>值參數的原始和新的值都會加入<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>集合。 而格式化的字串，不會為每個資料欄位建立具有相同名稱的兩個參數。 藉由變更原始值參數的名稱，您可以比較原始資料來源偵測衝突，並比較索引鍵值的資料。  
  
-   有些視覺化設計工具會實作特定的命名配置，針對原始值和索引鍵。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>儲存檢視狀態中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" /> 物件完成刪除作業之後，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>控制項刪除資料。 <xref:System.Web.UI.WebControls.GridView>一開始會顯示一組使用的方法，由所指定的所有員工<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性來擷取資料的`EmployeeLogic`物件。 因為<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.GridView>控制自動顯示**刪除** 按鈕。  
  
 如果您按一下**刪除** 按鈕，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業使用的方法，由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性和任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此程式碼範例中，也會執行一些前置處理和後置處理步驟。 `NorthwindEmployeeDeleting`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>執行作業時，而`NorthwindEmployeeDeleted`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之後的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業完成之後，為執行例外狀況處理。 在此範例中，如果`NorthwindDataException`會擲回，它由處理這個委派。  
  
 若要檢查的實作`EmployeeLogic`中介層商務物件，使用這個程式碼範例，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" /> 物件嘗試刪除作業之前，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>控制項刪除資料。 <xref:System.Web.UI.WebControls.GridView>一開始會顯示一組使用的方法，由所指定的所有員工<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性來擷取資料的`EmployeeLogic`物件。 因為<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.GridView>控制自動顯示**刪除** 按鈕。  
  
 如果您按一下**刪除** 按鈕，<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業使用的方法，由指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>屬性和任何參數中指定的<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 在此程式碼範例中，也會執行一些前置處理和後置處理步驟。 `NorthwindEmployeeDeleting`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>事件之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>執行作業時，而`NorthwindEmployeeDeleted`委派呼叫以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>事件之後的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>作業完成之後，為執行例外狀況處理。 在此範例中，如果`NorthwindDataException`會擲回，它由處理這個委派。  
  
 若要檢查的實作`EmployeeLogic`中介層商務物件，使用這個程式碼範例，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::ObjectDataSourceFilteringEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" /> 物件嘗試篩選作業之前，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />方法在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" /> 物件完成插入作業之後，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" /> 物件嘗試插入作業之前，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>呼叫方法時，只有識別來執行資料作業的方法不是`static`(`Shared`在 Visual Basic 中)。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreated(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreated (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreated(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" /> 建立由 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 屬性所識別之物件的執行個體之後，引發 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>呼叫方法時，只有識別來執行資料作業的方法不是`static`(`Shared`在 Visual Basic 中)。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreating(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreating (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreating(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" /> 物件建立商務物件的執行個體以執行資料作業之前，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectDisposing(class System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectDisposing (e As ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectDisposing(System::Web::UI::WebControls::ObjectDataSourceDisposingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> 物件捨棄執行個體化型別之前，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>捨棄物件已建立用來執行資料作業的執行個體時呼叫。 `Dispose`呼叫方法時，只有當所識別的型別<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>屬性實作<xref:System.IDisposable>介面。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" /> 物件完成資料擷取作業之後，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::ObjectDataSourceSelectingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" /> 物件嘗試資料擷取作業之前，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" /> 物件完成更新作業之後，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" /> 物件嘗試更新作業之前，引發 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.DropDownList>控制項，<xref:System.Web.UI.WebControls.TextBox>控制項，以及數個<xref:System.Web.UI.WebControls.ObjectDataSource>控制項更新資料。 <xref:System.Web.UI.WebControls.DropDownList>顯示名稱`NorthwindEmployee`，雖然<xref:System.Web.UI.WebControls.TextBox>控制項可用來輸入和更新位址資訊。 因為<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>物件繫結至選取的值<xref:System.Web.UI.WebControls.DropDownList>，觸發程序的按鈕<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>員工選取之後，才啟用作業。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出在將字串值轉換成實際的屬性型別，以建構 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /> 所表示的型別物件時，使用何種文化特性資訊。</summary>
        <value>文化特性資訊。 預設值是 <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存自頁面回傳至伺服器以來，<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件檢視狀態的變更。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 檢視狀態變更的物件；如果沒有任何檢視狀態與物件關聯，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法主要由控制項開發人員使用。  
  
 檢視狀態是伺服器控制項的屬性值的累積。 這些值會自動放入<xref:System.Web.UI.Control.ViewState%2A>伺服器控制項，也就是執行個體屬性的<xref:System.Web.UI.StateBag>類別。 <xref:System.Web.UI.Control.ViewState%2A>值然後之後的伺服器控制項存留期的儲存狀態階段保存到字串物件。  
  
 檢視狀態內容儲存檢視狀態時，會為儲存在 HTML 中的變數傳回給用戶端`Hidden`項目。 當您撰寫自訂的伺服器控制項時，您可以覆寫來改善效率<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法與修改`ViewState`伺服器控制項屬性。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" />，用於針對資料要求基本資料擷取以外的作業。</param>
        <summary>藉由呼叫由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 屬性所識別的方法並傳遞 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 集合中的任何值，可以從 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> 屬性所識別的物件中擷取值。</summary>
        <returns>資料列的 <see cref="T:System.Collections.IEnumerable" /> 清單。 如需詳細資訊，請參閱<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>傳遞`arguments`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">傳遞給 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法的 <paramref name="arguments" /> 指定資料來源應在擷取資料時執行一些額外工作，以透過擷取的資料啟用分頁或排序，但是資料來源控制項不支援所要求的功能。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控制項叫用以擷取資料列計數之方法或函式的名稱。</summary>
        <value>字串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用於擷取資料列計數之方法或函式的名稱。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>識別用來擷取總計資料列計數，以支援資料來源分頁的商務物件方法。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>評估屬性時，只有當<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>屬性設定為`true`。 如需有關分頁會受到詳細<xref:System.Web.UI.WebControls.ObjectDataSourceView>，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料擷取作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>檢查傳回值的值和輸出參數，或判斷是否在資料擷取作業完成後，已擲回例外狀況的事件。 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在資料擷取作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>控制項執行資料擷取作業。 參數是可做為<xref:System.Collections.IDictionary>所存取的集合<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控制項叫用以擷取資料之方法或函式的名稱。</summary>
        <value>字串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用於擷取資料之方法或函式的名稱。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的方法可以有任何方法簽章，但是必須傳回順序的下表所列的型別<xref:System.Web.UI.WebControls.ObjectDataSource>能夠成功呼叫它的控制項  
  
|傳回型別|動作|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable>傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataTable>|A<xref:System.Data.DataView>使用建立<xref:System.Data.DataTable>，並由傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Data.DataSet>|第一個<xref:System.Data.DataTable>的<xref:System.Data.DataSet>擷取和<xref:System.Data.DataView>建立並傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
|<xref:System.Object>|物件會包裝在一個項目<xref:System.Collections.IEnumerable>，並由傳回<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法。|  
  
 所識別的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果是執行個體方法，建立及終結每次商務物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>方法呼叫。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件，以使用之前所指定之方法的商務物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>呼叫屬性。 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>所指定的方法之後，就會引發的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>呼叫屬性。 (`Dispose`實作的商務物件時，才會呼叫<xref:System.IDisposable>介面。)如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。  
  
 如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>控制項搭配實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，包括參數在<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合。 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合不符合所指定之方法的簽章<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性，資料來源會擲回例外狀況。  
  
 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例示範如何<xref:System.Web.UI.WebControls.GridView>控制項可以顯示資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>Web Form 網頁上的控制項。 <xref:System.Web.UI.WebControls.ObjectDataSource>識別部分或完整限定的類別名稱及其<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>屬性和方法，呼叫以擷取資料以其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性。 在執行階段，建立物件，並使用反映來呼叫方法。 <xref:System.Web.UI.WebControls.GridView>控制項列舉<xref:System.Collections.IEnumerable>所傳回的集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>，然後顯示資料。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 方法所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含由 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 屬性指定之方法所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名稱和參數中所包含的型別<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合的名稱和類型中所指定之方法的參數，必須符合<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性簽章。 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些參數所提供的集合中已明確指定任何參數資料繫結控制項。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例示範如何擷取單一資料記錄使用<xref:System.Web.UI.WebControls.ObjectDataSource>控制項，然後再顯示中的資料記錄<xref:System.Web.UI.WebControls.DetailsView>控制項。 <xref:System.Web.UI.WebControls.ObjectDataSource>藉由呼叫會擷取特定員工記錄`GetEmployee`方法`EmployeeLogic`類別。 `GetEmployee`方法要求員工識別碼參數。 <xref:System.Web.UI.WebControls.ObjectDataSource>控制使用<xref:System.Web.UI.WebControls.QueryStringParameter>物件存放至其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合傳遞至 ID`GetEmployee`方法。  
  
 若要檢視的範例實作`EmployeeLogic`類別和`GetEmployee`方法，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料擷取方法參數的名稱，用於指定資料來源排序支援的排序運算式。</summary>
        <value>用於指示接受這個排序運算式值之參數的方法參數名稱。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>屬性用來支援資料來源排序。 當<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>上設定屬性<xref:System.Web.UI.DataSourceSelectArguments>物件，並傳遞至<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法，<xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>屬性會識別所指定之方法的參數名稱<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>商務物件的屬性可接受排序運算式值。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料擷取方法參數的名稱，用於指出為資料來源分頁支援而從結果集擷取之第一個資料錄的整數索引。</summary>
        <value>用於指出要擷取之第一個資料錄的商務物件方法參數名稱。 預設值為 "startRowIndex"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>屬性必須設定為啟用分頁。 如需有關分頁會受到詳細<xref:System.Web.UI.WebControls.ObjectDataSourceView>物件，請參閱<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>屬性儲存在檢視狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />。</summary>
        <value>
          如果資料來源檢視標示為要儲存狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Web.UI.WebControls.ObjectDataSourceView>執行個體轉換成<xref:System.Web.UI.IStateManager>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">代表要還原之 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 狀態的物件。</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 執行個體轉換成 <xref:System.Web.UI.IStateManager> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IStateManager.SaveViewState" />。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 檢視狀態變更的物件，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 執行個體轉換成 <xref:System.Web.UI.IStateManager> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IStateManager.TrackViewState" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 執行個體轉換成 <xref:System.Web.UI.IStateManager> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>讓 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 追蹤其檢視狀態變更，以將變更儲存在控制項的 <see cref="P:System.Web.UI.Control.ViewState" /> 物件中，並持續為相同頁面的其他要求進行追蹤。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控制項表示的類別名稱。</summary>
        <value>部分或完整類別名稱 (Fully Qualified Class Name)，識別 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 表示的物件型別。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要建立物件的執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>控制項繫結至、 控制項使用反映來載入執行階段的型別名稱識別的型別。 因此，值<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>屬性可以是位於 Bin 或 App_Code 目錄中的程式碼的不完整的類型或全域組件快取中註冊的程式碼的完整限定的類型名稱。 如果您使用全域組件快取，您必須加入至適當的參考`assemblies`Machine.config 或 Web.config 組態檔的區段。  
  
   
  
## Examples  
 下列程式碼範例示範如何<xref:System.Web.UI.WebControls.GridView>控制項可以顯示資料使用<xref:System.Web.UI.WebControls.ObjectDataSource>Web Form 網頁上的控制項。 <xref:System.Web.UI.WebControls.ObjectDataSource>識別部分或完整限定的類別名稱及其<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>屬性和方法，呼叫以擷取資料以其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>屬性。 在執行階段，建立物件，並使用反映來呼叫方法。 <xref:System.Web.UI.WebControls.GridView>控制項列舉<xref:System.Collections.IEnumerable>所傳回的集合<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>並顯示資料。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">索引鍵值的 <see cref="T:System.Collections.IDictionary" />，用於識別要更新的項目。 這些參數與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 屬性指定的方法搭配使用，以執行更新作業。 如果沒有任何參數與此方法有關聯，則會傳遞 <see langword="null" />。</param>
        <param name="values">要套用至資料來源之新值的 <see cref="T:System.Collections.IDictionary" />。 這些參數與 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 屬性指定的方法搭配使用，以執行更新資料庫作業。 如果沒有任何參數與此方法有關聯，則會傳遞 <see langword="null" />。</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" />，包含用於比對資料來源中之項目的其他非索引鍵值。 只有在 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 屬性設為 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 欄位時，資料列值才會傳遞至刪除方法。</param>
        <summary>藉由呼叫由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 屬性所識別的方法，同時使用 <paramref name="keys" />、<paramref name="values" /> 或 <paramref name="oldValues" /> 集合中提供的任何參數，執行更新作業。</summary>
        <returns>更新之資料列的數目，如果數目不明，則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的傳回值為-1，表示已更新資料列數目未知。 若要傳回不同的值，設定<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>物件<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。 受影響的資料列數目通常由`Update`方法商務物件，而該值是可從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>參數<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>方法呼叫<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法，傳遞`keys`， `values`，和`oldValues`參數。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 作業已經完成時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>事件，檢查傳回值的值和輸出參數，或判斷是否發生例外狀況之後<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>作業已完成。 傳回值，輸出參數和例外狀況處理屬性都是從<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>與事件相關聯的物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 物件叫用以更新資料之方法或函式的名稱。</summary>
        <value>字串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用於更新資料之方法或函式的名稱。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>物件假設的方法，由<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性會執行更新一次，而不是批次中。  
  
 這個方法可以是執行個體方法或`static`(`Shared`在 Visual Basic 中) 方法。 如果執行個體方法，商務物件建立和終結所指定之方法的每次<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>呼叫屬性。 您可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>事件，以使用之前所指定之方法的商務物件<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>呼叫屬性。 您也可以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>之後，就會引發的事件<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>方法呼叫。 (`Dispose`呼叫時，只有當商務物件會實作<xref:System.IDisposable>介面。)如果該方法是`static`(`Shared`在 Visual Basic 中) 方法，不會建立商務物件，而且您無法處理這些事件。  
  
 如果商務物件<xref:System.Web.UI.WebControls.ObjectDataSource>物件搭配實作一個以上的方法或函式具有相同名稱 （方法多載），資料來源控制項嘗試叫用正確的其中一個，根據一組條件，包括參數在<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合。 如果在參數<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合不符合所指定之方法的簽章<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性，資料來源會擲回例外狀況。  
  
 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>。  
  
 值<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性儲存在檢視狀態。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.DropDownList>控制項，<xref:System.Web.UI.WebControls.TextBox>控制項，以及數個<xref:System.Web.UI.WebControls.ObjectDataSource>控制項更新資料。 <xref:System.Web.UI.WebControls.DropDownList>顯示名稱`NorthwindEmployee`，雖然<xref:System.Web.UI.WebControls.TextBox>控制項可用來輸入和更新位址資訊。 因為<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>物件繫結至選取的值<xref:System.Web.UI.WebControls.DropDownList>，觸發程序的按鈕<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>員工選取之後，才啟用作業。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 方法所用參數的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 屬性所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名稱和參數中所包含的型別<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合的名稱和類型中所指定之方法的參數，必須符合<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>屬性簽章。 參數名稱會受到<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>屬性且區分大小寫。 使用提供的參數，例如資料繫結控制項時<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>控制項自動合併使用這些參數所提供的集合中已明確指定任何參數資料繫結控制項。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.DropDownList>控制項，<xref:System.Web.UI.WebControls.TextBox>控制項，以及數個<xref:System.Web.UI.WebControls.ObjectDataSource>控制項更新資料。 <xref:System.Web.UI.WebControls.DropDownList>顯示名稱`NorthwindEmployee`，雖然<xref:System.Web.UI.WebControls.TextBox>控制項可用來輸入和更新位址資訊。 因為<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>物件繫結至選取的值<xref:System.Web.UI.WebControls.DropDownList>，觸發程序的按鈕<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>員工選取之後，才啟用作業。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 作業之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>事件以執行額外的初始化作業專屬於您的應用程式，來驗證參數的值，或變更參數值之前<xref:System.Web.UI.WebControls.ObjectDataSource>，控制項執行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>作業。 參數是可做為<xref:System.Collections.IDictionary>集合，存取<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>屬性，由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>物件。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.DropDownList>控制項，<xref:System.Web.UI.WebControls.TextBox>控制項，以及數個<xref:System.Web.UI.WebControls.ObjectDataSource>控制項更新資料。 <xref:System.Web.UI.WebControls.DropDownList>顯示名稱`NorthwindEmployee`，雖然<xref:System.Web.UI.WebControls.TextBox>控制項可用來輸入和更新位址資訊。 因為<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合包含<xref:System.Web.UI.WebControls.ControlParameter>物件繫結至選取的值<xref:System.Web.UI.WebControls.DropDownList>，觸發程序的按鈕<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>員工選取之後，才啟用作業。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>