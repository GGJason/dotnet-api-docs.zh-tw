<Type Name="LinqDataSource" FullName="System.Web.UI.WebControls.LinqDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43113d93d80de9936c4290c834d8d861c9f352d4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36581608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSource : System.Web.UI.WebControls.ContextDataSource, System.Web.DynamicData.IDynamicDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSource extends System.Web.UI.WebControls.ContextDataSource implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSource&#xA;Inherits ContextDataSource&#xA;Implements IDynamicDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSource : System::Web::UI::WebControls::ContextDataSource, System::Web::DynamicData::IDynamicDataSource" />
  <TypeSignature Language="F#" Value="type LinqDataSource = class&#xA;    inherit ContextDataSource&#xA;    interface IDynamicDataSource&#xA;    interface IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ContextDataSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ContextTypeName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="40253-101">在 ASP.NET 網頁中透過標記文字啟用 Language-Integrated Query (LINQ)，以從資料物件擷取和修改資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="40253-101">Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-102">本主題內容：</span><span class="sxs-lookup"><span data-stu-id="40253-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="40253-103">簡介</span><span class="sxs-lookup"><span data-stu-id="40253-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="40253-104">作業順序</span><span class="sxs-lookup"><span data-stu-id="40253-104">Order of Operations</span></span>](#order_of_operations)  
  
-   [<span data-ttu-id="40253-105">排序資料</span><span class="sxs-lookup"><span data-stu-id="40253-105">Ordering Data</span></span>](#ordering_data)  
  
-   [<span data-ttu-id="40253-106">分組資料</span><span class="sxs-lookup"><span data-stu-id="40253-106">Grouping Data</span></span>](#grouping_data)  
  
-   [<span data-ttu-id="40253-107">資料修改</span><span class="sxs-lookup"><span data-stu-id="40253-107">Data Modifications</span></span>](#data_modifications)  
  
-   [<span data-ttu-id="40253-108">在執行階段評估值</span><span class="sxs-lookup"><span data-stu-id="40253-108">Evaluating Values at Run Time</span></span>](#evaluating_value_at_run_time)  
  
-   [<span data-ttu-id="40253-109">使用預存程序</span><span class="sxs-lookup"><span data-stu-id="40253-109">Working with Stored Procedures</span></span>](#working_with_stored_procedures)  
  
-   [<span data-ttu-id="40253-110">宣告式語法</span><span class="sxs-lookup"><span data-stu-id="40253-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="40253-111">簡介</span><span class="sxs-lookup"><span data-stu-id="40253-111">Introduction</span></span>  
 <span data-ttu-id="40253-112">Language Integrated Query (LINQ) 會定義一組讓周遊、 篩選和投射作業的任何宣告式的方式來表示的查詢運算子的查詢語法。以網路為基礎的程式設計語言。</span><span class="sxs-lookup"><span data-stu-id="40253-112">Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</span></span> <span data-ttu-id="40253-113">資料物件可以是記憶體中的資料集合或表示資料庫資料的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-113">The data object can be an in-memory data collection or an object that represents data from a database.</span></span> <span data-ttu-id="40253-114">您可以擷取或修改的資料，而不需要撰寫 SQL 命令，針對每項作業。</span><span class="sxs-lookup"><span data-stu-id="40253-114">You can retrieve or modify the data without having to write SQL commands for each operation.</span></span>  
  
 <span data-ttu-id="40253-115"><xref:System.Web.UI.WebControls.LinqDataSource>控制項可讓您使用 ASP.NET Web 網頁中的 LINQ 標記文字中設定屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-115">The <xref:System.Web.UI.WebControls.LinqDataSource> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</span></span> <span data-ttu-id="40253-116"><xref:System.Web.UI.WebControls.LinqDataSource>控制使用 LINQ to SQL 自動產生資料命令。</span><span class="sxs-lookup"><span data-stu-id="40253-116">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically generate the data commands.</span></span> <span data-ttu-id="40253-117">如需有關 LINQ to SQL 的詳細資訊，請參閱[LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)。</span><span class="sxs-lookup"><span data-stu-id="40253-117">For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).</span></span>  
  
 <span data-ttu-id="40253-118">您會從記憶體中的資料集合中擷取資料，當您設定<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性來包含資料收集的類別。</span><span class="sxs-lookup"><span data-stu-id="40253-118">When you are retrieving data from an in-memory data collection, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that contains the data collection.</span></span> <span data-ttu-id="40253-119">您設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性或欄位，傳回資料集合的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-119">You set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property or field that returns the data collection.</span></span> <span data-ttu-id="40253-120">比方說，您可能會有類別，名為`Person`，包含屬性，名為`FavoriteCities`所傳回的字串值陣列。</span><span class="sxs-lookup"><span data-stu-id="40253-120">For example, you might have a class named `Person` that contains a property named `FavoriteCities` that returns an array of string values.</span></span> <span data-ttu-id="40253-121">在此情況下，您將設定<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性`Person`並設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性`FavoriteCities`。</span><span class="sxs-lookup"><span data-stu-id="40253-121">In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to `Person` and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to `FavoriteCities`.</span></span>  
  
 <span data-ttu-id="40253-122">當您查詢資料庫時，您必須先建立資料庫與資料表代表實體類別。</span><span class="sxs-lookup"><span data-stu-id="40253-122">When you are querying a database, you must first create entity classes that represent the database and its tables.</span></span> <span data-ttu-id="40253-123">您可以使用[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]或 SqlMetal.exe 公用程式來產生這些類別。</span><span class="sxs-lookup"><span data-stu-id="40253-123">You can use the [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] or the SqlMetal.exe utility to generate these classes.</span></span> <span data-ttu-id="40253-124">然後設定<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性來表示資料庫的類別，並設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性，以代表資料庫資料表的內容。</span><span class="sxs-lookup"><span data-stu-id="40253-124">You then set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that represents the database and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the database table.</span></span>  
  
<a name="order_of_operations"></a>   
## <a name="order-of-operations"></a><span data-ttu-id="40253-125">作業順序</span><span class="sxs-lookup"><span data-stu-id="40253-125">Order of Operations</span></span>  
 <span data-ttu-id="40253-126"><xref:System.Web.UI.WebControls.LinqDataSource>控制項適用於資料作業順序如下：</span><span class="sxs-lookup"><span data-stu-id="40253-126">The <xref:System.Web.UI.WebControls.LinqDataSource> control applies data operations in the following order:</span></span>  
  
1.  <span data-ttu-id="40253-127">位置 （指定要傳回的資料記錄）。</span><span class="sxs-lookup"><span data-stu-id="40253-127">Where (specify which data records to return).</span></span>  
  
2.  <span data-ttu-id="40253-128">Order By （排序）。</span><span class="sxs-lookup"><span data-stu-id="40253-128">Order By (sort).</span></span>  
  
3.  <span data-ttu-id="40253-129">Group By （共用的值彙總資料記錄）。</span><span class="sxs-lookup"><span data-stu-id="40253-129">Group By (aggregate data records that share values).</span></span>  
  
4.  <span data-ttu-id="40253-130">依群組的排序 （排序群組資料）。</span><span class="sxs-lookup"><span data-stu-id="40253-130">Order Groups By (sort grouped data).</span></span>  
  
5.  <span data-ttu-id="40253-131">選取 （指定哪些欄位或屬性傳回）。</span><span class="sxs-lookup"><span data-stu-id="40253-131">Select (specify which fields or properties to return).</span></span>  
  
6.  <span data-ttu-id="40253-132">自動排序 （由使用者選取的屬性來排序資料記錄）。</span><span class="sxs-lookup"><span data-stu-id="40253-132">Auto-sort (sort data records by a property that the user has selected).</span></span>  
  
7.  <span data-ttu-id="40253-133">自動頁面 （擷取的使用者所選取的資料記錄的子集）。</span><span class="sxs-lookup"><span data-stu-id="40253-133">Auto-page (retrieve a subset of data records that were selected by the user).</span></span>  
  
 <span data-ttu-id="40253-134">您可以將條件加入至<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性來篩選從查詢中傳回的資料記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-134">You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query.</span></span> <span data-ttu-id="40253-135">如果<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>未設定屬性，<xref:System.Web.UI.WebControls.LinqDataSource>控制從資料物件擷取每一筆記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-135">If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object.</span></span>  
  
<a name="ordering_data"></a>   
## <a name="ordering-data"></a><span data-ttu-id="40253-136">排序資料</span><span class="sxs-lookup"><span data-stu-id="40253-136">Ordering Data</span></span>  
 <span data-ttu-id="40253-137">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性來指定從傳回的資料來排序屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-137">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify the names of properties from the returned data to sort by.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40253-138">當您使用<xref:System.Web.UI.WebControls.LinqDataSource>用來控制[!INCLUDE[ss2k](~/includes/ss2k-md.md)]或[!INCLUDE[ssEW](~/includes/ssew-md.md)]和<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性設定為`true`，您必須提供值，以在<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-138">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="40253-139">根據預設，<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-139">By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`.</span></span> <span data-ttu-id="40253-140">如果您指派值給<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性，您必須也包含所有 identity 資料行中傳回查詢中的屬性清單。</span><span class="sxs-lookup"><span data-stu-id="40253-140">If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.</span></span>  
  
<a name="grouping_data"></a>   
## <a name="grouping-data"></a><span data-ttu-id="40253-141">分組資料</span><span class="sxs-lookup"><span data-stu-id="40253-141">Grouping Data</span></span>  
 <span data-ttu-id="40253-142">您使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性，以指定的屬性用來合併具有相同值的資料記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-142">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used to consolidate data records that have the same values.</span></span> <span data-ttu-id="40253-143">分組資料，您可以包含`Key`和`It`，其中中動態建立屬性，<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-143">When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-144">`Key`屬性表示用來將資料分組，一個或多個屬性值。</span><span class="sxs-lookup"><span data-stu-id="40253-144">The `Key` property refers to the values in the property or properties that were used to group the data.</span></span> <span data-ttu-id="40253-145">例如，如果您依屬性分組`Category`、`Key`屬性會包含中的所有唯一值`Category`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-145">For example, if you group by a property named `Category`, the `Key` property will contain all unique values in the `Category` property.</span></span> <span data-ttu-id="40253-146">`It`屬性參考到資料群組中個別記錄的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-146">The `It` property refers to a collection of individual records in a grouping of data.</span></span> <span data-ttu-id="40253-147">您可以反覆`It`屬性，以擷取已在群組作業中彙總的個別記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-147">You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation.</span></span> <span data-ttu-id="40253-148">例如，如果您依屬性分組`Category`、`It`屬性包含共用共通的值中的所有個別記錄`Category`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-148">For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.</span></span>  
  
 <span data-ttu-id="40253-149">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>屬性來指定要用來排序群組的資料的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-149">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data.</span></span> <span data-ttu-id="40253-150">當您群組資料，<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性會指定如何排序群組資料中的個別記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-150">When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted.</span></span>  
  
 <span data-ttu-id="40253-151">根據預設，<xref:System.Web.UI.WebControls.LinqDataSource>控制從資料物件擷取所有屬性的值。</span><span class="sxs-lookup"><span data-stu-id="40253-151">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object.</span></span> <span data-ttu-id="40253-152">您使用<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性來指定要傳回您要使用的可用屬性子集的內容。</span><span class="sxs-lookup"><span data-stu-id="40253-152">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties.</span></span> <span data-ttu-id="40253-153">選取作業套用之後 Where、 Order By 和 Group By 作業。</span><span class="sxs-lookup"><span data-stu-id="40253-153">The Select operation is applied after the Where, Order By, and Group By operations.</span></span> <span data-ttu-id="40253-154">因此，如果您在 Select 子句中建立的別名，別名不提供其他子句。</span><span class="sxs-lookup"><span data-stu-id="40253-154">Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</span></span>  
  
<a name="data_modifications"></a>   
## <a name="data-modifications"></a><span data-ttu-id="40253-155">資料修改</span><span class="sxs-lookup"><span data-stu-id="40253-155">Data Modifications</span></span>  
 <span data-ttu-id="40253-156">您可以指定是否啟用資料修改，以使用<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>，和<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-156">You can specify whether data modifications are enabled by using the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, and <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> properties.</span></span> <span data-ttu-id="40253-157">修改資料的使用者介面<xref:System.Web.UI.WebControls.LinqDataSource>控制項通常提供透過資料繫結控制項，例如<xref:System.Web.UI.WebControls.DetailsView>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-157">The user interface for modifying data from a <xref:System.Web.UI.WebControls.LinqDataSource> control is typically provided through a data-bound control, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="40253-158">除了設定<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>，或<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>至`true`，啟用自動的資料修改所需的下列條件：</span><span class="sxs-lookup"><span data-stu-id="40253-158">In addition to setting <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> to `true`, the following conditions are required to enable automatic data modifications:</span></span>  
  
-   <span data-ttu-id="40253-159"><xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性不能指定一個值。</span><span class="sxs-lookup"><span data-stu-id="40253-159">The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property cannot be assigned a value.</span></span>  
  
-   <span data-ttu-id="40253-160"><xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性不能指定一個值。</span><span class="sxs-lookup"><span data-stu-id="40253-160">The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property cannot be assigned a value.</span></span>  
  
-   <span data-ttu-id="40253-161">指派給類別<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性必須衍生自<xref:System.Data.Linq.DataContext>。</span><span class="sxs-lookup"><span data-stu-id="40253-161">The class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="40253-162">指派給屬性<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性必須衍生自<xref:System.Data.Linq.Table%601>。</span><span class="sxs-lookup"><span data-stu-id="40253-162">The property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span>  
  
 <span data-ttu-id="40253-163">您可以限制中有兩種資料繫結控制項所顯示的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-163">You can restrict which properties are displayed in a data-bound control in two ways.</span></span> <span data-ttu-id="40253-164">您可以設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性子集的內容，或者您可以定義資料繫結控制項的欄位加<xref:System.Web.UI.WebControls.DataControlField>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-164">You can either set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties, or you can define the fields for a data-bound control by adding <xref:System.Web.UI.WebControls.DataControlField> controls.</span></span> <span data-ttu-id="40253-165">不過，如果您設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性，表示不啟用自動更新、 插入和刪除作業。</span><span class="sxs-lookup"><span data-stu-id="40253-165">However, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, it means that automatic update, insert, and delete operations cannot be enabled.</span></span> <span data-ttu-id="40253-166">如果您想要啟用自動的資料修改，當您使用的可用屬性子集時，就不要設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-166">If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-167">相反地，從資料物件擷取所有屬性和管理要使用的資料繫結控制項中顯示哪些。</span><span class="sxs-lookup"><span data-stu-id="40253-167">Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</span></span> <span data-ttu-id="40253-168">當您使用<xref:System.Web.UI.WebControls.DetailsView>控制項或<xref:System.Web.UI.WebControls.GridView>控制項，您也必須設定<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>或<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性`false`。</span><span class="sxs-lookup"><span data-stu-id="40253-168">When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> properties to `false`.</span></span> <span data-ttu-id="40253-169">這可防止將資料繫結控制項自動包含編輯和刪除資料的按鈕。</span><span class="sxs-lookup"><span data-stu-id="40253-169">This prevents the data-bound control from automatically including buttons for editing and deleting the data.</span></span> <span data-ttu-id="40253-170">不會顯示在資料繫結控制項的任何值會儲存在檢視狀態。</span><span class="sxs-lookup"><span data-stu-id="40253-170">Any values that are not displayed in the data-bound control are stored in view state.</span></span> <span data-ttu-id="40253-171">它們會原封不動地傳遞至資料來源時執行資料更新。</span><span class="sxs-lookup"><span data-stu-id="40253-171">They are passed unchanged to the data source when the data update is performed.</span></span>  
  
<a name="evaluating_value_at_run_time"></a>   
## <a name="evaluating-values-at-run-time"></a><span data-ttu-id="40253-172">在執行階段評估值</span><span class="sxs-lookup"><span data-stu-id="40253-172">Evaluating Values at Run Time</span></span>  
 <span data-ttu-id="40253-173">如果您有篩選，來排序，執行階段評估的值或群組值，您可以將參數加入至<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>， <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>，或<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-173">If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collections.</span></span>  
  
 <span data-ttu-id="40253-174">如果您想要指定預設值，您可以加入參數，以便<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-174">If you want to specify default values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="40253-175">如果您想要檢查或修改值，執行資料作業之前，您可以處理<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>， <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>，或<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-175">If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events.</span></span> <span data-ttu-id="40253-176">若要取消資料作業，或檢查您根據使用者輸入的資料類別中設定屬性時所發生的驗證錯誤，您也可以處理這些事件。</span><span class="sxs-lookup"><span data-stu-id="40253-176">You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</span></span>  
  
 <span data-ttu-id="40253-177">若要資料作業完成之後，請檢查值，處理<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>， <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>， <xref:System.Web.UI.WebControls.LinqDataSource.Selected>，或<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-177">To examine values after the data operation has finished, handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events.</span></span>  
  
<a name="working_with_stored_procedures"></a>   
## <a name="working-with-stored-procedures"></a><span data-ttu-id="40253-178">使用預存程序</span><span class="sxs-lookup"><span data-stu-id="40253-178">Working with Stored Procedures</span></span>  
 <span data-ttu-id="40253-179">您使用<xref:System.Web.UI.WebControls.LinqDataSource>控制項來擷取預存程序中的資料，藉由建立的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-179">You use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from a stored procedure by creating an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="40253-180">在事件處理常式，您呼叫方法的資料內容類別，代表預存程序中，並將結果設<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>屬性<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>物件。</span><span class="sxs-lookup"><span data-stu-id="40253-180">In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object.</span></span> <span data-ttu-id="40253-181">如果您想要啟用自動更新、 插入和刪除作業的資料，從方法傳回的型別必須符合中指定的型別<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-181">If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span> <span data-ttu-id="40253-182">如需建立資料內容方法的詳細資訊，請參閱[How to： 建立 DataContext 方法對應至預存程序和函式 （O/R 設計工具）](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)。</span><span class="sxs-lookup"><span data-stu-id="40253-182">For more information about creating data context methods, see [How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="40253-183">宣告式語法</span><span class="sxs-lookup"><span data-stu-id="40253-183">Declarative Syntax</span></span>  
  
```  
<asp:LinqDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    ContextTypeName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableTheming="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    GroupBy="string"  
    ID="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    SkinID="string"  
    StoreOriginalValuesInViewState="True|False"  
    TableName="string"  
    Visible="True|False"  
    Where="string"  
>  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <WhereParameters />  
</asp:LinqDataSource>  
```  
  
   
  
## Examples  
 <span data-ttu-id="40253-184">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>會從名為實體類別擷取資料的控制項`Products`。</span><span class="sxs-lookup"><span data-stu-id="40253-184">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that retrieves data from an entity class named `Products`.</span></span> <span data-ttu-id="40253-185">實體類別已產生使用[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]或 SqlMetal.exe 公用程式。</span><span class="sxs-lookup"><span data-stu-id="40253-185">The entity class could have been generated by using the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility.</span></span> <span data-ttu-id="40253-186"><xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性設定為傳回中有值的記錄`Price`屬性大於 50。</span><span class="sxs-lookup"><span data-stu-id="40253-186">The <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is set to return only records that have a value in the `Price` property greater than 50.</span></span> <span data-ttu-id="40253-187">A<xref:System.Web.UI.WebControls.GridView>控制項繫結至<xref:System.Web.UI.WebControls.LinqDataSource>控制項來顯示資料。</span><span class="sxs-lookup"><span data-stu-id="40253-187">A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 <span data-ttu-id="40253-188">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>控制項，可讓使用者更新、 刪除和插入資料來源中的記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-188">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that enables users to update, delete, and insert records in the data source.</span></span> <span data-ttu-id="40253-189">A<xref:System.Web.UI.WebControls.DetailsView>控制項繫結至<xref:System.Web.UI.WebControls.LinqDataSource>控制，可讓使用者查看和修改資料。</span><span class="sxs-lookup"><span data-stu-id="40253-189">A <xref:System.Web.UI.WebControls.DetailsView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control and enables users to see and modify the data.</span></span> <span data-ttu-id="40253-190">請注意，任何 SQL 命令都需要以選取、 更新、 刪除或插入記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-190">Notice that no SQL commands are required in order to select, update, delete, or insert the records.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 <span data-ttu-id="40253-191">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>所設定的資料物件的事件會根據網頁中的值。</span><span class="sxs-lookup"><span data-stu-id="40253-191">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event that sets the data object based on a value in the Web page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 <span data-ttu-id="40253-192">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>也就是控制設定群組的兩個資料行。</span><span class="sxs-lookup"><span data-stu-id="40253-192">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns.</span></span> <span data-ttu-id="40253-193">`Key`屬性參考的物件具有兩個屬性：`ProductCategory`和`Color`。</span><span class="sxs-lookup"><span data-stu-id="40253-193">The `Key` property references an object that has two properties, `ProductCategory` and `Color`.</span></span> <span data-ttu-id="40253-194">所表示之物件`It`是重新命名 （別名） `Products`。</span><span class="sxs-lookup"><span data-stu-id="40253-194">The object represented by `It` is renamed (aliased) to `Products`.</span></span> <span data-ttu-id="40253-195">重新命名`Products`物件都包含在群組中個別記錄的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-195">The renamed `Products` object contains a collection of the individual records in a grouping.</span></span> <span data-ttu-id="40253-196">每個執行個體會包含的所有資料行`Products`資料表。</span><span class="sxs-lookup"><span data-stu-id="40253-196">Each instance will contain all the columns from the `Products` table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="40253-197">下列範例示範兩個<xref:System.Web.UI.WebControls.ListView>控制項顯示資料的<xref:System.Web.UI.WebControls.LinqDataSource>前一個範例中的控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-197">The following example shows two <xref:System.Web.UI.WebControls.ListView> controls that display the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example.</span></span> <span data-ttu-id="40253-198">一個<xref:System.Web.UI.WebControls.ListView>控制項會顯示群組的資料，以及其他<xref:System.Web.UI.WebControls.ListView>控制項會顯示個別的隸屬於該群組的產品名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-198">One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data, and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group.</span></span> <span data-ttu-id="40253-199">巢狀的資料繫結控制項的<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>屬性設定為`Products`，這是別名`It`物件。</span><span class="sxs-lookup"><span data-stu-id="40253-199">The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40253-200">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-200">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateOrderByClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-201">取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項是否會根據 <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> 集合中的值，動態建立 ORDER BY 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-201">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates an Order By clause based on values in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-202">
            <see langword="true" /> 如果<see cref="T:System.Web.UI.WebControls.LinqDataSource" />控制項建立 Order By 子句，否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-202">
              <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control creates the Order By clause; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-203">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-203">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-204">當您將<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>屬性`true`、<xref:System.Web.UI.WebControls.LinqDataSource>控制項會以動態方式建立 Order By 子句中的值為基礎的<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-204">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates an Order By clause that is based on the values in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="40253-205"><xref:System.Web.UI.WebControls.LinqDataSource>控制項的第一個參數的排序資料，然後此外排序每個額外參數的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-205">The <xref:System.Web.UI.WebControls.LinqDataSource> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</span></span> <span data-ttu-id="40253-206">含有參數`null`或 Order By 子句中不包含空值。</span><span class="sxs-lookup"><span data-stu-id="40253-206">Parameters that contain `null` or an empty value are not included in the Order By clause.</span></span>  
  
 <span data-ttu-id="40253-207">您沒有設定<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性時<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>設`true`，因為剖析器會動態建立的 Order By 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-207">You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true`, because the parser dynamically creates the Order By clause.</span></span> <span data-ttu-id="40253-208"><xref:System.Web.UI.WebControls.LinqDataSource>控制項會擲回例外狀況，如果<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>設`true`和<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>指派值給屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-208">The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is assigned values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-209">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>用來控制<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-209">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> set to `true`.</span></span> <span data-ttu-id="40253-210">參數包含在<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合來排序屬性為基礎的資料名稱的使用者會從選取<xref:System.Web.UI.WebControls.DropDownList>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-210">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-211">取得或設定值，這個值表示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項是否根據 <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> 集合中所定義的值動態地建立 Where 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-211">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates a Where clause based on values defined in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-212">如果 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項要建立 Where 子句則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-212">
              <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control will create the Where clause; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-213">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-213">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-214">當您將<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>屬性`true`、<xref:System.Web.UI.WebControls.LinqDataSource>控制項會以動態方式建立 Where 子句中的參數從<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-214">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="40253-215">您將加入至每個參數<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合必須有其<xref:System.Web.UI.WebControls.Parameter.Name%2A>屬性設定為符合正在進行查詢的資料物件中的屬性值。</span><span class="sxs-lookup"><span data-stu-id="40253-215">Each parameter that you add to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection must have its <xref:System.Web.UI.WebControls.Parameter.Name%2A> property set to a value that matches a property in the data object that is being queried.</span></span> <span data-ttu-id="40253-216">自動產生子句會檢查是否在指定的值<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合等於資料物件中的比對屬性的值。</span><span class="sxs-lookup"><span data-stu-id="40253-216">The automatically generated Where clause will check whether the value specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection equals the value of the matching property in the data object.</span></span> <span data-ttu-id="40253-217">如果您提供一個以上的參數，參數會與邏輯連結`AND`作業。</span><span class="sxs-lookup"><span data-stu-id="40253-217">If you provide more than one parameter, the parameters are linked with a logical `AND` operation.</span></span> <span data-ttu-id="40253-218">含有參數`null`或空的值不包含在 where 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-218">Parameters that contain `null` or an empty value are not included in the Where clause.</span></span>  
  
 <span data-ttu-id="40253-219">自動產生<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>子句可以只測試是否相等，以及可以連結參數只能搭配`AND`作業。</span><span class="sxs-lookup"><span data-stu-id="40253-219">The automatically generated <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause can test only for equality and can link parameters only with the `AND` operation.</span></span> <span data-ttu-id="40253-220">請勿設定<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>屬性`true`或者如果您需要將不會測試是否相等的條件產生關聯的參數有`OR`作業。</span><span class="sxs-lookup"><span data-stu-id="40253-220">Do not set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` if you have to add a condition that does not test for equality or if you have to relate parameters with the `OR` operation.</span></span> <span data-ttu-id="40253-221">您可以完成這些工作，藉由設定<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>屬性`false`並加入中的預留位置<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性中每個參數<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-221">You can accomplish these tasks by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `false` and adding placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="40253-222">在<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性，與每個預留位置名稱的前面上 @ 符號。</span><span class="sxs-lookup"><span data-stu-id="40253-222">In the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property, preface each placeholder name with the @ symbol.</span></span>  
  
 <span data-ttu-id="40253-223">您沒有設定<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性時<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>屬性是`true`，因為剖析器以動態方式建立 Where 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-223">You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, because the parser dynamically creates the Where clause.</span></span> <span data-ttu-id="40253-224"><xref:System.Web.UI.WebControls.LinqDataSource>控制項會擲回例外狀況，如果<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>屬性是`true`和<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>指派值給屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-224">The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is assigned values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-225">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>用來控制<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-225">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> set to `true`.</span></span> <span data-ttu-id="40253-226">A<xref:System.Web.UI.WebControls.GridView>控制項繫結至<xref:System.Web.UI.WebControls.LinqDataSource>控制項來顯示查詢傳回的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-226">A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data that is returned from the query.</span></span> <span data-ttu-id="40253-227">A<xref:System.Web.UI.WebControls.DropDownList>控制項也就是包含三個值擴展。</span><span class="sxs-lookup"><span data-stu-id="40253-227">A <xref:System.Web.UI.WebControls.DropDownList> control is included that is populated with three values.</span></span> <span data-ttu-id="40253-228">參數包含在<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合名稱設為`Category,`會比對其中一個資料物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-228">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection with the name set to `Category,` which matches one of the properties of the data object.</span></span> <span data-ttu-id="40253-229">其<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>屬性設定為 ID<xref:System.Web.UI.WebControls.DropDownList>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-229">Its <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> property is set to the ID of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="40253-230"><xref:System.Web.UI.WebControls.LinqDataSource>控制項會自動建立<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性記錄的資料篩選根據使用者從選取的值<xref:System.Web.UI.WebControls.DropDownList>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-230">The <xref:System.Web.UI.WebControls.LinqDataSource> control automatically creates the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter records based on the value that the user selects from the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="40253-231">查詢會傳回記錄其`Category`屬性會比對使用者已從選取的值<xref:System.Web.UI.WebControls.DropDownList>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-231">The query returns the records whose `Category` property matches the value that the user has selected from the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default7.aspx#7)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default7.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPage : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-232">取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項是否支援在執行階段完整瀏覽資料的區段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-232">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports navigation through sections of the data at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-233">如果使用者可以分頁瀏覽資料，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-233">
              <see langword="true" /> if the user can page through the data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-234">預設值是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-234">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-235">設定<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性`true`以啟用分頁中的<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-235">Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property to `true` to enable paging in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="40253-236">若要讓使用者逐頁查看資料，連接提供介面，用於分頁的資料繫結控制項<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-236">To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="40253-237">當<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.LinqDataSource>控制項擷取的資料繫結控制項中的一個頁面足以記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-237">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves only enough records for one page in the data-bound control.</span></span> <span data-ttu-id="40253-238">它會使用<xref:System.Linq.Enumerable.Skip%2A>和<xref:System.Linq.Enumerable.Take%2A>方法來擷取目前頁面的記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-238">It uses the <xref:System.Linq.Enumerable.Skip%2A> and <xref:System.Linq.Enumerable.Take%2A> methods to retrieve the records for the current page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-239">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>用來控制<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性設定為`true`和<xref:System.Web.UI.WebControls.GridView>繫結至控制項<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-239">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="40253-240"><xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>屬性<xref:System.Web.UI.WebControls.GridView>控制設為 `true`提供介面，可讓使用者逐頁查看資料。</span><span class="sxs-lookup"><span data-stu-id="40253-240">The <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users page through the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSort : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-241">取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項是否支援在執行階段排序資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-241">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports sorting the data at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-242">如果使用者可以排序資料，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-242">
              <see langword="true" /> if the user can sort the data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-243">預設值是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-243">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-244"><xref:System.Web.UI.WebControls.LinqDataSource>控制項支援兩種方法來排序資料。</span><span class="sxs-lookup"><span data-stu-id="40253-244">The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data.</span></span> <span data-ttu-id="40253-245">您可以使用<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>屬性使執行階段排序，或者您可以設定<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性可定義在設計階段的排序。</span><span class="sxs-lookup"><span data-stu-id="40253-245">You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time.</span></span>  
  
 <span data-ttu-id="40253-246">設定<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>屬性`true`啟用中排序<xref:System.Web.UI.WebControls.LinqDataSource>為基礎的排序運算式，從在資料繫結控制項的控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-246">Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to `true` to enable sorting in a <xref:System.Web.UI.WebControls.LinqDataSource> control that is based on the sort expression from a data-bound control.</span></span> <span data-ttu-id="40253-247">資料繫結控制項提供介面，讓使用者在執行階段選取用來排序的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-247">The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</span></span>  
  
 <span data-ttu-id="40253-248">您可以透過程式設計方式設定藉由設定傳回資料的順序<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性或多個用於排序的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-248">You can programmatically set the order in which data is returned by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to the property or properties used for sorting.</span></span> <span data-ttu-id="40253-249">當<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性設定為屬性和<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>屬性是`true`，從資料繫結控制項的排序運算式中的運算式之後套用<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-249">When the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is set to a property and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is `true`, the sort expression from the data-bound control is applied after the expression in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="40253-250">因此，這會決定最終排序的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-250">Therefore, this determines the final sorting of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-251">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>用來控制<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>屬性設定為`true`和<xref:System.Web.UI.WebControls.GridView>繫結至控制項<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-251">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="40253-252"><xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>屬性<xref:System.Web.UI.WebControls.GridView>控制設為 `true`提供可讓使用者排序資料的介面。</span><span class="sxs-lookup"><span data-stu-id="40253-252">The <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users sort the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ ContextCreated;" />
      <MemberSignature Language="F#" Value="member this.ContextCreated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.ContextCreated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-253">在建立內容型別物件的執行個體之後發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-253">Occurs after an instance of the context type object is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-254">處理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>檢查內容型別物件，或檢查在建立物件時引發的例外狀況的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-254">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created.</span></span> <span data-ttu-id="40253-255">擷取內容型別物件，從<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>與此事件相關聯的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-255">You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event.</span></span> <span data-ttu-id="40253-256">擷取從資料作業中引發的例外狀況<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-256">You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.</span></span>  
  
 <span data-ttu-id="40253-257">內容型別物件建立期間選取、 更新、 插入和刪除作業，並會在要求中重複使用。</span><span class="sxs-lookup"><span data-stu-id="40253-257">The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</span></span>  
  
 <span data-ttu-id="40253-258">沒有不引發事件時的一次。</span><span class="sxs-lookup"><span data-stu-id="40253-258">There is one time when the event is not raised.</span></span> <span data-ttu-id="40253-259">這是當您以程式設計方式設定<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性的物件期間<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-259">This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="40253-260">額外的條件是要儲存檢視狀態或在物件中，不需要原始值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性實作<xref:System.Data.Linq.ITable>介面。</span><span class="sxs-lookup"><span data-stu-id="40253-260">An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of LinqDataSourceContextEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^&gt; ^ ContextCreating;" />
      <MemberSignature Language="F#" Value="member this.ContextCreating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " Usage="member this.ContextCreating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-261">在建立內容型別物件的執行個體之前發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-261">Occurs before an instance of the context type object is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-262">根據預設，<xref:System.Web.UI.WebControls.LinqDataSource>控制項建立執行個體中指定的型別<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-262">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span> <span data-ttu-id="40253-263"><xref:System.Web.UI.WebControls.LinqDataSource>控制項會呼叫來建立物件的執行個體的資料內容物件的預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="40253-263">The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object.</span></span> <span data-ttu-id="40253-264">可能是您必須使用非預設建構函式，或您必須建立不同的物件中指定的<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-264">It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span> <span data-ttu-id="40253-265">在此情況下，您必須處理<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件，手動建立的資料內容物件。</span><span class="sxs-lookup"><span data-stu-id="40253-265">In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object.</span></span>  
  
 <span data-ttu-id="40253-266">選取、 更新、 插入和刪除作業期間，會建立內容型別物件。</span><span class="sxs-lookup"><span data-stu-id="40253-266">The context type object is created during select, update, insert, and delete operations.</span></span>  
  
 <span data-ttu-id="40253-267">沒有不引發事件時的一次。</span><span class="sxs-lookup"><span data-stu-id="40253-267">There is one time when the event is not raised.</span></span> <span data-ttu-id="40253-268">這是當您以程式設計方式設定<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性中的事件處理常式的物件<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-268">This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="40253-269">額外的條件是要儲存檢視狀態或在物件中，不需要原始值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>屬性實作<xref:System.Data.Linq.ITable>介面。</span><span class="sxs-lookup"><span data-stu-id="40253-269">An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-270">下列範例示範如何使用非預設建構函式期間建立的資料內容物件<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-270">The following example shows how to create the data context object by using a non-default constructor during the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event.</span></span> <span data-ttu-id="40253-271">程式碼指派的物件<xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-271">The code assigns the object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of LinqDataSourceDisposeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberSignature Language="F#" Value="member this.ContextDisposing : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " Usage="member this.ContextDisposing : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-272">在處置內容型別物件之前發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-272">Occurs before disposing the context type object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-273">您處理<xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing>事件，手動處置的物件，或在執行清理之前終結物件的特定物件。</span><span class="sxs-lookup"><span data-stu-id="40253-273">You handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public override string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-274">取得或設定型別的名稱，該型別所包含之屬性的值具有您要擷取的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-274">Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-275">要從中擷取資料的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-275">The name of the class to retrieve data from.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-276">當您使用<xref:System.Web.UI.WebControls.LinqDataSource>控制從記憶體中的資料集合或資料庫擷取資料，您必須指定兩個屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-276">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</span></span> <span data-ttu-id="40253-277">第一個是代表資料來源的資料內容類別。</span><span class="sxs-lookup"><span data-stu-id="40253-277">The first is a data context class that represents the data source.</span></span> <span data-ttu-id="40253-278">第二個是包含資料的資料內容類別中的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-278">The second is a property in the data context class that contains the data.</span></span> <span data-ttu-id="40253-279">您設定<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性名稱的資料內容類別，並設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性至包含資料的資料集合。</span><span class="sxs-lookup"><span data-stu-id="40253-279">You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data.</span></span>  
  
 <span data-ttu-id="40253-280">例如，當您從資料庫擷取資料，設定<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性來表示資料庫類別的名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-280">For example, when you retrieve data from a database, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that represents the database.</span></span> <span data-ttu-id="40253-281">也設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性，以代表資料庫中的資料表的內容。</span><span class="sxs-lookup"><span data-stu-id="40253-281">Also set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the table in the database.</span></span> <span data-ttu-id="40253-282">若要從資料庫中產生類別，請使用[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]或 SqlMetal.exe 公用程式，以自動產生這些類別。</span><span class="sxs-lookup"><span data-stu-id="40253-282">To generate classes from a database, use the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility to automatically generate those classes.</span></span>  
  
 <span data-ttu-id="40253-283">當您從記憶體中的資料集合，例如陣列中擷取資料時，設定<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性至包含陣列屬性的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-283">When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property.</span></span> <span data-ttu-id="40253-284">然後設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性來取得陣列的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-284">Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array.</span></span>  
  
 <span data-ttu-id="40253-285">若要啟用自動更新、 插入或刪除作業透過<xref:System.Web.UI.WebControls.LinqDataSource>控制項，指派給類別<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性必須衍生自<xref:System.Data.Linq.DataContext>。</span><span class="sxs-lookup"><span data-stu-id="40253-285">To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="40253-286">此外，指派屬性給<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性必須衍生自<xref:System.Data.Linq.Table%601>。</span><span class="sxs-lookup"><span data-stu-id="40253-286">In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span> <span data-ttu-id="40253-287">如果您不需要啟用自動更新、 插入或刪除作業，您可以指派的任何類型的類別名稱<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-287">If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span>  
  
 <span data-ttu-id="40253-288">如需如何從類別的執行個體中選取資料的資訊，請參閱<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-288">For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-289">下列範例示範如何設定<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性包含字串陣列的類別。</span><span class="sxs-lookup"><span data-stu-id="40253-289">The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to a class that contains an array of strings.</span></span> <span data-ttu-id="40253-290">它也示範如何將屬性設定為類別 (所產生[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)])，表示資料庫。</span><span class="sxs-lookup"><span data-stu-id="40253-290">It also shows how to set the property to a class (generated by the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]) that represents a database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 <span data-ttu-id="40253-291">名為的類別`ExampleDataContext`，代表資料庫資料表不會顯示在此範例中。</span><span class="sxs-lookup"><span data-stu-id="40253-291">The class named `ExampleDataContext` that represents the database table is not shown in this example.</span></span> <span data-ttu-id="40253-292">要讓範例能夠運作，您必須建立此類別將具名的 Example.dbml 並拖曳資料表名為電影到 LINQ 到 SQL 類別加入[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="40253-292">For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span> <span data-ttu-id="40253-293">類別，名為`ExampleDataContext`與屬性，名為`Movies`產生。</span><span class="sxs-lookup"><span data-stu-id="40253-293">A class named `ExampleDataContext` with a property named `Movies` is generated.</span></span>  
  
 <span data-ttu-id="40253-294">下列範例會示範名為的類別`MovieLibrary`，用來參考之<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-294">The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryableView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateQueryableView () As QueryableDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::QueryableDataSourceView ^ CreateQueryableView();" />
      <MemberSignature Language="F#" Value="override this.CreateQueryableView : unit -&gt; System.Web.UI.WebControls.QueryableDataSourceView" Usage="linqDataSource.CreateQueryableView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.QueryableDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40253-295">傳回可查詢的檢視。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-295">Returns a queryable view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40253-296">可查詢的檢視。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-296">A queryable view.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.LinqDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.LinqDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As LinqDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::LinqDataSourceView ^ CreateView();" />
      <MemberSignature Language="F#" Value="abstract member CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView&#xA;override this.CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView" Usage="linqDataSource.CreateView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40253-297">建立與這個控制項關聯之 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-297">Creates a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class that is associated with this control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40253-298">做為資料繫結控制項介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-298">An object that acts as the interface for data-bound controls.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-299">若要提供自訂的檢視，您可以覆寫這個方法在衍生類別中。</span><span class="sxs-lookup"><span data-stu-id="40253-299">To provide a custom view, you can override this method in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="40253-300">要刪除之資料錄的資料列索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-300">The row key values for the records to be deleted.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="40253-301">評估以偵測資料衝突的資料列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-301">The row values that are evaluated to detect data conflicts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40253-302">執行刪除作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-302">Performs a delete operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40253-303">刪除作業所影響的資料錄數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-303">The number of records affected by the delete operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-304">一般而言，您不必呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>從您的程式碼的方法。</span><span class="sxs-lookup"><span data-stu-id="40253-304">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code.</span></span> <span data-ttu-id="40253-305">當您使用<xref:System.Web.UI.WebControls.LinqDataSource>與資料繫結控制項，資料繫結控制項的控制項將會自動呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法，當使用者採取動作來刪除記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-305">When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record.</span></span> <span data-ttu-id="40253-306">明確地呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法，當您想要建立您自己的處理程序，刪除資料。</span><span class="sxs-lookup"><span data-stu-id="40253-306">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data.</span></span> <span data-ttu-id="40253-307">例如，您可以呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法，當您想要刪除記錄時根據外的資料繫結控制項的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-307">For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Deleted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-308">在刪除作業完成時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-308">Occurs when a delete operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-309">處理<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>攔截任何例外狀況的刪除作業或作業完成之後，請檢查輸出參數的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-309">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</span></span> <span data-ttu-id="40253-310">您可以擷取輸出參數，從<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>傳遞至事件處理常式的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-310">You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-311">
            <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 類別不使用這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-311">This property is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-312">參數的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-312">A collection of parameters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of LinqDataSourceDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^&gt; ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " Usage="member this.Deleting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-313">在刪除作業之前發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-313">Occurs before a delete operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-314">處理<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>來驗證物件被刪除，以檢查資料類別，來變更值，以刪除作業之前，或取消刪除作業從資料驗證錯誤的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-314">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</span></span> <span data-ttu-id="40253-315"><xref:System.Web.UI.WebControls.LinqDataSource>控制權會將<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>事件處理常式的物件<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-315">The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="40253-316"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>物件包含的資料將被刪除，並可讓您取消刪除作業。</span><span class="sxs-lookup"><span data-stu-id="40253-316">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation.</span></span> <span data-ttu-id="40253-317">如果資料類別會擲回<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>例外狀況，<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>物件包含在該例外狀況<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-317">If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span>  
  
 <span data-ttu-id="40253-318">如果事件處理常式中擲回例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件，您必須處理該事件處理常式中的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-318">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="40253-319">例外狀況不會傳遞至事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>事件 (透過<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>物件)。</span><span class="sxs-lookup"><span data-stu-id="40253-319">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="40253-320"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性包含之後就會擲回的例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-320">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-321">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-321">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="40253-322">程式碼中的屬性為基礎的刪除作業會取消<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>網頁之值和屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-322">The code cancels the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="40253-323">在範例中，當`OnSale`屬性設定為`true`，使用者必須先選取<xref:System.Web.UI.WebControls.CheckBox>確認是否應該刪除記錄的控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-323">In the example, when the `OnSale` property is set to `true`, the user must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that a record should be deleted.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-324">取得或設定值，這個值表示是否可以透過 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項刪除資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-324">Gets or sets a value that indicates whether data records can be deleted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-325">如果已啟用自動刪除作業則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-325">
              <see langword="true" /> if automatic delete operations are enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-326">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-326">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-327">設定<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>屬性`true`當您想要讓使用者可以刪除資料錄透過<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-327">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property to `true` when you want to enable users to delete a data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="40253-328">當<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>是`true`、<xref:System.Web.UI.WebControls.LinqDataSource>控制使用 LINQ to SQL 會自動建立的資料刪除命令。</span><span class="sxs-lookup"><span data-stu-id="40253-328">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to delete the data.</span></span> <span data-ttu-id="40253-329">您必須加入介面，可讓使用者選取的記錄，若要刪除，例如<xref:System.Web.UI.WebControls.DetailsView>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-329">You must include an interface that lets users select a record to delete, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="40253-330"><xref:System.Web.UI.WebControls.LinqDataSource>控制項不支援自動刪除作業時<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性或<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="40253-330">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="40253-331">在此情況下，<xref:System.Web.UI.WebControls.LinqDataSource>控制如果嘗試刪除作業將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-331">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-332">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>控制項具有<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-332">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> set to `true`.</span></span> <span data-ttu-id="40253-333">A<xref:System.Web.UI.WebControls.DetailsView>控制項顯示的資料，並建立按鈕，讓使用者可刪除的資料記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-333">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users delete a data record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-334">取得或設定值，這個值表示是否可以透過 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項插入資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-334">Gets or sets a value that indicates whether data records can be inserted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-335">如果已啟用自動插入作業則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-335">
              <see langword="true" /> if automatic insert operations are enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-336">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-336">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-337">設定<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>屬性`true`當您想要讓使用者插入新的資料記錄，到<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-337">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property to `true` when you want to enable users to insert a new data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="40253-338">當<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>是`true`、<xref:System.Web.UI.WebControls.LinqDataSource>控制使用 LINQ to SQL 會自動建立 插入資料的命令。</span><span class="sxs-lookup"><span data-stu-id="40253-338">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to insert the data.</span></span> <span data-ttu-id="40253-339">您必須加入介面，可讓使用者插入新的記錄，例如<xref:System.Web.UI.WebControls.DetailsView>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-339">You must include an interface that lets users insert a new record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="40253-340"><xref:System.Web.UI.WebControls.LinqDataSource>控制項不支援自動插入作業時<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性或<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="40253-340">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="40253-341">在此情況下，<xref:System.Web.UI.WebControls.LinqDataSource>控制如果嘗試插入作業將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-341">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-342">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>控制項具有<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-342">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> set to `true`.</span></span> <span data-ttu-id="40253-343">A<xref:System.Web.UI.WebControls.DetailsView>控制項顯示資料，並顯示切換插入模式下，使用者可以建立並儲存新的記錄控制項的按鈕。</span><span class="sxs-lookup"><span data-stu-id="40253-343">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableObjectTracking">
      <MemberSignature Language="C#" Value="public bool EnableObjectTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableObjectTracking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableObjectTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableObjectTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableObjectTracking : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-344">取得或設定值，這個值表示是否追蹤資料內容物件的變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-344">Gets or sets the value that indicates whether changes to the data context object are tracked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-345">如果要追蹤資料內容物件的變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-345">
              <see langword="true" /> if the data context object is tracked for changes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-346">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-346">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-347"><xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> LINQ 到 SQL 資料內容物件從選取的資料時，才會使用屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-347">The <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property is only used when selecting data from a LINQ To SQL data context object.</span></span>  
  
 <span data-ttu-id="40253-348">當您與唯讀資料互動時，設定<xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A>屬性`false`改善效能，因為資料不會快取來判斷是否已變更。</span><span class="sxs-lookup"><span data-stu-id="40253-348">When you are interacting with read-only data, setting the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property to `false` improves performance because the data is not cached to determine if it has changed.</span></span> <span data-ttu-id="40253-349">不過，它也會停用延後的查詢執行。</span><span class="sxs-lookup"><span data-stu-id="40253-349">However, it also disables deferred query execution.</span></span> <span data-ttu-id="40253-350">這個屬性必須設定為`true`如果您想要使用延後的查詢執行。</span><span class="sxs-lookup"><span data-stu-id="40253-350">This property must be set to `true` if you want to use deferred query execution.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-351">取得或設定值，這個值表示是否可以透過 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控制項更新資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-351">Gets or sets a value that indicates whether data records can be updated through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-352">如果已啟用自動更新作業則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-352">
              <see langword="true" /> if automatic update operations are enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-353">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-353">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-354">設定<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>屬性`true`當您想要讓使用者可以使用更新的資料記錄<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-354">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property to `true` when you want to enable users to update a data record by using the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="40253-355">當<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>是`true`、<xref:System.Web.UI.WebControls.LinqDataSource>控制使用 LINQ to SQL 會自動建立命令以更新的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-355">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to update the data.</span></span> <span data-ttu-id="40253-356">您必須加入介面，可讓使用者更新記錄，例如<xref:System.Web.UI.WebControls.DetailsView>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-356">You must include an interface that lets users update a record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="40253-357"><xref:System.Web.UI.WebControls.LinqDataSource>控制項不支援自動更新作業時<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性或<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="40253-357">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="40253-358">在此情況下，<xref:System.Web.UI.WebControls.LinqDataSource>控制如果嘗試更新作業將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-358">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-359">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>控制項具有<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-359">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> set to `true`.</span></span> <span data-ttu-id="40253-360">A<xref:System.Web.UI.WebControls.DetailsView>控制項顯示的資料，並建立可讓使用者更新的資料記錄的按鈕。</span><span class="sxs-lookup"><span data-stu-id="40253-360">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users update a data record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-361">取得或設定值，這個值指定用於對擷取的資料進行分組的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-361">Gets or sets a value that specifies which properties are used for grouping the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-362">字串，用來建立 Group By 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-362">A string that is used to create the Group By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-363">您使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性，以指定的屬性會用於合併具有相同值的資料記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-363">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used for consolidating data records that have the same values.</span></span> <span data-ttu-id="40253-364">例如，如果您設定<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性`Name`，所有記錄在查詢中所提供的相同`Name`屬性值會傳回成單一的彙總記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-364">For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `Name`, all the records in the query that have the same `Name` property value are returned as a single consolidated record.</span></span>  
  
 <span data-ttu-id="40253-365">您可以指派至一個以上屬性<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性中的所有屬性，只要`new`函式，並使用逗號分隔每一個屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-365">You can assign more than one property to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property by enclosing all the properties in the `new` function and separating each property by using a comma.</span></span> <span data-ttu-id="40253-366">例如，若要群組的屬性`Name`然後`Category`，將<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性`new(Name, Category)`。</span><span class="sxs-lookup"><span data-stu-id="40253-366">For example, to group by the properties `Name` and then `Category`, set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `new(Name, Category)`.</span></span>  
  
 <span data-ttu-id="40253-367">用來分組屬性中的值會傳回產生的屬性，名為透過`Key`。</span><span class="sxs-lookup"><span data-stu-id="40253-367">The values in the property that are used for grouping are returned through a generated property named `Key`.</span></span> <span data-ttu-id="40253-368">您包含`Key`屬性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性，以擷取群組的值。</span><span class="sxs-lookup"><span data-stu-id="40253-368">You include the `Key` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve the grouped values.</span></span> <span data-ttu-id="40253-369">您可以設定`Key`使用別名的屬性`As`關鍵字，但您不需要使用別名。</span><span class="sxs-lookup"><span data-stu-id="40253-369">You can set the `Key` property to an alias by using the `As` keyword, but you are not required to use an alias.</span></span> <span data-ttu-id="40253-370">例如，您可能會設定<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性至屬性，名為`Category`。</span><span class="sxs-lookup"><span data-stu-id="40253-370">For example, you might set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to a property named `Category`.</span></span> <span data-ttu-id="40253-371">您可以擷取的合併的值`Category`藉由設定屬性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性`new(Key As ProductCategory)`。</span><span class="sxs-lookup"><span data-stu-id="40253-371">You can retrieve the consolidated values from the `Category` property by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Key As ProductCategory)`.</span></span>  
  
 <span data-ttu-id="40253-372">您可以存取群組中的個別記錄包括`It`屬性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-372">You can access the individual records in a grouping by including the `It` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-373">`It`屬性包含記錄共用的分組屬性值的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-373">The `It` property contains a collection of records that share a value in the grouped property.</span></span> <span data-ttu-id="40253-374">您可以反覆`It`屬性來擷取個別的記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-374">You can iterate over the `It` property to retrieve the individual records.</span></span>  
  
 <span data-ttu-id="40253-375"><xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性通常用於彙總方法。</span><span class="sxs-lookup"><span data-stu-id="40253-375">The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods.</span></span> <span data-ttu-id="40253-376">您可以使用下列的彙總方法：</span><span class="sxs-lookup"><span data-stu-id="40253-376">You can use the following aggregate methods:</span></span>  
  
-   `Count()`  
  
-   <span data-ttu-id="40253-377">`Average(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-377">`Average(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-378">`Sum(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-378">`Sum(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-379">`Max(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-379">`Max(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-380">`Min(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-380">`Min(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-381">`Where(` *條件* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-381">`Where(` *condition* `)`</span></span>  
  
-   `Any()`  
  
-   <span data-ttu-id="40253-382">`All(` *條件* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-382">`All(` *condition* `)`</span></span>  
  
 <span data-ttu-id="40253-383">如需詳細資訊，請參閱[NIB: LinqDataSource Web 伺服器控制項概觀](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)和[How to： 群組和彙總的資料使用 LinqDataSource 控制項](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)。</span><span class="sxs-lookup"><span data-stu-id="40253-383">For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-384">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>群組名為屬性所傳回的資料控制項`Category`。</span><span class="sxs-lookup"><span data-stu-id="40253-384">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that groups the returned data by a property named `Category`.</span></span> <span data-ttu-id="40253-385">它會傳回共用的值，並計算平均價格分組資料錄。</span><span class="sxs-lookup"><span data-stu-id="40253-385">It returns the shared values and calculates the average price for the grouped records.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 <span data-ttu-id="40253-386">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>也就是控制設定群組的兩個資料行。</span><span class="sxs-lookup"><span data-stu-id="40253-386">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns.</span></span> <span data-ttu-id="40253-387">`Key`屬性參考的物件具有兩個屬性：`ProductCategory`和`Color`。</span><span class="sxs-lookup"><span data-stu-id="40253-387">The `Key` property references an object that has two properties, `ProductCategory` and `Color`.</span></span> <span data-ttu-id="40253-388">所表示之物件`It`已重新命名`Products`。</span><span class="sxs-lookup"><span data-stu-id="40253-388">The object represented by `It` is renamed `Products`.</span></span> <span data-ttu-id="40253-389">重新命名`Products`物件都包含在群組中，個別記錄的集合和每個執行個體包含從 Products 資料表的所有資料行。</span><span class="sxs-lookup"><span data-stu-id="40253-389">The renamed `Products` object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="40253-390">下列範例示範兩個<xref:System.Web.UI.WebControls.ListView>如何顯示資料的控制項<xref:System.Web.UI.WebControls.LinqDataSource>前一個範例中的控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-390">The following example shows two <xref:System.Web.UI.WebControls.ListView> controls for displaying the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example.</span></span> <span data-ttu-id="40253-391">一個<xref:System.Web.UI.WebControls.ListView>控制項會顯示群組的資料和其他<xref:System.Web.UI.WebControls.ListView>控制項會顯示個別的隸屬於該群組的產品名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-391">One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group.</span></span> <span data-ttu-id="40253-392">巢狀的資料繫結控制項的<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>屬性設定為`Products`，這是別名`It`物件。</span><span class="sxs-lookup"><span data-stu-id="40253-392">The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection GroupByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection GroupByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ GroupByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-393">取得用於建立 Group By 子句的參數集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-393">Gets the collection of parameters that are used to create the Group By clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-394">用來建立 Group By 子句的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-394">The parameters that are used to create the Group By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-395"><xref:System.Web.UI.WebControls.LinqDataSource>控制使用中的參數<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合，以建立在執行階段的 Group By 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-395">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to create the Group By clause at run time.</span></span> <span data-ttu-id="40253-396">通常您不使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>來分組資料的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-396">Typically you will not use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data.</span></span> <span data-ttu-id="40253-397">相反地，您可以使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-397">Instead, you can use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property.</span></span> <span data-ttu-id="40253-398">您使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合時，才在 Group By 子句中的值必須設定在執行階段，而且該值不是屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-398">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection only when a value in the Group By clause must be set at run time and that value is not a property name.</span></span> <span data-ttu-id="40253-399">例如，使用<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>來分組資料的集合，依據是否`LastName`資料記錄中的屬性值等於使用者所提供的值。</span><span class="sxs-lookup"><span data-stu-id="40253-399">For example, use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data based on whether the `LastName` property in the data records equals a value provided by the user.</span></span>  
  
 <span data-ttu-id="40253-400">如果想要依屬性來群組資料，而且該屬性並沒有在執行階段設定，您可以定義在群組屬性<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-400">If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property.</span></span> <span data-ttu-id="40253-401">例如，若要從資料庫資料表傳回值分組`LastName`，將<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>至"LastName"，不含任何參數。</span><span class="sxs-lookup"><span data-stu-id="40253-401">For example, to return values from a database table grouped by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> to "LastName" without any parameters.</span></span> <span data-ttu-id="40253-402">如果您想要動態群組資料的屬性，建立事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件和自訂<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>所需的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-402">If you want to dynamically group data by a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property as needed.</span></span>  
  
 <span data-ttu-id="40253-403">您無法指派屬性的名稱做為中的參數值<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-403">You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection.</span></span> <span data-ttu-id="40253-404">加入參數，以便<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合，當您想要加入至條件<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>必須在執行階段設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-404">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time.</span></span>  
  
 <span data-ttu-id="40253-405">在中設定值<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>集合，您指派給每個參數的名稱，然後再新增中的預留位置<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>名為參數的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-405">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter.</span></span> <span data-ttu-id="40253-406">在 Group By 子句中，名稱的前面上每個參數使用 @ 符號。</span><span class="sxs-lookup"><span data-stu-id="40253-406">In the Group By clause, preface each parameter name with the @ symbol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.Insert : System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="40253-407">要插入資料來源的資料列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-407">The row values to be inserted into the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40253-408">執行插入作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-408">Performs an insert operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40253-409">插入作業所影響的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-409">The number of rows affected by the insert operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-410">一般而言，您不必呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>從您的程式碼的方法。</span><span class="sxs-lookup"><span data-stu-id="40253-410">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code.</span></span> <span data-ttu-id="40253-411">資料繫結控制項將會自動呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>方法，當使用者採取動作來插入新的記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-411">The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record.</span></span> <span data-ttu-id="40253-412">明確地呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>方法，當您想要建立您自己的處理程序，用於插入資料。</span><span class="sxs-lookup"><span data-stu-id="40253-412">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-413">下列範例會示範如何以程式設計方式插入新的記錄資料來源中，使用者按一下按鈕後。</span><span class="sxs-lookup"><span data-stu-id="40253-413">The following example shows how to programmatically insert a new record in the data source after the user clicks a button.</span></span> <span data-ttu-id="40253-414">在程式碼通過<xref:System.Collections.Specialized.ListDictionary>物件，其中包含預設值至<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="40253-414">The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains default values to the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx.vb#1)]  
  
 <span data-ttu-id="40253-415">下列範例顯示先前的範例標記。</span><span class="sxs-lookup"><span data-stu-id="40253-415">The following example shows the markup for the previous example.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Inserted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-416">在插入作業完成時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-416">Occurs when an insert operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-417">處理<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件攔截任何例外狀況的插入作業，或在插入作業完成之後，檢查的值。</span><span class="sxs-lookup"><span data-stu-id="40253-417">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</span></span> <span data-ttu-id="40253-418">您可以擷取到的新值<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>傳遞至事件處理常式的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-418">You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span> <span data-ttu-id="40253-419">例如，您可以使用<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>擷取新的資料記錄的資料庫所產生的識別屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-419">For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-420">下列範例示範如何建立事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件，以檢查例外狀況，並擷取新記錄的 identity 屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-420">The following example shows how to create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event that checks for exceptions and retrieves the identity property for the new record.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of LinqDataSourceInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^&gt; ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " Usage="member this.Inserting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-421">在插入作業之前發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-421">Occurs before an insert operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-422">處理<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>來驗證物件要插入、 檢查來自資料類別，以將值插入作業之前，變更或取消插入作業的資料驗證錯誤的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-422">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</span></span> <span data-ttu-id="40253-423"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>物件傳遞至事件處理常式，此事件報告功能包含要插入資料來源中的新物件。</span><span class="sxs-lookup"><span data-stu-id="40253-423">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source.</span></span>  
  
 <span data-ttu-id="40253-424">如果在插入作業期間發生驗證錯誤<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>物件包含的資料類別所擲回驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-424">If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class.</span></span> <span data-ttu-id="40253-425">如果要插入的值不符合資料類別中屬性的型別或是它未通過自訂的驗證檢查，就會發生驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="40253-425">A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</span></span> <span data-ttu-id="40253-426">中的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，您可以擷取驗證例外狀況並採取適當的動作。</span><span class="sxs-lookup"><span data-stu-id="40253-426">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action.</span></span>  
  
 <span data-ttu-id="40253-427">如果事件處理常式中擲回例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，您必須處理該事件處理常式中的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-427">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="40253-428">例外狀況不會傳遞至事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>事件 (透過<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>物件)。</span><span class="sxs-lookup"><span data-stu-id="40253-428">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="40253-429"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性包含之後就會擲回的例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-429">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-430">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>修改資料之前插入作業的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-430">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that modifies data before the insert operation.</span></span> <span data-ttu-id="40253-431">從物件<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>屬性會轉型為類型，名為`Product`。</span><span class="sxs-lookup"><span data-stu-id="40253-431">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="40253-432">`DateModified`屬性`Product`物件設定為目前的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="40253-432">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="40253-433">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>擷取驗證例外狀況的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-433">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that retrieves validation exceptions.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 <span data-ttu-id="40253-434">先前的範例會擷取驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-434">The previous example retrieves validation exceptions.</span></span> <span data-ttu-id="40253-435">如果值不符合屬性類型，可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-435">An exception might be thrown if a value does not match the type of the property.</span></span> <span data-ttu-id="40253-436">它可能也會擲回從自訂的檢查，如下列範例中的一個。</span><span class="sxs-lookup"><span data-stu-id="40253-436">It might also be thrown from a customized check such as the one in the following example.</span></span> <span data-ttu-id="40253-437">`OnAgeChanging`方法檢查數目`Age`屬性不可以是負數。</span><span class="sxs-lookup"><span data-stu-id="40253-437">The `OnAgeChanging` method checks that the number for the `Age` property is not negative.</span></span>  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-438">取得插入作業期間所使用的參數集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-438">Gets the collection of parameters that are used during an insert operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-439">插入作業期間所使用的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-439">The parameters that are used during an insert operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-440">通常所需的插入作業的值會傳遞至<xref:System.Web.UI.WebControls.LinqDataSource>資料繫結控制項的控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-440">Typically the values that are needed for an insert operation are passed to the <xref:System.Web.UI.WebControls.LinqDataSource> control by the data-bound control.</span></span> <span data-ttu-id="40253-441">您指定當您想要提供預設值時，插入參數值或定義是否將空值轉換為`null`。</span><span class="sxs-lookup"><span data-stu-id="40253-441">You specify insert parameters when you want to provide a default value or define whether to convert empty values to `null`.</span></span> <span data-ttu-id="40253-442">您沒有提供參數的每個值會被插入，僅適用於使用者未提供值時，必須處理的值。</span><span class="sxs-lookup"><span data-stu-id="40253-442">You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</span></span>  
  
 <span data-ttu-id="40253-443">您在中提供的值<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合只用於資料來源中所定義，但未繫結資料控制項欄位。</span><span class="sxs-lookup"><span data-stu-id="40253-443">The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control.</span></span> <span data-ttu-id="40253-444">例如，假設資料庫資料表資料行名稱、 地址和郵遞區號，名為但<xref:System.Web.UI.WebControls.ListView>繫結至資料表的控制項繫結名稱和地址欄位。</span><span class="sxs-lookup"><span data-stu-id="40253-444">For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields.</span></span> <span data-ttu-id="40253-445">中的值<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合將只能用於 [郵遞區號] 欄位。</span><span class="sxs-lookup"><span data-stu-id="40253-445">The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field.</span></span> <span data-ttu-id="40253-446">它們不使用名稱和地址欄位。</span><span class="sxs-lookup"><span data-stu-id="40253-446">They will not be used for the Name and Address field.</span></span> <span data-ttu-id="40253-447">即使未輸入任何值，這些欄位也是如此。</span><span class="sxs-lookup"><span data-stu-id="40253-447">This is true even if no value is entered for those fields.</span></span> <span data-ttu-id="40253-448">如果資料中的所有欄位的資料繫結控制項的自動產生欄位來源，從任何值<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>將用於集合。</span><span class="sxs-lookup"><span data-stu-id="40253-448">If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-449">下列範例所示<xref:System.Web.UI.WebControls.LinqDataSource>提供中的預設值的參數控制<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-449">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with a parameter that provides a default value in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.</span></span> <span data-ttu-id="40253-450">如果使用者未提供的值`Category`屬性，預設值所提供的參數儲存在資料庫中。</span><span class="sxs-lookup"><span data-stu-id="40253-450">If the user does not provide a value for the `Category` property, the default value that is provided by the parameter is saved in the database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default9.aspx#9)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default9.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="linqDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="40253-451">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-451">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40253-452">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-452">Initializes the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="linqDataSource.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="40253-453">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-453">An <see cref="T:System.EventArgs" /> object that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40253-454">引發 <see cref="E:System.Web.UI.Control.Unload" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-454">Raises the <see cref="E:System.Web.UI.Control.Unload" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-455">取得或設定值，這個值指定用於對擷取之資料進行排序的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-455">Gets or sets a value that specifies which fields are used for ordering the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-456">字串，用來建立 Order By 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-456">A string that is used to create the Order By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-457">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性來指定從傳回的資料，用來排序的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-457">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify which properties from the returned data to use for sorting.</span></span> <span data-ttu-id="40253-458">排序資料的屬性必須存在於原始資料來源，但是並沒有包含在<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-458">The property for sorting the data must exist in the original data source, but it does not have to be included in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-459">您可以加入一個空格和`Ascending`， `ASC`， `Descending`，或`DESC`中的屬性<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>字串來指定如何傳回已排序的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-459">You can add a space and `Ascending`, `ASC`, `Descending`, or `DESC` to a property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> string in order to specify how the ordered data is returned.</span></span>  
  
 <span data-ttu-id="40253-460">您可以提供多個屬性在<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>使用逗號分隔每一個屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-460">You can provide more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property by separating each property by using a comma.</span></span> <span data-ttu-id="40253-461">例如，若要依屬性名為`LastName`和`FirstName`，將<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>"LastName FirstName"的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-461">For example, to order by properties named `LastName` and `FirstName`, set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to "LastName, FirstName".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40253-462">當您使用<xref:System.Web.UI.WebControls.LinqDataSource>用來控制[!INCLUDE[ss2k](~/includes/ss2k-md.md)]或[!INCLUDE[ssEW](~/includes/ssew-md.md)]和<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性設定為`true`，您必須提供值，以在<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-462">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="40253-463">根據預設，<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-463">By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`.</span></span> <span data-ttu-id="40253-464">如果您指派值給<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性，您必須也包含所有 identity 資料行中傳回查詢中的屬性清單。</span><span class="sxs-lookup"><span data-stu-id="40253-464">If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.</span></span>  
  
 <span data-ttu-id="40253-465">如果<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>屬性設定為`true`，資料繫結控制項可以將排序運算式，以傳遞<xref:System.Web.UI.WebControls.LinqDataSource>控制項在執行階段。</span><span class="sxs-lookup"><span data-stu-id="40253-465">If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, a data-bound control can pass a sort expression to the <xref:System.Web.UI.WebControls.LinqDataSource> control at run time.</span></span> <span data-ttu-id="40253-466"><xref:System.Web.UI.WebControls.LinqDataSource>控制項將套用從資料繫結控制項的排序運算式之後套用<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-466">The <xref:System.Web.UI.WebControls.LinqDataSource> control will apply the sort expression from the data-bound control after it applies the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="40253-467">因此，資料會根據排序運算式傳回的資料繫結控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-467">Therefore, the data is returned according to the sort expression from the data-bound control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-468">下列範例會傳回資料，以根據值的反向字母順序`Category`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-468">The following example returns data in reverse alphabetical order based on values in the `Category` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default4.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-469">取得用於建立 Order By 子句的參數集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-469">Gets the collection of parameters that are used to create the Order By clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-470">用於建立 Order By 子句的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-470">The parameters that are used for creating the Order By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-471"><xref:System.Web.UI.WebControls.LinqDataSource>控制使用中的參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合，以在執行階段建立 Order By 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-471">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection to create the Order By clause at run time.</span></span> <span data-ttu-id="40253-472">通常您會設定<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>屬性`true`當您將參數加入至<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-472">Typically you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true` when you add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="40253-473">當<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>屬性設定為`true`，在每個參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合加入 Order By 子句中指定的順序<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-473">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection is added to the Order By clause in the sequence that they are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="40253-474">當<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>屬性是`true`，不需要參數，所以它們會依序套用和不相符的預留位置來命名。</span><span class="sxs-lookup"><span data-stu-id="40253-474">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is `true`, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</span></span>  
  
 <span data-ttu-id="40253-475">如果您不需要在 Order By 子句中的執行階段設定值，您不必使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-475">If you do not have to set a value at run time in the Order By clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="40253-476">您可以定義要用於排序中的資料欄位<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-476">You can define the fields to use for ordering the data in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="40253-477">例如，若要從資料庫資料表傳回值依`LastName`，將<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>至"LastName"，不含任何參數。</span><span class="sxs-lookup"><span data-stu-id="40253-477">For example, to return values from a database table ordered by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> to "LastName" without any parameters.</span></span>  
  
 <span data-ttu-id="40253-478">您可以在 設定參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合，而且符合中預留位置的參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>屬性，但是這種方法具有有限的應用程式。</span><span class="sxs-lookup"><span data-stu-id="40253-478">You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application.</span></span> <span data-ttu-id="40253-479">當您使用這種方法中的參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合無法表示資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-479">When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name.</span></span> <span data-ttu-id="40253-480">您可以設定參數的值，然後進行比較值屬性中的值。</span><span class="sxs-lookup"><span data-stu-id="40253-480">You can set a parameter to a value and then compare that value to values in a property.</span></span> <span data-ttu-id="40253-481">例如，您可以排序依據屬性中的值是否小於參數代表的執行階段值的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-481">For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-482">下列範例顯示將 <xref:System.Web.UI.WebControls.LinqDataSource> 屬性設定為 <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> 的 `true` 控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-482">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property set to `true`.</span></span> <span data-ttu-id="40253-483">參數包含在<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>集合來排序屬性為基礎的資料名稱的使用者會從選取<xref:System.Web.UI.WebControls.DropDownList>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-483">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsBy">
      <MemberSignature Language="C#" Value="public string OrderGroupsBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderGroupsBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderGroupsBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderGroupsBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-484">取得或設定用於排序分組資料的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-484">Gets or sets the fields that are used for ordering grouped data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-485">字串，用來建立的順序群組 By 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-485">A string that is used to create the Order Groups By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-486">您使用<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>屬性來指定如何排序資料的群組。</span><span class="sxs-lookup"><span data-stu-id="40253-486">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify how the groups of data are sorted.</span></span> <span data-ttu-id="40253-487">例如，您可以依分組`CategoryID`屬性，然後排序每個類別目錄識別碼分組的平均`Price`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-487">For example, you can group by the `CategoryID` property and then sort each category ID group by the average of the `Price` property.</span></span>  
  
 <span data-ttu-id="40253-488">您可以設定<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>屬性只有在已分組的資料時。</span><span class="sxs-lookup"><span data-stu-id="40253-488">You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data.</span></span> <span data-ttu-id="40253-489">如果您設定<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>屬性未設定<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>屬性，<xref:System.Web.UI.WebControls.LinqDataSource>控制項會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-489">If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception.</span></span>  
  
 <span data-ttu-id="40253-490">用來排序資料的屬性必須為此屬性，用來分組資料或在群組資料的彙總函式的結果。</span><span class="sxs-lookup"><span data-stu-id="40253-490">The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</span></span> <span data-ttu-id="40253-491">若要指定資料的排序方式，加入一個空格和字串"Ascending"、"ASC 」、 「 遞減 」 或"DESC"中的屬性名稱<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>字串。</span><span class="sxs-lookup"><span data-stu-id="40253-491">To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string.</span></span>  
  
 <span data-ttu-id="40253-492">您可以指定多個屬性在<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-492">You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span> <span data-ttu-id="40253-493">使用逗號分隔每一個屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-493">Separate each property by using a comma.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-494">下列範例顯示如何群組資料，使用兩個屬性，以及如何使用其中一個屬性來排序群組的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-494">The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties.</span></span> <span data-ttu-id="40253-495">從名為資料表資料`Products`使用名為的屬性分組`CategoryID`和`Discontinued`。</span><span class="sxs-lookup"><span data-stu-id="40253-495">The data from a table named `Products` is grouped by using properties named `CategoryID` and `Discontinued`.</span></span> <span data-ttu-id="40253-496">群組的資料依照`CategoryID`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-496">The grouped data is sorted by the `CategoryID` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="40253-497">下列範例示範如何使用屬性，來群組資料以及如何排序會根據彙總函式的結果。</span><span class="sxs-lookup"><span data-stu-id="40253-497">The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function.</span></span> <span data-ttu-id="40253-498">從資料`Products`資料表會依使用`CategoryID`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-498">The data from the `Products` table is grouped by using the `CategoryID` property.</span></span> <span data-ttu-id="40253-499">排序依據的平均`UnitPrice`每個群組內的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-499">It is sorted based on the average of the `UnitPrice` property within each group.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderGroupsByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderGroupsByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-500">取得用來建立 Order Groups By 子句的參數集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-500">Gets the collection of parameters that are used to create the Order Groups By clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-501">用來建立的順序群組 By 子句的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-501">The parameters that are used to create the Order Groups By clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-502"><xref:System.Web.UI.WebControls.LinqDataSource>控制使用中的參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>集合，以在執行階段建立的順序群組 By 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-502">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection to create the Order Groups By clause at run time.</span></span>  
  
 <span data-ttu-id="40253-503">您新增值以<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>只有當您必須在群組 By 子句中的執行階段設定值的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-503">You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause.</span></span> <span data-ttu-id="40253-504">您可以定義用來排序資料所使用的欄位<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-504">You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span>  
  
 <span data-ttu-id="40253-505">您可以在 設定參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>集合，而且符合中預留位置的參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-505">You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span> <span data-ttu-id="40253-506">不過，當您使用這種方法中的參數<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>集合無法表示資料行名稱，則還必須有值。</span><span class="sxs-lookup"><span data-stu-id="40253-506">However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values.</span></span> <span data-ttu-id="40253-507">您可以設定參數的值，然後進行比較的屬性值。</span><span class="sxs-lookup"><span data-stu-id="40253-507">You can set a parameter to a value and then compare that value to a property.</span></span> <span data-ttu-id="40253-508">例如，您可以排序依據屬性中的值是否小於參數代表的執行階段值的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-508">For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Select : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-509">取得或設定屬性以及擷取之資料中包含的計算值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-509">Gets or sets the properties and calculated values that are included in the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-510">用於建立 Select 子句的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-510">A string that is used to create the Select clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-511">如果您未設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性，<xref:System.Web.UI.WebControls.LinqDataSource>控制從資料物件擷取所有的屬性 （資料行）。</span><span class="sxs-lookup"><span data-stu-id="40253-511">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object.</span></span> <span data-ttu-id="40253-512">您使用<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性從物件擷取屬性的子集，或擷取資料時計算新的值。</span><span class="sxs-lookup"><span data-stu-id="40253-512">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</span></span>  
  
 <span data-ttu-id="40253-513">您指定的屬性來擷取設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>至您想要傳回的資料中包含的屬性名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-513">You specify which properties to retrieve by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the names of the properties that you want to include in the returned data.</span></span>  
  
 <span data-ttu-id="40253-514">如果您從資料物件擷取屬性的子集<xref:System.Web.UI.WebControls.LinqDataSource>控制項會以動態方式建立僅包含屬性中所指定的類別<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-514">If you retrieve a subset of properties from the data object, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates a class that contains only the properties that you specify in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-515">如果您要計算不是屬性中的資料物件的屬性，也會動態建立類別。</span><span class="sxs-lookup"><span data-stu-id="40253-515">A class is also created dynamically if you calculate properties that are not properties in the data object.</span></span> <span data-ttu-id="40253-516">在這些情況下，從查詢傳回的物件不是類別中所指定的執行個體<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-516">In these cases, the object returned from the query is not an instance of the class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span> <span data-ttu-id="40253-517">相反地，您必須使用`new`方法中的<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性，指出新的類別從查詢傳回。</span><span class="sxs-lookup"><span data-stu-id="40253-517">Instead, you must use the `new` method in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to indicate that a new class is returned from the query.</span></span> <span data-ttu-id="40253-518">例如，若要只傳回`FirstName`和`LastName`屬性從物件，包含多個這些屬性，設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性`new(FirstName, LastName)`。</span><span class="sxs-lookup"><span data-stu-id="40253-518">For example, to return only the `FirstName` and `LastName` properties from an object that contains more than these properties, set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(FirstName, LastName)`.</span></span> <span data-ttu-id="40253-519"><xref:System.Web.UI.WebControls.LinqDataSource>控制項將以動態方式建立新的類別中所指定`new`方法。</span><span class="sxs-lookup"><span data-stu-id="40253-519">The <xref:System.Web.UI.WebControls.LinqDataSource> control will dynamically create the new class that you specified in the `new` method.</span></span>  
  
 <span data-ttu-id="40253-520">您可以使用`As`關鍵字來指派別名給選取的值。</span><span class="sxs-lookup"><span data-stu-id="40253-520">You can use the `As` keyword to assign an alias to a selected value.</span></span> <span data-ttu-id="40253-521">如果您指定別名，您必須包含中的別名屬性`new`方法。</span><span class="sxs-lookup"><span data-stu-id="40253-521">If you assign an alias, you must include the aliased properties in the `new` method.</span></span> <span data-ttu-id="40253-522">將繫結至結果的任何資料繫結控制項<xref:System.Web.UI.WebControls.LinqDataSource>控制項必須別名所參考的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-522">Any data-bound control that binds to the results from the <xref:System.Web.UI.WebControls.LinqDataSource> control must refer to the property by the alias.</span></span> <span data-ttu-id="40253-523">例如，如果您設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`，資料繫結控制項可以存取兩個屬性：`SalesRegion`和`RevenueThousands`。</span><span class="sxs-lookup"><span data-stu-id="40253-523">For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, the data-bound control can access two properties, `SalesRegion` and `RevenueThousands`.</span></span>  
  
 <span data-ttu-id="40253-524">您使用`new`函式在<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>下表列出根據之條件的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-524">You use the `new` function in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property according to the conditions listed in the following table.</span></span>  
  
|<span data-ttu-id="40253-525">選用版</span><span class="sxs-lookup"><span data-stu-id="40253-525">Select</span></span>|<span data-ttu-id="40253-526">使用新的</span><span class="sxs-lookup"><span data-stu-id="40253-526">Use of new</span></span>|<span data-ttu-id="40253-527">範例</span><span class="sxs-lookup"><span data-stu-id="40253-527">Example</span></span>|  
|------------|----------------|-------------|  
|<span data-ttu-id="40253-528">單一屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-528">Single property.</span></span>|<span data-ttu-id="40253-529">`new` 不需要。</span><span class="sxs-lookup"><span data-stu-id="40253-529">`new` not needed.</span></span>|`Select="Category"`|  
|<span data-ttu-id="40253-530">多個屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-530">Multiple properties.</span></span>|<span data-ttu-id="40253-531">`new` 所需。</span><span class="sxs-lookup"><span data-stu-id="40253-531">`new` needed.</span></span>|`Select="new(Cateogry, Name)"`|  
|<span data-ttu-id="40253-532">單一或多個有別名的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-532">Single or multiple properties that have an alias.</span></span>|<span data-ttu-id="40253-533">`new` 所需。</span><span class="sxs-lookup"><span data-stu-id="40253-533">`new` needed.</span></span>|`Select="new(Category As CategoryGroup)"`|  
  
 <span data-ttu-id="40253-534">如果您想要啟用自動的資料修改，但不是想顯示從資料物件的所有屬性，就不要設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-534">If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-535">請改用管理透過資料繫結控制項的顯示。</span><span class="sxs-lookup"><span data-stu-id="40253-535">Instead, manage the display through the data-bound control.</span></span> <span data-ttu-id="40253-536">當您使用<xref:System.Web.UI.WebControls.DetailsView>控制項或<xref:System.Web.UI.WebControls.GridView>控制項，您也必須設定<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>或<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>屬性`false`。</span><span class="sxs-lookup"><span data-stu-id="40253-536">When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false`.</span></span> <span data-ttu-id="40253-537">不會顯示在資料繫結控制項的任何值會儲存在檢視狀態。</span><span class="sxs-lookup"><span data-stu-id="40253-537">Any values that are not displayed in the data-bound control are stored in view state.</span></span> <span data-ttu-id="40253-538">它們會原封不動地傳遞至資料來源時執行資料更新。</span><span class="sxs-lookup"><span data-stu-id="40253-538">They are passed unchanged to the data source when the data update is performed.</span></span>  
  
 <span data-ttu-id="40253-539">分組資料的查詢中，您可以包含在彙總方法<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-539">When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-540">您可以使用下列的彙總方法：</span><span class="sxs-lookup"><span data-stu-id="40253-540">You can use the following aggregate methods:</span></span>  
  
-   `Count()`  
  
-   <span data-ttu-id="40253-541">`Average(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-541">`Average(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-542">`Sum(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-542">`Sum(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-543">`Max(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-543">`Max(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-544">`Min(` *資料行* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-544">`Min(` *column* `)`</span></span>  
  
-   <span data-ttu-id="40253-545">`Where(` *條件* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-545">`Where(` *condition* `)`</span></span>  
  
-   `Any()`  
  
-   <span data-ttu-id="40253-546">`All(` *條件* `)`</span><span class="sxs-lookup"><span data-stu-id="40253-546">`All(` *condition* `)`</span></span>  
  
 <span data-ttu-id="40253-547">如需詳細資訊，請參閱[NIB: LinqDataSource Web 伺服器控制項概觀](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)和[How to： 群組和彙總的資料使用 LinqDataSource 控制項](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)。</span><span class="sxs-lookup"><span data-stu-id="40253-547">For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).</span></span>  
  
 <span data-ttu-id="40253-548">分組資料，您可以包含`Key`和`It`，其中中動態建立屬性，<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-548">When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-549">`Key`屬性表示用來將資料分組，一個或多個屬性值。</span><span class="sxs-lookup"><span data-stu-id="40253-549">The `Key` property refers to the values in the property or properties that were used to group the data.</span></span> <span data-ttu-id="40253-550">例如，如果您依屬性分組`Category`、`Key`屬性會包含在每個唯一值`Category`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-550">For example, if you group by a property named `Category`, the `Key` property will contain each unique value in the `Category` property.</span></span> <span data-ttu-id="40253-551">`It`屬性參考到資料群組中個別記錄的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-551">The `It` property refers to a collection of individual records in a grouping of data.</span></span> <span data-ttu-id="40253-552">您可以反覆`It`屬性，以擷取已在群組作業中彙總的個別記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-552">You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation.</span></span> <span data-ttu-id="40253-553">例如，如果您依屬性分組`Category`、`It`屬性包含共用共通的值中的所有個別記錄`Category`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-553">For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.</span></span>  
  
 <span data-ttu-id="40253-554">如果您包含`It`關鍵字<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性將資料分組時，您必須指派別名`It`關鍵字。</span><span class="sxs-lookup"><span data-stu-id="40253-554">If you include the `It` keyword in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property when you group data, you must assign an alias to the `It` keyword.</span></span> <span data-ttu-id="40253-555"><xref:System.Web.UI.WebControls.LinqDataSource>控制項將會擲回例外狀況，如果`It`沒有別名。</span><span class="sxs-lookup"><span data-stu-id="40253-555">The <xref:System.Web.UI.WebControls.LinqDataSource> control will throw an exception if `It` does not have an alias.</span></span> <span data-ttu-id="40253-556">您可以指派別名`Key`關鍵字，但這不是必要。</span><span class="sxs-lookup"><span data-stu-id="40253-556">You can assign an alias to the `Key` keyword, but this is not required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-557">下列範例示範如何設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>資料物件中的屬性子集的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-557">The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties in the data object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default10.aspx#10)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default10.aspx#10)]  
  
 <span data-ttu-id="40253-558">下列範例顯示如何擷取已用來群組資料的屬性中的值，以及擷取群組的記錄的平均值。</span><span class="sxs-lookup"><span data-stu-id="40253-558">The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records.</span></span> <span data-ttu-id="40253-559">`Key`關鍵字包含用於分組資料的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-559">The `Key` keyword contains the property that has been used for grouping data.</span></span> <span data-ttu-id="40253-560">在此範例中，`Key`將包含共用的值從`ProductCategory`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-560">In this example, `Key` will contain the shared values from the `ProductCategory` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Selected : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-561">在資料擷取作業完成時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-561">Occurs when a data retrieval operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-562">處理<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件來攔截任何例外狀況，從資料擷取作業或擷取作業完成之後，檢查資料物件。</span><span class="sxs-lookup"><span data-stu-id="40253-562">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</span></span> <span data-ttu-id="40253-563">物件是可從<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>傳遞至事件處理常式的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-563">The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of LinqDataSourceSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^&gt; ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " Usage="member this.Selecting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-564">在資料擷取作業之前發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-564">Occurs before a data-retrieval operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-565">處理<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件才能執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="40253-565">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event in order to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="40253-566">修改參數來擷取資料。</span><span class="sxs-lookup"><span data-stu-id="40253-566">Modify parameters for data retrieval.</span></span>  
  
-   <span data-ttu-id="40253-567">以程式設計方式產生查詢。</span><span class="sxs-lookup"><span data-stu-id="40253-567">Generate the query programmatically.</span></span>  
  
-   <span data-ttu-id="40253-568">修改用於排序或分頁的值。</span><span class="sxs-lookup"><span data-stu-id="40253-568">Modify the values for sorting or paging.</span></span>  
  
-   <span data-ttu-id="40253-569">執行自訂排序或分頁。</span><span class="sxs-lookup"><span data-stu-id="40253-569">Perform custom sorting or paging.</span></span>  
  
-   <span data-ttu-id="40253-570">取消資料擷取作業。</span><span class="sxs-lookup"><span data-stu-id="40253-570">Cancel the data-retrieval operation.</span></span>  
  
 <span data-ttu-id="40253-571"><xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>這個事件包含資料擷取作業的參數傳遞至事件處理常式的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-571">The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</span></span> <span data-ttu-id="40253-572">您可以修改中的參數<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件處理常式之前執行的查詢，或您可以建立新的結果集，並將其指派給<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-572">You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
 <span data-ttu-id="40253-573">您實作自訂排序或分頁處理常式中，針對此事件可能會受到繫結至控制項的能力<xref:System.Web.UI.WebControls.LinqDataSource>。</span><span class="sxs-lookup"><span data-stu-id="40253-573">Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>.</span></span> <span data-ttu-id="40253-574">例如，當資料行標頭的<xref:System.Web.UI.WebControls.GridView>按一下控制項時，控制項執行自動排序這可能會覆寫任何排序您建立在事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="40253-574">For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</span></span>  
  
 <span data-ttu-id="40253-575">如果事件處理常式中擲回例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件，您必須處理該事件處理常式中的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-575">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="40253-576">例外狀況不會傳遞至事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selected>事件 (透過<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>物件)。</span><span class="sxs-lookup"><span data-stu-id="40253-576">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="40253-577"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性包含之後就會擲回的例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-577">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-578">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-578">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="40253-579">此處理常式會建立查詢來擷取 Web 網頁中的字串值的陣列中的值。</span><span class="sxs-lookup"><span data-stu-id="40253-579">The handler creates a query that retrieves values from an array of string values in the Web page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 <span data-ttu-id="40253-580">下列範例示範如何指派<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>屬性來從表示預存程序的方法傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-580">The following example shows how to assign the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to the object that is returned from a method that represents a stored procedure.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Selecting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceSelectEventArgs)  
    Dim exampleContext As ExampleDataContext = New ExampleDataContext()  
    e.Result = exampleContext.GetRegisteredCustomers()  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Selecting(object sender,   
        LinqDataSourceSelectEventArgs e)  
{  
    ExampleDataContext exampleContext = new ExampleDataContext();  
    e.Result = exampleContext.GetRegisteredCustomers();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-581">取得擷取資料作業期間所使用的參數集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-581">Gets the collection of parameters that are used during a data-retrieval operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-582">用於建立 Select 子句的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-582">The parameters that are used to create the Select clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-583"><xref:System.Web.UI.WebControls.LinqDataSource>控制使用中的參數<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合，以在執行階段建立 Select 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-583">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time.</span></span> <span data-ttu-id="40253-584">加入參數，以便<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合，當您想要在 Select 子句中使用執行階段值。</span><span class="sxs-lookup"><span data-stu-id="40253-584">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause.</span></span> <span data-ttu-id="40253-585">例如，您可以在其中加入參數來<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>來代表使用者的設定檔中的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="40253-585">For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile.</span></span> <span data-ttu-id="40253-586">您接著可以來計算新值從資料來源使用該屬性和值。</span><span class="sxs-lookup"><span data-stu-id="40253-586">You can then use that property and a value from the data source to calculate a new value.</span></span>  
  
 <span data-ttu-id="40253-587">如果您不需要在 Select 子句中的執行階段設定值，您不必使用<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-587">If you do not have to set a value at run time in the Select clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="40253-588">您可以定義要在擷取的屬性<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-588">You can define the properties to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="40253-589">例如，若要傳回`FirstName`和`LastName`值從資料庫資料表時，設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>"FirstName，LastName"以不含任何參數。</span><span class="sxs-lookup"><span data-stu-id="40253-589">For example, to return the `FirstName` and `LastName` values from a database table, set <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> to "FirstName, LastName" without any parameters.</span></span>  
  
 <span data-ttu-id="40253-590">若要設定值，在<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合，您加入內某個預留位置<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性，為具名參數。</span><span class="sxs-lookup"><span data-stu-id="40253-590">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter.</span></span> <span data-ttu-id="40253-591">在 Select 子句中，名稱的前面上每個參數使用 @ 符號。</span><span class="sxs-lookup"><span data-stu-id="40253-591">In the Select clause, preface each parameter name with the @ symbol.</span></span>  
  
 <span data-ttu-id="40253-592">您無法使用中的參數<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>來代表屬性名稱的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-592">You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name.</span></span> <span data-ttu-id="40253-593">若要動態方式設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>屬性名稱的屬性，建立事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件和自訂<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>所需的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-593">To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-594">下列範例會示範如何使用使用者提供的值來計算值中傳回的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-594">The following example shows how to use a user-supplied value to calculate a value in the returned data.</span></span> <span data-ttu-id="40253-595">使用者可以輸入值，在文字方塊中的製造天數表示。</span><span class="sxs-lookup"><span data-stu-id="40253-595">The user can enter a value in the text box that represents the number of manufacturing days.</span></span> <span data-ttu-id="40253-596">該值會除以代表數天來製造產品的資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="40253-596">That value is divided by a value from a database that represents the number of days to manufacture a product.</span></span> <span data-ttu-id="40253-597">傳回的值，表示在指定天數期間可以製造的產品。</span><span class="sxs-lookup"><span data-stu-id="40253-597">The returned value indicates how many products can be manufactured during the specified number of days.</span></span> <span data-ttu-id="40253-598">使用者的輸入透過選取命令中包含<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-598">The user's input is included in the Select command through the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StoreOriginalValuesInViewState : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-599">取得或設定值，這個值表示資料來源的資料是否應在檢視狀態中進行儲存，以確定在更新或刪除資料前，資料未由另一個處理序變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-599">Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-600">如果在檢視狀態中儲存值則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-600">
              <see langword="true" /> if the values will be stored in view state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="40253-601">預設值是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-601">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-602">根據預設，當更新和刪除作業已啟用，<xref:System.Web.UI.WebControls.LinqDataSource>控制會儲存原始值的所有資料錄檢視狀態中。</span><span class="sxs-lookup"><span data-stu-id="40253-602">By default, when update and delete operations have been enabled, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values for all the records in view state.</span></span> <span data-ttu-id="40253-603"><xref:System.Web.UI.WebControls.LinqDataSource>控制項儲存的所有主索引鍵的值和所有屬性未都標記為`UpdateCheck.Never`中`Column`屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-603">The <xref:System.Web.UI.WebControls.LinqDataSource> control stores values for all primary keys and all properties not marked with `UpdateCheck.Never` in the `Column` attribute.</span></span> <span data-ttu-id="40253-604">您設定`UpdateCheck`屬性`Column`屬性[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="40253-604">You set the `UpdateCheck` property of the `Column` attribute in the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span>  
  
 <span data-ttu-id="40253-605">LINQ to SQL 更新或刪除資料之前，它會檢查在檢視狀態資料來源中的目前值的值。</span><span class="sxs-lookup"><span data-stu-id="40253-605">Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</span></span> <span data-ttu-id="40253-606">如果值不相符，已變更的資料來源記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-606">If the values do not match, the data source record has changed.</span></span> <span data-ttu-id="40253-607">在此情況下，LINQ to SQL 會擲回例外狀況並不繼續更新或刪除作業。</span><span class="sxs-lookup"><span data-stu-id="40253-607">In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</span></span> <span data-ttu-id="40253-608">如需有關 LINQ to SQL 的詳細資訊，請參閱[LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)。</span><span class="sxs-lookup"><span data-stu-id="40253-608">For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).</span></span>  
  
 <span data-ttu-id="40253-609">在檢視中儲存原始值狀態可能會造成頁面大小變得過大，而且可以公開給惡意使用者的機密資料。</span><span class="sxs-lookup"><span data-stu-id="40253-609">Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</span></span> <span data-ttu-id="40253-610">您可以停用儲存檢視狀態中的值，藉由設定<xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>屬性`false`。</span><span class="sxs-lookup"><span data-stu-id="40253-610">You can disable storing values in view state by setting the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`.</span></span> <span data-ttu-id="40253-611">如果您這樣做，您必須提供自己的方法來確保資料未變更。</span><span class="sxs-lookup"><span data-stu-id="40253-611">If you do this, you must provide your own way to make sure that the data has not changed.</span></span> <span data-ttu-id="40253-612">如果您設定<xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>屬性`false`，原始的值不會保存在資料繫結控制項的檢視狀態。</span><span class="sxs-lookup"><span data-stu-id="40253-612">If you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`, the original values are not persisted in view state for the data-bound control.</span></span> <span data-ttu-id="40253-613">在此情況下，LINQ to SQL 無法驗證資料的完整性。</span><span class="sxs-lookup"><span data-stu-id="40253-613">In that case, LINQ to SQL cannot verify the integrity of the data.</span></span> <span data-ttu-id="40253-614">LINQ to SQL 將會擲回例外狀況，指出資料衝突，即使資料來源中的資料實際變更。</span><span class="sxs-lookup"><span data-stu-id="40253-614">LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</span></span>  
  
 <span data-ttu-id="40253-615">如果基礎資料來源包含時間戳記欄位會自動更新更新期間，您可以儲存只有在檢視狀態中的值。</span><span class="sxs-lookup"><span data-stu-id="40253-615">If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</span></span> <span data-ttu-id="40253-616">在此情況下，實體類別中的時間戳記屬性設定為`IsVersion=true`和所有屬性都會都設為`UpdateCheck.Never`。</span><span class="sxs-lookup"><span data-stu-id="40253-616">In that case, the timestamp property in the entity class is set to `IsVersion=true` and all the properties are set to `UpdateCheck.Never`.</span></span> <span data-ttu-id="40253-617">因為每次在該記錄中資料的變更時，時間戳記欄位會自動更新資料庫，LINQ to SQL 決定從該值時，資料已經變更。</span><span class="sxs-lookup"><span data-stu-id="40253-617">Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</span></span> <span data-ttu-id="40253-618">這有助於減少檢視狀態的大小，而會公開任何機密資料。</span><span class="sxs-lookup"><span data-stu-id="40253-618">This helps reduce the size of view state, and no sensitive data is exposed.</span></span> <span data-ttu-id="40253-619">LINQ to SQL 會檢查資料的一致性藉由比較時間戳記值在檢視狀態，且在資料庫中的時間戳記值。</span><span class="sxs-lookup"><span data-stu-id="40253-619">LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</span></span> <span data-ttu-id="40253-620">如需詳細資訊，請參閱[逐步解說： 使用時間戳記與檢查資料完整性 LinqDataSource 控制項](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)。</span><span class="sxs-lookup"><span data-stu-id="40253-620">For more information, see [Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.ContextType">
      <MemberSignature Language="C#" Value="Type System.Web.DynamicData.IDynamicDataSource.ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType" />
      <MemberSignature Language="VB.NET" Value=" Property ContextType As Type Implements IDynamicDataSource.ContextType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System.Web.DynamicData.IDynamicDataSource.ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-621">如需這個成員的說明，請參閱 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-621">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-622">與此類別關聯的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-622">The type that is associated with the class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-623">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="40253-623">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="40253-624">只有在 <xref:System.Web.UI.WebControls.LinqDataSource> 執行個體轉換成 <xref:System.Web.DynamicData.IDynamicDataSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="40253-624">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.EntitySetName">
      <MemberSignature Language="C#" Value="string System.Web.DynamicData.IDynamicDataSource.EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName" />
      <MemberSignature Language="VB.NET" Value=" Property EntitySetName As String Implements IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.DynamicData.IDynamicDataSource.EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-625">如需這個成員的說明，請參閱 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-625">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-626">實體的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-626">The name of the entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-627">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="40253-627">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="40253-628">只有在 <xref:System.Web.UI.WebControls.LinqDataSource> 執行個體轉換成 <xref:System.Web.DynamicData.IDynamicDataSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="40253-628">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-629">取得或設定資料內容類別中屬性或欄位的名稱，這個類別表示資料集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-629">Gets or sets the name of the property or field in the data context class that represents a data collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-630">包含屬性名稱的字串，該屬性包含資料集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-630">A string that contains the name of the property that contains the data collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-631">設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性名稱的屬性或欄位，表示您想要擷取的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-631">Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve.</span></span> <span data-ttu-id="40253-632">當您要連接至資料庫資料表中時，屬性的名稱通常是資料表的名稱相同。</span><span class="sxs-lookup"><span data-stu-id="40253-632">When you are connecting to a database table, the name of the property is usually the same as the name of the table.</span></span> <span data-ttu-id="40253-633">當您要連接到記憶體中的資料集合時，設定<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性的屬性或欄位，傳回資料集合的名稱。</span><span class="sxs-lookup"><span data-stu-id="40253-633">When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection.</span></span>  
  
 <span data-ttu-id="40253-634">您可以將傳回任何類型的屬性指派<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>擷取作業的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-634">You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations.</span></span> <span data-ttu-id="40253-635">如果屬性所表示之物件未實作<xref:System.Collections.IEnumerable>、<xref:System.Web.UI.WebControls.LinqDataSource>控制項自動包裝的執行個體中的物件<xref:System.Collections.IEnumerable>物件。</span><span class="sxs-lookup"><span data-stu-id="40253-635">If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object.</span></span>  
  
 <span data-ttu-id="40253-636">若要啟用自動更新、 插入或刪除作業，指派給類別<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>屬性必須衍生自<xref:System.Data.Linq.DataContext>和指派給屬性<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性必須衍生自<xref:System.Data.Linq.Table%601>。</span><span class="sxs-lookup"><span data-stu-id="40253-636">To enable automatic update, insert, or delete operations, the class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext> and the property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span>  
  
 <span data-ttu-id="40253-637">如需如何從類別的執行個體中選取資料的資訊，請參閱<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-637">For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-638">下列範例示範兩個<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-638">The following example shows two <xref:System.Web.UI.WebControls.LinqDataSource> controls.</span></span> <span data-ttu-id="40253-639">其中一個<xref:System.Web.UI.WebControls.LinqDataSource>控制項，<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性設定為類別中的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-639">In one <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property in a class.</span></span> <span data-ttu-id="40253-640">該屬性會傳回字串陣列。</span><span class="sxs-lookup"><span data-stu-id="40253-640">That property returns an array of strings.</span></span> <span data-ttu-id="40253-641">在其他<xref:System.Web.UI.WebControls.LinqDataSource>控制項，<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>屬性設定為代表資料庫資料表的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-641">In the other <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property that represents a database table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 <span data-ttu-id="40253-642">名為的類別`ExampleDataContext`，代表資料庫資料表不會顯示在此範例中。</span><span class="sxs-lookup"><span data-stu-id="40253-642">The class named `ExampleDataContext` that represents the database table is not shown in this example.</span></span> <span data-ttu-id="40253-643">要讓範例能夠運作，您必須建立這個類別加入 LINQ to SQL 類別具名的 Example.dbml 並拖曳資料表名為電影到[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="40253-643">For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span> <span data-ttu-id="40253-644">類別，名為`ExampleDataContext`與屬性，名為`Movies`產生。</span><span class="sxs-lookup"><span data-stu-id="40253-644">A class named `ExampleDataContext` with a property named `Movies` is generated.</span></span>  
  
 <span data-ttu-id="40253-645">下列範例會示範名為的類別`MovieLibrary`，用來參考之<xref:System.Web.UI.WebControls.LinqDataSource>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-645">The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="40253-646">要更新之資料錄的資料列索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-646">The row key values for the records to be updated.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="40253-647">要在資料來源中更新的資料列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-647">The row values to be updated in the data source.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="40253-648">評估以偵測資料衝突的資料列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-648">The row values that are evaluated to detect data conflicts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40253-649">執行更新作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-649">Performs an update operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40253-650">更新作業所影響的資料錄數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-650">The number of records affected by the update operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-651">一般而言，您不必呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>從您的程式碼的方法。</span><span class="sxs-lookup"><span data-stu-id="40253-651">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code.</span></span> <span data-ttu-id="40253-652">資料繫結控制項將會自動呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>方法，當使用者採取動作來更新記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-652">The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record.</span></span> <span data-ttu-id="40253-653">明確地呼叫<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>方法，當您想要建立自己的程序來更新資料。</span><span class="sxs-lookup"><span data-stu-id="40253-653">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-654">下列範例會示範如何以程式設計方式在使用者按一下按鈕後，更新資料來源中的記錄。</span><span class="sxs-lookup"><span data-stu-id="40253-654">The following example shows how to programmatically update a record in the data source after the user clicks a button.</span></span> <span data-ttu-id="40253-655">在程式碼通過<xref:System.Collections.Specialized.ListDictionary>物件，其中包含的索引鍵值，<xref:System.Collections.Specialized.ListDictionary>物件，其中包含的原始值和<xref:System.Collections.Specialized.ListDictionary>物件，其中包含新的值來<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="40253-655">The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains the key value, a <xref:System.Collections.Specialized.ListDictionary> object that contains the original values, and a <xref:System.Collections.Specialized.ListDictionary> object that contains the new values to the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx.vb#1)]  
  
 <span data-ttu-id="40253-656">下列範例顯示先前的範例標記。</span><span class="sxs-lookup"><span data-stu-id="40253-656">The following example shows the markup for the previous example.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Updated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-657">在更新作業完成時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-657">Occurs when an update operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-658">處理<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件來攔截任何例外狀況，從更新作業，或檢查的值更新作業完成之後，輸出參數。</span><span class="sxs-lookup"><span data-stu-id="40253-658">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</span></span> <span data-ttu-id="40253-659">輸出參數都是從<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>傳遞至事件處理常式的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-659">The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-660">
            <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 類別不使用這個集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-660">This collection is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-661">參數的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-661">A collection of parameters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of LinqDataSourceUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^&gt; ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " Usage="member this.Updating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-662">在更新作業之前發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-662">Occurs before an update operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-663">處理<xref:System.Web.UI.WebControls.LinqDataSource.Updating>來驗證物件更新，以檢查資料類別，來變更值，更新作業之前，或取消更新作業中的資料驗證錯誤的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-663">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</span></span> <span data-ttu-id="40253-664"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>傳遞至事件處理常式的物件包含的原始物件和更新的物件。</span><span class="sxs-lookup"><span data-stu-id="40253-664">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object.</span></span>  
  
 <span data-ttu-id="40253-665">如果在更新作業期間發生驗證錯誤<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>物件包含的資料類別所擲回驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-665">If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class.</span></span> <span data-ttu-id="40253-666">如果要更新的值不符合資料類別中屬性的型別，或如果未通過自訂的驗證檢查，就會發生驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="40253-666">A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</span></span> <span data-ttu-id="40253-667">中的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件，您可以擷取驗證例外狀況並採取適當的動作。</span><span class="sxs-lookup"><span data-stu-id="40253-667">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action.</span></span>  
  
 <span data-ttu-id="40253-668">如果事件處理常式中擲回例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件，您必須處理該事件處理常式中的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-668">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="40253-669">例外狀況不會傳遞至事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Updated>事件 (透過<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>物件)。</span><span class="sxs-lookup"><span data-stu-id="40253-669">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="40253-670"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>屬性包含之後就會擲回的例外狀況<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-670">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-671">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Updating>事件。</span><span class="sxs-lookup"><span data-stu-id="40253-671">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="40253-672">程式碼會比較從屬性<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A>屬性和<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>屬性來查看是否已變更的值。</span><span class="sxs-lookup"><span data-stu-id="40253-672">The code compares properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to see whether a value has changed.</span></span> <span data-ttu-id="40253-673">如果值已變更，值為<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="40253-673">If the value has changed, a value of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="40253-674">下列範例顯示的事件處理常式<xref:System.Web.UI.WebControls.LinqDataSource.Updating>擷取驗證例外狀況的事件。</span><span class="sxs-lookup"><span data-stu-id="40253-674">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event that retrieves validation exceptions.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 <span data-ttu-id="40253-675">先前的範例會擷取驗證例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-675">The previous example retrieves validation exceptions.</span></span> <span data-ttu-id="40253-676">如果值不符合屬性類型，可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="40253-676">An exception might be thrown if a value does not match the type of the property.</span></span> <span data-ttu-id="40253-677">它可能也會擲回從自訂的檢查，如下列範例中的一個。</span><span class="sxs-lookup"><span data-stu-id="40253-677">It might also be thrown from a customized check such as the one in the following example.</span></span> <span data-ttu-id="40253-678">`OnAgeChanging`方法檢查數目`Age`屬性不可以是負數。</span><span class="sxs-lookup"><span data-stu-id="40253-678">The `OnAgeChanging` method checks that the number for the `Age` property is not negative.</span></span>  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-679">取得或設定值，這個值指定針對要併入擷取之資料的資料錄，必須為 true 的條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-679">Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-680">用於建立 Where 子句的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-680">A string that is used to create the Where clause.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-681">您使用<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性來指定要從查詢傳回的資料錄的條件。</span><span class="sxs-lookup"><span data-stu-id="40253-681">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query.</span></span> <span data-ttu-id="40253-682">語法<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性是 LINQ Where 子句在 C# 中的語法相同。</span><span class="sxs-lookup"><span data-stu-id="40253-682">The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#.</span></span>  
  
 <span data-ttu-id="40253-683">您指定的運算式會產生布林值，如果運算式評估為`true`對於給定的資料列，將資料列納入結果集。</span><span class="sxs-lookup"><span data-stu-id="40253-683">You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set.</span></span> <span data-ttu-id="40253-684">運算式所組成的資料行名稱、 比較運算子和值比較，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="40253-684">Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where="Price > 50"...>  
```  
  
 <span data-ttu-id="40253-685">若要指定多個運算式，由邏輯連結`AND`或`OR`運算子，您會使用`&&`當做邏輯 AND 運算子和`||`做為邏輯 OR 運算子，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="40253-685">To specify multiple expressions linked by logical `AND` or `OR` operators, you use `&&` as a logical AND operator and `||` as a logical OR operator, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where="Price > 50 && Price < 100"...>  
<asp:LinqDataSource ... Where="Price <= 50 || Price >= 100"...>  
```  
  
 <span data-ttu-id="40253-686">如果您想要測試對常值字串值的屬性，常值字串值必須括在雙引號中。</span><span class="sxs-lookup"><span data-stu-id="40253-686">If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.</span></span> <span data-ttu-id="40253-687">若要在標記中這樣做，請將<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>子句值以單引號，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="40253-687">To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where='Category = "Sports"' ... >  
```  
  
 <span data-ttu-id="40253-688">若要測試程式碼中的常值字串值，請使用逸出字元，適合用來以插入雙引號括住，如下列範例所示所使用的語言：</span><span class="sxs-lookup"><span data-stu-id="40253-688">To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:</span></span>  
  
```vb  
LinqDataSource1.Where = "Category = ""Sports"""  
```  
  
```csharp  
LinqDataSource1.Where = "Category = \"Sports\"";  
```  
  
 <span data-ttu-id="40253-689">如果您想要測試字串是否大於或小於另一個字串，您必須使用方法來<xref:System.String>類別，而不是使用`<`或`>`運算子的資料行名稱的字串值之間。</span><span class="sxs-lookup"><span data-stu-id="40253-689">If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value.</span></span> <span data-ttu-id="40253-690">下列範例顯示如何選取資料列的類別值小於、 小於或等於大於，或大於或等於"運動":</span><span class="sxs-lookup"><span data-stu-id="40253-690">The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to "Sports":</span></span>  
  
```  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") < 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") <= 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") > 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") >= 0' ... >  
```  
  
 <span data-ttu-id="40253-691">您也可以使用其他方法的<xref:System.String>類別，例如<xref:System.String.StartsWith%2A>， <xref:System.String.EndsWith%2A>，和<xref:System.String.Contains%2A>。</span><span class="sxs-lookup"><span data-stu-id="40253-691">You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>.</span></span> <span data-ttu-id="40253-692">如需如何比較字串的詳細資訊，請參閱[比較字串](~/docs/standard/base-types/comparing.md)。</span><span class="sxs-lookup"><span data-stu-id="40253-692">For more information about how to compare strings, see [Comparing Strings](~/docs/standard/base-types/comparing.md).</span></span> <span data-ttu-id="40253-693">如需有關 Where 子句語法，請參閱[C# 運算子](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)和[其中子句](~/docs/csharp/language-reference/keywords/where-clause.md)。</span><span class="sxs-lookup"><span data-stu-id="40253-693">For more information about Where clause syntax, see [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) and [where clause](~/docs/csharp/language-reference/keywords/where-clause.md).</span></span>  
  
 <span data-ttu-id="40253-694">除了篩選根據您定義當您建立網頁上的靜態值，您可以篩選在執行階段評估的根據動態值。</span><span class="sxs-lookup"><span data-stu-id="40253-694">In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.</span></span> <span data-ttu-id="40253-695">在此情況下，您可以包含中的具名的參數<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>做為預留位置，做為值的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-695">In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value.</span></span> <span data-ttu-id="40253-696">然後您加入具有相符名稱的參數<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-696">You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="40253-697">或者，您可以設定<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>屬性`true`定義中的參數和<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-697">Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="40253-698">當<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>屬性是`true`，沒有包含中的具名的參數<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-698">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property.</span></span> <span data-ttu-id="40253-699">相反地，<xref:System.Web.UI.WebControls.LinqDataSource>控制項自動產生 Where 子句中的參數從<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-699">Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property.</span></span>  
  
 <span data-ttu-id="40253-700">如需如何篩選資料的詳細資訊，請參閱[逐步解說： 選取和篩選以 LinqDataSource 和 GridView 控制項的資料子集](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)。</span><span class="sxs-lookup"><span data-stu-id="40253-700">For more information about how to filter data, see [Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-701">下列範例會示範如何篩選查詢，根據靜態條件所傳回的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-701">The following example shows how to filter the data returned from a query based on a static condition.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 <span data-ttu-id="40253-702">下列範例會示範如何根據篩選資料由使用者在執行階段提供的值。</span><span class="sxs-lookup"><span data-stu-id="40253-702">The following example shows how to filter the data based on a value that is provided by the user at run time.</span></span> <span data-ttu-id="40253-703">在此範例中<xref:System.Web.UI.WebControls.DropDownList>控制項和<xref:System.Web.UI.WebControls.GridView>頁面上顯示控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-703">In this example a <xref:System.Web.UI.WebControls.DropDownList> control and a <xref:System.Web.UI.WebControls.GridView> control are displayed on the page.</span></span> <span data-ttu-id="40253-704">當使用者選取其中一個值在<xref:System.Web.UI.WebControls.DropDownList>控制項，<xref:System.Web.UI.WebControls.LinqDataSource>控制項選取從`Products`資料表具有的資料列`UserPrice`值等於所選的值。</span><span class="sxs-lookup"><span data-stu-id="40253-704">When the user selects one of the values in the <xref:System.Web.UI.WebControls.DropDownList> control, the <xref:System.Web.UI.WebControls.LinqDataSource> control selects from the `Products` table only rows that have `UserPrice` values equal to the selected value.</span></span> <span data-ttu-id="40253-705"><xref:System.Web.UI.WebControls.GridView>控制項接著會顯示篩選過的資料。</span><span class="sxs-lookup"><span data-stu-id="40253-705">The <xref:System.Web.UI.WebControls.GridView> control then displays the filtered data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40253-706">取得用於建立 Where 子句的參數集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-706">Gets the collection of parameters that is used to create the Where clause.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40253-707">參數集合，用於在 <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> 屬性中建立 Where 子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40253-707">A collection of the parameters that are used to create the Where clause in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40253-708"><xref:System.Web.UI.WebControls.LinqDataSource>控制使用中的參數<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合，以建立 Where 子句，在執行階段。</span><span class="sxs-lookup"><span data-stu-id="40253-708">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time.</span></span> <span data-ttu-id="40253-709">加入參數，以便<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合，當您想要以程式設計方式設定一或多個條件，在 where 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-709">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause.</span></span> <span data-ttu-id="40253-710">比方說，您可能會搜尋資料庫資料表中記錄的值相等的姓氏<xref:System.Web.UI.WebControls.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-710">For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="40253-711">在此情況下，您將參數加入<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>文字方塊值的集合。</span><span class="sxs-lookup"><span data-stu-id="40253-711">In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value.</span></span>  
  
 <span data-ttu-id="40253-712">如果您沒有在執行階段設定值，在 where 子句中，您不必使用<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="40253-712">If you do not have to set a value at run time in the Where clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="40253-713">您可以定義中所要擷取欄位<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-713">You can define the fields to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property.</span></span> <span data-ttu-id="40253-714">例如，若要從資料庫資料表傳回值其中`LastName`equals"Adams 」 在標記中，設定<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>屬性`'LastName = "Adams"'`不含任何參數。</span><span class="sxs-lookup"><span data-stu-id="40253-714">For example, to return values from a database table where `LastName` equals "Adams" in markup, set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `'LastName = "Adams"'` without any parameters.</span></span>  
  
 <span data-ttu-id="40253-715">若要設定值，在<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合，您指派給每個參數的名稱，然後再新增中的預留位置<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>該參數的屬性。</span><span class="sxs-lookup"><span data-stu-id="40253-715">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter.</span></span> <span data-ttu-id="40253-716">在 where 子句中，與每個參數名稱的前面上 @ 符號。</span><span class="sxs-lookup"><span data-stu-id="40253-716">In the Where clause, preface each parameter name with the @ symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40253-717">下列範例示範如何使用<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>集合，以動態建立 Where 子句。</span><span class="sxs-lookup"><span data-stu-id="40253-717">The following example shows how to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to dynamically create the Where clause.</span></span> <span data-ttu-id="40253-718"><xref:System.Web.UI.WebControls.LinqDataSource>控制項會傳回值中的所有記錄`Price`大於中使用者所選取的值的資料行<xref:System.Web.UI.WebControls.DropDownList>控制項。</span><span class="sxs-lookup"><span data-stu-id="40253-718">The <xref:System.Web.UI.WebControls.LinqDataSource> control returns all the records with a value in the `Price` column that is greater than the value selected by the user in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>