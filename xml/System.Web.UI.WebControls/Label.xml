<Type Name="Label" FullName="System.Web.UI.WebControls.Label">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4562b511c58de9daf20be1c2f7dc531c1c66b424" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Label : System.Web.UI.WebControls.WebControl, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Label extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits WebControl&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Web::UI::WebControls::WebControl, System::Web::UI::ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LabelDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LabelControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Label runat="server" Text="Label"&gt;&lt;/{0}:Label&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表標籤控制項，顯示在網頁上的文字。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#introduction)  
  
-   [協助工具選項](#accessibility)  
  
-   [宣告式語法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>簡介  
 使用<xref:System.Web.UI.WebControls.Label>中設定的網頁位置上顯示文字的控制項。 與不同的是靜態文字，您可以自訂顯示的文字，透過<xref:System.Web.UI.WebControls.Label.Text%2A>屬性。  
  
 您也可以使用<xref:System.Web.UI.WebControls.Literal>和<xref:System.Web.UI.WebControls.PlaceHolder>Web Form 網頁上顯示文字的控制項。 不過，不同於<xref:System.Web.UI.WebControls.Label>控制項，這些控制項不會呈現任何其他的標籤。  
  
> [!IMPORTANT]
>  此控制項可以用來顯示使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>協助工具選項  
 如需如何設定這個控制項，使其產生符合網頁可及性標準標記資訊，請參閱[Visual Studio 和 ASP.NET 中的協助工具](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)和[ASP.NET 控制項和協助工具](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:Label  
    AccessKey="string"  
    AssociatedControlID="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Web.UI.WebControls.Label>網頁上的控制項。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 ASP.NET Web 網頁程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[Classic Label Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Label Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Label Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Label Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Label.Text" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Label" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.WebControls.Label>類別。  
  
   
  
## Examples  
 下列範例示範如何建立和初始化的新執行個體<xref:System.Web.UI.WebControls.Label>控制項。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic Label.Label Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Label.Label Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Label.Label Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Label.Label Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要在用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將要呈現之 <see cref="T:System.Web.UI.WebControls.Label" /> 控制項的 HTML 屬性和樣式加入指定的輸出資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Label.AddAttributesToRender%2A>方法主要由控制項開發人員用來插入其他的屬性和樣式以<xref:System.Web.UI.HtmlTextWriter>的輸出資料流<xref:System.Web.UI.WebControls.Label>控制項。  
  
 <xref:System.Web.UI.WebControls.Label.AddAttributesToRender%2A>方法<xref:System.Web.UI.WebControls.Label>控制項會決定是否`for`屬性應該使用加入<xref:System.Web.UI.WebControls.Label.AssociatedControlID%2A>值，而且如果內嵌區塊樣式應該套用至顯示的框線樣式和寬度。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">找不到 <see cref="P:System.Web.UI.WebControls.Label.AssociatedControlID" /> 屬性中指定的控制項。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">表示剖析項目的物件。</param>
        <summary>告知控制項有項目已剖析，並將該項目加入至 <see cref="T:System.Web.UI.WebControls.Label" /> 控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Label.AddParsedSubObject%2A>衍生的自訂控制項時，方法使用主要由控制項開發人員<xref:System.Web.UI.WebControls.Label>類別。  
  
 如果輸入的物件是<xref:System.Web.UI.LiteralControl>，而<xref:System.Web.UI.WebControls.Label>控制項沒有子系控制項，用於設定輸入的物件<xref:System.Web.UI.WebControls.Label.Text%2A>屬性<xref:System.Web.UI.WebControls.Label>控制項。 否則，<xref:System.Web.UI.Control.AddParsedSubObject%2A>方法的基底<xref:System.Web.UI.Control>類別稱為和指定的物件加入至<xref:System.Web.UI.Control.Controls%2A>集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.WebControls.Label.AddParsedSubObject%2A>中自訂方法<xref:System.Web.UI.WebControls.Label>伺服器控制，好讓它永遠設定已剖析的物件文字屬性，文字屬性的已剖析的物件是否<xref:System.Web.UI.WebControls.Literal>，並為空字串否則為。  
  
 [!code-aspx-csharp[CustomLabelAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/CS/custom_label_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomLabelAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/VB/custom_label_addparsedsubobjectvb.aspx#1)]  
[!code-csharp[CustomLabelAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/CS/custom_label_addparsedsubobject.cs#2)]
[!code-vb[CustomLabelAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelAddParsedSubObject/VB/custom_label_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedControlID">
      <MemberSignature Language="C#" Value="public virtual string AssociatedControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssociatedControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.AssociatedControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AssociatedControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssociatedControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.AssociatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 <see cref="T:System.Web.UI.WebControls.Label" /> 控制項關聯之伺服器控制項的識別項。</summary>
        <value>字串值，對應於 Web Form 中所包含之伺服器控制項的 <see cref="P:System.Web.UI.Control.ID" />。 預設值是空字串 ("")，表示 <see cref="T:System.Web.UI.WebControls.Label" /> 控制項與其他伺服器控制項沒有關聯。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Label.AssociatedControlID%2A>相關聯屬性<xref:System.Web.UI.WebControls.Label>Web 表單上的其他伺服器控制項的控制項。 當<xref:System.Web.UI.WebControls.Label>控制項是其他伺服器控制項相關聯，其屬性可用於延伸相關聯控制項的功能。 您可以使用<xref:System.Web.UI.WebControls.Label>控制項的定位點索引或關聯的控制項的便捷鍵，可以設定另一個控制項，或您的標題如下。  
  
 當<xref:System.Web.UI.WebControls.Label.AssociatedControlID%2A>設定屬性，則<xref:System.Web.UI.WebControls.Label>控制項轉譯為 HTML`label`項目，與`for`屬性設為<xref:System.Web.UI.Control.ID%2A>針對關聯控制項的屬性。 您可以設定其他屬性的`label`項目使用<xref:System.Web.UI.WebControls.Label>屬性。 例如，您可以使用<xref:System.Web.UI.WebControls.Label.Text%2A>和<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>屬性以提供標題和相關聯的控制項的便捷鍵。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.AccessKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">物件，含有控制項的已儲存檢視狀態值。</param>
        <summary>載入控制項先前儲存的狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。 不過，控制項開發人員可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.Label.LoadViewState%2A>方法還原檢視狀態資訊<xref:System.Web.UI.WebControls.Label>控制項所儲存的先前頁面要求從<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">將 HTML 內容呈現給用戶端的輸出資料流。</param>
        <summary>將 <see cref="T:System.Web.UI.WebControls.Label" /> 的內容呈現在指定的寫入器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.WebControls.Label.RenderContents%2A>方法中自訂的伺服器控制項，以便一些文字附加至<xref:System.Web.UI.WebControls.Label>。  
  
 [!code-aspx-csharp[CustomLabelRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelRenderContents/CS/custom_label_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomLabelRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelRenderContents/VB/custom_label_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomLabelRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLabelRenderContents/CS/custom_label_rendercontents.cs#2)]
[!code-vb[CustomLabelRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLabelRenderContents/VB/custom_label_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示當控制項的 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 屬性為 <see langword="false" /> 時，控制項是否應該將呈現之 HTML 項目的 <see langword="disabled" /> 屬性設為 "disabled"。</summary>
        <value>
          <see langword="true" /> 如果<see cref="P:System.Web.UI.Control.RenderingCompatibility" />屬性表示的 ASP.NET 版本低於<c>4.0</c>，否則<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會指出如何 ASP.NET 應該呈現 HTML 控制項的停用控制項時。 如果這個屬性是`true`，ASP.NET 會呈現`disabled`屬性停用控制項時。 如果這個屬性是`false`，ASP.NET 會呈現`class`屬性停用控制項時。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於呈現 <see cref="T:System.Web.UI.WebControls.Label" /> 控制項的 HTML 標記。</summary>
        <value>用來呈現 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 的 <see cref="T:System.Web.UI.WebControls.Label" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Label.TagKey%2A>屬性來判斷<xref:System.Web.UI.HtmlTextWriterTag>相關聯的值<xref:System.Web.UI.WebControls.Label>控制項。 <xref:System.Web.UI.WebControls.Label.TagKey%2A>屬性主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Label.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.Label" /> 控制項的文字內容。</summary>
        <value>控制項的文字內容。 預設值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Label.Text%2A>屬性來指定，或判斷文字內容<xref:System.Web.UI.WebControls.Label>控制項。 這個屬性通常用來以程式設計的方式來自訂顯示在文字<xref:System.Web.UI.WebControls.Label>控制項。  
  
 <xref:System.Web.UI.WebControls.Label.Text%2A>屬性可包含 HTML。 若是如此，HTML 將會原封不動地傳遞至瀏覽器中，其中是可能會被解譯為標記，而不是文字。 如果您想要顯示的 HTML 標記為純文字的瀏覽器，您可以使用<xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法類別概觀的範例所示。 您也可以使用<xref:System.Web.UI.WebControls.Literal>而不是控制<xref:System.Web.UI.WebControls.Label>控制，以及設定<xref:System.Web.UI.WebControls.Literal.Mode%2A>屬性<xref:System.Web.UI.WebControls.LiteralMode.Encode>。  
  
> [!NOTE]
>  設定<xref:System.Web.UI.WebControls.Label.Text%2A>屬性將會清除任何其他所包含的控制項<xref:System.Web.UI.WebControls.Label>控制項。  
  
> [!IMPORTANT]
>  此控制項可以用來顯示使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[ASP.NET 全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
 這個屬性為預設屬性，<xref:System.Web.UI.WebControls.ControlParameter>物件將繫結至執行階段。 如需詳細資訊，請參閱<xref:System.Web.UI.ControlValuePropertyAttribute>， <xref:System.Web.UI.WebControls.ControlParameter>，和[使用參數與篩選的資料來源控制項](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)。  
  
   
  
## Examples  
 下列範例示範如何建立的新執行個體<xref:System.Web.UI.WebControls.Label>控制項，並設定其<xref:System.Web.UI.WebControls.Label.Text%2A>屬性。  
  
> [!NOTE]
>  下列程式碼範例會使用單一檔案的程式碼模式，而且可能無法正確運作如果直接複製到程式碼後置檔案。 此程式碼範例必須複製到.aspx 副檔名的空白文字檔。 如需有關 Web Form 程式碼模型的詳細資訊，請參閱[ASP.NET Web Form 網頁程式碼模型](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。  
  
 [!code-aspx-csharp[Classic Label.Text Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Label.Text Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Label.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Label.Text Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>