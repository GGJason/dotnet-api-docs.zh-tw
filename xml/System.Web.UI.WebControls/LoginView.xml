<Type Name="LoginView" FullName="System.Web.UI.WebControls.LoginView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7430b8f2275da683b3c9b0c38f53d0f58e312709" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39931492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginView extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginView" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginView&#xA;Inherits Control&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginView : System::Web::UI::Control, System::Web::UI::INamingContainer" />
  <TypeSignature Language="F#" Value="type LoginView = class&#xA;    inherit Control&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("ViewChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("CurrentView")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>根據使用者的驗證狀態和角色成員資格，顯示對於指定使用者適當的內容範本。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#introduction)  
  
-   [宣告式語法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>簡介  
 <xref:System.Web.UI.WebControls.LoginView>控制項會顯示不同的網站內容範本 （或 「 檢視 」） 針對不同的使用者，根據是否已驗證使用者，而如果因此，Web 站台角色他或她所屬。  
  
> [!NOTE]
>  如果您不熟悉 ASP.NET 中所提供的登入控制項組，請參閱[ASP.NET 登入控制項概觀](http://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d)再繼續進行。 如需登入控制項及成員資格相關的其他主題的清單，請參閱 <<c0> [ 使用的成員資格管理使用者](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)。  
  
 範本儲存於<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性會顯示任何使用者尚未登入網站的訪客。 使用者已登入之後，網站會顯示使用者的角色中的其中一個相關聯的範本<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>屬性或在指定的預設範本<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.LoginView>控制項可讓您管理各種範本之間切換，一旦您將範本指派給任何的三個範本屬性<xref:System.Web.UI.WebControls.LoginView>類別：  
  
-   <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> -指定要顯示使用者無法登入網站的範本。 登入的使用者永遠不會看到此範本。  
  
-   <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> -指定要顯示給使用者登入網站，但不是屬於任何角色群組，以定義的範本的預設範本。  
  
-   <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> -指定登入的使用者定義的角色群組樣板與角色的成員顯示的樣板。 內容範本是與特定集合中的角色相關聯<xref:System.Web.UI.WebControls.RoleGroup>執行個體。  
  
 在來源中定義的順序搜尋的角色群組樣板。 第一個相符的角色群組範本會顯示給使用者。 如果使用者是多個角色的成員，則會使用與任何使用者的角色相符的第一個角色群組範本。 如果多個範本是與單一角色相關聯，則會使用只有第一個定義的範本。  
  
 下表描述的行為<xref:System.Web.UI.WebControls.LoginView>控制各種組合的範本使用時。  
  
|LoggedIn Template 屬性|匿名的 Template 屬性|Kolekci RoleGroups 屬性|LoginView 行為|  
|--------------------------------|---------------------------------|-------------------------|------------------------|  
|未設定|未設定|未設定|不顯示任何內容。|  
|設定|未設定|未設定|只有當使用者登入時，會顯示內容。|  
|未設定|設定|未設定|只有當使用者未登入時，會顯示內容。|  
|未設定|未設定|設定|顯示的第一個範本<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>符合其中一個使用者角色的集合。 如果找到相符項目，則會顯示任何內容。|  
|設定|設定|未設定|如果使用者登入，就會顯示在指定的範本<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性。 如果在使用者未登入，會顯示範本中指定<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性。|  
|設定|設定|設定|如果使用者登入，就會顯示的第一個範本<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>符合其中一個使用者角色的集合。 如果找到相符項目，則會顯示範本中指定<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性。 如果使用者未登入，會顯示範本中指定<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性。|  
|設定|未設定|設定|如果使用者登入，就會顯示的第一個範本<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>符合其中一個使用者角色的集合。 如果找到相符項目，則會顯示範本中指定<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性。 如果使用者未登入，則不會顯示任何內容。|  
|未設定|設定|設定|如果使用者登入，就會顯示的第一個範本<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>符合其中一個使用者角色的集合。 如果找到相符項目，則不會顯示任何內容。 如果使用者未登入，會顯示範本中指定<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性。|  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>並<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>可以搭配設定任何驗證結構描述<xref:System.Security.Principal.IIdentity.Name%2A>屬性<xref:System.Web.UI.Page>物件的<xref:System.Web.UI.Page.User%2A>屬性。 您必須設定要使用的角色管理<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>屬性來定義基底範本，在網站上的使用者角色。 如需詳細資訊，請參閱 <<c0> [ 認識角色管理](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)。  
  
 <xref:System.Web.UI.Control.Focus%2A>方法才會將網頁的初始焦點<xref:System.Web.UI.WebControls.LoginView>控制項，或任何其子控制項。 中所包含的控制項<xref:System.Web.UI.WebControls.LoginView>控制項之後，會建立<xref:System.Web.UI.Control.PreRender>事件。 若要將焦點設定為所包含的子控制項<xref:System.Web.UI.WebControls.LoginView>，處理`On_PreRender`，並呼叫其<xref:System.Web.UI.Control.Focus%2A>方法。  您也可以使用<xref:System.Web.UI.WebControls.LoginView.ViewChanging>並<xref:System.Web.UI.WebControls.LoginView.ViewChanged>以程式設計方式存取中的控制項事件<xref:System.Web.UI.WebControls.LoginView>控制項範本。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:LoginView  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    OnViewChanged="ViewChanged event handler"  
    OnViewChanging="ViewChanging event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <AnonymousTemplate>  
            <!-- child controls -->  
        </AnonymousTemplate>  
        <LoggedInTemplate>  
            <!-- child controls -->  
        </LoggedInTemplate>  
        <RoleGroups>  
                <asp:RoleGroup  
                    Roles="string"  
                >  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                </asp:RoleGroup>  
        </RoleGroups>  
</asp:LoginView>  
```  
  
   
  
## Examples  
 下列程式碼範例示範如何設定每個所支援的三個範本類型的範本<xref:System.Web.UI.WebControls.LoginView>控制項。  
  
 [!code-aspx-csharp[LoginViewClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewClass/CS/loginviewclasscs.aspx#1)]
 [!code-aspx-vb[LoginViewClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewClass/VB/loginviewclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Roles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控制項的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AnonymousTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AnonymousTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnonymousTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AnonymousTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要針對尚未登入網站之使用者顯示的樣板。</summary>
        <value>要顯示的 <see cref="T:System.Web.UI.ITemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性會指定當使用者未登入網站時，對網站使用者顯示的內容樣板。 這個範本會顯示當<xref:System.Security.Principal.IIdentity.Name%2A>的屬性<xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A>屬性是`null`。  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>範本永遠不會顯示已驗證的使用者。 如果<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性是空的不登入的使用者顯示任何內容。  
  
   
  
## Examples  
 下列程式碼範例會使用範本中指定<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>樣板來顯示邀請註冊個人化服務。  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.LoginView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.ControlCollection" /> 物件，其中包含 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控制項的子控制項。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.LoginView" /> 控制項的子控制項集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="loginView.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立組成 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控制項的子控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.CreateChildControls%2A>方法會建立個別的控制項構成<xref:System.Web.UI.WebControls.LoginView>控制項。 建立的控制項集合會根據使用者的顯示內容的範本而有所不同。 例如，當使用者未登入網站，只將範本中包含的控制項中指定<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>建立屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="loginView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>繫結資料來源至 <see cref="T:System.Web.UI.WebControls.LoginView" /> 以及其所有子控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.LoginView.DataBind%2A>方法，以將資料從一個來源繫結<xref:System.Web.UI.WebControls.LoginView>控制項和其子系。 這個方法會解析中的所有資料繫結運算式<xref:System.Web.UI.WebControls.LoginView>控制項和任何子控制項中現用的樣板。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出主題是否可以套用至 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控制項。</summary>
        <value>
          <see langword="true" /> 表示使用主題，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>屬性會指出是否啟用佈景主題，以供<xref:System.Web.UI.WebControls.LoginView>控制項。 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>是否已啟用中所包含之控制項的佈景主題，屬性也會影響其<xref:System.Web.UI.WebControls.LoginView.Controls%2A>集合。 當<xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>屬性是`true`，應用程式的佈景主題目錄中搜尋要套用控制面板。 如果任何特定的控制項外觀的佈景主題目錄中，將不套用的外觀。 時<xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>屬性是`false`，則不會搜尋佈景主題目錄的內容<xref:System.Web.UI.WebControls.LoginView.SkinID%2A>屬性不會使用。  
  
 控制項可以覆寫<xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>設定其父控制項或包含頁面的值。 比方說，如果父控制項的<xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>設定為`false`，您可以選擇性地將佈景主題套用至所設定包含在父系的子控制項<xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>屬性設`true`個別子控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="loginView.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>設定控制項的輸入焦點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.Focus%2A>方法才會將網頁的初始焦點<xref:System.Web.UI.WebControls.LoginView>控制項或任何其子控制項。 中所包含的控制項<xref:System.Web.UI.WebControls.LoginView>控制項之後，會建立<xref:System.Web.UI.Control.PreRender>事件。 若要將焦點設定為所包含的子控制項<xref:System.Web.UI.WebControls.LoginView>，處理`On_PreRender`，並呼叫其<xref:System.Web.UI.Control.Focus%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">您呼叫 <see cref="M:System.Web.UI.WebControls.LoginView.Focus" /> 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="loginView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" />，代表所要還原的控制項狀態。</param>
        <summary>這個方法會實作 <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggedInTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LoggedInTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LoggedInTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoggedInTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LoggedInTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoggedInTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樣板，這個樣板會針對已登入網站，但不屬於 <see cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" /> 屬性所指定其中一個角色群組之成員的網站使用者顯示。</summary>
        <value>要顯示的 <see cref="T:System.Web.UI.ITemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>這兩個下列條件符合時，將會顯示網站使用者的屬性：  
  
-   <xref:System.Security.Principal.IIdentity.Name%2A>的屬性<xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A>屬性不是 `null`  
  
-   使用者不屬於定義的角色群組<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性會指定已驗證的網站使用者的預設範本。 如果您未設定角色管理<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>是唯一的範本適用於已驗證的使用者。 如需有關如何設定角色管理的詳細資訊，請參閱 <<c0> [ 認識角色管理](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>範本，以顯示登入的使用者個人化資訊的連結。  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="loginView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A>方法會執行初始化<xref:System.Web.UI.WebControls.LoginView>控制項。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="loginView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>根據登入使用者的角色，判斷要顯示的角色群組樣板。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A>方法呼叫期間<xref:System.Web.UI.Control.PreRender>事件，以判斷要向使用者顯示的內容範本。 如果<xref:System.Security.Principal.IIdentity.Name%2A>的屬性<xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A>屬性是`null`，在指定的範本<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性會顯示; 否則會顯示使用者的角色相關聯的範本。 如果使用者不屬於定義的角色群組，或如果您未設定角色管理<xref:System.Web.UI.WebControls.LoginView>控制項會顯示在指定的範本<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性。 如需有關如何設定角色管理的詳細資訊，請參閱 <<c0> [ 角色管理提供者](http://msdn.microsoft.com/library/71ddd651-5f91-471b-ad9f-61249b0bf0d5)。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewChanged : EventArgs -&gt; unit&#xA;override this.OnViewChanged : EventArgs -&gt; unit" Usage="loginView.OnViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" /> 控制項切換檢視之後，引發 <see cref="T:System.Web.UI.WebControls.LoginView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.LoginView>控制項切換檢視，從先前的範本中移除控制項，並從新的範本建立新的子控制項。 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A>方法建立新的子控制項之後呼叫。  
  
 使用<xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A>方法，以執行任何處理，例如繫結，初始化新的檢視上的控制項所需的資料。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnViewChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanging (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanging(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanging (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanging(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewChanging : EventArgs -&gt; unit&#xA;override this.OnViewChanging : EventArgs -&gt; unit" Usage="loginView.OnViewChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" /> 控制項切換檢視之前，引發 <see cref="T:System.Web.UI.WebControls.LoginView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.LoginView>控制項切換檢視，從先前的範本中移除控制項，並從新的範本建立新的子控制項。 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A>移除先前的控制項之前，呼叫方法。  
  
 使用<xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A>方法，以執行任何必要的處理，例如儲存控制資訊之前移除控制項。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="loginView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用來在用戶端的瀏覽器中呈現伺服器控制項內容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件，向用戶端瀏覽器呈現 Web 伺服器控制項內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.Render%2A>方法用來呈現伺服器控制項內容，以使用指定的用戶端瀏覽器<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>物件。  
  
 **附註**這個方法主要由控制項開發人員用來擴充<xref:System.Web.UI.WebControls.LoginView>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RoleGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RoleGroupCollection RoleGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RoleGroups As RoleGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RoleGroupCollection ^ RoleGroups { System::Web::UI::WebControls::RoleGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleGroups : System.Web.UI.WebControls.RoleGroupCollection" Usage="System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RoleGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得將內容樣板與特定角色建立關聯的角色群組集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> 物件，含有已定義的角色群組樣板。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>屬性包含在網站上的各種角色相關聯的內容範本。 中的集合<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>屬性搜尋的來源中定義範本的順序。 第一個相符的角色群組範本會顯示給使用者。 如果使用者是多個角色的成員，則會使用與任何使用者的角色相符的第一個角色群組範本。 如果多個範本是與單一角色相關聯，則將使用只有第一個定義的範本。  
  
 如果登入的使用者不屬於任何角色群組集合中包含的角色，網站會顯示在指定的內容範本<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性。 匿名使用者永遠不會顯示包含在任何範本<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>集合。  
  
 您必須設定要使用的角色管理<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>屬性來定義範本，根據在網站上的使用者角色。 如需詳細資訊，請參閱 <<c0> [ 認識角色管理](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱 <<c0> <xref:System.Web.UI.ThemeableAttribute> 並[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>集合。 因為<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>和<xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>屬性並未設定，只有以使用者屬於角色定義的內容樣板與顯示內容。  
  
 [!code-aspx-csharp[LoginViewRoleGroups#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewRoleGroups/CS/loginviewrolegroupscs.aspx#1)]
 [!code-aspx-vb[LoginViewRoleGroups#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewRoleGroups/VB/loginviewrolegroupsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="loginView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存頁面回傳至伺服器以來，所發生的任何伺服器控制項狀態變更。</summary>
        <returns>傳回伺服器控制項目前的狀態。 如果沒有與控制項關聯的狀態，則這個方法會傳回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="loginView.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" />，包含控制項的設計階段資料。</param>
        <summary>設定控制項的設計階段資料。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要套用至 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控制項的面板。</summary>
        <value>要套用至 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控制項的面板名稱。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 面板控制項可以使用包含在一或多個面板檔案中的佈景主題的目錄。 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A>屬性會指定其中一個這些要套用至控制項的面板。 面板是專屬於特定的控制;您無法共用之間的不同類型的控制項的外觀設定。  
  
 如果您未設定<xref:System.Web.UI.WebControls.LoginView.SkinID%2A>屬性，控制會使用預設面板如果有定義。 例如，如果沒有面板識別碼定義<xref:System.Web.UI.WebControls.Image>控制項，則該外觀套用至所有<xref:System.Web.UI.WebControls.Image>控制，未明確參考識別碼的外觀，而且，不會設定為停用佈景主題。 如果已定義識別碼的外觀<xref:System.Web.UI.WebControls.Image>控制項，則該面板只適用於<xref:System.Web.UI.WebControls.Image>控制項<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>設為該識別碼。  
  
 如果佈景主題目錄中的面板檔案未包含具有指定的外觀<xref:System.Web.UI.WebControls.LoginView.SkinID%2A>、<xref:System.ArgumentException>在執行階段擲回例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.WebControls.LoginView.SkinID" /> 屬性中指定的面板不存在主題中。</exception>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanged;" />
      <MemberSignature Language="F#" Value="member this.ViewChanged : EventHandler " Usage="member this.ViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在檢視變更之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.LoginView>控制項切換檢視，從先前的範本中移除控制項，並從新的範本建立新的子控制項。 <xref:System.Web.UI.WebControls.LoginView.ViewChanged>之後建立新的子控制項，會引發事件。  
  
 使用<xref:System.Web.UI.WebControls.LoginView.ViewChanged>執行任何處理，例如資料繫結，初始化新的檢視上的控制項所需的事件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanged>如果使用者的登入狀態變更在回傳至頁面時，才會引發事件。 <xref:System.Web.UI.WebControls.LoginView.ViewChanged>如果使用者登入使用，不會引發事件<xref:System.Web.UI.WebControls.Login>控制項，或如果使用者登出使用<xref:System.Web.UI.WebControls.LoginStatus>控制項。 <xref:System.Web.UI.WebControls.LoginView.ViewChanged>事件也不會發生在使用者已登入或出後面接著重新導向。 舉例說明何時<xref:System.Web.UI.WebControls.LoginView.ViewChanged>便會發生事件時，使用者登出藉由呼叫<xref:System.Web.Security.FormsAuthentication.SignOut%2A>不會重新導向至其他頁面的方法。 到頁面上，在下一個回傳<xref:System.Web.UI.WebControls.LoginView>控制項將會偵測使用者的登入狀態中的變更，然後再引發<xref:System.Web.UI.WebControls.LoginView.ViewChanged>事件。  
  
 如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanging;" />
      <MemberSignature Language="F#" Value="member this.ViewChanging : EventHandler " Usage="member this.ViewChanging : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在檢視變更之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.LoginView>控制項切換檢視，從先前的範本中移除控制項，並從新的範本建立新的子控制項。 <xref:System.Web.UI.WebControls.LoginView.ViewChanging>移除先前的控制項之前，就會引發事件。  
  
 使用<xref:System.Web.UI.WebControls.LoginView.ViewChanging>事件來執行任何處理，例如控制項移除之前，儲存所需的控制項資訊。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanging>如果使用者的登入狀態變更在回傳至頁面時，才會引發事件。 <xref:System.Web.UI.WebControls.LoginView.ViewChanging>如果使用者登入使用，不會引發事件<xref:System.Web.UI.WebControls.Login>控制項，或如果使用者登出使用<xref:System.Web.UI.WebControls.LoginStatus>控制項。 <xref:System.Web.UI.WebControls.LoginView.ViewChanging>事件也不會發生在使用者已登入或出後面接著重新導向。 舉例說明何時<xref:System.Web.UI.WebControls.LoginView.ViewChanging>便會發生事件時，使用者登出藉由呼叫<xref:System.Web.Security.FormsAuthentication.SignOut%2A>不會重新導向至其他頁面的方法。 到頁面上，在下一個回傳<xref:System.Web.UI.WebControls.LoginView>控制項將會偵測使用者的登入狀態中的變更，然後再引發<xref:System.Web.UI.WebControls.LoginView.ViewChanging>事件。  
  
 如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      </Docs>
    </Member>
  </Members>
</Type>