<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71540fca903b9568b09aa47c0ad13790c2047d5e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供資料給控制項的 <see langword="SendMailError" /> 事件，例如 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 控制項、<see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> 控制項 和 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> 控制項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件包含 SMTP 郵件提供者無法傳送電子郵件訊息時引發的錯誤訊息<xref:System.Web.UI.WebControls.ChangePassword>控制項，或<xref:System.Web.UI.WebControls.CreateUserWizard>控制項。 在這種情況下，<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件傳送至<xref:System.Web.UI.WebControls.SendMailErrorEventHandler>。  
  
 建立<xref:System.Web.UI.WebControls.SendMailErrorEventHandler>處理事件的委派。 處理事件，可讓您的 Web 應用程式繼續執行，即使發生例外狀況。 它並不重要的電子郵件訊息傳送時，這非常有用。 例如，當使用者正在執行一個多步驟的精靈時，就會發生例外狀況，可以記錄錯誤、 顯示資訊的訊息給使用者，並允許使用者在完成精靈幫助。  
  
 檢查<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>屬性來判斷實際造成例外狀況。 最常見的例外狀況的原因是在組態錯誤[ &lt;smtp&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)的電腦組態檔。 雖然錯誤像這通常會發現在開發期間偵錯應用程式，郵件伺服器可能會失敗非預期地在生產環境中，和您必須決定是否要讓整個應用程式在此情況下失敗。 如果沒有，則處理該事件可讓您的應用程式繼續執行。  
  
 您必須設定<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性`true`來表示已處理，否則為例外狀況，例外狀況重新擲回，並將包含原始的呼叫堆疊和錯誤訊息。  
  
 如果您未建立事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>事件，或如果您建立事件處理常式，但保留<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性設定為`false`Web 應用程式會停止執行時傳送電子郵件，發生錯誤時，ASP.NET 將顯示錯誤訊息。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A>方法也允許衍生的類別處理事件，而不是此正在進行<xref:System.Web.UI.WebControls.SendMailErrorEventHandler>。 這是處理衍生自類別中的事件的慣用的技巧<xref:System.Web.UI.WebControls.ChangePassword>或<xref:System.Web.UI.WebControls.CreateUserWizard>。  
  
 如需處理事件的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 ASP.NET 網頁<xref:System.Web.UI.WebControls.ChangePassword>Web 控制項，並包含的事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>名為 SendMailError 的事件。 程式碼範例假設 ASP.NET 網站具有已設定為使用 ASP.NET 成員資格和表單驗證，而且已經建立了已知名稱和密碼的使用者。 如需詳細資訊，請參閱[How to： 實作簡單的表單驗證](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密碼變更成功中的程式碼`SendingMail`事件處理常式會嘗試傳送電子郵件給使用者，以確認變更。 為了讓程式碼範例能夠運作的伺服器上時，必須已經設定 SMTP。 如需如何設定 SMTP 伺服器詳細資訊，請參閱[NIB： 如何： 安裝及設定 SMTP 虛擬伺服器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 基於此範例中，則不需要設定 SMTP 伺服器。此範例會建構來傳送電子郵件失敗的測試。  
  
 如果未正確設定郵件伺服器或其他一些錯誤發生，並且無法傳送電子郵件訊息，`SendMailError`呼叫函式。 訊息會顯示給使用者。 此外，事件會記錄到 Windows 應用程式事件記錄檔，以假設事件來源名稱 MySamplesSite 已經存在。 若要建立之指定的事件來源的下列程式碼範例，請參閱。 如需有關如何建立事件來源的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件設定為`true`表示已處理此錯誤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果您需要以程式設計方式加入名 MySamplesSite 為您的應用程式記錄檔的事件來源，請使用下列程式碼範例。 這個事件來源必須存在於第一個程式碼範例正常運作。 下列程式碼範例需要系統管理員權限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>在覆寫<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />基底類別，以啟用已註冊的委派能接收到事件的方法。</para>
    </block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">包含例外狀況的 <see cref="T:System.Exception" /> 物件。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>無法傳送電子郵件訊息時，傳回 SMTP 郵件服務所擲回的例外狀況。</summary>
        <value>包含例外狀況的 <see cref="T:System.Exception" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>屬性包含無法所傳送的電子郵件訊息的 SMTP 郵件提供者所擲回的例外狀況<xref:System.Web.UI.WebControls.ChangePassword>控制項或<xref:System.Web.UI.WebControls.CreateUserWizard>。 這個例外狀況的最常見原因是中的組態錯誤[ &lt;smtp&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)的電腦組態檔，會產生下列例外狀況訊息： `The transport failed to connect to the server.`  
  
 內嵌檔案使用時，如果電子郵件訊息中的錯誤不擲回例外狀況<xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>。 相反地，內嵌的檔案會出現中斷檢視郵件時。  
  
 您必須設定<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>傳遞做為物件`e`參數<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>至`true`來表示已處理，否則為例外狀況，例外狀況重新擲回，並包含原始的呼叫堆疊和錯誤訊息。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 ASP.NET 網頁<xref:System.Web.UI.WebControls.ChangePassword>Web 控制項，並包含的事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>事件名為`SendMailError`。 程式碼範例假設 ASP.NET 網站具有已設定為使用 ASP.NET 成員資格和表單驗證，而且已經建立了已知名稱和密碼的使用者。 如需詳細資訊，請參閱[How to： 實作簡單的表單驗證](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密碼變更成功中的程式碼`SendingMail`事件處理常式會嘗試傳送電子郵件給使用者，以確認變更。 為了讓程式碼範例能夠運作的伺服器上時，必須已經設定 SMTP。 如需如何設定 SMTP 伺服器詳細資訊，請參閱[NIB： 如何： 安裝及設定 SMTP 虛擬伺服器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 基於此範例中，則不需要設定 SMTP 伺服器。此範例會建構來傳送電子郵件失敗的測試。  
  
 如果未正確設定郵件伺服器或其他一些錯誤發生，並且無法傳送電子郵件訊息，`SendMailError`呼叫函式。 訊息會顯示給使用者。 此外，事件會記錄到 Windows 應用程式事件記錄檔，以假設事件來源名稱 MySamplesSite 已經存在。 若要建立之指定的事件來源的下列程式碼範例，請參閱。 如需有關如何建立事件來源的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件設定為`true`表示已處理此錯誤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果您需要以程式設計方式加入名 MySamplesSite 為您的應用程式記錄檔的事件來源，請使用下列程式碼範例。 這個事件來源必須存在於第一個程式碼範例正常運作。 下列程式碼範例需要系統管理員權限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指出是否已處理包含在 <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" /> 屬性中的 SMTP 例外狀況。</summary>
        <value>如果為 <see langword="true" />，例外狀況將會由 <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" /> 委派使用及處理。 如果為 <see langword="false" />，會重新擲回例外狀況，包含原始呼叫堆疊及錯誤訊息。  
  
 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性會指出如果<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>已經處理過。 SMTP 郵件提供者引發例外狀況，無法傳送電子郵件訊息時<xref:System.Web.UI.WebControls.ChangePassword>控制項或<xref:System.Web.UI.WebControls.CreateUserWizard>。 最常見的例外狀況的原因是在組態錯誤[ &lt;smtp&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)的電腦組態檔。 雖然錯誤像這通常會發現在開發期間偵錯應用程式，郵件伺服器可能會失敗非預期地在生產環境中，和您必須決定是否要讓整個應用程式在此情況下失敗。 如果沒有，則處理該事件可讓您的應用程式繼續執行。  
  
 如果您未建立事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>事件，或如果您建立事件處理常式，但保留<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性設定為`false`Web 應用程式會停止執行時傳送電子郵件，發生錯誤時，ASP.NET 將顯示錯誤訊息。 處理事件，可讓您的 Web 應用程式繼續執行，即使發生例外狀況。 它並不重要的電子郵件訊息傳送時，這非常有用。 例如，當使用者正在執行一個多步驟的精靈時，就會發生例外狀況，可以記錄錯誤、 顯示資訊的訊息給使用者，並允許使用者在完成精靈幫助。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 ASP.NET 網頁<xref:System.Web.UI.WebControls.ChangePassword>Web 控制項，並包含的事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>事件名為`SendMailError`。 程式碼範例假設 ASP.NET 網站具有已設定為使用 ASP.NET 成員資格和表單驗證，而且已經建立了已知名稱和密碼的使用者。 如需詳細資訊，請參閱[How to： 實作簡單的表單驗證](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密碼變更成功中的程式碼`SendingMail`事件處理常式會嘗試傳送電子郵件給使用者，以確認變更。 為了讓程式碼範例能夠運作的伺服器上時，必須已經設定 SMTP。 如需如何設定 SMTP 伺服器詳細資訊，請參閱[NIB： 如何： 安裝及設定 SMTP 虛擬伺服器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 基於此範例中，則不需要設定 SMTP 伺服器。此範例會建構來傳送電子郵件失敗的測試。  
  
 如果未正確設定郵件伺服器或其他一些錯誤發生，並且無法傳送電子郵件訊息，`SendMailError`呼叫函式。 訊息會顯示給使用者。 此外，事件會記錄到 Windows 應用程式事件記錄檔，以假設事件來源名稱 MySamplesSite 已經存在。 若要建立之指定的事件來源的下列程式碼範例，請參閱。 如需有關如何建立事件來源的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件設定為`true`表示已處理此錯誤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果您需要以程式設計方式加入名 MySamplesSite 為您的應用程式記錄檔的事件來源，請使用下列程式碼範例。 這個事件來源必須存在於第一個程式碼範例正常運作。 下列程式碼範例需要系統管理員權限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
  </Members>
</Type>