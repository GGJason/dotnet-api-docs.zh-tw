<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61abfc577d18a831cc93b16ea00f859bdcb36388" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583009" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示嵌入使用 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 類別所建構之電子郵件訊息的項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject>表示要內嵌在郵件訊息中的項目。 這些內嵌項目可以是例如公司標誌的影像檔。 每個內嵌的項目被指定識別項和路徑。  
  
 若要確保電子郵件訊息檔案內內嵌的物件會正確顯示，必須符合下列條件：  
  
-   郵件訊息的 HTML 格式。  
  
-   項目屬於的映像檔 （.jpg、.gif、.bmp 等等）。  
  
-   中指定的 HTML 格式主體檔案<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>屬性包含參考映像檔案使用下列語法：  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 如果<xref:System.Web.UI.WebControls.EmbeddedMailObject>會加入至郵件訊息，而且無法滿足所有先前指定的需求，它將最有可能會顯示為 mail 郵件的附件。 如果是郵件訊息中的識別項所參考的項目，但不是包含做為內嵌的項目，它會顯示為中斷附件檢視郵件時。  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>儲存的集合<xref:System.Web.UI.WebControls.EmbeddedMailObject>單一郵件訊息的物件。 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>正由<xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>屬性<xref:System.Web.UI.WebControls.MailDefinition>物件來建立電子郵件訊息。  
  
 允許的內嵌的物件的郵件會藉由設定下列 Web 控制項中可設定其<xref:System.Web.UI.WebControls.MailDefinition>屬性以宣告方式：  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  中的值<xref:System.Web.UI.WebControls.EmbeddedMailObject>和<xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>物件不會儲存在檢視狀態。 這可防止惡意使用者探索伺服器的路徑資訊。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 ASP.NET 網頁<xref:System.Web.UI.WebControls.ChangePassword>Web 控制項，並包含的事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名為`SendingMail`。 程式碼範例假設 ASP.NET 網站具有已設定為使用 ASP.NET 成員資格和表單驗證，而且已經建立了已知名稱和密碼的使用者。 如需詳細資訊，請參閱[How to： 實作簡單的表單驗證](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密碼變更成功中的程式碼`SendingMail`事件處理常式會嘗試傳送電子郵件給使用者，以確認變更。 為了讓程式碼範例能夠運作的伺服器上時，必須已經設定 SMTP。 如需如何設定 SMTP 伺服器詳細資訊，請參閱[NIB： 如何： 安裝及設定 SMTP 虛擬伺服器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 基於此範例中，則不需要設定 SMTP 伺服器。此範例會建構來傳送電子郵件失敗的測試。  
  
 如果未正確設定郵件伺服器或其他一些錯誤發生，並且無法傳送電子郵件訊息，`SendMailError`呼叫函式。 訊息會顯示給使用者。 此外，事件會記錄到 Windows 應用程式事件記錄檔，以假設事件來源名稱 MySamplesSite 已經存在。 若要建立之指定的事件來源的下列程式碼範例，請參閱。 如需有關如何建立事件來源的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件設定為`true`表示已處理此錯誤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果您需要以程式設計方式加入名 MySamplesSite 為您的應用程式記錄檔的事件來源，請使用下列程式碼範例。 這個事件來源必須存在於第一個程式碼範例正常運作。 下列程式碼範例需要系統管理員權限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下列範例程式碼可以當做 ChangePasswordMail.htm 檔案，如上述範例程式碼。  
  
> [!IMPORTANT]
>  傳送使用者帳戶名稱或電子郵件中的密碼可能會造成安全性威脅。 電子郵件訊息通常會以純文字傳送，並可以讀取由特殊 「 探查 」 應用程式的網路。  為了提高安全性，請使用如下所述的防護功能[保護登入控制項](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要取得或設定內嵌項目的識別碼，使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>屬性。 取得或設定路徑為內嵌的項目，請使用<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>屬性。 這兩個屬性必須設定為成功在郵件中內嵌項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">做為要嵌入郵件訊息中之項目識別項的名稱。 如需詳細資訊，請參閱<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />。</param>
        <param name="path">用來擷取要嵌入郵件訊息中之項目的路徑。 如需詳細資訊，請參閱<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 類別的新執行個體，並使用指定的識別項名稱及路徑填入物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範使用 ASP.NET 網頁的程式碼後置範例<xref:System.Web.UI.WebControls.ChangePassword>控制項，並包含的事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名為`SendingMail`。 這個程式碼範例假設 ASP.NET 網站具有已設定為使用 ASP.NET 成員資格和表單驗證，而且已經建立了已知名稱和密碼的使用者。 如需詳細資訊，請參閱[How to： 實作簡單的表單驗證](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密碼變更成功中的程式碼`SendingMail`事件處理常式會嘗試傳送電子郵件給使用者，以確認變更。 為了讓程式碼範例能夠運作的伺服器上時，必須已經設定 SMTP。 如需如何設定 SMTP 伺服器詳細資訊，請參閱[NIB： 如何： 安裝及設定 SMTP 虛擬伺服器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 基於此範例中，則不需要設定 SMTP 伺服器。此範例會建構來傳送電子郵件失敗的測試。  
  
 如果未正確設定郵件伺服器或其他一些錯誤發生，並且無法傳送電子郵件訊息，`SendMailError`呼叫函式。 訊息會顯示給使用者。 此外，事件會記錄到 Windows 應用程式事件記錄檔，以假設事件來源名稱 MySamplesSite 已經存在。 若要建立之指定的事件來源的下列程式碼範例，請參閱。 如需有關如何建立事件來源的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件設定為`true`表示已處理此錯誤。  
  
 下列程式碼範例示範如何使用.aspx 網頁。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 下列程式碼範例示範如何使用程式碼後置檔案。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 如果您需要以程式設計方式加入名 MySamplesSite 為您的應用程式記錄檔的事件來源，請使用下列程式碼範例。 這個事件來源必須存在於第一個程式碼範例正常運作。 下列程式碼範例需要系統管理員權限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下列範例程式碼可以當做 ChangePasswordMail.htm 檔案，如上述範例程式碼。  
  
> [!IMPORTANT]
>  傳送使用者帳戶的名稱或電子郵件訊息中的密碼可能會造成安全性威脅。 電子郵件訊息通常會以純文字傳送，並可以讀取由特殊 「 探查 」 應用程式的網路。  為了提高安全性，請使用如下所述的防護功能[保護登入控制項](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要用為嵌入在以 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 類別建構之郵件訊息中的項目識別項名稱。</summary>
        <value>傳回要嵌入郵件訊息中的項目識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>屬性會指定要使用以宣告方式建構 mail 郵件中內嵌的項目識別項<xref:System.Web.UI.WebControls.MailDefinition>類別。 識別碼用來對應中所包含的項目<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>屬性，其主體中指定的檔案中的適當位置<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>屬性，請使用下列語法：  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 通常，項目屬於的映像檔。 預設值為<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>屬性為空字串。  
  
 它是在您任何內嵌影像的郵件訊息中設定的替代文字屬性的協助工具設計的最佳作法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 ASP.NET 網頁<xref:System.Web.UI.WebControls.ChangePassword>Web 控制項，並包含的事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名為`SendingMail`。 程式碼範例假設 ASP.NET 網站具有已設定為使用 ASP.NET 成員資格和表單驗證，而且已經建立了已知名稱和密碼的使用者。 如需詳細資訊，請參閱[How to： 實作簡單的表單驗證](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密碼變更成功中的程式碼`SendingMail`事件處理常式會嘗試傳送電子郵件給使用者，以確認變更。 為了讓程式碼範例能夠運作的伺服器上時，必須已經設定 SMTP。 如需如何設定 SMTP 伺服器詳細資訊，請參閱[NIB： 如何： 安裝及設定 SMTP 虛擬伺服器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 基於此範例中，則不需要設定 SMTP 伺服器。此範例會建構來傳送電子郵件失敗的測試。  
  
 如果未正確設定郵件伺服器或其他一些錯誤發生，並且無法傳送電子郵件訊息，`SendMailError`呼叫函式。 訊息會顯示給使用者。 此外，事件會記錄到 Windows 應用程式事件記錄檔，以假設事件來源名稱 MySamplesSite 已經存在。 若要建立之指定的事件來源的下列程式碼範例，請參閱。 如需有關如何建立事件來源的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件設定為`true`表示已處理此錯誤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果您需要以程式設計方式加入名 MySamplesSite 為您的應用程式記錄檔的事件來源，請使用下列程式碼範例。 這個事件來源必須存在於第一個程式碼範例正常運作。 下列程式碼範例需要系統管理員權限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下列範例程式碼可以當做 ChangePasswordMail.htm 檔案，如上述範例程式碼。  
  
> [!IMPORTANT]
>  傳送使用者帳戶的名稱或電子郵件訊息中的密碼可能會造成安全性威脅。 電子郵件訊息會以純文字傳送，並可以讀取由特殊 「 探查 」 應用程式的網路。  為了提高安全性，請使用如下所述的防護功能[保護登入控制項](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來擷取要嵌入以 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 類別建構之郵件訊息的項目路徑。</summary>
        <value>傳回要嵌入郵件訊息中的項目路徑。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>屬性會指定您想要使用以宣告方式建構的郵件中內嵌項目的路徑<xref:System.Web.UI.WebControls.MailDefinition>物件。 中的檔案路徑<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>必須 C:\MyServer\Banner.gif 如下的路徑。 一般而言，內嵌的項目是影像檔。 如果郵件訊息中的識別項所參考的映像檔，但不是包含訊息中，檢視電子郵件訊息時，影像會顯示為毀損的附件。  
  
 它是在您任何內嵌影像的郵件訊息中設定的替代文字屬性的協助工具設計的最佳作法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 ASP.NET 網頁<xref:System.Web.UI.WebControls.ChangePassword>Web 控制項，並包含的事件處理常式<xref:System.Web.UI.WebControls.ChangePassword.SendingMail>事件名為`SendingMail`。 程式碼範例假設 ASP.NET 網站具有已設定為使用 ASP.NET 成員資格和表單驗證，而且已經建立了已知名稱和密碼的使用者。 如需詳細資訊，請參閱[How to： 實作簡單的表單驗證](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)。  
  
 如果密碼變更成功中的程式碼`SendingMail`事件處理常式會嘗試傳送電子郵件給使用者，以確認變更。 為了讓程式碼範例能夠運作的伺服器上時，必須已經設定 SMTP。 如需如何設定 SMTP 伺服器詳細資訊，請參閱[NIB： 如何： 安裝及設定 SMTP 虛擬伺服器在 IIS 6.0 中](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)。 基於此範例中，則不需要設定 SMTP 伺服器。此範例會建構來傳送電子郵件失敗的測試。  
  
 如果未正確設定郵件伺服器或其他一些錯誤發生，並且無法傳送電子郵件訊息，`SendMailError`呼叫函式。 訊息會顯示給使用者。 此外，事件會記錄到 Windows 應用程式事件記錄檔，以假設事件來源名稱 MySamplesSite 已經存在。 若要建立之指定的事件來源的下列程式碼範例，請參閱。 如需有關如何建立事件來源的詳細資訊，請參閱[中 ASP.NET Web Form 網頁的伺服器事件處理](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>屬性<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>物件設定為`true`表示已處理此錯誤。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果您需要以程式設計方式加入名 MySamplesSite 為您的應用程式記錄檔的事件來源，請使用下列程式碼範例。 這個事件來源必須存在於第一個程式碼範例正常運作。 下列程式碼範例需要系統管理員權限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下列範例程式碼可以當做 ChangePasswordMail.htm 檔案，如上述範例程式碼。  
  
> [!IMPORTANT]
>  傳送使用者帳戶的名稱或電子郵件訊息中的密碼可能會造成安全性威脅。 電子郵件訊息通常會以純文字傳送，並可以讀取由特殊 「 探查 」 應用程式的網路。  為了提高安全性，請使用如下所述的防護功能[保護登入控制項](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
  </Members>
</Type>