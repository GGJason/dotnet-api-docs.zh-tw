<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f90f7b29eb010b5251f3890771308c516407037" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600752" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在樹狀中顯示階層式資料，例如目錄。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#introduction)  
  
-   [節點](#nodes)  
  
-   [靜態資料](#static_data)  
  
-   [繫結至資料](#binding_to_data)  
  
-   [動態節點母體擴展](#dynamic_node_population)  
  
-   [自訂使用者介面](#customizing_the_user_interface)  
  
-   [事件](#events)  
  
-   [捲動](#scrolling)  
  
-   [協助工具選項](#accessibility)  
  
-   [宣告式語法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>簡介  
 <xref:System.Web.UI.WebControls.TreeView>控制項用來顯示階層式資料，例如資料表的目錄或檔案目錄樹狀結構，並支援下列功能：  
  
-   資料繫結，可讓控制項繫結至 XML，表格式或關聯式資料的節點。  
  
-   站台瀏覽與整合<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項。  
  
-   節點可以顯示為純文字或超連結的文字。  
  
-   以程式設計方式存取<xref:System.Web.UI.WebControls.TreeView>建立樹狀結構、 填入節點等動態設定屬性的物件模型。  
  
-   （在支援的瀏覽器） 的用戶端節點母體擴展。  
  
-   顯示每個節點旁邊的核取方塊的功能。  
  
-   透過佈景主題、 使用者定義的映像和樣式的可自訂外觀。  
  
    > [!NOTE]
    >  <xref:System.Web.UI.WebControls.TreeView>控制項用來在內部使用<xref:System.Web.UI.UpdatePanel>控制時，才<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>設`true`。 <xref:System.Web.UI.UpdatePanel> 控制項用來更新選取的區域，而不是整個頁面更新與回傳的頁面。 如需詳細資訊，請參閱[UpdatePanel 控制項概觀](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)和[局部網頁呈現概觀](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
<a name="nodes"></a>   
## <a name="nodes"></a>節點  
 <xref:System.Web.UI.WebControls.TreeView>控制項所組成的節點。 在樹狀目錄中的每個項目稱為一個節點，而由<xref:System.Web.UI.WebControls.TreeNode>物件。 節點類型的定義方式如下：  
  
-   包含其他節點的節點稱為*父節點*。  
  
-   所包含的另一個節點的節點稱為*子節點*。  
  
-   沒有子系的節點稱為*分葉節點*。  
  
-   不包含的任何其他節點，但不是所有其他節點上的階節點是*根節點*。  
  
 節點可以是父代和子系，但根，父代，而且分葉節點為互斥。 節點的數個視覺和行為屬性會取決於節點是根、 子系或分葉節點。  
  
 雖然一般樹狀結構只能有一個根節點，<xref:System.Web.UI.WebControls.TreeView>控制項可讓您將多個根節點加入至樹狀結構。 當您想要顯示項目清單，而不會顯示單一根節點，例如產品類別目錄的清單，這非常有用。  
  
 每個節點都<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性和<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性。 值<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性顯示在<xref:System.Web.UI.WebControls.TreeView>，雖然<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性用來儲存節點，例如傳遞至與節點相關聯的回傳事件的資料有關的任何其他資料。  
  
 節點可以是兩個模式之一： 選取模式和瀏覽模式。 根據預設，節點處於選取模式。 若要將節點放入瀏覽模式中，設定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性的節點為空字串以外的值 ("")。 節點處於選取模式中，設定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性的節點為空字串 ("")。  
  
> [!NOTE]
>  某些網際網路瀏覽器有可能會影響效能的限制<xref:System.Web.UI.WebControls.TreeView>控制項。 例如，Microsoft Internet Explorer 6.0 有回傳的 2067年字元的 URL 字元限制。 如果節點的 URL 中的字元數大於此數目，展開該節點將會失敗並擲回任何例外狀況。  
  
<a name="static_data"></a>   
## <a name="static-data"></a>靜態資料  
 最簡單的資料模型的<xref:System.Web.UI.WebControls.TreeView>控制項是靜態的資料。 若要顯示使用宣告式語法的靜態資料，第一次建立巢狀開啟和關閉`<Nodes>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.TreeView>控制項。 接下來，建立巢狀結構的樹狀結構`<asp:TreeNode>`開頭和結尾之間的項目`<Nodes>`標記。 每個`<asp:TreeNode>`元素代表在樹狀目錄中的節點，並將對應至<xref:System.Web.UI.WebControls.TreeNode>物件。 您可以設定每個節點的屬性所設定的屬性其`<asp:TreeNode>`項目。 若要建立子節點，巢狀其他`<asp:TreeNode>`開頭和結尾之間的項目`<asp:TreeNode>`父節點的標記。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>繫結至資料  
 <xref:System.Web.UI.WebControls.TreeView>控制項可以也繫結至資料。 您可以使用兩種方法之一來繫結<xref:System.Web.UI.WebControls.TreeView>控制項至適當的資料來源類型：  
  
-   <xref:System.Web.UI.WebControls.TreeView>控制項就可以使用任何資料來源控制項實作<xref:System.Web.UI.IHierarchicalDataSource>介面，例如<xref:System.Web.UI.WebControls.XmlDataSource>控制項或<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項。 若要繫結至資料來源控制項，將<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>屬性<xref:System.Web.UI.WebControls.TreeView>控制權傳輸至<xref:System.Web.UI.Control.ID%2A>資料來源控制項的值。 <xref:System.Web.UI.WebControls.TreeView>控制項自動繫結至指定的資料來源控制項。 這是慣用的方法繫結至資料。  
  
-   <xref:System.Web.UI.WebControls.TreeView>控制項可以也繫結至<xref:System.Xml.XmlDocument>物件或<xref:System.Data.DataSet>關聯的物件。 若要繫結至其中一個資料來源，設定<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>屬性<xref:System.Web.UI.WebControls.TreeView>控制權傳輸至資料來源，然後再呼叫<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>方法。  
  
 當繫結至資料來源，其中每個資料項目都包含多個屬性 （例如 XML 項目具有多個屬性），節點會顯示所傳回的值`ToString`資料項目的 預設的方法。 在 XML 項目，該節點會顯示項目名稱，顯示的樹狀結構的基礎結構，但沒有很有用。 您可以藉由指定樹狀節點繫結使用的節點繫結至特定資料的項目屬性<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合包含`TreeNodeBinding`物件，定義資料項目及它所繫結的節點之間的關聯性。 您可以指定要顯示的節點中的繫結和資料項目屬性的準則。 如需有關樹狀節點繫結的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeNodeBinding>。  
  
> [!IMPORTANT]
>  惡意使用者可以建立回呼要求並取得資料的節點<xref:System.Web.UI.WebControls.TreeView>網頁開發人員不顯示控制項。 因此，資料來源必須實作之資料的安全性。 請勿使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>屬性隱藏的資料。  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>動態節點母體擴展  
 某些情況下，它不是靜態定義樹狀結構，因為資料來源傳回太多資料，或是要顯示的資料取決於您在執行階段取得的資訊。 因為這個緣故，<xref:System.Web.UI.WebControls.TreeView>控制項支援動態節點母體擴展。 當<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>節點的屬性設定為`true`，在執行階段的節點展開時填入該節點。 若要以動態方式填入節點，您必須定義的事件處理方法，包含該邏輯填入節點<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件。  
  
 瀏覽器支援回呼指令碼也可以利用用戶端節點母體擴展。 （這包括 Internet Explorer 5.5 及更新版本和一些其他瀏覽器）。可讓用戶端節點擴展<xref:System.Web.UI.WebControls.TreeView>控制項填入用戶端指令碼，當使用者展開節點，而不需要往返伺服器的節點。 如需有關用戶端節點母體擴展的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>自訂使用者介面  
 有許多方法可自訂的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。 首先，您可以指定不同的樣式 （例如 字型和色彩） 的每個節點類型。  
  
 如果您使用階層式樣式表 (CSS) 來自訂控制項的外觀，使用內嵌樣式或個別的 CSS 檔案，但非兩者。 使用內嵌樣式和個別的 CSS 檔案，可能會造成非預期的結果。 如需有關如何使用控制項的樣式表的詳細資訊，請參閱[Web 伺服器控制項和 CSS 樣式](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)。  
  
 下表列出可用的節點樣式。  
  
|節點的樣式屬性|描述|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|當滑鼠指標進入此節點的樣式設定。|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|分葉節點的樣式設定。|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|節點的預設樣式設定。|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|父節點的樣式設定。|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|根節點的樣式設定。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|選取節點的樣式設定。|  
  
 您也可以藉由控制節點在樹狀結構中的特定深度樣式<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>集合。 集合中的第一個樣式會對應至節點在樹狀目錄中的第一個層級的樣式。 集合中的第二個樣式會對應為樣式的樹狀目錄中，等第二個層級的節點。 這是最常用於產生目錄樣式導覽功能表的資料表位置的特定深度的節點都必須有相同的外觀，不論它們是否具有子節點。  
  
> [!NOTE]
>  如果所定義的特定深度層級使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>集合，該樣式會覆寫任何根、 父系或分葉節點樣式設定為在該深度的節點。  
  
 若要變更控制項的外觀的另一個方法是自訂映像中所顯示的<xref:System.Web.UI.WebControls.TreeView>控制項。 您可以指定您自己的映像，以不同的組件控制項的自訂集，藉由設定下表中所顯示的內容。  
  
|影像屬性|描述|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|可摺疊節點指示器顯示影像的 URL。 此映像通常是減號 （-）。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開節點指示器顯示之影像 URL。 此映像通常是加號 （+）。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|包含用來連接到子節點的父節點的線條影像的資料夾 URL。 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>屬性也必須設定為`true`造成影響的這個屬性。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|無法展開節點指示器顯示影像的 URL。|  
  
> [!NOTE]
>  您不需要自訂每個映像的屬性。 如果未明確地設定影像屬性，則會使用內建的預設映像。  
  
 <xref:System.Web.UI.WebControls.TreeView>控制項也可讓您顯示節點旁邊的核取方塊。 當<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>以外屬性設定為值`TreeNodeTypes.None`，指定的節點型別旁顯示核取方塊。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性可以設定為的位元組合<xref:System.Web.UI.WebControls.TreeNodeTypes>列舉成員值。  
  
 網頁回傳至伺服器，每次<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>集合會自動填入選取的節點。 當顯示核取方塊時，您可以使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>執行自訂常式，每當發佈至伺服器期間的核取方塊的狀態變更事件。  
  
<a name="events"></a>   
## <a name="events"></a>事件  
 <xref:System.Web.UI.WebControls.TreeView>控制項提供數個事件，您可以程式設計的。 這可讓您在事件發生時執行自訂的常式。 下表列出支援的事件<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
|Event - 事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|發生時的核取方塊<xref:System.Web.UI.WebControls.TreeView>控制項變更發佈至伺服器之間的狀態。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|當在 <xref:System.Web.UI.WebControls.TreeView> 控制項中選取節點時就會發生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|當在 <xref:System.Web.UI.WebControls.TreeView> 控制項中展開節點時就會發生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|當在 <xref:System.Web.UI.WebControls.TreeView> 控制項中摺疊節點時就會發生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|當在 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 控制項中展開 <xref:System.Web.UI.WebControls.TreeView> 屬性設為 `true` 的節點時發生。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|當資料項目繫結至 <xref:System.Web.UI.WebControls.TreeView> 控制項中的節點時就會發生。|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>捲動  
 <xref:System.Web.UI.WebControls.TreeView>控制項沒有內建捲動。 若要加入捲動功能，加上<xref:System.Web.UI.WebControls.TreeView>控制<xref:System.Web.UI.WebControls.Panel>控制，並將捲軸來加入<xref:System.Web.UI.WebControls.Panel>控制項。 如需詳細資訊，請參閱[面板 Web 伺服器控制項概觀](http://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b)。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>協助工具選項  
 協助工具標準，可能不符合呈現，根據預設，此控制項的標記。 如需對這個控制項的協助工具支援的詳細資訊，請參閱[ASP.NET 控制項和協助工具](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 本章節包含七個的程式碼範例：  
  
-   第一個程式碼範例示範如何設定第二個程式碼範例中的框架。  
  
-   第二個程式碼範例示範如何使用宣告式語法，來顯示靜態資料<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
-   第三個的程式碼範例示範如何將繫結<xref:System.Web.UI.WebControls.TreeView>XML 資料來源的控制項。  
  
-   第四個程式碼範例會提供第三個程式碼範例中的範例 XML 資料。  
  
-   第五個的程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView>控制項繫結至站台瀏覽<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項。  
  
-   第六個程式碼範例提供第五個的程式碼範例的範例網站地圖資料。  
  
-   第七個的程式碼範例示範如何擴展中的節點<xref:System.Web.UI.WebControls.TreeView>從用戶端的控制項。  
  
 下列程式碼範例示範如何設定如下列程式碼範例的框架。  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 下列程式碼範例示範如何使用宣告式語法，來顯示靜態資料<xref:System.Web.UI.WebControls.TreeView>控制項。 本範例是上述範例中的框架組用來顯示資料表的內容。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 下列程式碼範例示範如何將繫結<xref:System.Web.UI.WebControls.TreeView>XML 資料來源的控制項。 針對此範例正常運作，您必須複製此程式碼範例中，為 Book.xml 檔案之後所提供的範例 XML 資料。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 下列程式碼範例會提供 XML 資料，上述範例。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView>控制項繫結至站台瀏覽<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項。 針對此範例正常運作，您必須複製範例站台對應資料，此程式碼範例中，為 Web.sitemap 檔案之後提供。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 下列程式碼範例，上述程式碼範例提供範例網站地圖資料。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 下列程式碼範例示範如何擴展中的節點<xref:System.Web.UI.WebControls.TreeView>從用戶端的控制項。 啟用用戶端節點母體擴展時，節點會自動填入用戶端，而不需回傳至伺服器上。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.TreeView" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>建構函式來建立和初始化的新執行個體<xref:System.Web.UI.WebControls.TreeView>類別。 若要加入<xref:System.Web.UI.WebControls.TreeView>動態控制項加入頁面中，建立新<xref:System.Web.UI.WebControls.TreeView>物件、 設定其屬性，並再將它加入<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>容器集合控制項，例如<xref:System.Web.UI.WebControls.PlaceHolder>控制項。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>建構函式來加入<xref:System.Web.UI.WebControls.TreeView>以動態方式控制的頁面。 第二個程式碼範例會提供第一個程式碼範例中的範例 XML 資料。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>建構函式來加入<xref:System.Web.UI.WebControls.TreeView>以動態方式控制的頁面。 針對此範例正常運作，您必須複製此程式碼範例中，為 Book.xml 檔案後所提供的 XML 資料範例。  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 下列程式碼範例會提供 XML 資料，上述範例。  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要在用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將需要呈現的 HTML 屬性和樣式加入至指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 控制項中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A>方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項是否自動產生樹狀節點繫結。</summary>
        <value>
          <see langword="true" /> 表示讓 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項自動產生樹狀節點繫結，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 樹狀節點繫結會定義資料項目及它所繫結的節點之間的關聯性。 繫結至其中的每個資料項目包含多個屬性 （例如 XML 項目具有多個屬性），資料來源時<xref:System.Web.UI.WebControls.TreeView>控制項需要知道哪些資料的項目要繫結屬性的<xref:System.Web.UI.WebControls.TreeNode>屬性。 如果<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.TreeView>控制項自動產生預設樹狀節點繫結設定<xref:System.Web.UI.WebControls.TreeNode.Text%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>為值的繫結相關聯的物件所傳回`ToString`資料項目的方法。  
  
> [!NOTE]
>  自動產生的樹狀節點繫結不會加入至<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。  
  
 在 XML 項目時，所傳回的值的情況下`ToString`方法則是項目名稱，顯示的 XML 檔案的基礎結構，但沒有很有用。 若要建立更有用的樹狀結構，您必須定義您自己的樹狀節點繫結填入<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合。  
  
> [!NOTE]
>  如果您定義<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合，<xref:System.Web.UI.WebControls.TreeView>控制項而不是自動產生的樹狀節點繫結中使用這些值。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何設定以停用自動樹狀結構節點繫結產生<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>屬性`false`。 第二個程式碼範例的第一個程式碼範例提供範例網站地圖資料。  
  
 下列程式碼範例示範如何設定以停用自動樹狀結構節點繫結產生<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>屬性`false`。 A<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合，然後定義建立關聯性中的資料項目之間<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項和節點<xref:System.Web.UI.WebControls.TreeView>控制項。 針對此範例正常運作，您必須複製範例站台對應資料，此程式碼範例中，為 Web.sitemap 檔案之後提供。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 下列程式碼範例會提供範例網站導覽資料，上述範例。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 物件的集合，這些物件表示顯示已選取核取方塊之 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中的節點。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />，包含顯示已選取核取方塊之 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中的節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 核取方塊會顯示在<xref:System.Web.UI.WebControls.TreeView>控制項 (藉由設定<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性以外的值為`TreeNodeType.None`)，使用<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>屬性來判斷哪一個節點會顯示選取的核取方塊。 這個集合通常用於逐一查看所有已選取的核取方塊，在樹狀目錄中的節點。  
  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>就會引發事件時的核取方塊<xref:System.Web.UI.WebControls.TreeView>控制項變更發佈至伺服器之間的狀態。 這可讓您提供執行自訂的常式，例如更新資料庫或顯示的內容時就會發生此事件的事件處理方法。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>樹狀結構的深度優先周遊填入集合： 之前的下一個父節點會填入處理每個父節點及其子節點下。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>屬性來判斷哪些節點在選取的核取方塊<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>關閉樹狀結構中的每個節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>方法提供便利的方式關閉每個節點在樹狀目錄中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>摺疊中的所有節點的方法<xref:System.Web.UI.WebControls.TreeView>控制項在相同的時間。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為可摺疊節點指示器顯示之影像的工具提示。</summary>
        <value>為可摺疊節點指示器顯示之影像的工具提示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>屬性來指定可摺疊的映像的工具提示。 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。  
  
 這個屬性的值會儲存檢視狀態中。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>屬性，以指定的映像，可摺疊節點指示器會顯示工具提示。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定可摺疊節點指示器之自訂影像的 URL。</summary>
        <value>為可摺疊節點顯示之自訂影像的 URL。 預設為空字串 ("")，會顯示預設的減號 (-) 影像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性來指定自訂映像可摺疊節點的指標。 此映像可摺疊的節點旁會顯示，而且通常是減號 （-）。  
  
 當<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.TreeView>控制項顯示加號 （+） 或減號 sign(-) 或影像預留位置，表示節點是否可展開、 摺疊，或無法展開分別節點旁邊。 您可以指定第一個設定的自訂映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性`TreeViewImageSet.Custom`，然後設定<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性，以自訂影像的 Url。 如果未不指定任何影像，則會使用預設映像。 若要隱藏展開節點指示器，設定<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性`false`。  
  
> [!NOTE]
>  若要確認節點在正確對齊<xref:System.Web.UI.WebControls.TreeView>控制使用自訂映像時，請確定所指定的所有映像<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性有相同的維度。  
  
 當使用自訂映像可摺疊節點指標時，您也應該考慮設定<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>屬性來指定映像的工具提示。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性來指定自訂映像可摺疊節點的指標。 程式碼範例，以顯示在控制項中顯示的映像，您必須提供自己的映像和<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性必須設定為`TreeNodeImageSet.Custom`。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立儲存子控制項的集合。</summary>
        <returns>一定會傳回 <see cref="T:System.Web.UI.EmptyControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控制項不支援內嵌的子控制項。 若要防止加入子控制項的已覆寫這個方法，且一律會傳回<xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType>物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 類別的新執行個體。 <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> 為 Helper 方法。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> 的新執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>方法是 helper 方法，傳回的新執行個體<xref:System.Web.UI.WebControls.TreeNode>類別。  
  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>方法主要由控制項開發人員使用。 控制要擴充的開發人員<xref:System.Web.UI.WebControls.TreeView>藉由擴充類別<xref:System.Web.UI.WebControls.TreeNode>類別應該覆寫此方法以傳回物件，衍生自<xref:System.Web.UI.WebControls.TreeNode>。 若要擴充的常見原因<xref:System.Web.UI.WebControls.TreeNode>類別是要覆寫<xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A>和<xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼叫基底類別的 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料繫結控制項應該覆寫<xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>方法，而非<xref:System.Web.UI.WebControls.TreeView.DataBind%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> 物件的集合，這些物件會定義資料項目與其所繫結至的節點之間的關聯性。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />，表示資料項目與其所繫結至的節點之間的關聯性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合包含<xref:System.Web.UI.WebControls.TreeNodeBinding>物件，定義資料項目及它所繫結的節點之間的關聯性。 當繫結至資料來源，其中每個資料項目都包含多個屬性 （例如 XML 項目具有多個屬性），節點會顯示所傳回的值`ToString`資料項目的 預設的方法。 在 XML 項目，該節點會顯示項目名稱，其中顯示基礎結構的樹狀目錄中，不過沒有非常有用。 您可以藉由指定樹狀節點繫結，節點繫結至特定的資料屬性。  
  
 當定義資料項目及節點之間的關聯性，您必須指定繫結和值的屬性繫結準則<xref:System.Web.UI.WebControls.TreeNode>物件。 準則則表示資料的項目應該繫結到節點。 使用節點深度、 資料成員，或兩者，可以指定準則。 節點深度指定節點層級取得繫結。 比方說，如果您指定節點的深度為 0，層級 0 的樹狀結構中的所有節點都繫都結使用樹狀目錄節點繫結。 資料成員基礎資料來源中，指定資料的項目類型，但可以代表不同的資訊，根據資料來源。 例如，資料成員的 XML 項目會指定項目的名稱。  
  
 若為多個<xref:System.Web.UI.WebControls.TreeNodeBinding>物件定義與彼此衝突<xref:System.Web.UI.WebControls.TreeView>控制項適用於樹狀節點繫結，以下列順序的優先順序：  
  
1.  <xref:System.Web.UI.WebControls.TreeNodeBinding>定義深度和資料成員的物件。  
  
2.  <xref:System.Web.UI.WebControls.TreeNodeBinding>定義只深度的物件。  
  
3.  <xref:System.Web.UI.WebControls.TreeNodeBinding>定義資料成員的物件。  
  
4.  <xref:System.Web.UI.WebControls.TreeNodeBinding>深度和資料成員都不會定義的物件。  
  
 如果符合相同的優先順序條件指定了多個繫結，會套用在集合中的第一個繫結。  
  
 一旦建立繫結準則時，您就可以繫結的屬性<xref:System.Web.UI.WebControls.TreeNode>值可繫結的物件。 您可以將繫結至屬性或欄位的資料項目，或顯示靜態值。 如需有關繫結的屬性<xref:System.Web.UI.WebControls.TreeNode>物件的值，請參閱<xref:System.Web.UI.WebControls.TreeNodeBinding>。  
  
 雖然<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>以程式設計方式填入集合，則通常會以宣告方式設定。 若要指定樹狀節點繫結，第一次建立巢狀開啟和關閉`<DataBindings>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.TreeView>控制項。 接下來，將`<asp:TreeNodeBinding>`開頭和結尾之間的項目`<DataBindings>`指定要繫結，您每個樹狀節點的標記。  
  
 資料繫結所設定的建立時<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>屬性<xref:System.Web.UI.WebControls.TreeView>控制權傳輸至`true`，繫結所建立的<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>屬性設定為`true`。 以宣告方式建立的資料繫結具有<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>屬性設定為`false`。 使用宣告式語法可讓您控制個別的資料繫結的行為。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>定義資料項目及它所繫結的節點之間的關聯性的集合。 第二個程式碼範例會提供第一個程式碼範例中的範例 XML 資料。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>定義資料項目及它所繫結的節點之間的關聯性的集合。 針對此範例正常運作，您必須複製此程式碼範例中，為 Book.xml 檔案之後所提供的範例 XML 資料。 這個範例會指定只有<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>繫結屬性。 無法加入輕微的效能改善，藉由指定<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>屬性。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 下列程式碼範例會提供 XML 資料，上述範例。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項是否呈現用戶端指令碼，以處理展開和摺疊事件。</summary>
        <value>
          <see langword="true" /> 表示在相容的瀏覽器上呈現用戶端指令碼，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>屬性來指定是否<xref:System.Web.UI.WebControls.TreeView>控制項呈現相容的瀏覽器，以展開和摺疊的事件處理上的用戶端指令碼。 當這個屬性設定為`true`，相容的瀏覽器執行的程式碼，以展開和摺疊節點，用戶端上。 樹狀目錄節點資料必須事先知道，讓用戶端指令碼工作。 使用用戶端指令碼可避免回傳至伺服器每次節點為展開或摺疊。  
  
 當無法事先知道樹狀節點資料時，填入來自用戶端的節點如果`PopulateNodesFromClient`屬性也會設為`true`。 在此案例中，您也必須提供的事件處理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件，以填入節點。 如需有關用戶端節點母體擴展的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>屬性設定為`false`、<xref:System.Web.UI.WebControls.TreeView>回傳至伺服器每次節點為展開或摺疊的控制項。  
  
 這個屬性的值會儲存檢視狀態中。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>屬性來呈現用來展開和摺疊節點，在相容的瀏覽器上的用戶端指令碼。 第二個程式碼範例會提供第一個程式碼範例中的範例 XML 資料。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>屬性來呈現用來展開和摺疊節點，在相容的瀏覽器上的用戶端指令碼。 請注意到伺服器後，才能展開和摺疊的節點時<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>屬性設定為`false`。 針對此範例正常運作，您必須複製此程式碼範例中，為 Book.xml 檔案之後所提供的範例 XML 資料。  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 下列程式碼範例會提供 XML 資料，上述程式碼範例。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>開啟樹狀結構中的每個節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>方法提供便利的方式來開啟每個節點在樹狀目錄中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>方法，以展開集中的所有節點<xref:System.Web.UI.WebControls.TreeView>控制項在相同的時間。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定第一次顯示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項時展開的層級數目。</summary>
        <value>初次顯示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 時要顯示的深度。 預設值為 -1，會顯示所有節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A>屬性來控制轉換<xref:System.Web.UI.WebControls.TreeView>控制它會顯示第一次。 在後續回傳時，節點會保留其目前的展開的狀態。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為可展開節點指示器顯示之影像的工具提示。</summary>
        <value>為可展開節點指示器顯示之影像的工具提示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>屬性來指定映像的工具提示。 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。  
  
 這個屬性的值會儲存檢視狀態中。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>屬性，以指定的映像，展開節點指示器會顯示工具提示。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定可展開節點指示器之自訂影像的 URL。</summary>
        <value>為可展開節點顯示之自訂影像的 URL。 預設為空字串 ("")，會顯示預設的加號 (+) 影像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>屬性來指定自訂映像可展開的節點指示器。 此映像可展開的節點旁會顯示，而且通常是加號 （+）。  
  
 當<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.TreeView>控制項顯示加號 （+） 或減號 （-） 或影像預留位置，表示節點是否可展開、 摺疊，或無法展開分別節點旁邊。 您可以指定第一個設定的自訂映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性`TreeViewImageSet.Custom`，然後設定<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性，以自訂影像的 Url。 如果未不指定任何影像，則會使用預設映像。 若要隱藏展開節點指示器，設定<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性`false`。  
  
> [!NOTE]
>  若要確認節點在正確對齊<xref:System.Web.UI.WebControls.TreeView>控制使用自訂映像時，請確定所指定的所有映像<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性有相同的維度。  
  
 若要正確地顯示的自訂映像，您可能需要設定<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>至`false`。  
  
 當使用自訂映像可展開節點指標時，您也應該考慮設定<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>屬性來指定映像的工具提示。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>屬性來指定自訂映像可展開的節點指示器。 程式碼範例，以顯示在控制項中顯示的映像，您必須提供自己的映像和<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性必須設定為`TreeNodeImageSet.Custom`。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">節點的值路徑。</param>
        <summary>擷取 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控制項中位於指定值路徑處的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 物件。</summary>
        <returns>位於指定值路徑處的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.FindNode%2A>方法來取得從節點<xref:System.Web.UI.WebControls.TreeView>控制項的指定的值路徑。 值路徑包含表單的目前節點的路徑從根節點的節點值的分隔符號分隔清單。 每個節點會儲存在其值路徑<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>屬性。 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>屬性會指定用來分隔節點值的分隔符號字元。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.FindNode%2A>方法來擷取節點，以從<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回以控制項為目標之回呼事件的結果。</summary>
        <returns>回呼的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控制實作<xref:System.Web.UI.ICallbackEventHandler>介面並使用<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>來擷取資料和<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>方法來擷取的資料傳回至控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 物件的參考，這個物件可讓您設定當滑鼠指標移至節點上時的節點外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的參考，表示當滑鼠指標移至節點上時的節點樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>控制節點的外觀，當滑鼠指標進入此屬性。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>物件 (例如， `HoverNodeStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `HoverNodeStyle.ForeColor`)。 只在指令碼支援的用戶端上支援此功能。  
  
> [!NOTE]
>  若要使用<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>屬性，您必須包含`<head>`具有項目`runat="server"`屬性。  
  
 常見的設定通常包括自訂背景色彩、 前景色彩、 字型屬性和節點間距。 樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，取決於節點類型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定義集合，它會套用在此階段中，覆寫的其他節點樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  樣式設定<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>屬性覆寫中的任何對應節點樣式設定<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>屬性則不會與節點的方式呈現其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性設定為`TreeNodeSelectAction.None`。  
  
 不同於<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>和<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>屬性，也就是<xref:System.Web.UI.WebControls.TreeNodeStyle>物件<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>屬性是<xref:System.Web.UI.WebControls.Style>物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>控制節點的外觀，當滑鼠指標進入此屬性。 讓範例能夠運作，您必須包含`<head>`具有項目`runat="server"`屬性。  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要用於 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的影像群組。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 值。 預設值為 <see langword="TreeViewImageSet.Custom" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性來指定要用於映像群組<xref:System.Web.UI.WebControls.TreeView>控制項。 您可以選取一組預先定義的映像，以提供控制項的標準外觀，或定義您自己自訂的集合。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性不會影響任何節點的樣式設定。 設定適當的樣式屬性，例如<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>屬性，如果您想要新增自訂色彩和間距。  
  
 下表列出的有效值<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性。  
  
|映像集|描述|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|使用箭號映像的預先定義的映像集。|  
|`TreeViewImageSet.BulletedList`|使用菱形式的項目符號影像的預先定義的映像集。|  
|`TreeViewImageSet.BulletedList2`|使用方形的項目符號影像的預先定義的映像集。|  
|`TreeViewImageSet.BulletedList3`|預先定義的分段、菱形項目符號影像集。|  
|`TreeViewImageSet.BulletedList4`|預先定義的替代分段、菱形項目符號影像集，影像的大小會因層級而異。|  
|`TreeViewImageSet.Contacts`|使用 MSN Messenger 映像的預先定義的映像集。|  
|`TreeViewImageSet.Custom`|設定使用者定義的映像。|  
|`TreeViewImageSet.Events`|使用事件記錄檔樣式影像的預先定義的映像集。|  
|`TreeViewImageSet.Faq`|使用常見問題集樣式影像的預先定義的映像集。|  
|`TreeViewImageSet.Inbox`|使用電子郵件樣式影像的預先定義的映像集。|  
|`TreeViewImageSet.News`|預先定義的映像組，使用新聞群組樣式的影像。|  
|`TreeViewImageSet.Simple`|使用簡單的圖形外框的預先定義的映像集。|  
|`TreeViewImageSet.Simple2`|使用簡單填滿的圖案的預先定義的映像集。|  
|`TreeViewImageSet.Msdn`|使用 MSDN 映像的預先定義的映像集。|  
|`TreeViewImageSet.WindowsHelp`|使用 Microsoft Windows 說明的映像的預先定義的映像集。|  
|`TreeViewImageSet.XPFileExplorer`|使用 Microsoft Windows XP 中可用的 Windows 檔案總管映像的預先定義的映像集。|  
  
 在定義一組自訂映像時，您應該指定映像的每一個屬性下表中。 否則，會使用該屬性的預設影像。  
  
|屬性|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|可摺疊節點指標的自訂影像 URL。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開節點指示器的自訂影像 URL。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|包含連接節點的線條的自訂映像資料夾的 URL。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|無法展開節點指標的自訂影像 URL。|  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性來顯示 Windows 檔案總管中的一組影像中<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的影像集不是其中一個 <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 物件的參考，這個物件可讓您設定分葉節點的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的參考，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中分葉節點的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>屬性，即可控制分葉節點中的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>物件 (例如， `LeafNodeStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `LeafNodeStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩、 字型屬性和節點間距。 樣式屬性會依下列優先順序套用：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，取決於節點類型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定義集合，它會套用在此階段中，覆寫的其他節點樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 如果您要產生的目錄樣式導覽功能表，在特定層級的節點都必須有相同的外觀，不論它們是否具有子節點，您可以考慮使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是設定個別的屬性樣式屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>屬性，即可控制分葉節點中的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.Style" /> 物件的集合，表示位於樹狀結構中個別層級處的節點樣式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.StyleCollection" />，表示位於樹狀結構中個別層級處的節點樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>集合，做為個別的樣式屬性的替代方式 (例如<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>屬性) 來控制在個別的階層樹狀結構節點的樣式。 集合中的第一個樣式會對應至第一層的樹狀結構中節點的樣式。 集合中的第二個樣式會對應至樹狀目錄中，等第二層節點的樣式。 這個屬性是最常用來產生目錄樣式導覽功能表的資料表，在特定層級的節點都必須有相同的外觀，不論它們是否具有子節點。  
  
 樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，取決於節點類型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定義集合，它會套用在此階段中，覆寫的其他節點樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>建立導覽功能表的屬性。 控制項始終是完全展開，展開節點指示器與隱藏的映像。 此外，<xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A>屬性用來控制節點層級的間距。  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料夾的路徑，該資料夾包含用於將子節點連接至父節點的線條影像。</summary>
        <value>資料夾的路徑，該資料夾包含用於連接節點的線條影像。 預設值是空字串 ("")，表示未設定 <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> 屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控制項可以顯示連接至父節點的子節點的行時<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>屬性設定為`true`。 當顯示線條時，使用<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>屬性可指定網路存取的資料夾，其中包含一組用於線條預先呈現影像。 下表描述所使用的映像<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
|Image|描述|  
|-----------|-----------------|  
|Dash.gif|樹狀結構中的只能有一個根節點與根節點時，根節點旁邊顯示的線條影像是分葉。|  
|Dashminus.gif|減號 （-） 表示的根節點展開的樹狀結構中只能有一個根節點時，根節點旁邊顯示的影像。|  
|Dashplus.gif|表示根節點已摺疊樹狀結構中只能有一個根節點時，根節點旁顯示加號 （+） 映像。|  
|I.gif|顯示的線條影像將相鄰的節點連接。|  
|L.gif|列旁邊顯示的影像到最後一個節點在分支中分葉節點時。|  
|Lminus.gif|列旁邊顯示的影像到最後一個節點，表示節點已展開分支中。|  
|Lplus.gif|列旁邊顯示的影像到最後一個節點，表示節點已摺疊的分支中。|  
|Minus.gif|顯示包含多個根節點，表示節點的樹狀結構中之第一個根節點旁的減號 （-） 映像會展開。 此映像不包含額外的程式行，而且根節點已經摺疊一次之後，才會顯示。 當第一次載入頁面時，會顯示 Rminus.gif 映像。|  
|Noexpand.gif|空白的空格字元顯示的影像是分葉節點旁邊。 此映像可讓文字垂直對齊。|  
|Plus.gif|顯示包含多個根節點，表示節點的樹狀結構中之第一個根節點旁的加號 （+） 映像會摺疊。 此映像不包含額外的程式行，而且根節點已展開之後，才會顯示。 當第一次載入頁面時，會顯示 Rplus.gif 映像。|  
|R.gif|在包含多個根節點，表示節點的樹狀結構中之第一個根節點旁顯示的線條影像為分葉節點。|  
|Rminus.gif|顯示包含多個根節點，表示節點的樹狀結構中之第一個根節點旁的減號 （-） 映像會展開。 此映像包含額外的程式行，而且只在第一次載入頁面時，才會顯示。 在根目錄之後節點已經摺疊一旦 Minus.gif 影像隨即顯示。|  
|Rplus.gif|顯示包含多個根節點，表示節點的樹狀結構中之第一個根節點旁的加號 （+） 映像會摺疊。 此映像包含額外的程式行，而且只在第一次載入頁面時，才會顯示。 在根目錄之後已經展開節點之後，Plus.gif 影像隨即顯示。|  
|T.gif|顯示的線條影像的中間 （位於 t 交集處） 的樹狀節點旁，表示節點為分葉節點。|  
|Tminus.gif|減號 （-），表示節點已展開的中間 （位於 t 交集處） 的樹狀節點旁顯示影像。|  
|Tplus.gif|指出節點已摺疊的中間 （位於 t 交集處） 的樹狀節點旁顯示加號 （+） 映像。|  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>未設定屬性，<xref:System.Web.UI.WebControls.TreeView>控制項將會使用內建的預設映像 （20 x 20 像素為單位）。  
  
 視覺化的設計工具，例如 Microsoft Visual Studio 提供工具來產生線條影像。  
  
 在執行的階段不會翻轉由右至左顯示的自訂映像。 若要支援左到右及從右至左的網頁，您必須建立兩個方向的影像集合。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>屬性來指定包含要在中顯示的線條影像的資料夾<xref:System.Web.UI.WebControls.TreeView>控制項。 若要使用此範例中，使用事先列設計工具 工具來建立一組線條影像。 請將它們放在目錄內命名 LineImages 範例應用程式的資料夾。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控制項的索引鍵識別項。</param>
        <param name="postCollection">所有內送名稱值的集合。</param>
        <summary>處理 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的回傳資料。</summary>
        <returns>
          如果回傳事件的結果改變了 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的狀態則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 網頁架構會追蹤所有傳回的伺服器控制項`true`從<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>方法呼叫中，然後再叫用<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>這些控制項上的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">物件，包含控制項的已儲存檢視狀態值。</param>
        <summary>載入先前儲存的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項檢視狀態。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定繫結至 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項之樹狀層級的最大數目。</summary>
        <value>繫結至 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項之樹狀層級的最大數目。 預設為 -1，會將資料來源中的所有樹狀層級繫結至控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繫結時<xref:System.Web.UI.WebControls.TreeView>控制項至資料來源，使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>屬性來限制要繫結至控制項的樹狀目錄層級數目。 例如，將此屬性設定為`2`根節點以及任何節點，會立即在根節點下，會將繫結<xref:System.Web.UI.WebControls.TreeView>控制項。 資料來源中的所有其餘節點都會被忽略。  
  
> [!IMPORTANT]
>  惡意使用者可以建立回呼要求並取得資料的節點<xref:System.Web.UI.WebControls.TreeView>網頁開發人員不顯示控制項。 因此，資料來源必須實作之資料的安全性。 請勿使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>屬性隱藏的資料。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>屬性要繫結只有第一個兩個節點層級 （深度 0 和 1）<xref:System.Web.UI.WebControls.TreeView>控制項。 第二個程式碼範例會提供第一個程式碼範例中的範例 XML 資料。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>屬性要繫結只有第一個兩個節點層級 （深度 0 和 1）<xref:System.Web.UI.WebControls.TreeView>控制項。 資料來源中的所有節點層級會被都忽略。 針對此範例正常運作，您必須複製此程式碼範例中，為 Book.xml 檔案之後所提供的範例 XML 資料。  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 下列程式碼範例會提供 XML 資料，上述程式碼範例。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值小於 <see langword="-1" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項之子節點的縮排量 (以像素為單位)。</summary>
        <value>子節點左邊緣與其父節點左邊緣之間的空間量(以像素為單位)。 預設值為 20。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>屬性，即可控制子節點的左邊的緣和其父節點的左邊的緣之間的間距數量。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>屬性會影響在每個子節點<xref:System.Web.UI.WebControls.TreeView>控制項。 您不可以個別控制每個節點的縮排數量。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>屬性，即可控制子節點的縮排。  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 物件的集合，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中的根節點。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />，包含 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中的根節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>屬性來取得<xref:System.Web.UI.WebControls.TreeNodeCollection>物件，其中包含在樹狀目錄中的所有根節點。 這個集合通常用來快速地逐一查看所有根節點，或存取特定根節點在樹狀目錄中。  
  
> [!NOTE]
>  典型的樹狀結構有只有一個根節點。不過，您可以加入多個根節點<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>屬性也可用來以程式設計方式管理在樹狀目錄中的根節點。 您可以加入、 插入、 移除及擷取<xref:System.Web.UI.WebControls.TreeNode>從集合的物件。 集合的任何更新會自動反映在<xref:System.Web.UI.WebControls.TreeView>往返到伺服器的下一步 後的控制項。  
  
 若要存取根節點的子節點，請使用<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>節點的屬性。 使用<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>節點層級下瀏覽每個後續的父層級節點的屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>周遊樹狀目錄的屬性。  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 物件的參考，這個物件可讓您設定 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中節點的預設外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的參考，表示節點的預設樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>屬性，即可控制中的節點的預設外觀<xref:System.Web.UI.WebControls.TreeView>控制項。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>物件 (例如， `NodeStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `NodeStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩、 字型屬性和節點間距。 樣式屬性會依下列優先順序套用：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，取決於節點類型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定義集合，它會套用在此階段中，覆寫的其他節點樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  中對應的節點樣式設定<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>， <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>屬性會覆寫的樣式設定<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>屬性。  
  
 如果您要產生的內容樣式導覽功能表，在特定層級的節點都必須有相同的外觀，不論它們是否具有子節點，您可以考慮使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是設定個別的屬性樣式屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>屬性，即可控制節點中的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出節點空間不足時節點中的文字是否換行。</summary>
        <value>
          <see langword="true" /> 表示文字應換行，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>屬性來指定空間不足時，是否換行顯示每個節點中的文字。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>屬性的文字應換行<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定無法展開節點指示器之自訂影像的 URL。</summary>
        <value>為無法展開節點顯示之自訂影像的 URL。 預設為空字串 ("")，會顯示預設的空白影像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>屬性來指定非可展開的節點指示器的自訂映像。 無法展開節點指標影像 （或空格字元） 旁會顯示分葉節點 （取代的可展開及摺疊節點指標） 對齊父代或根節點的分葉節點。  
  
 當<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.TreeView>控制項顯示加號 （+） 或減號 （-） 或影像預留位置，表示節點是否可展開、 摺疊，或無法展開分別節點旁邊。 您可以指定第一個設定的自訂映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性`TreeViewImageSet.Custom`，然後設定<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性，以自訂影像的 Url。 如果未不指定任何影像，則會使用預設映像。 若要隱藏展開節點指示器，設定<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性`false`。  
  
> [!NOTE]
>  若要確認節點在正確對齊<xref:System.Web.UI.WebControls.TreeView>控制使用自訂映像時，請確定所指定的所有映像<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性有相同的維度。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>屬性來指定非可展開的節點指示器的自訂映像。 程式碼範例，以顯示在控制項中顯示的映像，您必須提供自己的映像和<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性必須設定為`TreeNodeImageSet.Custom`。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A>方法透過呼叫<xref:System.Web.UI.WebControls.TreeView>控制項引發<xref:System.Web.UI.Control.Init>事件。 擴充時，它通常會由控制項開發人員使用<xref:System.Web.UI.WebControls.TreeView>類別。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A>来註冊用於回傳覆寫方法。 如果已啟用用戶端指令碼，它也會呈現隱藏的欄位與必要的指令碼。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> 控制項的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>中選取節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，例如更新顯示的內容時就會發生此事件的事件處理方法。  
  
 您可以選擇設定<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性的節點指定選取該節點時，就會引發的事件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的節點不會呈現其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性設定為`TreeNodeSelectAction.None`。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />，包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> 控制項的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>中核取方塊時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項變更發佈至伺服器之間的狀態。 這可讓您提供執行自訂的常式，例如更新資料庫或顯示的內容時就會發生此事件的事件處理方法。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />，包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> 控制項的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>中摺疊的節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />，包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> 控制項的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>資料項目所繫結中的節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />，包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> 控制項的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>在展開的節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>節點的屬性設定為<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>或<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>中按一下該節點時，也會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />，包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> 控制項的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些情況下，它並不實用靜態地預先定義的資料大小，或根據使用者輸入的自訂內容的樹狀結構。 因為這個緣故，<xref:System.Web.UI.WebControls.TreeView>控制項支援動態節點母體擴展。 當<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>節點的屬性設定為`true`，在執行階段的節點展開時填入該節點。  
  
 若要以動態方式填入節點，請先設定<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>屬性節點，以`true`。 接下來，定義的事件處理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>以程式設計方式填入節點的事件。 典型的事件處理方法會從資料來源擷取節點的資料、 將資料放入節點結構，和將節點結構<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>在擴展節點的集合。 節點結構由加入<xref:System.Web.UI.WebControls.TreeNode>物件加入至<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>父節點的集合。  
  
> [!NOTE]
>  當<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>節點的屬性設定為`true`，必須以動態方式填入節點。 您無法以宣告方式建立巢狀其; 下的另一個節點否則，會在頁面上發生錯誤。  
  
 支援的瀏覽器 (Microsoft Internet Explorer 4.0 相容的瀏覽器和更新版本) 也可以利用用戶端節點填入。 啟用時，這可讓<xref:System.Web.UI.WebControls.TreeView>控制項來動態填入用戶端上的節點，展開該節點時，這會避免需回傳至伺服器。 如需有關用戶端節點母體擴展的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 物件的參考，這個物件可讓您設定 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中父節點的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的參考，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中父節點的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>屬性，即可控制中的父節點的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>物件 (例如， `ParentNodeStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `ParentNodeStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩、 字型屬性和節點間距。 樣式屬性會依下列優先順序套用：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，取決於節點類型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定義集合，它會套用在此階段中，覆寫的其他節點樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 如果您要產生的內容樣式導覽功能表，在特定層級的節點都必須有相同的外觀，不論它們是否具有子節點，您可以考慮使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是設定個別的屬性樣式屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>屬性，即可控制中的父節點的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字元，用於分隔 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> 屬性指定的節點值。</summary>
        <value>用於分隔 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> 屬性中指定之節點值的字元。 預設為斜線符號 (/)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>屬性包含表單的目前節點的路徑從根節點的節點值的分隔符號分隔清單。 使用<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>屬性，以指定的分隔符號字元，用以分隔節點值。 這個值通常用於剖析為個別值的清單。  
  
 根據文字中顯示<xref:System.Web.UI.WebControls.TreeView>控制項，以避免任何衝突變更，可能需要分隔符號字元。 例如，如果您設定逗號分隔符號字元，所顯示的文字不應該包含任何逗號;否則，<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>屬性無法正確剖析。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>屬性，以指定的分隔符號字元<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>節點的屬性。 此值，然後用來剖析<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>的個別值的屬性。  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>依據資料來源建立所有節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.TreeView>指定的資料來源繫結至控制項的控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>因為<see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />方法已密封，您應該覆寫<see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />方法，如果您需要執行任何額外的工作，當資料繫結。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否視用戶端的需要填入節點資料。</summary>
        <value>
          <see langword="true" /> 表示視用戶端的需要填入樹狀節點資料，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些情況下，它並不實用靜態地預先定義的資料大小，或根據使用者輸入的自訂內容的樹狀結構。 因為這個緣故，<xref:System.Web.UI.WebControls.TreeView>控制項支援動態節點母體擴展。 當<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>節點的屬性設定為`true`，在執行階段的節點展開時填入該節點。  
  
 除了填入隨選的節點，便可填入直接上支援的用戶端瀏覽器的節點。 當<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>屬性設定為`true`，服務會呼叫從用戶端填入樹狀結構節點中，如此就不需回傳至伺服器。 否則，<xref:System.Web.UI.WebControls.TreeView>控制項回傳至伺服器來填入節點。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>屬性也必須設定為`true`順序<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>屬性設定為`true`。  
  
 若要填入用戶端上的節點，請先設定<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>屬性`true`，然後設定<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>屬性節點，以`true`。 接下來，定義的事件處理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>以程式設計方式填入節點的事件。 典型的事件處理方法會從資料來源擷取節點的資料、 將資料放入節點結構，和將節點結構<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>在擴展節點的集合。 您將建立的節點結構<xref:System.Web.UI.WebControls.TreeNode>物件加入至<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>父節點的集合。  
  
> [!NOTE]
>  當<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>節點的屬性設定為`true`，必須以動態方式填入節點。 您無法以宣告方式建立巢狀其; 下的另一個節點否則，會在頁面上發生錯誤。  
  
> [!NOTE]
>  瀏覽器支援回呼指令碼支援的用戶端節點母體擴展的功能。 若要檢查瀏覽器是否支援回呼指令碼存取，請使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>屬性<xref:System.Web.HttpBrowserCapabilities>類別。 您可以存取的執行個體<xref:System.Web.HttpBrowserCapabilities>類別目前的要求，透過<xref:System.Web.HttpRequest.Browser%2A>屬性<xref:System.Web.HttpRequest>類別。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>屬性來啟用用戶端母體擴展中的節點<xref:System.Web.UI.WebControls.TreeView>控制項。 請注意，當啟用用戶端節點擴展時，節點會自動填入用戶端，而不需回傳至伺服器上。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">字串，代表要傳遞至事件處理常式的選擇性事件引數。</param>
        <summary>使用指定的引數引發回呼事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> 方法是 <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> 方法的 Helper 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">字串，代表要傳遞至事件處理常式的選擇性事件引數。</param>
        <summary>啟用 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項，以處理當表單回傳至伺服器時引發的事件。 <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> 方法是 <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> 方法的 Helper 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 頁面值傳遞給`eventArgument`參數<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>之控制項的實作方法<xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType>介面。 這<xref:System.Web.UI.WebControls.TreeView>控制項也會轉譯導致回傳事件發生的 HTML 項目。 如果控制項轉譯回傳至伺服器的用戶端指令碼時，傳入的引數，從指令碼`eventArgument`參數。 如果因為簡單回傳事件提交至伺服器，`eventArgument`參數是`null`。  
  
 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>方法提供許多事件會由 HTML 和 Web 伺服器控制項所實作的功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通知 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項應告知 ASP.NET 應用程式，控制項的狀態已變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 變更事件<xref:System.Web.UI.WebControls.TreeView>控制項所引發的<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要在用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將控制項的 HTML 開頭標記呈現在指定的寫入器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A>方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表用來將內容寫入 Web 網頁的輸出資料流。</param>
        <summary>在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中呈現節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.RenderContents%2A>方法以呈現在節點<xref:System.Web.UI.WebControls.TreeView>用戶端的控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要在用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將控制項的 HTML 結尾標記呈現至指定的寫入器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A>方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 物件的參考，這個物件可讓您設定 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中根節點的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的參考，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中根節點的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>屬性，即可控制中的根節點的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>物件 (例如， `RootNodeStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `RootNodeStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩、 字型屬性和節點間距。 樣式屬性會依下列優先順序套用：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，取決於節點類型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定義集合，它會套用在此階段中，覆寫的其他節點樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 如果您要產生的內容樣式導覽功能表，在特定層級的節點都必須有相同的外觀，不論它們是否具有子節點，您可以考慮使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>而不是設定個別的屬性樣式屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>屬性，即可控制中的根節點的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的狀態。</summary>
        <returns>伺服器控制項的目前檢視狀態；如果沒有與控制項關聯的檢視狀態，則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 物件，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中選取的節點。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNode" />，表示在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中選取的節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在節點的文字<xref:System.Web.UI.WebControls.TreeView>控制項可以處於兩種模式： 選取模式和瀏覽模式。 根據預設，節點處於選取模式。 若要將節點放入瀏覽模式中，設定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性的節點為空字串以外的值 ("")。 節點處於選取模式中，設定<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>屬性的節點為空字串 ("")。  
  
 當節點處於選取模式時，使用者可以按一下節點來選取節點中的文字。 使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性來判斷哪一個節點中選取<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
> [!NOTE]
>  節點不能為時選取<xref:System.Web.UI.WebControls.TreeView>控制項會顯示超連結。 當顯示超連結時，<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性一律會傳回`null`。  
  
 當使用者選取的不同節點<xref:System.Web.UI.WebControls.TreeView>即可在新的節點中，文字控制項<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>引發事件時，根據預設。 您可以設定來指定不同的事件<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性的屬性。 下表列出可用的選項。  
  
|選取動作|描述|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|切換展開或摺疊節點。 引發<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>或<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件，視需要。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|選取節點時，不引發任何事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|選取節點時，引發 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|選取節點時，引發 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 和 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 事件。 只會展開節點，而不會摺疊。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的節點不會呈現其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性設定為`TreeNodeSelectAction.None`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性來判斷所選取的節點中的值<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中選取節點時就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>中選取節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，例如更新顯示的內容時就會發生此事件的事件處理方法。  
  
 您可以選擇設定<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性節點，以指定選取該節點時，就會引發的事件。 下表列出可用的選項。  
  
|選取動作|描述|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|切換展開或摺疊節點。 引發<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>或<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件，視需要。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|選取節點時，不引發任何事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|選取節點時，引發 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 事件。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|選取節點時，引發 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 和 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 事件。 只會展開節點，而不會摺疊。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>的節點不會呈現其<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>屬性設定為`TreeNodeSelectAction.None`。  
  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>時使用者按下一個節點只能在 post 上引發事件。 如果未引發事件<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性以程式設計方式變更。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>事件來更新<xref:System.Web.UI.WebControls.Label>控制項中選取節點時<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 物件，其控制 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中已選取節點的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中已選取節點的樣式。 預設為 <see langword="null" />，表示 <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> 屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>屬性，即可控制中的選定節點的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.TreeNodeStyle>物件 (例如， `SelectedNodeStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `SelectedNodeStyle.ForeColor`)。 常見的設定通常包括自訂背景色彩、 前景色彩、 字型屬性和節點間距。 樣式屬性會依下列優先順序套用：  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A><xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>，或<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>，取決於節點類型。 如果<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>定義集合，它會套用在此階段中，覆寫的其他節點樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>屬性，即可控制中的選定節點的外觀<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得已選取節點的值。</summary>
        <value>已選取節點的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A>屬性提供便利的方式來決定選取之節點的值。 這個屬性只會傳回的值<xref:System.Web.UI.WebControls.TreeNode.Value%2A>屬性<xref:System.Web.UI.WebControls.TreeNode>所參考的物件<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性。 如果沒有節點中目前選取<xref:System.Web.UI.WebControls.TreeView>控制，則為空字串 ("") 會傳回。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">要設定的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataBound">
          <see langword="true" /> 表示要設定節點為資料繫結，否則為 <see langword="false" />。</param>
        <summary>允許衍生類別設定指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控制項是否為資料繫結。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A>方法，指出是否指定<xref:System.Web.UI.WebControls.TreeNode>是資料繫結。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />方法提供來讓衍生自控制項<see cref="T:System.Web.UI.WebControls.TreeView" />控制來設定<see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" />節點上的屬性。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要設定的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataItem">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> 的資料項目。</param>
        <summary>允許衍生類別設定指定 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控制項的資料項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A>方法，以指定所指定的資料項目<xref:System.Web.UI.WebControls.TreeNode>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">要設定的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataPath">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> 的資料路徑。</param>
        <summary>允許衍生類別設定指定 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控制項的資料路徑。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A>方法，以設定所指定的資料路徑<xref:System.Web.UI.WebControls.TreeNode>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出哪些節點型別會在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中顯示核取方塊。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 值的位元組合。 預設值為 <see langword="TreeNodeType.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多節點選取項目中提供支援<xref:System.Web.UI.WebControls.TreeView>控制項，您可以顯示的映像 節點旁邊的核取方塊。 使用<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性，以指定哪種節點類型會顯示核取方塊。 例如，如果這個屬性設定為`TreeNodeType.Parent`，核取方塊會顯示在樹狀目錄中每個父節點。 下表列出這個屬性的有效值。  
  
|節點類型|描述|  
|---------------|-----------------|  
|`TreeNodeType.All`|核取方塊會顯示所有節點。|  
|`TreeNodeType.Leaf`|所有分葉節點會顯示核取方塊。|  
|`TreeNodeType.None`|不會顯示核取方塊。|  
|`TreeNodeType.Parent`|核取方塊會顯示所有父節點。|  
|`TreeNodeType.Root`|核取方塊會顯示為所有根節點。|  
  
 用於列舉型別<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性是旗標列舉，可讓您結合透過位元運算的值。 例如，若要顯示父節點和分葉節點的核取方塊，使用位元 OR 運算子結合`TreeNodeType.Parent`和`TreeNodeType.Leaf`值。  
  
 若要判斷哪一個節點擁有其核取方塊選取，逐一查看的節點<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>集合。  
  
> [!NOTE]
>  您可以覆寫<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>設定所設定<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>每個節點的屬性。  
  
 如果您需要提供只有單一選取支援，請考慮使用<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>屬性。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>屬性來顯示和隱藏不同節點型別的核取方塊。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">位元組合值超出 <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 列舉型別的範圍。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否顯示展開節點指示器。</summary>
        <value>
          <see langword="true" /> 表示顯示展開節點指示器，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 展開節點指標用來顯示節點是否已展開、 摺疊，或無法展開。 使用<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性來指定是否展開節點指示器會顯示在<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 當<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.TreeView>控制項顯示加號 （+） 或減號 （-） 或影像預留位置，表示節點是否可展開、 摺疊，或無法展開分別節點旁邊。 您可以指定第一個設定的自訂映像<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>屬性`TreeViewImageSet.Custom`，然後設定<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>， <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>，和<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>屬性，以自訂影像的 Url。 如果未不指定任何影像，則會使用預設映像。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>屬性來顯示和隱藏擴充節點圖示。  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否顯示將子節點連接至父節點的線條。</summary>
        <value>
          <see langword="true" /> 表示顯示連接節點的線條，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>屬性來指定是否要顯示要連接至父節點的子節點的線條。 當這個屬性設定為`true`、<xref:System.Web.UI.WebControls.TreeView>控制項搜尋所指定的 Web 存取資料夾<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>線條影像的屬性。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>未設定屬性，<xref:System.Web.UI.WebControls.TreeView>控制項將會使用內建的預設映像 （20 x 20 像素為單位）。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>屬性來顯示連線節點中的行<xref:System.Web.UI.WebControls.TreeView>控制項。 請務必使用行設計師工具來建立一組線條影像，並將它們放在命名 LineImages 目錄中的範例應用程式的資料夾。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，用於呈現替代文字，以便讓螢幕助讀員略過控制項內容。</summary>
        <value>字串，<see cref="T:System.Web.UI.WebControls.TreeView" /> 在不可見影像上呈現的替代文字，做為螢幕助讀員的提示。 預設值是「略過巡覽連結」。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>屬性是您可以設定讓網頁更多或少都能存取的屬性。 一種機制，以略過的內容來自大聲閱讀螢幕助讀程式的使用者可以提供網頁包含重複的內容。  
  
 <xref:System.Web.UI.WebControls.TreeView>控制項提供<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>屬性做為螢幕助讀程式所要略過整個控制項的方式。 如果<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>屬性設定，呈現不可見的影像的替代文字，讓使用者選擇跳至控制項的結尾。 螢幕助讀程式大聲的替代文字，而影像佔用一個像素的空間。 像素精確控制呈現頁面的詳細資訊，請設定<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>屬性設為空字串 ("")，並提供您自己的機制，以略過樹狀結構。  
  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>根據預設，讓螢幕助讀員略過控制項屬性設定為空字串。  
  
 這個屬性的值會儲存檢視狀態中。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回以控制項為目標之回呼事件的結果。</summary>
        <returns>回呼的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>控制實作<xref:System.Web.UI.ICallbackEventHandler>介面並使用<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>來擷取資料和<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>方法來擷取的資料傳回至控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">字串，代表要傳遞至事件處理常式的選擇性事件引數。</param>
        <summary>使用指定的引數引發回呼事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項開發人員應該覆寫<xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控制項的索引鍵識別項。</param>
        <param name="postCollection">所有內送名稱值的集合。</param>
        <summary>處理 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的回傳資料。</summary>
        <returns>
          如果回傳事件的結果改變了 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的狀態則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項開發人員應該覆寫<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通知 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項應告知 ASP.NET 應用程式，控制項的狀態已變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項開發人員應該覆寫<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">字串，代表要傳遞至事件處理常式的選擇性事件引數。</param>
        <summary>啟用 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項，以處理當表單回傳至伺服器時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項開發人員應該覆寫<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</summary>
        <value>一定會傳回 <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TagKey%2A>屬性可讓輸出資料流寫入適當 HTML 標記的總<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您可以覆寫<see cref="P:System.Web.UI.WebControls.TreeView.TagKey" />屬性以指定的<see cref="T:System.Web.UI.HtmlTextWriterTag" />用於衍生的控制項值。</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目標視窗或框架，在其中顯示與節點關聯的 Web 網頁內容。</summary>
        <value>在其中顯示連結 Web 網頁內容的目標視窗或框架。 除了以底線為開頭的某些特殊值以外，值必須以 A 到 Z (不區分大小寫) 範圍內的字母為開頭，如下表所示。  
  
 <list type="table"><listheader><term> 目標值  
  
 </term><description> 中呈現內容  
  
 </description></listheader><item><term><see langword="_blank" /></term><description> 新視窗，而不用框架。  
  
 </description></item><item><term><see langword="_parent" /></term><description> 即時運算框架組的父代。  
  
 </description></item><item><term><see langword="_search" /></term><description> [搜尋] 窗格中。  
  
 </description></item><item><term><see langword="_self" /></term><description> 具有焦點的框架。  
  
 </description></item><item><term><see langword="_top" /></term><description> 框架不完整的視窗。  
  
 </description></item></list><block subset="none" type="note"><para>  
 請查閱您的瀏覽器文件，以判斷是否支援 <see langword="_search" /> 值。  例如，Microsoft Internet Explorer 5.0 (含) 以後版本支援 <see langword="_search" /> 目標值。  
  
</para></block>  
  
 預設為空字串 ("")，會重新整理擁有焦點的視窗或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.TreeView.Target%2A>屬性，以指定的視窗或框架中顯示 Web 內容的連結節點時按一下該節點。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.Target%2A>屬性轉譯成`target`屬性。 `target`屬性`anchor`XHTML 1.1 文件類型定義中不允許項目。 請勿設定<xref:System.Web.UI.WebControls.TreeView.Target%2A>屬性，如果轉譯的輸出為<xref:System.Web.UI.WebControls.TreeView>必須 XHTML 1.1 相容。 如需詳細資訊，請參閱[XHTML 標準，在 Visual Studio 和 ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)。  
>   
>  在建立可存取網頁時，您應該避免使用<xref:System.Web.UI.WebControls.TreeView.Target%2A>指向另一個視窗中的屬性。 如需詳細資訊，請參閱[ASP.NET 控制項和協助工具](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
 這個屬性的值會儲存檢視狀態中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.Target%2A>屬性來顯示 Web 內容在按下該節點時，連結至新視窗中的節點。  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>追蹤 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的檢視狀態變更，讓這些變更能夠儲存在控制項的 <see cref="T:System.Web.UI.StateBag" /> 物件中。 這個 <see cref="T:System.Web.UI.StateBag" /> 可透過 <see cref="P:System.Web.UI.Control.ViewState" /> 屬性存取。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A>標示的起點開始追蹤並儲存變更至控制項的控制項檢視狀態的一部分，會覆寫方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項的核取方塊在張貼至伺服器之間變更狀態時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>中核取方塊時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項變更發佈至伺服器之間的狀態。 這可讓您提供執行自訂的常式，例如更新資料庫或顯示的內容時就會發生此事件的事件處理方法。  
  
 即使<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>事件會在回傳，變更核取方塊不會導致回傳。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>事件來更新<xref:System.Web.UI.WebControls.Label>負責控制何時核取方塊的<xref:System.Web.UI.WebControls.TreeView>控制項變更發佈至伺服器之間的狀態。  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中摺疊節點時就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>中摺疊的節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>事件，以更新的內容<xref:System.Web.UI.WebControls.Label>控制當使用者摺疊中的節點<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當資料項目繫結至 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中的節點時就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>資料項目所繫結中的節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>事件以某些條件符合時，變更節點的影像。 第二個程式碼範例會提供第一個程式碼範例中的範例 XML 資料。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>事件以某些條件符合時，變更節點的影像。 針對此範例正常運作，您必須複製此程式碼範例中，為 Book.xml 檔案之後所提供的範例 XML 資料。 另外請務必提供這個範例顯示的影像。  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 下列程式碼範例會提供 XML 資料，上述程式碼範例。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控制項中展開節點時就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>在展開的節點時，就會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。 這可讓您提供執行自訂的常式，每當發生此事件的事件處理方法。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>節點的屬性設定為`TreeNodeSelectAction.Expand`或`TreeNodeSelectAction.SelectExpand`、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>中按一下該節點時，也會引發事件<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>事件，以更新的內容<xref:System.Web.UI.WebControls.Label>控制當使用者擴充中的節點<xref:System.Web.UI.WebControls.TreeView>控制項。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當在 <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> 控制項中展開 <see cref="T:System.Web.UI.WebControls.TreeView" /> 屬性設為 <see langword="true" /> 的節點時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些情況下，它並不實用靜態地預先定義的資料大小，或根據使用者輸入的自訂內容的樹狀結構。 因為這個緣故，<xref:System.Web.UI.WebControls.TreeView>控制項支援動態節點母體擴展。 當<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>節點的屬性設定為`true`，在執行階段的節點展開時填入該節點。  
  
 若要以動態方式填入節點，請先設定<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>屬性節點，以`true`。 接下來，定義的事件處理方法<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>以程式設計方式填入節點的事件。 典型的事件處理方法會從資料來源擷取節點的資料、 將資料放入節點結構，和將節點結構<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>在擴展節點的集合。 節點結構由加入<xref:System.Web.UI.WebControls.TreeNode>物件加入至<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>父節點的集合。  
  
> [!NOTE]
>  當<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>節點的屬性設定為`true`，必須以動態方式填入節點。 您無法以宣告方式建立巢狀其; 下的另一個節點否則，會在頁面上發生錯誤。  
  
 支援的瀏覽器 (Microsoft Internet Explorer 4.0 相容的瀏覽器和更新版本) 也可以利用用戶端節點填入。 啟用時，這可讓<xref:System.Web.UI.WebControls.TreeView>控制項來擴展以動態方式在用戶端上的節點展開該節點時，這會避免需回傳至伺服器。 如需有關用戶端節點母體擴展的詳細資訊，請參閱<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>事件，以填入中的節點<xref:System.Web.UI.WebControls.TreeView>以動態方式在伺服器上的控制項。 請注意，<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>屬性設定為`false`來防止在用戶端上處理的展開節點事件。  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出控制項是否要呈現為網頁上的 UI。</summary>
        <value>
          如果控制項在網頁上可見則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.TreeView.Visible%2A>屬性設定為`false`，則不會呈現控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>