<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="659f45513d8aea13ba3c36fe5ff9988b48fd2190" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580844" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>顯示 ASP.NET Web 網頁中的功能表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#introduction)  
  
-   [功能表項目](#menu_items)  
  
-   [靜態資料](#static_data)  
  
-   [繫結至資料](#binding_to_data)  
  
-   [自訂使用者介面](#customizing_the_user_interface)  
  
-   [事件](#events)  
  
-   [協助工具選項](#accessibility)  
  
-   [宣告式語法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>簡介  
 <xref:System.Web.UI.WebControls.Menu>用來在 ASP.NET Web 網頁中顯示的功能表控制項，以及通常用於搭配<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項瀏覽的網站。 <xref:System.Web.UI.WebControls.Menu>控制項支援下列功能：  
  
-   資料繫結，讓繫結至階層式資料來源控制項的功能表項目。  
  
-   站台瀏覽與整合<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項。  
  
-   以程式設計方式存取<xref:System.Web.UI.WebControls.Menu>物件模型，以動態方式建立功能表、 填入功能表項目、 設定屬性，以及等等。  
  
-   透過佈景主題、 使用者定義的映像、 樣式和使用者定義的範本自訂外觀。  
  
 當使用者按一下功能表項目，<xref:System.Web.UI.WebControls.Menu>控制項可以瀏覽至連結的網頁，或直接張貼至伺服器。 如果<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>設定功能表項目的屬性，<xref:System.Web.UI.WebControls.Menu>控制項巡覽至連結的網頁; 否則它會張貼頁面回傳至伺服器進行處理。 根據預設，連結的頁面會顯示在相同的視窗或框架做為<xref:System.Web.UI.WebControls.Menu>控制項。 若要在不同的視窗或框架中顯示連結的內容，請使用<xref:System.Web.UI.WebControls.Menu.Target%2A>屬性<xref:System.Web.UI.WebControls.Menu>控制項。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A>屬性會影響在控制項中的每個功能表項目。 若要指定視窗或框架的個別功能表項目，設定<xref:System.Web.UI.WebControls.MenuItem.Target%2A>屬性<xref:System.Web.UI.WebControls.MenuItem>直接物件。  
  
 <xref:System.Web.UI.WebControls.Menu>控制項顯示功能表的兩種： 靜態功能表和動態功能表。 一律會以顯示靜態功能表<xref:System.Web.UI.WebControls.Menu>控制項。 根據預設，會顯示在靜態功能表中的根層級 （層級 0） 的功能表項目。 您可以在靜態功能表內顯示更多的功能表層級 （靜態子功能表），藉由設定<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>屬性。 功能表的項目 （如果有的話） 較高的層級所指定的值比<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>屬性會顯示在動態功能表中。 動態功能表會顯示只有當使用者將滑鼠指標停留包含動態子功能表的父功能表項目。 動態功能表會在特定期間之後會自動地消失。 使用<xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>屬性，以指定的持續時間。  
  
> [!NOTE]
>  當使用者按一下功能表之外，也會消失動態功能表。  
  
 您也可以限制藉由設定顯示在動態功能表中的層級數目<xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A>屬性。 功能表層級高於指定的值都會被捨棄。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu>控制項不是在內部使用<xref:System.Web.UI.UpdatePanel>控制項。 您可以加入<xref:System.Web.UI.WebControls.Menu>外的網頁控制項<xref:System.Web.UI.UpdatePanel>控制項。 <xref:System.Web.UI.UpdatePanel> 控制項用來更新選取的區域，而不是整個頁面更新與回傳的頁面。 如需詳細資訊，請參閱[UpdatePanel 控制項概觀](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)和[局部網頁呈現概觀](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>功能表項目  
 A<xref:System.Web.UI.WebControls.Menu>控制項所組成的樹狀目錄中的功能表項目所代表<xref:System.Web.UI.WebControls.MenuItem>物件。 在最上層 （層級 0） 的功能表項目稱為根功能表項目。 功能表項目具有父功能表項目稱為子功能表項目。 所有根功能表項目會都儲存在<xref:System.Web.UI.WebControls.Menu.Items%2A>集合。 子功能表項目會儲存在父功能表項目的<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>集合。  
  
 每個功能表項目具有<xref:System.Web.UI.WebControls.MenuItem.Text%2A>和<xref:System.Web.UI.WebControls.MenuItem.Value%2A>屬性。 值<xref:System.Web.UI.WebControls.MenuItem.Text%2A>屬性顯示在<xref:System.Web.UI.WebControls.Menu>控制項，而<xref:System.Web.UI.WebControls.MenuItem.Value%2A>屬性用來儲存功能表項目相關的任何其他資料，例如資料傳遞至功能表項目相關聯的回傳事件。 按一下時，功能表項目可以瀏覽至所指定的另一個網頁<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>屬性。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>屬性未設定的功能表項目，<xref:System.Web.UI.WebControls.Menu>控制項只送出至伺服器進行處理時按一下功能表項目頁面。  
  
 您也可以顯示功能表項目中映像，藉由設定<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>屬性。  
  
 功能表項目上的詳細資訊，請參閱<xref:System.Web.UI.WebControls.MenuItem>。  
  
<a name="static_data"></a>   
## <a name="static-data"></a>靜態資料  
 最簡單的資料模型的<xref:System.Web.UI.WebControls.Menu>控制項是靜態功能表項目。 若要顯示使用宣告式語法的靜態功能表項目，第一次建立巢狀開啟和關閉`<Items>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.Menu>控制項。 接下來，建立巢狀結構的功能表結構`<asp:MenuItem>`開頭和結尾之間的項目`<Items>`標記。 每個`<asp:MenuItem>`元素代表控制項中的功能表項目，並將對應至<xref:System.Web.UI.WebControls.MenuItem>物件。 您可以藉由設定的屬性來設定每個功能表項目的屬性及其`<asp:MenuItem>`項目。 若要建立子功能表項目，巢狀其他`<asp:MenuItem>`開頭和結尾之間的項目`<asp:MenuItem>`父功能表項目的標記。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>繫結至資料  
 <xref:System.Web.UI.WebControls.Menu>控制項可以使用任何階層式資料來源控制項，例如<xref:System.Web.UI.WebControls.XmlDataSource>控制項或<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項。 若要繫結至階層的資料來源控制項，將<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>屬性<xref:System.Web.UI.WebControls.Menu>控制權傳輸至<xref:System.Web.UI.Control.ID%2A>資料來源控制項的值。 <xref:System.Web.UI.WebControls.Menu>控制項自動繫結至指定的資料來源控制項。 這是慣用的方法繫結至資料。  
  
 當繫結至資料來源，其中每個資料項目都包含多個屬性 （例如 XML 項目具有多個屬性），功能表項目會顯示所傳回的值`ToString`方法的預設資料的項目。 在 XML 項目，功能表項目會顯示項目名稱，其中顯示功能表樹狀結構的基礎結構，不過沒有非常有用。 您可以使用功能表項目繫結至特定資料的項目屬性<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>來指定功能表項目繫結的集合。 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合包含<xref:System.Web.UI.WebControls.MenuItemBinding>物件，定義資料項目及它所繫結功能表項目之間的關聯性。 您可以指定要顯示的節點中的繫結和資料項目屬性的準則。 如需功能表項目繫結的詳細資訊，請參閱<xref:System.Web.UI.WebControls.MenuItemBinding>。  
  
 您無法建立空的節點中<xref:System.Web.UI.WebControls.Menu>藉由設定控制<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>或<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>屬性為空字串 ("")。 為空字串中設定這些屬性具有未設定屬性相同的效果。 在此情況下，<xref:System.Web.UI.WebControls.Menu>控制項可讓您建立使用預設繫結<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>屬性。 如需詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>自訂使用者介面  
 有許多方法可自訂的外觀<xref:System.Web.UI.WebControls.Menu>控制項。 首先，您可以指定是否<xref:System.Web.UI.WebControls.Menu>呈現控制項水平或垂直藉由設定<xref:System.Web.UI.WebControls.Menu.Orientation%2A>屬性。 您也可以指定不同的樣式 （例如 字型和色彩） 的每個功能表項目類型。  
  
 如果您使用階層式樣式表 (CSS) 來自訂控制項的外觀，使用內嵌樣式或個別的 CSS 檔案，但非兩者。 使用內嵌樣式和個別的 CSS 檔案，可能會造成非預期的結果。 如需有關如何使用控制項的樣式表的詳細資訊，請參閱[Web 伺服器控制項和 CSS 樣式](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)。  
  
 下表列出可用的功能表項目樣式。  
  
|功能表項目樣式屬性|描述|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|當滑鼠指標位於動態功能表項目的樣式設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|個別的動態功能表項目的樣式設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|針對動態功能表樣式設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|目前已選取動態功能表項目的樣式設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|當滑鼠指標位於靜態功能表項目的樣式設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|個別靜態功能表項目的樣式設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|針對靜態功能表樣式設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|目前選取的靜態功能表項目的樣式設定。|  
  
 而不是設定個別的樣式屬性，您可以指定套用至使用下列樣式集合，根據其層級的功能表項目的樣式。  
  
|集合層級的樣式|描述|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|集合<xref:System.Web.UI.WebControls.MenuItemStyle>控制層級為基礎的功能表項目樣式的物件。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|集合<xref:System.Web.UI.WebControls.MenuItemStyle>選取功能表項目層級為基礎的物件可控制的樣式。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|集合<xref:System.Web.UI.WebControls.MenuItemStyle>控制層級為基礎的子功能表項目樣式的物件。|  
  
 集合中的第一個樣式會對應至功能表樹狀結構中，第一個層級的功能表項目的樣式。 集合中的第二個樣式會對應至功能表樹狀目錄中，以此類推，第二個層級的功能表項目的樣式。 這是最常用來產生內容樣式導覽功能表的功能表項目在某些深度其中應該具有相同的外觀，不論它們是否具有子功能表。  
  
> [!NOTE]
>  如果您使用任何上述表格中所列的層級的樣式集合定義的樣式<xref:System.Web.UI.WebControls.Menu>控制項，這些樣式設定會覆寫個別的功能表項目樣式屬性。  
  
 若要變更控制項的外觀的另一個方法是自訂映像中顯示<xref:System.Web.UI.WebControls.Menu>控制項。 您可以指定自己的自訂映像不同的組件控制項的設定下表中顯示的屬性。  
  
|影像屬性|描述|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|顯示在動態功能表項目底部，將它與其他功能表項目分開的選擇性影像。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|顯示在動態功能表項目來表示它具有子功能表中的選擇性影像。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|顯示在動態功能表項目頂端，將它與其他功能表項目分開的選擇性影像。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|在功能表項目，表示使用者可以向上捲動到檢視其他功能表項目底部顯示的影像。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|頂端的功能表項目，表示使用者可以向上捲動檢視其他功能表項目顯示的影像。|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|顯示在靜態功能表項目底部，將它與其他功能表項目分開的選擇性影像。|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|顯示在靜態功能表項目來表示它具有子功能表中的選擇性影像。|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|顯示在靜態功能表項目頂端，將它與其他功能表項目分開的選擇性影像。|  
  
 完全控制使用者介面 (UI)，您可以定義您自己的自訂範本，如<xref:System.Web.UI.WebControls.Menu>控制使用下列範本內容。  
  
|樣板屬性|描述|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|樣板，含有針對動態功能表項目呈現的自訂內容。|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|樣板，含有針對靜態功能表項目呈現的自訂內容。|  
  
 您可以設定來控制動態功能表相對於其父功能表項目垂直和水平位置<xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A>和<xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A>屬性，分別。 若要控制靜態子功能表項目在靜態功能表內縮排，<xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A>屬性。  
  
<a name="events"></a>   
## <a name="events"></a>事件  
 <xref:System.Web.UI.WebControls.Menu>控制項提供數個事件，您可以程式設計的。 這可讓您在事件發生時執行自訂的常式。 下表列出支援的事件。  
  
|Event - 事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|發生於按一下功能表項目。 此事件通常用來同步處理<xref:System.Web.UI.WebControls.Menu>與頁面上的另一個控制項的控制項。|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|發生於功能表項目繫結至資料。 此事件通常用來修改功能表項目之前呈現在<xref:System.Web.UI.WebControls.Menu>控制項。|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>協助工具選項  
 如需如何設定這個控制項，使其產生符合網頁可及性標準標記資訊，請參閱[Visual Studio 和 ASP.NET 中的協助工具](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)和[ASP.NET 控制項和協助工具](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 本主題隨附了含有原始程式碼的 Visual Studio Web 站台專案：[下載](http://go.microsoft.com/fwlink/?LinkId=192868)。  
  
 下列程式碼範例示範如何建立<xref:System.Web.UI.WebControls.Menu>使用宣告式語法的靜態功能表項目的控制項。  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 下列程式碼範例示範如何將繫結<xref:System.Web.UI.WebControls.Menu>控制權傳輸至<xref:System.Web.UI.WebControls.SiteMapDataSource>控制項。 針對此範例正常運作，您必須為 Web.sitemap 檔案複製下面範例網站地圖資料。  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 以下是範例網站導覽資料先前的範例。  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Menu" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.WebControls.Menu>類別。 若要以動態方式加入<xref:System.Web.UI.WebControls.Menu>控制項的頁面，建立新<xref:System.Web.UI.WebControls.Menu>物件、 設定其屬性，並再將它加入<xref:System.Web.UI.Control.Controls%2A>容器集合控制項，例如<xref:System.Web.UI.WebControls.PlaceHolder>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用建構函式，以動態方式將<xref:System.Web.UI.WebControls.Menu>網頁的控制項。  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">將 HTML 內容呈現給用戶端的輸出資料流。</param>
        <summary>將需要呈現的 HTML 屬性和樣式加入指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu>控制覆寫<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>方法來重設<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>屬性<xref:System.String.Empty>。 衍生的自訂控制項時，由控制項開發人員主要使用這個成員<xref:System.Web.UI.WebControls.Menu>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.ControlCollection" />，其中包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的子控制項。</summary>
        <value>
          <see cref="T:System.Web.UI.ControlCollection" />，包含子控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.Controls%2A>屬性可讓您以程式設計方式存取的執行個體<xref:System.Web.UI.ControlCollection>類別<xref:System.Web.UI.WebControls.Menu>控制項。 您可以將控制項加入至集合，移除控制項的集合，或逐一查看集合中的伺服器控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="menu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的子控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 衍生的自訂控制項時，由控制項開發人員主要使用這個成員<xref:System.Web.UI.WebControls.Menu>類別。  
  
 會呼叫這個方法由 ASP.NET 基礎結構，以通知使用組合為基礎的實作，包括衍生自控制項的任何控制項<xref:System.Web.UI.WebControls.CompositeDataBoundControl>和<xref:System.Web.UI.WebControls.CompositeControl>。 若要建立任何子控制項它們包含在準備回傳或呈現。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="menu.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將資料來源繫結至 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項。 這個方法無法被繼承。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 衍生的自訂控制項時，使用此成員主要由控制項開發人員<xref:System.Web.UI.WebControls.Menu>類別。  
  
 使用<xref:System.Web.UI.WebControls.Menu.DataBind%2A>方法將資料繫結至資料來源<xref:System.Web.UI.WebControls.Menu>控制項。 這個方法會解析所有資料繫結運算式在使用中的範本中的控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>資料繫結控制項應該覆寫<see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />而不是<see cref="M:System.Web.UI.WebControls.Menu.DataBind" />。如果<see cref="M:System.Web.UI.WebControls.Menu.DataBind" />遭到覆寫，<see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />和<see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" />事件的引發錯誤的順序。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.MenuItemBindingCollection" Usage="System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 物件的集合，這些物件會定義資料項目及它所繫結之功能表項目之間的關係。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />，代表資料項目及它所繫結之功能表項目之間的關係。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合包含<xref:System.Web.UI.WebControls.MenuItemBinding>物件，定義資料項目及它所繫結功能表項目之間的關聯性。 當繫結至資料來源，其中每個資料項目都包含多個屬性 （例如 XML 項目具有多個屬性），功能表項目會顯示所傳回的值`ToString()`方法的預設資料的項目。 在 XML 項目，功能表項目會顯示項目名稱，其中顯示基礎結構的樹狀目錄中，不過沒有非常有用。 您可以藉由指定功能表項目繫結，功能表項目繫結至特定的資料屬性。  
  
 當定義資料項目及功能表項目之間的關聯性，您必須指定繫結和資料項目的內容繫結至這兩個準則。 功能表項目應該繫結資料的項目時，就會指出準則。 可以使用深度、 資料成員，或兩者都指定準則。 深度會指定繫結的功能表層級。 例如，如果您指定深度為 0，所有功能表項目層級 0 的樹狀結構中會繫都結使用功能表項目繫結。 資料成員基礎資料來源中，指定資料的項目類型，但可以代表不同的資訊，根據資料來源。 例如，資料成員的 XML 項目會指定項目的名稱。  
  
 若為多個<xref:System.Web.UI.WebControls.MenuItemBinding>物件定義與彼此衝突<xref:System.Web.UI.WebControls.Menu>控制項適用於功能表項目繫結，以下列順序的優先順序：  
  
1.  <xref:System.Web.UI.WebControls.MenuItemBinding>定義深度和資料成員的物件。  
  
2.  <xref:System.Web.UI.WebControls.MenuItemBinding>定義只深度的物件。  
  
3.  <xref:System.Web.UI.WebControls.MenuItemBinding>定義資料成員的物件。  
  
4.  <xref:System.Web.UI.WebControls.MenuItemBinding>深度和資料成員都不會定義的物件。  
  
 一旦建立繫結準則，您就可以繫結的屬性<xref:System.Web.UI.WebControls.MenuItem>能夠繫結至屬性或資料的項目欄位的物件。 例如，您可以繫結<xref:System.Web.UI.WebControls.MenuItem.Text%2A>屬性功能表項目文字的屬性上設定的 XML 項目<xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>屬性<xref:System.Web.UI.WebControls.MenuItemBinding>物件。 您也可以繫結至靜態值。 如果您設定<xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>屬性<xref:System.Web.UI.WebControls.MenuItemBinding>物件、 所有功能表項目要<xref:System.Web.UI.WebControls.MenuItemBinding>物件套用共用相同的靜態文字值。 如需有關繫結的屬性<xref:System.Web.UI.WebControls.MenuItem>物件的值，請參閱<xref:System.Web.UI.WebControls.MenuItemBinding>。  
  
 雖然<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>以程式設計方式填入集合，則通常會以宣告方式設定。 若要指定功能表項目繫結，第一次建立巢狀開啟和關閉`<DataBindings>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.Menu>控制項。 接下來，將`<asp:MenuItemBinding>`開頭和結尾之間的項目`<DataBindings>`標記每個功能表項目的繫結，您想要指定。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合定義的欄位之間的關聯性<xref:System.Web.UI.WebControls.XmlDataSource>控制項和功能表項目在<xref:System.Web.UI.WebControls.Menu>控制項。 針對此範例正常運作，您必須複製下列 XML 資料範例為 Map.xml 的檔案。  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 以下是範例網站導覽資料先前的範例。  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisappearAfter : int with get, set" Usage="System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當滑鼠指標不再位於功能表上之後，動態功能表顯示的持續期間。</summary>
        <value>當滑鼠指標不再位於功能表上之後，動態功能表顯示的時間長度 (以毫秒為單位)。 預設值為 500。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，動態功能表會自動消失當滑鼠指標不再位於功能表在特定期間之後。 使用<xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>屬性，以指定的持續時間。  
  
> [!NOTE]
>  如果使用者按一下功能表之外，動態功能表就會立即消失。  
  
 您也可以指定動態功能表應該永遠不會自動消失此屬性設定為-1。 在此情況下，只有當使用者按一下功能表外部，就會消失動態功能表項目。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>屬性來指定動態功能表在使用者移動滑鼠指標離開功能表超過兩秒之後，應該就會消失。  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值小於 -1。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在每個動態功能表項目底部，以便與其他功能表項目隔開之影像的 URL。</summary>
        <value>顯示在每個動態功能表項目底部之分隔符號影像的 URL。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>屬性可指定選擇性的自訂映像，以顯示每個動態功能表項目底部。 此映像做為功能表項目之間的分隔符號，而且通常是一條線的映像。  
  
> [!NOTE]
>  您也可以顯示在每個動態功能表項目頂端分隔符號影像，藉由設定<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>屬性，在每個動態功能表項目底部顯示分隔符號影像。  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否顯示表示動態功能表項目具有子功能表的內建影像。</summary>
        <value>
          <see langword="true" /> 表示顯示具有子功能表之動態功能表項目的內建影像，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當動態功能表項目包含子功能表時，可以顯示一個影像，表示使用者可以展開 [] 功能表中的滑鼠將游標放置功能表項目。 有兩種方式可顯示此映像：  
  
-   設定<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>屬性`true`使用內建的映像 （預設值）。  
  
-   設定<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性來指定自訂映像。  
  
 如果<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性設定，則該影像會覆寫內建影像。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性未設定而<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>屬性設定為`false`，不會顯示影像。  
  
 您可以藉由設定指定之影像的替代文字<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>屬性。 當使用者將滑鼠指標停留在影像上時，此文字會顯示為工具提示。 此文字也提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>屬性隱藏表示動態功能表項目具有子功能表的影像。 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性也必須設定為空字串 ("") 為隱藏，映像。  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHorizontalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定讓動態功能表相對於其父功能表項目進行水平移位的像素數。</summary>
        <value>讓動態功能表相對於其父功能表項目進行水平移位的像素數。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A>屬性來調整水平位置的動態功能表相對於其父功能表項目。 這個屬性會影響以不同的方式取決於是否動態功能表的位置<xref:System.Web.UI.WebControls.Menu>垂直或水平顯示控制項 (依指定<xref:System.Web.UI.WebControls.Menu.Orientation%2A>屬性)。 下表描述的差異。  
  
|方向|描述|  
|-----------------|-----------------|  
|水平|根據預設，動態功能表會顯示其父功能表項目正下方。 設定這個屬性會讓動態功能表的位置水平從這個基底的位置。|  
|垂直|根據預設，動態功能表項目會顯示任何之間沒有間距其父功能表項目旁。 設定這個屬性會控制 [動態] 功能表和其父功能表項目之間的水平間距。|  
  
> [!NOTE]
>  您可以將這個屬性設為負值，讓動態功能表以負數方向。 如果您要顯示垂直功能表，負值會導致動態功能表和其父功能表項目重疊。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A>屬性來指定動態功能表和其父功能表項目之間有 5 像素的間隙。  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.Style" /> 物件的參考，這個物件可讓您設定當滑鼠指標位於動態功能表項目上時，動態功能表項目的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> 的參考，代表當滑鼠指標位於動態功能表項目上時，動態功能表項目的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>屬性，即可控制動態功能表項目的外觀，當滑鼠指標移至上方。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.Style>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.Style>物件 (例如， `DynamicHoverStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `DynamicHoverStyle.ForeColor`)。  
  
 動態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>要將動態功能表項目的背景色彩變更為淺 sky 藍色，當使用者將滑鼠指標進入此屬性。  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與動態顯示之所有功能表項目一起顯示的其他文字。</summary>
        <value>與所有功能表項目一起顯示的其他文字或字元。 這個屬性的預設值是"{0}。 」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以用來插入文字，以便在行動裝置上顯示的功能表中的動態功能表項目的格式。 <xref:System.Web.UI.WebControls.Menu>控制項支援的靜態和動態功能表項目顯示範本。 對於行動裝置，會忽略範本，因此這個屬性可讓您新增字元或文字，將格式套用至功能表項目不使用範本。  
  
> [!NOTE]
>  若要達到一致的格式使用這個屬性時，您也應該設定<xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A>屬性，如果您想要與相同的靜態和動態功能表項目之間的格式。  
  
 如果範本格式設定與此屬性會套用，範本的格式設定的行動裝置會忽略。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A>和<xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A>屬性將文字加入每個功能表項目。  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樣板，含有針對動態功能表項目呈現的自訂內容。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />，包含動態功能表的自訂內容。 預設值為 null，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是針對動態功能表中使用內建的轉譯，您可以定義您自己外觀與風格，動態功能表項目的使用<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>屬性。 若要指定自訂的範本，針對動態功能表項目，先將`<DynamicItemTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.Menu>控制項。 然後，您可以列出範本的開頭和結尾之間的內容`<DynamicItemTemplate>`標記。 您可以使用，以進一步控制動態功能表的外觀<xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 物件的參考，這個物件可以讓您設定動態功能表中功能表項目的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的參考，代表動態功能表中功能表項目的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>屬性，即可控制動態功能表中功能表項目的外觀。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.MenuItemStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.MenuItemStyle>物件 (例如， `DynamicMenuItemStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `DynamicMenuItemStyle.ForeColor`)。  
  
 動態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>屬性來指定在動態功能表中功能表項目的淺色 sky 藍色背景色彩。  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 物件的參考，這個物件可讓您設定動態功能表的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的參考，代表動態功能表的外觀。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>屬性，即可控制動態功能表的外觀。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.MenuItemStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.MenuItemStyle>物件 (例如， `DynamicMenuStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `DynamicMenuStyle.ForeColor`)。  
  
 動態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>屬性來指定動態功能表的淺藍色 sky 背景色彩。  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來表示動態功能表項目具有子功能表之影像的替代文字。</summary>
        <value>用來表示動態功能表項目具有子功能表之影像的替代文字。 預設為空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當動態功能表項目包含子功能表時，可以顯示一個影像，表示使用者可以展開功能表。 使用<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>屬性來指定此映像的替代文字。 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。  
  
 有兩種方式來顯示影像：  
  
-   設定<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>屬性`true`使用內建的映像 （預設值）。  
  
-   設定<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性來指定自訂映像。  
  
> [!NOTE]
>  這個屬性適用於內建的映像和自訂映像。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>屬性來指定用來表示動態功能表項目具有子功能表之影像的替代文字。 當使用者將滑鼠指標停留在影像上時，此文字會顯示為工具提示。  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當動態功能表項目具有子功能表時，顯示在動態功能表項目中的自訂影像 URL。</summary>
        <value>用來表示動態功能表項目具有子功能表之影像的 URL。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當動態功能表項目包含子功能表時，可以顯示一個影像，表示使用者可以展開 [] 功能表中的滑鼠將游標放置功能表項目。 有兩種方式可顯示此映像：  
  
-   設定<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>屬性`true`使用內建的映像 （預設值）。  
  
-   設定<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性來指定自訂映像。  
  
 如果<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性設定，則該影像會覆寫內建影像。  
  
 如果<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性未設定而<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>屬性設定為`false`，不會顯示影像。  
  
> [!NOTE]
>  當您設定這個屬性時，使用斜線 （/），而不是反斜線 (\\)。 如果您在路徑中使用反斜線，不會顯示指定的映像。  
  
 您可以藉由設定指定之影像的替代文字<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>屬性來指定要在動態功能表項目，表示功能表項目具有子功能表中顯示的自訂映像。  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 物件的參考，這個物件可讓您設定使用者選取之動態功能表項目的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的參考，代表已選取動態功能表項目的外觀。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>控制動態功能表項目的外觀，當使用者從功能表選取的屬性。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.MenuItemStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.MenuItemStyle>物件 (例如， `DynamicSelectedStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `DynamicSelectedStyle.ForeColor`)。  
  
 動態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>屬性來指定已選取動態功能表項目的淺藍色背景色彩。  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在每個動態功能表項目頂端，以便與其他功能表項目隔開之影像的 URL。</summary>
        <value>顯示在每個動態功能表項目頂端之分隔符號影像的 URL。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>屬性可指定選擇性的自訂映像，以顯示每個動態功能表項目的頂端。 此映像做為功能表項目之間的分隔符號，而且通常是一條線的映像。  
  
> [!NOTE]
>  您也可以顯示在每個動態功能表項目底部分隔符號影像，藉由設定<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>分隔符號影像顯示在每個動態功能表項目頂端的屬性。  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicVerticalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定讓動態功能表相對於其父功能表項目進行垂直移位的像素數。</summary>
        <value>讓動態功能表相對於其父功能表項目進行垂直移位的像素數。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A>調整動態功能表相對於其父功能表項目垂直位置的屬性。 這個屬性會影響以不同的方式取決於是否動態功能表的位置<xref:System.Web.UI.WebControls.Menu>垂直或水平顯示控制項 (依指定<xref:System.Web.UI.WebControls.Menu.Orientation%2A>屬性)。 下表描述的差異。  
  
|方向|描述|  
|-----------------|-----------------|  
|水平|根據預設，動態功能表會顯示其父功能表項目，沒有任何間距，兩者之間的正下方。 設定這個屬性會控制 [動態] 功能表和其父功能表項目之間的垂直間距。|  
|垂直|根據預設，動態功能表項目是其父功能表項目旁顯示的上邊緣對齊。 設定這個屬性會讓動態功能表的位置從垂直這個基底的位置。|  
  
> [!NOTE]
>  您可以將這個屬性設為負值，讓動態功能表以負數方向。 如果您要顯示水平的功能表，負值會導致動態功能表和其父功能表項目重疊。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A>向下移動動態功能表 10 個像素會從其父功能表項目頂端的屬性。  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="menu.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼叫 <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> 方法之前，請先確認功能表控制項是否需要資料繫結，而且是否已指定有效的資料來源控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="menu.FindItem valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">要擷取之功能表項目的值路徑。</param>
        <summary>擷取位於指定值路徑的功能表項目。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.MenuItem" />，代表位於指定值路徑的功能表項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.FindItem%2A>方法來擷取<xref:System.Web.UI.WebControls.MenuItem>物件從<xref:System.Web.UI.WebControls.Menu>控制項。 若要擷取<xref:System.Web.UI.WebControls.MenuItem>物件，您必須指定功能表項目的功能表路徑。 功能表路徑是形成根功能表項目從目前的功能表項目路徑的分隔值的字串。 若要判斷分隔符號字元，請使用<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.FindItem%2A>方法來擷取功能表項目從<xref:System.Web.UI.WebControls.Menu>控制項的指定的值路徑。  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="menu.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的設計階段狀態。</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" />，包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的設計階段狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A>方法是 helper 方法，用來取得目前的設計階段狀態<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeStyleBlock : bool with get, set" Usage="System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示 ASP.NET 是否應該針對功能表中使用的樣式，在階層式樣式表 (CSS) 定義中專門設立一個區塊。</summary>
        <value>一個值，表示 ASP.NET 是否應該針對功能表中使用的樣式，在 CSS 定義中專門設立一個區塊。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu>控制項使用的 CSS 樣式來控制它在瀏覽器的外觀。 根據預設，它會呈現`style`它會使用包含 CSS 定義的 CSS 類別的項目。 您通常將此屬性設定為`false`在下列情況：  
  
-   您想要提供您自己的 CSS 定義自訂功能表的外觀。 然後，您必須提供您自己的區塊的 CSS 定義在頁面中，或包含外部 CSS 檔案包含定義的連結。  
  
-   您想要保留的預設外觀，但想要產生的 CSS 定義維持在個別的檔案。 您必須提供檔案，並在它的連結。  
  
 在這些情況下，您可以取得一份預設 CSS 區塊，<xref:System.Web.UI.WebControls.Menu>控制項屬性設定為產生`true`、 執行頁面上，並在瀏覽器中檢視網頁。 您可以檢視網頁原始檔中的瀏覽器和複本，並將 CSS 區塊貼入網頁標記的個別檔案。  
  
 如果您將此屬性設定為`false`，您無法設定樣式屬性。 例如，您無法加入`DynamicHoverStyle-ForeColor`標記或集合中的屬性`DynamicHoverStyle.ForeColor`程式碼中的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> 物件，這個物件含有 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中所有的功能表項目。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />，包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中所有的功能表項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.Items%2A>屬性 （集合），即可取得<xref:System.Web.UI.WebControls.MenuItemCollection>中的物件，其中包含所有功能表項目<xref:System.Web.UI.WebControls.Menu>控制項。 這個集合通常用來快速地逐一查看所有功能表項目，或存取特定的功能表項目。  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A>集合也可用來以程式設計方式管理功能表項目。 您可以加入、 插入、 移除及擷取<xref:System.Web.UI.WebControls.MenuItem>集合物件。 集合的任何更新會自動反映在<xref:System.Web.UI.WebControls.Menu>往返到伺服器的下一步 後的控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.Items%2A>集合周遊功能表中的項目<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ItemWrap : bool with get, set" Usage="System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示功能表項目的文字是否應換行。</summary>
        <value>
          <see langword="true" /> 表示功能表項目文字應換行，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.ItemWrap%2A>屬性來指定是否顯示每個功能表項目中的文字換行。 當文字用盡空間時，自動分割，並繼續到下一行。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.ItemWrap%2A>屬性來啟用中的文字換行<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelMenuItemStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 物件，這個物件含有根據 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的功能表項目層級，套用至功能表項目的樣式設定。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />，含有根據 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的功能表項目層級，套用至功能表項目的樣式設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合，做為個別的樣式屬性的替代方式 (例如<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) 來控制在個別的功能表層級的功能表項目的樣式。 這個集合中包含的樣式會套用至功能表層級為基礎的功能表項目。 集合中的第一個樣式會對應至第一個層級的功能表中功能表項目的樣式。 集合中的第二個樣式會對應至功能表上，等等的第二個層級中的功能表項目的樣式。 這個集合是最常用來產生內容樣式導覽功能表的其中的功能表項目在特定層級應該具有相同的外觀，不論它們是否具有子功能表。  
  
> [!NOTE]
>  如果針對特定層級使用定義的樣式<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>任何功能表項目集合，這個覆寫樣式該層級的功能表項目的設定。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>將樣式設定套用至功能表項目在集合<xref:System.Web.UI.WebControls.Menu>控制項根據其層級。  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSelectedStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 物件，這個物件含有根據 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的功能表項目層級，套用至選取功能表項目的樣式設定。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />，含有根據 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的功能表項目層級，套用至選取功能表項目的樣式設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>集合做為替代<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>和<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>屬性以控制選取的功能表項目在個別的功能表層級的樣式。 這個集合中包含的樣式會套用至選取的功能表項目，根據其功能表層級。 集合中的第一個樣式會對應至第一個層級的功能表中選取的功能表項目的樣式。 集合中的第二個樣式會對應至選取的功能表項目的功能表和等等的第二個層級中的樣式。 這個集合是最常用來產生內容樣式導覽功能表的其中的功能表項目在特定層級應該具有相同的外觀，不論它們是否具有子功能表。  
  
> [!NOTE]
>  如果針對特定層級使用定義的樣式<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>集合，則會覆寫<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>和<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>該層級的屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>將樣式設定套用至選取的功能表項目中的集合<xref:System.Web.UI.WebControls.Menu>控制項根據其層級。  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSubMenuStyles : System.Web.UI.WebControls.SubMenuStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 物件，這個物件含有根據 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的子功能表項目層級，套用至靜態功能表中子功能表項目的樣式設定。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />，含有根據 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的子功能表項目層級，套用至靜態功能表中子功能表項目的樣式設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>集合，做為個別的樣式屬性的替代方式 (例如<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) 來控制顯示在個別的層級靜態功能表中的靜態子功能表項目樣式。 這個集合中包含的樣式會套用至靜態子功能表項目，根據員工的功能表層級。 集合中的第一個樣式會對應至顯示在靜態功能表中的第一個靜態子功能表層級的樣式。 集合中的第二個樣式會對應至第二個層級顯示在靜態功能表中，等等的子功能表的樣式。 這個集合是最常用來產生內容樣式導覽功能表的其中的功能表項目在特定層級應該具有相同的外觀，不論它們是否具有子功能表。  
  
> [!NOTE]
>  如果針對特定層級使用定義的樣式<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>任何靜態子功能表項目集合，這個覆寫樣式該層級的設定。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>將樣式設定套用至靜態功能表中顯示的子功能表項目集合<xref:System.Web.UI.WebControls.Menu>控制項根據其層級。  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="menu.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" />，代表所要還原的控制項狀態。</param>
        <summary>載入 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中需要保存的屬性狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="menu.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" />，含有控制項的已儲存檢視狀態值。</param>
        <summary>載入先前儲存的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項檢視狀態。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDynamicDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要針對動態功能表呈現的功能表層級數目。</summary>
        <value>要針對動態功能表呈現的功能表層級數目。 預設值為 3。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以藉由設定靜態功能表中顯示多個功能表層級<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>屬性設為大於 1 的值。 您也可以將這個屬性的值大於 0，來顯示在動態功能表中的其他層級。 例如，如果您在靜態功能表中顯示兩個功能表層級 (藉由設定<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>屬性 2) 然後將此屬性設定為 3，三個層級會顯示在動態功能表中的其他功能表。 所有剩餘較高的功能表層級 （如果有的話） 會被捨棄。  
  
> [!NOTE]
>  將這個屬性設定為 0 就會顯示一般功能表到指定的層級<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>屬性，沒有任何動態功能表。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A>屬性來限制在 1 動態功能表中顯示的功能表層級數目。 只有根功能表層級會顯示。  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> 屬性會設定為小於 0 的值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberSignature Language="F#" Value="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>按一下 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的功能表項目時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.MenuItemClick>按一下中的功能表項目時，會引發事件<xref:System.Web.UI.WebControls.Menu>控制項。 這可讓您提供執行自訂的常式，如這個事件發生時，在頁面上，另一個控制項與同步處理的事件處理常式。  
  
 A<xref:System.Web.UI.WebControls.MenuEventArgs>物件傳遞至事件處理常式，可讓您存取的屬性引發事件的功能表項目。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立事件處理常式<xref:System.Web.UI.WebControls.Menu.MenuItemClick>顯示使用者所選取的功能表項目文字的事件。  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemClickCommandName : string" Usage="System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含命令名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個唯讀欄位會包含用來存取功能表項目命令的名稱。 預設值是 「 按一下 」。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的功能表項目繫結至資料時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>功能表項目中的資料繫結時，就會引發事件<xref:System.Web.UI.WebControls.Menu>控制項。 這可讓您提供執行自訂的常式，例如加入自訂內容或修改功能表項目之前呈現，只要就會發生此事件的事件處理常式。  
  
 A<xref:System.Web.UI.WebControls.MenuEventArgs>物件傳遞至事件處理常式，可讓您存取的屬性引發事件的功能表項目。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立事件處理常式<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>修改文字的事件`Home`功能表項目之前它會顯示在<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="menu.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件的來源。</param>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>決定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的事件是否要在頁面的使用者介面 (UI) 伺服器控制項階層架構中向上傳遞。</summary>
        <returns>如果事件已取消，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員會覆寫 <xref:System.Web.UI.Control.OnBubbleEvent%2A>。  
  
> [!NOTE]
>  這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="menu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.DataBinding" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.DataBinding>繫結至資料時，就會引發事件<xref:System.Web.UI.WebControls.Menu>控制項。 這個方法會通知控制項執行與它相關聯的任何資料繫結邏輯。  
  
 <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A>方法允許衍生的類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 擴充時，由控制項開發人員通常使用這個方法<xref:System.Web.UI.WebControls.Menu>類別。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當通知由這個方法時，Web 伺服器控制項都必須執行建立及設定執行個體所需的任何初始化步驟。 在此階段的伺服器控制項的生命週期中，控制項的檢視狀態尚未填入。 此外，您無法存取其他伺服器控制項，呼叫這個方法時，無論它是子系或父這個控制項。 不保證會建立並準備好存取其他伺服器控制項。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnInit%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A>方法透過呼叫<xref:System.Web.UI.WebControls.Menu>控制項引發<xref:System.Web.UI.WebControls.Menu.MenuItemClick>事件。 擴充時，它通常會由控制項開發人員使用<xref:System.Web.UI.WebControls.Menu>類別。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A>方法透過呼叫<xref:System.Web.UI.WebControls.Menu>控制項引發<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>事件。 擴充時，它通常會由控制項開發人員使用<xref:System.Web.UI.WebControls.Menu>類別。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menu.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A>方法透過呼叫<xref:System.Web.UI.WebControls.Menu>控制項引發<xref:System.Web.UI.Control.PreRender>事件。 擴充時，它通常會由控制項開發人員使用<xref:System.Web.UI.WebControls.Menu>類別。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的呈現方向。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.Orientation" /> 列舉值。 預設值為 <see langword="Orientation.Vertical" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.Orientation%2A>屬性來指定用於轉譯方向<xref:System.Web.UI.WebControls.Menu>控制項。 下表列出可用的方向。  
  
|方向|描述|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|<xref:System.Web.UI.WebControls.Menu>控制項的水平方式呈現。|  
|`Orientation.Vertical`|<xref:System.Web.UI.WebControls.Menu>垂直顯示控制項。|  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.Orientation%2A>屬性來顯示水平的功能表。  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字元，用來分隔 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中功能表項目的路徑。</summary>
        <value>用來分隔功能表項目之路徑的字元。 預設值是斜線 （/）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個功能表項目 (由<xref:System.Web.UI.WebControls.MenuItem>物件) 中<xref:System.Web.UI.WebControls.Menu>控制項有<xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A>屬性，指定功能表項目的位置。 值路徑是分隔的值可形成根功能表項目目前的功能表項目路徑的字串。 使用<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A>屬性，以指定分隔字元用來分隔功能表路徑中的值。 這個值通常用於剖析為個別值的清單。  
  
 根據中顯示的文字<xref:System.Web.UI.WebControls.Menu>控制項，以避免任何衝突變更，可能需要分隔符號字元。 例如，如果您設定逗號分隔符號字元，所顯示的文字不應該包含任何逗號;否則，<xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A>屬性無法正確剖析。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A>屬性，以逗點變更功能表項目的值路徑的分隔符號字元。  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="menu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將資料來源中的項目繫結至 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中的功能表項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A>方法是 helper 方法，由呼叫<xref:System.Web.UI.WebControls.Menu>控制項繫結至資料來源中的項目<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menu.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" />，代表傳遞至事件處理常式的事件引數。</param>
        <summary>處理當表單張貼至伺服器時引發的事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表用來將內容寫入 Web 網頁的輸出資料流。</param>
        <summary>在用戶端瀏覽器上呈現功能表控制項。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含組建及呈現特定裝置輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>加入標記屬性，並將控制項開頭標記 (Tag) 的標記 (Markup) 寫入至發出給瀏覽器或裝置的輸出資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A>方法加入標記屬性和控制項的開頭標記的標記寫入至發出給用戶端瀏覽器的回應資料流輸出資料流。  
  
 覆寫<xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A>當您想要實作自訂行為，例如將多個標記寫任何之前，先在回應資料流控制內容，例如`<table><tr><td>`。 這個方法會覆寫<xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A>方法，將<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>屬性。  
  
> [!NOTE]
>  這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含組建及呈現特定裝置輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>這個成員會覆寫 <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 覆寫<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>方法以呈現控制項的開始和結束標記之間的內容。 這個方法的預設實作會呈現任何子控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含組建及呈現特定裝置輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>執行最終標記 (Markup)，並將控制項的 HTML 結尾標記 (Tag) 寫入至發出給瀏覽器或裝置的輸出資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會覆寫<xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType>呈現<xref:System.Web.UI.WebControls.Menu>子功能表和<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>屬性。  
  
> [!NOTE]
>  這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingMode : System.Web.UI.WebControls.MenuRenderingMode with get, set" Usage="System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項會呈現 HTML <see langword="table" /> 項目和內嵌樣式，還是會呈現 <see langword="listitem" /> 項目和階層式樣式表 (CSS) 樣式。</summary>
        <value>一個值，指定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項會呈現 HTML <see langword="table" /> 項目和內嵌樣式，還是會呈現 <see langword="listitem" /> 項目和階層式樣式表 (CSS) 樣式。 預設值是 <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.Menu.RenderingMode%2A>屬性會決定功能表控制項的標記的呈現方式<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 在 ASP.NET 3.5 和舊版中，<xref:System.Web.UI.WebControls.Menu>控制項利用 HTML`table`項目和內嵌樣式，在瀏覽器中指定功能表的外觀。 在 ASP.NET 4 和更新版本中的，依預設<xref:System.Web.UI.WebControls.Menu>控制項利用 HTML`listitem`項目和階層式樣式表 (CSS) 樣式。  
  
 如果您未設定這個屬性，<xref:System.Web.UI.WebControls.Menu>控制項呈現標記由所表示的 ASP.NET 版本適合<xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType>屬性。 <xref:System.Web.UI.WebControls.Menu>控制項會使用下列規則：  
  
-   如果值<xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性是`3.5`、<xref:System.Web.UI.WebControls.Menu>控制項利用 HTML`table`項目和內嵌樣式。  
  
-   如果值<xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性是`4.0`或更多，<xref:System.Web.UI.WebControls.Menu>控制項利用 HTML`listitem`項目和 CSS 樣式。  
  
 這個屬性會提供回溯相容性。 如果<xref:System.Web.UI.Control.RenderingCompatibility%2A>屬性會指出您想要產生為相容於 ASP.NET 4 或更新版本的 HTML 控制項，但您想要<xref:System.Web.UI.WebControls.Menu>控制要使用先前的行為的例外狀況，您可以將此屬性設定為<xref:System.Web.UI.WebControls.MenuRenderingMode.Table>。 比方說，如果您有 Web 網頁會顯示由右至左的文字，您可能想要將此屬性設定為<xref:System.Web.UI.WebControls.MenuRenderingMode.Table>因為某些瀏覽器不會顯示<xref:System.Web.UI.WebControls.MenuRenderingMode.List>模式標記正確地從右至左的文字。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="menu.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項中需要保存的屬性狀態。</summary>
        <returns>物件，包含控制項的狀態資料。 如果此狀態沒有任何變更，這個方法就會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來儲存中的屬性狀態<xref:System.Web.UI.WebControls.Menu>控制項需要保存，即使<xref:System.Web.UI.Control.EnableViewState%2A>屬性設定為`false`。 <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A>方法而言是不可或缺的控制項的作業 （例如索引或關鍵字） 且為個別控制項的檢視狀態資料從狀態資料。  
  
> [!NOTE]
>  這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="menu.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的狀態。</summary>
        <returns>
          <see cref="T:System.Object" />，含有 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的狀態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在動態功能表中之影像的 URL，表示使用者可以向下捲動以檢視其他功能表項目。</summary>
        <value>顯示在動態功能表中之影像的 URL，表示使用者可以向下捲動以檢視其他功能表項目。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在.NET 4.0 轉譯模式中不支援這個屬性。 如果這是必要屬性，您可以將功能表.NET 3.5 呈現模式中網頁的程式碼中加入下列：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 使用<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>屬性來指定自訂映像底部的表示，使用者可以向下捲動其他功能表項目每個動態功能表顯示。  
  
> [!NOTE]
>  如果這個屬性未設定，內部會使用預設映像。  
  
 您可以藉由設定指定之影像的替代文字<xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>屬性來顯示使用者，可以動態功能表中的其他功能表項目向下捲動，指出自訂映像。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> 屬性中所指定影像的替代文字。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> 屬性中所指定影像的替代文字。 預設為空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在.NET 4.0 轉譯模式中不支援這個屬性。 如果這是必要屬性，您可以將功能表.NET 3.5 呈現模式中網頁的程式碼中加入下列：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 當動態功能表項目包含功能表底部的其他項目時，會顯示影像，表示使用者可以向上捲動到檢視其他功能表項目。 使用<xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A>屬性來指定此映像的替代文字。 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A>屬性來指定用來表示，使用者可以向下捲動動態功能表中的其他功能表項目影像的替代文字。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在動態功能表中之影像的 URL，表示使用者可以向上捲動以檢視其他功能表項目。</summary>
        <value>顯示在動態功能表中之影像的 URL，表示使用者可以向上捲動以檢視其他功能表項目。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在.NET 4.0 轉譯模式中不支援這個屬性。 如果這是必要屬性，您可以將功能表.NET 3.5 呈現模式中網頁的程式碼中加入下列：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 使用<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>屬性來指定要表示使用者可以向上捲動以檢視其他功能表項目每個動態功能表的頂端顯示的自訂映像。  
  
> [!NOTE]
>  如果這個屬性未設定，內部會使用預設映像。  
  
 您可以藉由設定指定之影像的替代文字<xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>屬性來顯示指出使用者，可以動態功能表中的其他功能表項目向上捲動的自訂映像。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> 屬性中所指定影像的替代文字。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> 屬性中所指定影像的替代文字。 預設為空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在.NET 4.0 轉譯模式中不支援這個屬性。 如果這是必要屬性，您可以將功能表.NET 3.5 呈現模式中網頁的程式碼中加入下列：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 當動態功能表項目包含功能表的頂端的其他項目時，會顯示影像，表示使用者可以向上捲動到檢視其他功能表項目。 使用<xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A>屬性來指定此映像的替代文字。 您指定的文字會提供可用來將控制項設為更容易存取的映像的描述的輔助技術裝置。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A>屬性來指定用來表示，使用者可以向上捲動動態功能表中的其他功能表項目影像的替代文字。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得選取的功能表項目。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItem" />，代表選取的功能表項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>屬性來判斷使用者選取功能表項目。  
  
> [!NOTE]
>  快速的方式，您也可以決定選取的功能表項目的文字是直接使用<xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>屬性。  
  
 當使用者選取功能表項目從<xref:System.Web.UI.WebControls.Menu>控制項，<xref:System.Web.UI.WebControls.Menu.MenuItemClick>引發事件時，可讓您藉由提供的事件處理常式執行自訂的常式。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>屬性來判斷中的選取的功能表項目<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得選取功能表項目的值。</summary>
        <value>選取功能表項目的值。 預設值為 <see cref="F:System.String.Empty" />，表示目前未選取任何功能表項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>屬性來判斷選取的功能表項目文字的捷徑。 若要存取選取的功能表項目中的其他屬性，請使用<xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>屬性來判斷中選取的功能表項目的文字<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="menu.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" />，包含顯示控制項的狀態資料。</param>
        <summary>設定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的設計階段資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法覆寫 <xref:System.Web.UI.Control.SetDesignModeState%2A>。  
  
> [!NOTE]
>  這個方法用於主要由控制項開發人員擴充<xref:System.Web.UI.WebControls.Menu>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataBound : System.Web.UI.WebControls.MenuItem * bool -&gt; unit" Usage="menu.SetItemDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">要設定的 <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataBound">
          <see langword="true" /> 表示要設定節點為資料繫結，否則為 <see langword="false" />。</param>
        <summary>使用指定值，設定指定 <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> 物件的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A>方法是 helper 方法，供衍生類別，來設定<xref:System.Web.UI.WebControls.MenuItem.DataBound%2A>屬性指定的<xref:System.Web.UI.WebControls.MenuItem>物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataItem : System.Web.UI.WebControls.MenuItem * obj -&gt; unit" Usage="menu.SetItemDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要設定的 <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataItem">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的資料項目。</param>
        <summary>使用指定值，設定指定 <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> 物件的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A>方法是 helper 方法，供衍生類別，來設定<xref:System.Web.UI.WebControls.MenuItem.DataItem%2A>屬性指定的<xref:System.Web.UI.WebControls.MenuItem>物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataPath : System.Web.UI.WebControls.MenuItem * string -&gt; unit" Usage="menu.SetItemDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">要設定的 <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataPath">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的資料路徑。</param>
        <summary>使用指定值，設定指定 <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> 物件的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A>方法是 helper 方法，供衍生類別，來設定<xref:System.Web.UI.WebControls.MenuItem.DataPath%2A>屬性指定的<xref:System.Web.UI.WebControls.MenuItem>物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定隱藏影像的替代文字，讓螢幕助讀程式讀取以提供略過連結清單的能力。</summary>
        <value>隱藏影像的替代文字，讓螢幕助讀程式讀取以提供略過連結清單的能力。 預設為空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>螢幕助讀程式，讓您略過連結清單可以讀取屬性來指定隱藏影像的替代文字。 您指定的文字會提供具有隱藏的描述的輔助技術裝置跳過可用來將控制項設為更容易存取的連結映像。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
 <xref:System.Web.UI.WebControls.Menu>控制項提供<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>屬性做為螢幕助讀程式所要略過整個控制項的方式。 如果<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>屬性設定，呈現不可見的影像的替代文字，讓使用者選擇跳至控制項的結尾。 大聲閱讀，螢幕助讀程式讀取的替代文字和影像佔用一個像素的空間。 像素精確控制呈現頁面的詳細資訊，請設定<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>屬性設為空字串 ("")，並提供您自己的機制，以略過 功能表。 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>根據預設屬性設定為空字串。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>螢幕助讀程式，讓您略過連結清單可以讀取屬性來指定隱藏影像的替代文字。  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在每個靜態功能表項目底部，做為分隔符號之影像的 URL。</summary>
        <value>顯示在每個靜態功能表項目底部，做為分隔符號之影像的 URL。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>屬性來指定自訂的映像，在每個靜態功能表的底部顯示項目，做為功能表項目之間的分隔符號。  
  
> [!NOTE]
>  或者，您也可以顯示分隔符號影像上方的每個靜態功能表項目藉由設定<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>屬性來指定要顯示在每個靜態功能表項目底部分隔符號影像。  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StaticDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在靜態功能表中顯示的功能表層級數目。</summary>
        <value>要在靜態功能表中顯示的功能表層級數目。 預設為 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>屬性來指定要在靜態功能表中顯示的功能表層級數目。 所有的功能表層級低於指定的值會顯示在動態功能表。 您也可以限制以設定動態功能表中顯示的功能表層級數目<xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>靜態功能表中顯示的第一個的兩個功能表層級的屬性。  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值小於 1。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaticEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示是否顯示內建影像以表示靜態功能表項目具有子功能表。</summary>
        <value>
          <see langword="true" /> 表示顯示具有子功能表之靜態功能表項目的內建影像，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果靜態功能表項目含有子功能表，可以顯示一個影像，表示使用者可以展開功能表。 有兩種方式可顯示此映像：  
  
-   設定<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性`true`使用內建的映像 （預設值）。  
  
-   設定<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性來指定自訂映像。  
  
 如果<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性設定，則該影像會覆寫內建影像，不論值<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性。  
  
> [!NOTE]
>  如果<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性未設定而<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性設定為`false`，不會顯示影像。  
  
 您可以藉由設定指定之影像的替代文字<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性隱藏表示靜態功能表項目具有子功能表的影像。 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性也必須設定為空字串 ("") 為隱藏，映像。  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.Style" /> 物件的參考，這個物件可讓您設定當滑鼠指標位於靜態功能表項目上時，靜態功能表項目的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> 的參考，代表當滑鼠指標位於靜態功能表項目上時，靜態功能表項目的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>屬性，即可控制靜態功能表項目的外觀，當滑鼠指標移至上方。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.Style>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.Style>物件 (例如， `StaticHoverStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `StaticHoverStyle.ForeColor`)。  
  
 靜態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>要將靜態功能表項目的背景色彩變更為淺 sky 藍色，當使用者將滑鼠指標進入此屬性。  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與靜態顯示之所有功能表項目一起顯示的其他文字。</summary>
        <value>與所有功能表項目一起顯示的其他文字或字元。 這個屬性的預設值是"{0}。 」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以用來插入文字，以便設定功能表中的靜態功能表項目的格式。 這是特別適用於行動裝置。 <xref:System.Web.UI.WebControls.Menu>控制項支援的靜態和動態功能表項目，顯示範本，但是範本會忽略在行動裝置上。 這個屬性可讓您將字元或文字，並將格式套用至功能表項目，適用於行動和桌面裝置不使用範本。  
  
> [!NOTE]
>  若要達到一致的格式使用這個屬性時，您也應該設定<xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A>屬性，如果您想要與相同的靜態和動態功能表項目之間的格式。  
  
 如果範本格式設定與此屬性會套用，範本的格式設定的行動裝置會忽略。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A>和<xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A>屬性將文字加入每個功能表項目。  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樣板，含有針對靜態功能表項目呈現的自訂內容。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />，包含靜態功能表的自訂內容。 預設值為 null，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是針對靜態功能表中使用內建的轉譯，您可以定義您自己的使用者介面 (UI)，靜態功能表項目的使用<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>屬性。 若要指定靜態功能表項目的自訂範本，先將`<StaticTemplate>`標記的開頭和結尾標記之間<xref:System.Web.UI.WebControls.Menu>控制項。 然後，您可以列出範本的開頭和結尾之間的內容`<StaticTemplate>`標記。 您可以使用，以進一步控制靜態功能表的外觀<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 物件的參考，這個物件可以讓您設定靜態功能表中功能表項目的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的參考，代表靜態功能表中功能表項目的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>屬性，即可控制靜態功能表中功能表項目的外觀。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.MenuItemStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.MenuItemStyle>物件 (例如， `StaticMenuItemStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `StaticMenuItemStyle.ForeColor`)。  
  
 靜態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>屬性來指定靜態功能表中功能表項目的淺色 sky 藍色背景色彩。  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 物件的參考，這個物件可讓您設定動態功能表的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的參考，代表靜態功能表的外觀。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>屬性，即可控制靜態功能表的外觀。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.MenuItemStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.MenuItemStyle>物件 (例如， `StaticMenuStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `StaticMenuStyle.ForeColor`)。  
  
 靜態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>屬性可指定整個靜態功能表的淺藍色 sky 背景色彩。  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來表示靜態功能表項目具有子功能表之快顯影像的替代文字。</summary>
        <value>快顯影像的替代文字。 預設為空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果靜態功能表項目含有子功能表，可以顯示一個影像，表示使用者可以展開功能表。 使用<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>屬性來指定此映像的替代文字。  
  
 有兩種方式來顯示影像：  
  
-   設定<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性`true`使用內建的映像 （預設值）。  
  
-   設定<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性來指定自訂映像。  
  
> [!NOTE]
>  這個屬性適用於內建的映像和自訂映像。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>屬性來指定用來表示靜態功能表項目具有子功能表之影像的替代文字。 當使用者將滑鼠指標停留在影像上時，此文字會顯示為工具提示。  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示來表示靜態功能表項目具有子功能表之影像的 URL。</summary>
        <value>顯示來表示靜態功能表項目具有子功能表之影像的 URL。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果靜態功能表項目含有子功能表，可以顯示一個影像，表示使用者可以展開功能表。 有兩種方式可顯示此映像：  
  
-   設定<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性`true`使用內建的映像 （預設值）。  
  
-   設定<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性來指定自訂映像。  
  
 如果<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性設定，則該影像會覆寫內建影像，不論值<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性。  
  
 如果<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性未設定而<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>屬性設定為`false`，不會顯示影像。  
  
> [!NOTE]
>  當您設定這個屬性時，使用斜線 （/），而不是反斜線 (\\)。 如果您在路徑中使用反斜線，不會顯示指定的映像。  
  
 您可以藉由設定指定之影像的替代文字<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>屬性來指定功能表項目具有子功能表時，靜態功能表項目中顯示的自訂映像。  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 物件的參考，這個物件可以讓您設定使用者在靜態功能表中選取之功能表項目的外觀。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的參考，代表在靜態功能表中選取之功能表項目的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>屬性來控制使用者在靜態功能表中選取之功能表項目的外觀。 這個屬性是唯讀的。不過，您可以設定的屬性<xref:System.Web.UI.WebControls.MenuItemStyle>它所傳回的物件。 可以以宣告方式設定的屬性，在表單中`Property-Subproperty`，其中`Subproperty`屬性<xref:System.Web.UI.WebControls.MenuItemStyle>物件 (例如， `StaticSelectedStyle-ForeColor`)。 屬性也可以設定以程式設計方式在表單中`Property.Subproperty`(例如， `StaticSelectedStyle.ForeColor`)。  
  
 靜態功能表項目的樣式屬性會套用順序如下：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>集合或<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 如果<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>定義集合，它會套用在此階段中，覆寫的其他功能表項目的樣式屬性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
> [!IMPORTANT]
>  下列重大變更。  
  
 .NET Framework 4.0，當定義之前`<asp:Menu>`控制項在.aspx 檔案中，使用者可設定`StaticSelectedStyle-CssClass`屬性來設定選取的控制項項目之 CSS 類別。 例如，使用者可能會有功能表控制項，如下所示：  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 與此功能表控制項轉譯為：  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 不過，在.NET Framework 4.0 及更新版本中，選取的功能表項目會設定為`selected`CSS 類別，而所指定的類別不一定是`StaticSelectedStyle-CssClass`。 因此，上述的 ASP.NET 程式碼會改為轉譯成：  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>屬性來指定選取靜態功能表項目的淺藍色背景色彩。  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.StaticSubMenuIndent : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要讓子功能表在靜態功能表內縮排的間距 (以像素為單位)。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" />，代表要讓子功能表在靜態功能表內縮排的間距 (以像素為單位)。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當靜態功能表就會顯示一個以上的功能表層級 (如果<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>屬性設定為高於 1 的值)，使用<xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A>屬性來指定所要的子功能表項目，靜態功能表內縮排的像素數目。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A>10 個像素的縮排在靜態功能表中的子功能表項目屬性。  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所選取 <see cref="T:System.Web.UI.WebControls.Unit" /> 的值小於 0。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在每個靜態功能表項目頂端，做為分隔符號之影像的 URL。</summary>
        <value>顯示在每個靜態功能表項目頂端，做為分隔符號之影像的 URL。 預設值是空字串 ("")，表示這個屬性未設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>屬性來指定自訂映像以顯示每個靜態功能表頂端的項目，做為功能表項目之間的分隔符號。  
  
> [!NOTE]
>  或者，您也可以顯示分隔符號影像的每個靜態功能表項目底部藉由設定<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>屬性來指定要顯示在每個靜態功能表項目頂端分隔符號影像。  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" />，代表傳遞至事件處理常式的事件引數。</param>
        <summary>處理當表單張貼至伺服器時引發的事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得對應於 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 控制項的 <see cref="T:System.Web.UI.WebControls.Menu" /> 值。 這個屬性主要由控制項開發人員使用。</summary>
        <value>一律傳回 <see langword="HtmlTextWriterTag.Table" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.TagKey%2A>屬性來判斷<xref:System.Web.UI.HtmlTextWriterTag>相關聯的值<xref:System.Web.UI.WebControls.Menu>控制項。 這個屬性主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要顯示與功能表項目關聯之 Web 網頁內容的目標視窗或框架。</summary>
        <value>在其中顯示連結 Web 網頁內容的目標視窗或框架。 預設值是空字串 ("")，會重新整理擁有焦點的視窗或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Menu.Target%2A>屬性，以指定的視窗或框架，以顯示 Web 內容會連結至功能表項目，按一下該功能表項目時。 除了以底線為開頭的某些特殊值以外，值必須以 A 到 Z (不區分大小寫) 範圍內的字母為開頭，如下表所示。  
  
|目標值|描述|  
|------------------|-----------------|  
|`_blank`|在無框架的新視窗中呈現內容。|  
|`_parent`|在即時父代框架組中呈現內容。|  
|`_search`|在搜尋窗格中呈現內容。|  
|`_self`|在擁有焦點 (Focus) 的框架中呈現內容。|  
|`_top`|在無框架的完整視窗中呈現內容。|  
  
> [!NOTE]
>  請查閱您的瀏覽器文件，以判斷是否支援 `_search` 值。  例如，Internet Explorer 版本 5.0 和更新版本支援`_search`目標值  
  
 這個屬性會套用至所有功能表項目在<xref:System.Web.UI.WebControls.Menu>控制項。 您可以選擇性地覆寫這個屬性設定<xref:System.Web.UI.WebControls.MenuItem.Target%2A>每個屬性<xref:System.Web.UI.WebControls.MenuItem>直接物件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Target%2A>屬性轉譯成目標屬性。 XHTML 1.1 嚴格的文件類型定義中不允許錨定項目上的目標屬性。 如果轉譯的輸出必須符合 XHTML 或協助工具標準，請勿設定<xref:System.Web.UI.WebControls.MenuItem.Target%2A>屬性。 如需詳細資訊，請參閱[XHTML 標準，在 Visual Studio 和 ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)和[Visual Studio 和 ASP.NET 中的協助工具](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.Menu.Target%2A>屬性來指定內容連結至每個功能表項目應該顯示在新視窗中，當使用者按一下該功能表項目。  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="menu.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>追蹤 <see cref="T:System.Web.UI.WebControls.Menu" /> 控制項的檢視狀態變更，以便可將其儲存在該控制項的 <see cref="T:System.Web.UI.StateBag" /> 物件中。 這個物件可透過 <see cref="P:System.Web.UI.Control.ViewState" /> 屬性存取。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>