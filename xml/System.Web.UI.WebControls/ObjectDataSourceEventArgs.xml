<Type Name="ObjectDataSourceEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="300e38402f541d811d68d28bc74738a9649743f8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580012" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供資料給 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" /> 控制項的 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" /> 和 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>類別用於<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>方法，以提供存取權之前使用的任何資料作業的商務物件執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>控制和商務物件會執行。 設定商務物件，而且使用存取<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性。 加入事件處理常式委派以處理<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>事件，您可以在自訂程式碼，而不是建立商務物件的執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>執行具現化。 當您想要撥打的非預設建構函式來建立執行個體; 或商務物件的非預設執行個體時這非常有用<xref:System.Web.UI.WebControls.ObjectDataSource>一律會呼叫預設建構函式來建立它所使用的商務物件的執行個體。 您也可以加入事件處理常式委派以處理<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>事件，可讓您可公開存取任何公開的商務物件的成員執行任何額外的初始化或工作。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>不會呼叫方法<xref:System.Web.UI.WebControls.ObjectDataSource>控制，如果是商務物件方法，以執行資料作業`static`。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控制項不僅會公開許多您可以控制它們來使用基礎的商務物件在其生命週期中的不同時間的事件。 下表列出的事件，以及相關聯<xref:System.EventArgs>類別和事件處理常式委派。  
  
|Event - 事件|EventArgs|事件處理常式|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>。<br /><br /> 發生於之前建立的商務物件執行個體。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>。<br /><br /> 在建立商務物件的執行個體之後，就會發生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>。<br /><br /> 擷取資料之前發生。|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>。<br /><br /> Insert、 update 或 delete 作業執行之前發生。|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>。<br /><br /> 發生於之後擷取的資料。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> 插入、 更新或刪除作業已完成之後發生。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>。<br /><br /> 在商務物件被終結之前發生。|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>擷取及顯示資訊的控制項。 第二個程式碼範例提供第一個程式碼範例使用範例基本商務物件。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>擷取及顯示資訊的控制項。 在此範例中，如同許多真實世界案例中，它可能不可能也不適合使用具有的商務物件的預設執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>控制項。 在此範例中，<xref:System.Web.UI.WebControls.ObjectDataSource>成功無法呼叫預設建構函式，因為它將會擲回例外狀況。 在某些情況下，可能會受保護的預設建構函式，並在其他它可能會初始化為所需狀態的商務物件。 不論原因，您可以自行建立商務物件的執行個體並將設定執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>傳遞至處理常式的物件。 這是商務物件的執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>將用來執行其工作。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 下列程式碼範例示範上述的程式碼範例會使用範例基本商務物件。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 會與其互動以執行資料作業的商務物件。</param>
        <summary>使用指定的物件，初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 用來執行資料作業的商務物件。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 用來執行資料作業的商務物件，如果將 <see langword="null" /> 傳遞至 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> 則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>擷取及顯示資訊的控制項。 第二個程式碼範例提供第一個程式碼範例使用範例基本商務物件。  
  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>的商務物件的控制和<xref:System.Web.UI.WebControls.GridView>擷取及顯示資訊的控制項。 在此範例中，如同許多真實世界案例中，它可能不可能也不適合使用具有的商務物件的預設執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>控制項。 在此範例中，<xref:System.Web.UI.WebControls.ObjectDataSource>成功無法呼叫預設建構函式，因為它將會擲回例外狀況。 在某些情況下，可能會受保護的預設建構函式，並在其他它可能會初始化為所需狀態的商務物件。 不論原因，您可以自行建立商務物件的執行個體並將設定執行個體<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>屬性<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>傳遞至處理常式的物件。 這是商務物件的執行個體<xref:System.Web.UI.WebControls.ObjectDataSource>將用來執行其工作。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 下列程式碼範例示範上述的程式碼範例會使用範例基本商務物件。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
  </Members>
</Type>