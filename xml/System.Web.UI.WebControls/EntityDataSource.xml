<Type Name="EntityDataSource" FullName="System.Web.UI.WebControls.EntityDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc04fbc2a05e0807d0fca8f416ba6e5b668e8bd5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600482" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityDataSource extends System.Web.UI.DataSourceControl implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource, class System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EntityDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityDataSource&#xA;Inherits DataSourceControl&#xA;Implements IDynamicDataSource, IQueryableDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityDataSource : System::Web::UI::DataSourceControl, System::Web::DynamicData::IDynamicDataSource, System::Web::UI::WebControls::IQueryableDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IQueryableDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("EntitySetName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 ASP.NET 應用程式中資料繫結控制項的實體資料模型 (EDM)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#introduction)  
  
-   [宣告式語法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>簡介  
 您可以使用<xref:System.Web.UI.WebControls.EntityDataSource>以及擷取 EDM 中的資料，並且將顯示、 編輯和使用少量或沒有程式碼來排序資料，在網頁上的資料繫結控制項的控制項。 如需詳細資訊，請參閱[EntityDataSource Web 伺服器控制項概觀](http://msdn.microsoft.com/library/1f09af00-9578-4744-a029-765710a3c83f)。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:EntityDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    CommandText="string"  
    ConnectionString="string"  
    ContextType="typed ObjectContext"  
    ContextTypeName="string"  
    DefaultContainerName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    EntitySetName="string"  
    EntityTypeFilter="string"  
    GroupBy="string"  
    Include="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnException="IDynamicDataSource.Exception event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    StoreOriginalValuesInViewState="True|False"  
    Where="string"  
>  
        <CommandParameters />  
        <DeleteParameters />  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <UpdateParameters />  
        <WhereParameters />  
</asp:EntityDataSource>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource (System.Data.EntityClient.EntityConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As EntityConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource(System::Data::EntityClient::EntityConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
      </Parameters>
      <Docs>
        <param name="connection">實體資料模型 (EDM) 的 <see cref="T:System.Data.EntityClient.EntityConnection" />。</param>
        <summary>使用所提供的連接，初始化 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項是否會根據 <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" /> 集合中的值，動態建立 ORDER BY 子句。</summary>
        <value>
          如果 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項會建立 ORDER BY 子句，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制設為  `true`，控制項自動產生 ORDER BY 子句中的參數從<xref:System.Web.UI.WebControls.ParameterCollection>指派給<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>屬性。 這就不需要明確地指派至 ORDER BY 子句<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性。  
  
 如果您設定<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性`true`，您不應明確指派值給<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性。  
  
   
  
## Examples  
 下列範例會自動產生 ORDER BY 子句，並會使用值`OrderByDropDownList`設定參數的值。  
  
```  
<asp:DropDownList AutoPostBack="true" ID="OrderByDropDownList" runat="server">  
    <asp:ListItem Value="TotalDue"></asp:ListItem>  
    <asp:ListItem Value="OrderDate"></asp:ListItem>  
</asp:DropDownList>  
  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:ControlParameter  
    ControlID="OrderByDropDownList"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 下列範例會自動產生 ORDER BY 子句，並使用`DefaultValue`屬性`Parameter`項目來設定參數的值。  
  
```  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:Parameter  
    DefaultValue="TotalDue"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當 <see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" /> 屬性設定為 <see langword="true" /> 且 <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" /> 屬性不是 Null 時。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項是否根據 <see cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" /> 集合中所定義的值動態建立 WHERE 子句。</summary>
        <value>
          如果 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項要建立 WHERE 子句，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要篩選查詢結果納入方程式實體類型屬性的運算式，您可以使用<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>屬性。 當<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制設為  `true`，控制項自動產生`WHERE`子句中的參數從<xref:System.Web.UI.WebControls.ParameterCollection>的<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>屬性。 <xref:System.Web.UI.WebControls.Parameter.Name%2A>每個參數的屬性必須符合包含在查詢結果的實體類型屬性名稱。 如果您設定<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>屬性`true`，您應該明確地指派`WHERE`子句<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。  
  
## <a name="example"></a>範例  
 在下列範例中<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>屬性設定為`true`。 因此，<xref:System.Web.UI.WebControls.Parameter.Name%2A>的屬性必須符合包含在查詢結果的實體類型屬性名稱。 查詢會選取 SalesOrderID 和 TotalDue SalesOrderHeader 實體類型的屬性。 自動產生`WHERE`子句會藉由比較 TotalDue 值 TotalDueList 清單方塊控制項中選取值篩選查詢結果。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Select="it.SalesOrderID, it.TotalDue"  
    AutoGenerateWhereClause="True">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="TotalDue" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
## <a name="example"></a>範例  
 預設的情況下，<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 屬性設定為 `false`。 這表示我們必須提供`WHERE`子句。 在下列範例中，`WHERE`子句是`Where="it.TotalDue < @totalDueParam"`totalDueParam 且參數名稱。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithOutAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Where="it.TotalDue < @totalDueParam"   
    Select="it.SalesOrderID, it.TotalDue">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="totalDueParam" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當 <see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" /> 屬性設定為 <see langword="true" /> 且 <see cref="P:System.Web.UI.WebControls.EntityDataSource.Where" /> 屬性不是 Null 時。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項是否支援在執行階段完整瀏覽資料的區段。</summary>
        <value>
          如果使用者可以分頁瀏覽資料，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource>控制項支援自動查詢所傳回的資料進行分頁。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>屬性是布林值屬性，指出是否啟用繫結至資料控制項的查詢所傳回的資料分頁。 當這個屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>控制項新增至適當的查詢產生器方法<xref:System.Data.Objects.ObjectQuery%601>根據資訊提供給<xref:System.Web.UI.WebControls.EntityDataSourceView>資料繫結控制項。  
  
 值<xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>屬性會決定是否<xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>支援資料來源的控制項是`true`或`false`。  
  
 當您定義投影啟用分頁時，您必須定義排序結果所依據的屬性。 這表示當您設定<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性來定義投影，並讓<xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>設`true`，您也必須設定<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性來定義的順序，或設定<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性`true`並加入訂單依參數<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項是否支援在執行階段排序資料。</summary>
        <value>
          如果使用者可以排序資料，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource>控制項支援自動排序查詢所傳回的資料。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是布林值的屬性，指出是否啟用繫結至資料控制項的查詢所傳回之資料的排序。 當這個屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>控制項新增至適當的查詢產生器方法<xref:System.Data.Objects.ObjectQuery%601>根據資訊提供給<xref:System.Web.UI.WebControls.EntityDataSourceView>資料繫結控制項。  
  
 值<xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A>屬性會決定是否<xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>和<xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>支援資料來源的控制項是`true`或`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection CommandParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ CommandParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得查詢的參數集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含傳遞至查詢命令的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.CommandParameters%2A>屬性用來存取<xref:System.Web.UI.WebControls.ParameterCollection>參數傳遞至使用指定的明確 Entity SQL 查詢的<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>屬性。  
  
   
  
## Examples  
 下列範例會提供傳回 Product 物件的集合的 Entity SQL 命令文字。  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 下列範例會傳回一連串預計的資料行：  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
         FROM Products AS p   
         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
         ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
               ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
               ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定定義查詢的 Entity SQL 命令。</summary>
        <value>本身為 Entity SQL 查詢的 <see langword="string" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項可讓您指定使用自訂的 Entity SQL 運算式的查詢。 類似的 SELECT 陳述式，<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>建立不是可更新的原始資料的預測。  
  
 當<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>屬性指派，請停用更新、 插入和刪除功能。 在此情況下，方法<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>， <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>，和<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>將相關<xref:System.Web.UI.WebControls.EntityDataSourceView>控制所有傳回`false`。  
  
 當<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>屬性設定，則擲回例外狀況時<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>資料繫結至控制項所呼叫方法<xref:System.Web.UI.WebControls.EntityDataSource>控制如果的值<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>， <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>設`true`。  
  
 如果<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>設為投影的屬性會傳回查詢 (比方說，「`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`")、<xref:System.Data.Common.DbDataRecord>會傳回。  
  
   
  
## Examples  
 下列範例會使用提供的 Entity SQL 命令，來傳回 Product 物件的集合。  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 下列範例會傳回一連串預計的資料行：  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
          FROM Products AS p   
          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
          ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
                ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
                ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來執行查詢的連接字串。</summary>
        <value>用於查詢的連接字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>可以從具名的 EDM 連接字串儲存在應用程式組態檔的項目中初始化控制項。 使用實體資料模型精靈建立 EDM 時，應用程式組態檔中建立具名的 EDM 連接。 當應用程式組態檔中找到具名的 EDM 連接字串時，連線就會顯示為 EntityDataSource 設計工具中設定資料來源精靈的選項。 如需詳細資訊，請參閱[設定資料來源精靈 （EntityDataSource 控制項）](http://msdn.microsoft.com/library/263976a5-2406-47c0-8919-c6af6e76d78e)。  
  
 如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>未指定屬性中，同時<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>和<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>屬性必須設定為要建立的控制項<xref:System.Data.Objects.ObjectContext>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of EntityDataSourceContextCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatedEventArgs ^&gt; ^ ContextCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 已完成建立用於搭配實體資料物件使用的 <see cref="T:System.Data.Objects.ObjectContext" /> 時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理這個事件來存取<xref:System.Data.Objects.ObjectContext>，會由<xref:System.Web.UI.WebControls.EntityDataSource>執行查詢及追蹤變更的控制項。 這個內容物件可儲存及用於後續作業外<xref:System.Web.UI.WebControls.EntityDataSource>。 <xref:System.Data.Objects.ObjectContext>取自<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>所傳回<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated>事件。 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)。 如需有關物件內容的詳細資訊，請參閱[識別解析、 狀態管理和變更追蹤](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated>事件可讓您指派<xref:System.Data.Objects.ObjectContext>，已建立的變數之外的後續作業以<xref:System.Web.UI.WebControls.EntityDataSource>。 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType>屬性包含已在中建立的內容<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>事件。 如果使用者不能指派期間的內容<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>事件中包含的內容執行個體<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType>是由一個<xref:System.Web.UI.WebControls.EntityDataSource>根據<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=nameWithType>， <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=nameWithType>，或<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=nameWithType>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of EntityDataSourceContextCreatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatingEventArgs ^&gt; ^ ContextCreating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 建立用來搭配實體資料物件運作的 <see cref="T:System.Data.Objects.ObjectContext" /> 時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>事件，以提供您自己<xref:System.Data.Objects.ObjectContext>而不需要新<xref:System.Data.Objects.ObjectContext>建立。 如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>事件不會處理或處理常式未提供<xref:System.Data.Objects.ObjectContext>、<xref:System.Web.UI.WebControls.EntityDataSource>會建立一個根據其設定。 當<xref:System.Data.Objects.ObjectContext>提供給<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>事件時，相同的執行個體指派給`Context`後續事件的事件物件的屬性。 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)。 如需有關物件內容的詳細資訊，請參閱[識別解析、 狀態管理和變更追蹤](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Data.Objects.ObjectContext>變數<xref:System.Web.UI.Page>物件，並將它指派給<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>物件。  
  
```csharp  
public partial class _Default : System.Web.UI.Page  
    {  
        AdventureWorksModel.AdventureWorksEntities objCtx =  
            new AdventureWorksModel.AdventureWorksEntities();  
  
        protected void EntityDataSource2_ContextCreating(object sender,   
            EntityDataSourceContextCreatingEventArgs e)  
        {  
            e.Context = objCtx;  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of EntityDataSourceContextDisposingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextDisposingEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於處置 <see cref="T:System.Data.Objects.ObjectContext" /> 之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理這個事件以防止<xref:System.Data.Objects.ObjectContext>供<xref:System.Web.UI.WebControls.EntityDataSource>正在處置的控制項。 這樣做，當您想要使用單一<xref:System.Data.Objects.ObjectContext>中您的頁面數個控制項或執行個體的執行個體<xref:System.Web.UI.WebControls.EntityDataSource>控制項。 若要避免<xref:System.Data.Objects.ObjectContext>從正在處置，設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>物件`true`。 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)。 如需有關物件內容的詳細資訊，請參閱[識別解析、 狀態管理和變更追蹤](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)。  
  
   
  
## Examples  
 若要保留的現有<xref:System.Data.Objects.ObjectContext>日後參考取消 5d; 的執行個體成員<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated>事件，如下列程式碼所示。  
  
```csharp  
protected void EntityDataSource2_ContextDisposing(object sender,   
    EntityDataSourceContextDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public Type ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.Objects.ObjectContext" /> 控制項使用的具型別 <see cref="T:System.Web.UI.WebControls.EntityDataSource" />。</summary>
        <value>衍生自 <see cref="T:System.Data.Objects.ObjectContext" /> 的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectContext>供<xref:System.Web.UI.WebControls.EntityDataSource>控制可以存取從<xref:System.Web.UI.WebControls.EntityDataSource.ContextType%2A>屬性。 如需詳細資訊，請參閱[物件內容生命週期管理 (EntityDataSource)](http://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.Objects.ObjectContext" /> 控制項所使用之具型別 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 的完整限定名稱。</summary>
        <value>
          <see cref="T:System.String" />，表示該型別的完整限定名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是指定具類型的完整限定的類型名稱的字串<xref:System.Data.Objects.ObjectContext>，會由<xref:System.Web.UI.WebControls.EntityDataSource>控制項。 如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>未指定屬性中，同時<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>和<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>屬性必須設定為要建立的控制項<xref:System.Data.Objects.ObjectContext>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.EntityDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As EntityDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::EntityDataSourceView ^ CreateView();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.EntityDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立與這個控制項關聯之 <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> 的新執行個體。</summary>
        <returns>做為資料繫結控制項介面的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要提供自訂的檢視，您可以覆寫這個方法在衍生類別中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultContainerName">
      <MemberSignature Language="C#" Value="public string DefaultContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定預設容器名稱。</summary>
        <value>
          <see cref="T:System.String" />，它是預設容器名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>未指定屬性中，同時<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>和<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>屬性必須設定為要建立的控制項<xref:System.Data.Objects.ObjectContext>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於物件從資料來源中刪除之後。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Deleted>之後引發事件<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>方法被成功呼叫上<xref:System.Data.Objects.ObjectContext>刪除的物件。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件用來存取已刪除的物件。 此物件是處於<xref:System.Data.EntityState.Detached>狀態。  
  
 刪除物件時，發生錯誤時<xref:System.Web.UI.WebControls.EntityDataSource.Deleted>引發事件時，<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件設為所傳回<xref:System.Exception>，而<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>屬性設定為`null`。 如果您在處理中的例外狀況<xref:System.Web.UI.WebControls.EntityDataSource.Deleted>事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性`true`。 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得刪除作業期間所使用的參數集合。</summary>
        <value>刪除作業期間所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 4 或更早版本為目標的 web 應用程式，屬性值會儲存在檢視狀態，並自動回傳之間維護。 ASP.NET 4.5 為目標的 web 應用程式，屬性值不會儲存檢視狀態中，您必須設定每個 HTTP 要求值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於物件從資料來源中刪除之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Deleting>之前引發事件<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>上呼叫方法<xref:System.Data.Objects.ObjectContext>刪除的物件。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件用來存取要刪除的物件。 此物件的屬性可能未完全設定。 必須設定只能識別此物件所需的屬性。  
  
 若要停止刪除物件，設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件`true`。  
  
 如果發生錯誤時刪除的物件，準備<xref:System.Web.UI.WebControls.EntityDataSource.Deleting>就會引發事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件設為所傳回<xref:System.Exception>。  
  
 當您處理中的例外狀況<xref:System.Web.UI.WebControls.EntityDataSource.Deleting>事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性`true`。 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出是否可以透過 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項刪除物件。</summary>
        <value>
          如果已啟用自動刪除作業則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 如果無法設定<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>屬性已啟用。  
  
 A`false`值指派給<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>強制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>將相關的屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>要傳回物件`false`。 當<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>屬性設定為`false`、<xref:System.NotSupportedException>如果資料繫結控制項呼叫就會引發<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法<xref:System.Web.UI.WebControls.EntityDataSourceView>。  
  
 如果任何一個可更新性條件，則不符合而<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFlattening">
      <MemberSignature Language="C#" Value="public bool EnableFlattening { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFlattening" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableFlattening" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFlattening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFlattening { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示您是否要關閉建立包裝函式。</summary>
        <value>
          如果要將屬性簡維則為 <see langword="True" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您初始化<xref:System.Web.UI.WebControls.EntityDataSource>控制項使用<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>包裝在結果中的物件中的每個實體執行個體<xref:System.ComponentModel.ICustomTypeDescriptor>型別。 如需詳細資訊，請參閱[簡維物件 (EntityDataSource)](http://msdn.microsoft.com/library/08a30ef3-1132-4ac4-856c-5ed3d65eaf16)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出是否可以透過 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項加入物件。</summary>
        <value>
          如果已啟用自動插入作業則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 如果無法設定<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>屬性設定為`true`。  
  
 A`false`值指派給<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>強制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>將相關的屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>要傳回物件`false`。 當<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>屬性設定為`false`、<xref:System.NotSupportedException>如果資料繫結控制項呼叫就會引發<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法<xref:System.Web.UI.WebControls.EntityDataSourceView>。  
  
 如果任何一個可更新性條件，則不符合而<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出是否可以透過 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項修改物件。</summary>
        <value>
          如果已啟用自動更新作業則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 如果無法設定<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>屬性設定為`true`。  
  
 A`false`值指派給<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>屬性強制<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>將相關的屬性<xref:System.Web.UI.WebControls.EntityDataSourceView>要傳回物件`false`。 當<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>屬性設定為`false`、<xref:System.NotSupportedException>如果資料繫結控制項呼叫就會引發<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>方法<xref:System.Web.UI.WebControls.EntityDataSourceView>。  
  
 設定<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>屬性`true`不保證可更新性。  
  
 如果任何一個可更新性條件，則不符合而<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>屬性設定為`true`、<xref:System.Web.UI.WebControls.EntityDataSource>引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定由 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項使用之實體集的名稱。</summary>
        <value>實體集名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項用來指定控制項所存取的物件類型的實體集。 值<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>屬性是預設的選取陳述式所使用的控制項。 如果設定為不必要的查詢會指定為 Entity SQL 運算式是提供給<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>屬性。 如需詳細資訊，請參閱[自訂命令文字 (EntityDataSource)](http://msdn.microsoft.com/library/d42e90d0-1443-474e-8940-53f504d6fc91)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeFilter">
      <MemberSignature Language="C#" Value="public string EntityTypeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityTypeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTypeFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityTypeFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定運算式，此運算式會將查詢限於使用特定衍生型別 (Derived Type) 的結果。</summary>
        <value>篩選條件運算式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.EntityDataSource>控制項必須傳回特定的衍生型別，<xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A>屬性必須也設定為指定此衍生型別的名稱。 如果<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>屬性會指定實體集可能會產生多型結果，<xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A>屬性是否需要進行編輯的資料。 這會有相同的效果套用<xref:System.Data.Objects.ObjectQuery%601.OfType%60%601?displayProperty=nameWithType>方法<xref:System.Data.Objects.ObjectQuery%601?displayProperty=nameWithType>。 如果資料繫結是唯讀的則<xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A>不是必要屬性。 在此情況下，將會是預設實體類型之實體集之查詢所傳回之物件的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">要擷取的檢視名稱。 因為 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項只支援一個檢視，所以會忽略<c>viewName</c>。</param>
        <summary>取得與資料來源控制項相關聯的具名資料來源檢視。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" />，與 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項相關聯。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource>控制項支援只有一個資料來源檢視。 就像所有的資料來源檢視物件，<xref:System.Web.UI.WebControls.EntityDataSourceView>定義其功能與資料來源控制項相關聯的物件時，會執行所有的工作是為了從基礎資料庫中，擷取資料並執行作業，例如排序，插入、 刪除和更新。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得名稱集合，表示與 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項相關聯的檢視物件清單。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" />，包含與 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項相關聯之檢視的名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource>控制項只支援一個檢視其基礎資料。 <xref:System.Web.UI.WebControls.EntityDataSource.GetViewNames%2A>方法會傳回此一檢視名稱的單一項目集合，做為字串。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Entity SQL 運算式，這個運算式會指定如何將查詢結果分組。</summary>
        <value>GROUP BY 子句。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public string Include { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Include" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Include" />
      <MemberSignature Language="VB.NET" Value="Public Property Include As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Include { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定運算式，這個運算式會指定要包含在查詢結果中的相關物件。</summary>
        <value>查詢結果中所傳回之查詢路徑的逗號分隔清單。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項指定查詢路徑定義以及特別是查詢的物件傳回的物件 thatare 的逗號分隔清單。 傳遞字串中每個以逗號分隔的值，而不需修改，為個別呼叫<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]。 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A>屬性是套用至引數<xref:System.Data.Objects.ObjectQuery%601>執行前。  
  
 若要提供字串<xref:System.Web.UI.WebControls.EntityDataSource.Include%2A>屬性使用相同的格式為傳遞給字串<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>。 如需如何使用查詢路徑以自動載入相關的物件的範例，請參閱[How to： 使用圖形結果的查詢路徑](http://msdn.microsoft.com/library/100bf7f5-00ba-4c17-8e27-7a8a14831093)。  
  
 當<xref:System.Web.UI.WebControls.EntityDataSource.Include%2A>屬性用來指定查詢路徑中，相關實體的屬性只可以用於唯讀資料繫結。 如果相關的物件沒有明確包含在查詢路徑中，屬性描述元是否仍然可供資料繫結，但屬性本身會傳回 null 值。 在此情況下，您必須明確地以顯示其值載入相關的物件。 如需詳細資訊，請參閱[載入相關物件](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)。  
  
   
  
## Examples  
 下列的 XML 標記會定義查詢路徑會傳回`SalesOrderHeader`所傳回的物件與相關`Contact`物件。 與每個`SalesOrderHeader`，相關`SalesOrderDetail`和`Address`也會傳回物件。  
  
```  
<asp:EntityDataSource ID="ContactDataSource" runat="server"   
    AutoGenerateWhereClause="True" ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="Contact"   
    Include="SalesOrderHeader.SalesOrderDetail, SalesOrderHeader.Address">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="customerId" Name="ContactID"   
            PropertyName="Text" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 上述 XML 範例等同於下列<xref:System.Data.Objects.ObjectQuery%601>名為`customers`:  
  
```  
ObjectQuery<Contact> customers =  
      context.Contact  
       .Where("it.ContactID = @ContactID",  
         new ObjectParameter("ContactID", customerId))  
        .Include("SalesOrderHeader.SalesOrderDetail")  
        .Include("SalesOrderHeader.Address");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於在資料來源位置建立新物件之後。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Inserted>加入的物件建立資料來源中時，或將物件資料保存到資料來源時，發生錯誤，會引發事件。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件用來存取已加入的物件。  
  
 此物件的屬性會包含從資料來源，包括任何與資料來源產生的值傳回的值。  
  
 如果發生錯誤時將物件保存到資料來源，<xref:System.Web.UI.WebControls.EntityDataSource.Inserted>就會引發事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件設為所傳回<xref:System.Exception>。 如果您在處理中的例外狀況<xref:System.Web.UI.WebControls.EntityDataSource.Inserted>事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性`true`。 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於新物件保存至資料來源之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting>新物件會保存到資料來源之前，就會引發事件。 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting>事件可讓您修改或確認要加入之物件、 新增不同的物件，或取消作業。 您可以存取的物件加入從<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件。 如果提供不同的物件，使用者會負責設定正確的實體類型<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性。  
  
 若要停止從所加入的物件，設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件`true`。  
  
 如果發生錯誤時建立新的物件，<xref:System.Web.UI.WebControls.EntityDataSource.Inserting>就會引發事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件設為所傳回<xref:System.Exception>。  
  
 當您處理中的例外狀況<xref:System.Web.UI.WebControls.EntityDataSource.Inserting>事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性`true`。 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得插入作業期間所使用的參數集合。</summary>
        <value>插入作業期間所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 4 或更早版本為目標的 web 應用程式，屬性值會儲存在檢視狀態，並自動回傳之間維護。 ASP.NET 4.5 為目標的 web 應用程式，屬性值不會儲存檢視狀態中，您必須設定每個 HTTP 要求值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">包含狀態資訊的 <see cref="T:System.Object" />。</param>
        <summary>載入 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項中需要保存的屬性狀態。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> 物件，包含事件資料。</param>
        <summary>將 <see cref="E:System.Web.UI.Page.LoadComplete" /> 事件處理常式加入包含 <see cref="T:System.Web.UI.Page" /> 控制項的 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> 物件，包含事件資料。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.Unload" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Entity SQL 運算式，這個運算式會指定如何排列查詢結果。</summary>
        <value>ORDER BY 子句。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是一個字串，代表 Entity SQL 查詢的運算式。 這個字串會傳遞，而不需修改，為<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]。 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。 若要提供字串<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性使用相同的格式為傳遞給字串<xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>方法<xref:System.Data.Objects.ObjectQuery%601>。 如需如何使用子句來排序查詢結果的範例，請參閱[如何： 排序資料](http://msdn.microsoft.com/library/c05f2506-cb9d-4ebc-822b-300042ad53e7)。  
  
   
  
## Examples  
 XML 標記，在下列範例中，在.aspx 檔案中，從控制項擷取值，並將其傳遞為參數，以<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 上述 XML 範例相當於下列<xref:System.Data.Objects.ObjectQuery%601>名為`onlineOrders`:  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於建立 ORDER BY 子句的參數集合。</summary>
        <value>用來建立 ORDER BY 子句的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制設為  `true`，控制項自動產生 ORDER BY 子句中的參數從<xref:System.Web.UI.WebControls.ParameterCollection>指派給<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>屬性。 這就不需要明確地指派至 ORDER BY 子句<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性。 ORDER BY 子句，從建構<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>屬性需要<xref:System.Web.UI.WebControls.Parameter.Name%2A>參數集合中屬性的識別從查詢傳回之項目的單一屬性。  
  
   
  
## Examples  
 下列範例會自動產生 ORDER BY 子句，並會使用值`orderByDropDownList`設定參數的值。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
    ConnectionString="name=AdventureWorksEntities"  
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
    Where="it.OnlineOrderFlag = true" AutoGenerateOrderByClause="True">  
    <OrderByParameters>  
        <asp:ControlParameter Name="OrderByParameter"   
            ControlID="orderByDropDownList" Type="String" />  
    </OrderByParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.QueryCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCreated As EventHandler(Of QueryCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Web::UI::WebControls::QueryCreatedEventArgs ^&gt; ^ QueryCreated;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IQueryableDataSource.QueryCreated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 建立 Entity SQL 查詢 (<see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項的組態期間指定的查詢) 後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱[套用 LINQ 查詢以 EntityDataSource](http://msdn.microsoft.com/library/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 控制項中需要保存的屬性狀態。</summary>
        <returns>包含狀態資訊的 <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定投影，以定義要包含在查詢結果中的屬性。</summary>
        <value>用來建立 ORDER BY 子句的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項包含表示 Entity SQL 查詢的陳述式的字串。 這可讓您預測一組指定的查詢所傳回物件的屬性。  
  
 這個字串會傳遞，而不需修改，為<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]。 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。 若要提供字串<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性使用相同的格式為傳遞給字串<xref:System.Data.Objects.ObjectQuery%601.Select%2A>方法<xref:System.Data.Objects.ObjectQuery%601>。 如需如何使用子句來定義查詢投影的範例，請參閱[如何： 執行查詢，傳回匿名類型的物件](http://msdn.microsoft.com/library/3b264025-e911-4d73-90ce-992d2b9d189d)。  
  
 預計的資料不支援更新。 這表示當您使用<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性，以指定的投影，繫結的資料繫結不支援更新。  
  
 當您定義投影啟用分頁時，您必須定義排序結果所依據的屬性。 這表示當您設定<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性來定義投影，具有<xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>設`true`，您也必須設定<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>屬性來定義的順序，或設定<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>屬性`true`並加入訂單依參數<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>集合。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 如果無法設定<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>， <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>，或<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>已啟用。  
  
 如果<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>設為投影的屬性會傳回查詢 (例如， `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`)、<xref:System.Data.Common.DbDataRecord>會傳回。  
  
   
  
## Examples  
 使用下列的 XML 標記<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性來指定投影具有六個產品類型的屬性：  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities"   
    EntitySetName="Product" OrderBy="it.[ProductID]"   
    Select="it.[ProductID], it.[Name], it.[ListPrice],   
    it.[Size], it.[Style], it.[Weight]">  
</asp:EntityDataSource>  
  
```  
  
 上述 XML 範例等同於下列<xref:System.Data.Objects.ObjectQuery%601>名為`products`:  
  
```  
ObjectQuery<Product> products = context.Product  
    .Select(it.[ProductID], it.[Name], it.[ListPrice],   
      it.[Size], it.[Style], it.[Weight])  
    .OrderBy("it.[ProductID]");  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當 <see cref="P:System.Web.UI.WebControls.EntityDataSource.Select" /> 屬性指定查詢投影，且 <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" /><see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" /> 或 <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" /> 的值為 <see langword="true" /> 時。</exception>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of EntityDataSourceSelectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectedEventArgs ^&gt; ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於查詢已執行之後。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Selected>在執行查詢，並在傳回資料之後，就會引發事件。 如果查詢準備或執行期間發生錯誤時，它也會引發。  
  
 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>物件包含<xref:System.Collections.IEnumerable>的查詢所傳回的物件。 處理<xref:System.Web.UI.WebControls.EntityDataSource.Selected>傳回實體中的擷取和儲存的事件<xref:System.Web.UI.Control.ViewState%2A>。 這樣做可以保存的頁面上的物件變更。  
  
 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>物件中所有頁面，不論分頁的資料繫結控制項所傳送的值顯示的物件總數。 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> 是只擷取資料繫結控制項需要它，例如，如果啟用分頁。  
  
 如果準備或執行查詢時，就會發生錯誤<xref:System.Web.UI.WebControls.EntityDataSource.Selected>引發事件時，<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>物件設為所傳回<xref:System.Exception>，而<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>屬性設定為`null`。 如果您在處理中的例外狀況<xref:System.Web.UI.WebControls.EntityDataSource.Selected>事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A>屬性`true`。 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of EntityDataSourceSelectingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectingEventArgs ^&gt; ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於查詢建構及執行之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting>建構及執行查詢之前，就會引發事件。 處理<xref:System.Web.UI.WebControls.EntityDataSource.Selecting>修改之設定的事件<xref:System.Web.UI.WebControls.EntityDataSource>或讀取或建構及執行查詢之前，變更引數，從資料繫結控制項。  
  
 設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>物件`true`以取消查詢。 取消選取的作業時，會不傳回任何資料，資料繫結控制項。  
  
 如果`AllowPaging`設`true`在資料繫結控制項中，<xref:System.Web.UI.WebControls.EntityDataSource>叫用<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>和<xref:System.Data.Objects.ObjectQuery%601.Top%2A>查詢產生器方法上<xref:System.Data.Objects.ObjectQuery%601>上使用的值<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>和<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>屬性<xref:System.Web.UI.DataSourceSelectArguments>物件。  
  
 如果`AllowSorting`設`true`在資料繫結控制項中，<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>的<xref:System.Web.UI.DataSourceSelectArguments>物件可以變更時<xref:System.Web.UI.WebControls.EntityDataSource.Selecting>處理事件。 任何其他查詢運算子，例如 WHERE 或 ORDER BY、 網頁標記中指定會在之後套用<xref:System.Web.UI.WebControls.EntityDataSource.Selecting>就會引發事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於建立投影的參數集合。</summary>
        <value>用於建立投影的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 像<xref:System.Data.Objects.ObjectQuery%601.Select%2A>方法<xref:System.Data.Objects.ObjectQuery%601>類別，參數可以傳遞至所定義的投影<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性。 <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項指定<xref:System.Web.UI.WebControls.ParameterCollection>，其中包含要提供資訊給查詢的 SELECT 陳述式的參數。 <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A>屬性用於具名引數提供給字串中所指定的參數是指<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>屬性。  
  
 如果<xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A>屬性未設定，由參數替代。 在 SELECT 陳述式前面加上的所有參數名稱"`@"`符號`,`必須具有相符名稱<xref:System.Web.UI.WebControls.ParameterCollection>。 中的參數不允許 null 值<xref:System.Web.UI.WebControls.ParameterCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示資料來源的資料是否應在檢視狀態中進行儲存，以確定在更新或刪除資料前，資料未由另一個處理序變更。</summary>
        <value>
          如果在檢視狀態中儲存值則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追蹤時變更更新和刪除作業都已啟用，<xref:System.Web.UI.WebControls.EntityDataSource>控制項必須儲存原始值載入中的物件資訊<xref:System.Web.UI.PageStatePersister.ControlState%2A>。 此必要的資訊儲存檢視狀態中，會增加的分頁大小。 您可以停用檢視狀態中，儲存原始值，藉由設定<xref:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState%2A>屬性`false`。 如果這樣做，請[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]無法追蹤更新的物件中的並行存取。 如需詳細資訊，請參閱[更新資料 (EntityDataSource)](http://msdn.microsoft.com/library/ca153eec-6817-4c1d-b262-efd6d35b0246)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged">
      <MemberSignature Language="C#" Value="void IQueryableDataSource.RaiseViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseViewChanged () Implements IQueryableDataSource.RaiseViewChanged" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() = System::Web::UI::WebControls::IQueryableDataSource::RaiseViewChanged;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>告知資料繫結控制項，參數物件已變更，因此需要重新整理資料繫結控制項。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致對伺服器控制項的檢視狀態變更的追蹤 (Tracking)，以便它們能夠儲存於伺服器控制項的 <see cref="T:System.Web.UI.StateBag" /> 物件。 這個物件可透過 <see cref="P:System.Web.UI.Control.ViewState" /> 屬性存取。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Web.UI.Control.TrackViewState%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於物件變更已保存至資料來源之後。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Updated>時已修改物件的變更會保存到資料來源，或套用變更時，發生錯誤，會引發事件。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件用來存取已修改的物件。  
  
 此物件的屬性會包含從資料來源，包括任何伺服器產生的值傳回的值。  
  
 如果發生錯誤時的變更會保存到資料來源，<xref:System.Web.UI.WebControls.EntityDataSource.Updated>就會引發事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>物件設為所傳回<xref:System.Exception>。 如果您在處理中的例外狀況<xref:System.Web.UI.WebControls.EntityDataSource.Updated>事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性`true`。 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得更新作業期間所使用的參數集合。</summary>
        <value>更新作業期間所使用的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 4 或更早版本為目標的 web 應用程式，屬性值會儲存在檢視狀態，並自動回傳之間維護。 ASP.NET 4.5 為目標的 web 應用程式，屬性值不會儲存檢視狀態中，您必須設定每個 HTTP 要求值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於物件變更保存至資料來源之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Updating>物件屬性變更會保存到資料來源之前，就會引發事件。 <xref:System.Web.UI.WebControls.EntityDataSource.Updating>事件可讓您修改或驗證之物件的變更、 提供不同的物件，或之前所做的變更會保存取消作業。 您可以存取的已修改的物件，從<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件。 如果提供不同的物件，使用者會負責設定正確的實體類型<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>屬性。  
  
 處理<xref:System.Web.UI.WebControls.EntityDataSource.Updating>事件，如果您必須修改<xref:System.Data.Objects.ObjectStateEntry>讓設定不同的原始值的並行存取控制的物件。 如需詳細資訊，請參閱[儲存的變更和管理並行](http://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)。  
  
 若要停止從保存的變更，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件`true`。  
  
 如果發生錯誤時具現化物件或修改屬性，<xref:System.Web.UI.WebControls.EntityDataSource.Updating>就會引發事件和<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>物件設為所傳回<xref:System.Exception>。  
  
 當您處理中的例外狀況<xref:System.Web.UI.WebControls.EntityDataSource.Updating>事件處理常式中，設定<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性`true`。 這可防止再次引發的例外狀況。 當您指定的值`false`如<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>屬性，<xref:System.Web.UI.WebControls.EntityDataSource>重新引發例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Entity SQL 運算式，這個運算式會指定如何篩選查詢結果。</summary>
        <value>WHERE 子句。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項是一個字串，表示是 Entity SQL 查詢的述詞子句。 這個字串會傳遞，而不需修改，為<xref:System.Data.Objects.ObjectQuery%601>執行由[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]。 此查詢是藉由調節資料的來源<xref:System.Web.UI.WebControls.EntityDataSource>控制項。 若要提供字串<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性使用相同的格式為傳遞給字串<xref:System.Data.Objects.ObjectQuery%601.Where%2A>方法<xref:System.Data.Objects.ObjectQuery%601>。 如需如何使用子句來篩選查詢的範例，請參閱[如何： 篩選資料](http://msdn.microsoft.com/library/776f8556-3350-4572-804a-b1513515c1b2)。  
  
 若要篩選查詢結果所納入方程式實體類型屬性的運算式，請參閱資訊關於<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>屬性。  
  
   
  
## Examples  
 XML 標記，在下列範例中，在.aspx 檔案中，從控制項擷取值，並將其傳遞為參數，以<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 上述 XML 範例等同於下列<xref:System.Data.Objects.ObjectQuery%601>名為`onlineOrders`:  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於建立 WHERE 子句的參數集合。</summary>
        <value>用於建立 WHERE 子句的參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 像<xref:System.Data.Objects.ObjectQuery%601.Where%2A>方法<xref:System.Data.Objects.ObjectQuery%601>類別，可以指派給此述詞來傳遞參數<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。 <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>屬性<xref:System.Web.UI.WebControls.EntityDataSource>控制項指定<xref:System.Web.UI.WebControls.ParameterCollection>，其中包含要提供資訊給查詢的 WHERE 子句的參數。 <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>屬性用於具名引數提供給字串中所指定的參數是指<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。  
  
 如果<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>屬性未設定，由參數替代。 WHERE 子句中的所有參數名稱前面加都上符號"`@"`必須具有相符名稱<xref:System.Web.UI.WebControls.ParameterCollection>。 中的參數不允許 null 值<xref:System.Web.UI.WebControls.ParameterCollection>。  
  
   
  
## Examples  
 XML 標記，在下列範例中，在.aspx 檔案中，從控制項擷取值，並將其傳遞為參數，以<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>屬性。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 上述 XML 範例等同於下列<xref:System.Data.Objects.ObjectQuery%601>名為`onlineOrders`:  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>