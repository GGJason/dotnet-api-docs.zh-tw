<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="faee6c33509fafff73d618b84e5b83bbb59838e4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599732" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCompareValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompareValidator abstract : System::Web::UI::WebControls::BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>作為執行具類型比較之驗證控制項的抽象基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator>類別會由驗證控制項的比較值，例如繼承<xref:System.Web.UI.WebControls.CompareValidator>和<xref:System.Web.UI.WebControls.RangeValidator>控制項，以提供基本的通用功能。  
  
 使用<xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>屬性來指定資料類型，這些值進行比較之前，會轉換成。  
  
> [!NOTE]
>  如果已驗證的輸入控制項的值無法轉換成指定的資料類型，則驗證失敗。 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>驗證控制項的屬性設定為`false`。  
  
 <xref:System.Web.UI.WebControls.BaseCompareValidator>類別也包含數個靜態屬性和執行比較驗證時非常實用的方法。 您可以決定是否將字串可以轉換成特定的資料類型使用<xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A>方法。 中包含可以由兩位數年份的最大年份<xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A>屬性。 <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A>方法可讓您將兩位數年份轉換為四位數年份。  
  
> [!NOTE]
>  當您使用驗證器控制項衍生自<xref:System.Web.UI.WebControls.BaseCompareValidator>內控制<xref:System.Web.UI.UpdatePanel>控制，請確定驗證程式控制項以及與其相關聯的控制項是在相同的面板。 如需有關使用<xref:System.Web.UI.UpdatePanel>控制局部網頁更新，請參閱[局部網頁呈現概觀](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
 如需有關驗證控制項的詳細資訊，請參閱<xref:System.Web.UI.WebControls.BaseValidator>。  
  
## <a name="accessibility"></a>協助工具選項  
 根據預設，此控制項呈現標記可能不符合協助工具標準，例如網頁內容的指導方針 1.0 (WCAG) 優先權 1 指導方針。 如需對這個控制項的協助工具支援的詳細資訊，請參閱[ASP.NET 控制項和協助工具](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseCompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Web.UI.WebControls.BaseCompareValidator>類別是抽象的您無法建立<xref:System.Web.UI.WebControls.BaseCompareValidator>直接物件。 這個建構函式來初始化中定義的屬性在衍生類別的建構函式通常稱為<xref:System.Web.UI.WebControls.BaseCompareValidator>類別。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，代表要在用戶端呈現 HTML 內容的輸出資料流。</param>
        <summary>將需要呈現給控制項的 HTML 屬性和樣式加入至指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A>方法用來呈現控制項的 HTML 標記中控制項的屬性。 這個方法通常會覆寫由控制項開發人員在衍生類別中插入適當的屬性和樣式以<xref:System.Web.UI.HtmlTextWriter>控制項的輸出資料流。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />方法，請務必呼叫基底類別中的對應方法。 否則，將不會轉譯的基底類別中包含的屬性。</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷指定的字串是否可轉換成指定的資料型別。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">要測試的字串。</param>
        <param name="type">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 值。</param>
        <summary>判斷指定的字串是否可轉換成指定的資料型別。 這個版本的多載方法使用目前文化特性所使用的格式來測試貨幣值、雙精度浮點數值和日期值。</summary>
        <returns>
          如果指定的資料型別可以轉換成指定的資料型別，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29>方法，以判斷是否可以轉換為指定的資料類型指定的字串。 這個方法通常用於測試是否字串可以之前執行的作業取決於該資料類型會轉換成相容的資料類型。  
  
 這個版本的方法測試使用目前文化特性所使用的格式的值。 若要測試使用的文化特性中性格式的值，請使用<xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=nameWithType>多載版本，這個方法。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A>方法來比較兩個整數值，並判斷是否可以轉換的第二個整數。  
  
 [!code-aspx-csharp[BaseCompareValidatorCanConvert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-aspx-vb[BaseCompareValidatorCanConvert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType, cultureInvariant As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">要測試的字串。</param>
        <param name="type">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 列舉值。</param>
        <param name="cultureInvariant">
          <see langword="true" /> 表示使用文化特性中性的格式來測試值，否則為 <see langword="false" />。</param>
        <summary>判斷指定的字串是否可轉換成指定的資料型別。 這個版本的多載方法可讓您指定是否使用文化特性中性的格式來測試值。</summary>
        <returns>
          如果指定的資料型別可以轉換成指定的資料型別，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29>方法，以判斷是否可以轉換為指定的資料類型指定的字串。 這個方法通常用於測試是否字串可以之前執行的作業取決於該資料類型會轉換成相容的資料類型。 若要指示應該使用的文化特性中性格式來測試值，請傳入`true`如`cultureInvariant`參數; 否則則在測試值使用目前文化特性所使用的格式。 當測試值，使用目前文化特性所使用的格式，請考慮使用<xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType>多載版本，這個方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>比較使用指定運算子和驗證資料型別的兩個字串。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, rightText As String, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, System::String ^ rightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">在運算子左方的數值。</param>
        <param name="rightText">在運算子右方的數值。</param>
        <param name="op">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 值。</param>
        <param name="type">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 值。</param>
        <summary>比較使用指定之運算子和資料型別的兩個字串。 這個版本的多載方法使用目前文化特性所使用的格式來比較貨幣值、雙精度浮點數值和日期值。</summary>
        <returns>
          如果 <paramref name="leftValue" /> 參數以 <paramref name="rightValue" /> 參數指定的方式與 <paramref name="op" /> 參數相關聯，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29>方法用來測試是否值`leftText`參數的值則是與`rightText`參數所指定的方式`op`參數。 `type`參數會指定要比較的值的資料類型。  
  
> [!NOTE]
>  如果`op`參數設定為`ValidationCompareOperator.DataTypeCheck`，這個方法會測試的值`leftText`參數所指定之資料類型`type`參數。 `rightText`參數已忽略。  
  
 這個版本的方法會比較使用目前文化特性所使用的格式的值。 若要比較的值，使用文化特性中性的格式，使用<xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType>多載版本，這個方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, cultureInvariantLeftText As Boolean, rightText As String, cultureInvariantRightText As Boolean, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, bool cultureInvariantLeftText, System::String ^ rightText, bool cultureInvariantRightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">在運算子左方的數值。</param>
        <param name="cultureInvariantLeftText">
          <see langword="true" /> 表示將左側的值轉換為文化特性中性的格式，否則為 <see langword="false" />。</param>
        <param name="rightText">在運算子右方的數值。</param>
        <param name="cultureInvariantRightText">
          <see langword="true" /> 表示將右側的值轉換為文化特性中性的格式，否則為 <see langword="false" />。</param>
        <param name="op">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 值。</param>
        <param name="type">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 值。</param>
        <summary>比較使用指定運算子和驗證資料型別的兩個字串。 這個版本的多載可讓您指定是否使用文化特性中性的格式來比較值。</summary>
        <returns>
          如果 <paramref name="leftValue" /> 參數以 <paramref name="rightValue" /> 參數指定的方式與 <paramref name="op" /> 參數相關聯，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29>方法用來測試是否值`leftText`參數的值則是與`rightText`參數所指定的方式`op`參數。 `type`參數會指定要比較的值的資料類型。  
  
> [!NOTE]
>  如果`op`參數設定為`ValidationCompareOperator.DataTypeCheck`，這個方法會測試的值`leftText`參數所指定之資料類型`type`參數。 `rightText`參數已忽略。  
  
 若要指示應該使用的文化特性中性格式來比較值，請傳入`true`如`cultureInvariantLeftText`和`cultureInvariantRightText`參數; 否則會比較值使用目前文化特性所使用的格式。 當比較值使用目前文化特性所使用的格式，請考慮使用<xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType>多載版本，這個方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將指定的文字轉換成指定資料型別的物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">要轉換的文字。</param>
        <param name="type">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 值。</param>
        <param name="value">這個方法傳回時，包含有轉換結果的物件。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>將指定的文字轉換成指定資料型別的物件。 這個版本的多載方法使用目前文化特性所使用的格式來轉換貨幣值、雙精度浮點數值和日期值。</summary>
        <returns>
          如果轉換成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29>方法用來將文字轉換成指定的資料類型的物件。 雖然此方法會傳回`true`或`false`表示轉換是否成功，已轉換的值會儲存在`value``out`參數。  
  
> [!NOTE]
>  如果轉換成功，`value`參數設定為`null`。  
  
 這個版本的方法將使用目前文化特性所使用的格式的值轉換。 若要轉換使用的文化特性中性格式的值，使用<xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=nameWithType>多載版本，這個方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, cultureInvariant As Boolean, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">要轉換的文字。</param>
        <param name="type">其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 值。</param>
        <param name="cultureInvariant">
          <see langword="true" /> 表示將值轉換成文化特性中性的格式，否則為 <see langword="false" />。</param>
        <param name="value">這個方法傳回時，包含有轉換結果的物件。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>將指定的文字轉換成指定資料型別的物件。 這個版本的多載方法可讓您指定是否使用文化特性中性的格式來轉換值。</summary>
        <returns>
          如果轉換成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29>方法用來將文字轉換成指定的資料類型的物件。 雖然此方法會傳回`true`或`false`表示轉換是否成功，已轉換的值會儲存在`value``out`參數。  
  
> [!NOTE]
>  如果轉換成功，`value`參數設定為`null`。  
  
 若要指示應該使用的文化特性中性格式來轉換值，請傳入`true`如`cultureInvariant`參數; 否則值會轉換使用目前文化特性所使用的格式。 當使用目前文化特性所使用的格式將值轉換，請考慮使用<xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=nameWithType>多載版本，這個方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInvariantValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CultureInvariantValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示在對值進行比較之前是否將值轉換成文化特性中性的格式。</summary>
        <value>
          <see langword="true" /> 表示在對值進行比較之前將其轉換成文化特性中性的格式，否則為 <see langword="false" />。預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A>屬性設定為`true`，控制項的屬性，並不強型別進行比較之前，會轉換成文化特性中性的格式。 當這個屬性設定為`false`，值會轉換成目前的文化特性的格式。 <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A>屬性不會影響在網頁上控制項的使用者所輸入的值。  
  
 無法設定這個屬性，由主題或樣式表主題。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property CutoffYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property int CutoffYear { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可用兩位數年份代表的最大年份。</summary>
        <value>兩位數年份可代表的最大年份。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A>屬性來判斷可表示以兩位數年份的 100 年範圍的最大年份。 例如，如果此屬性包含值`2029`，您可以表示 2029 年 1930年使用兩位數年份。 兩位數年份 30 被解譯為 1930，而 29 解譯為 2029年。 您無法直接; 變更這個屬性的值不過，您可以變更可以藉由設定以二位數年份表示的最大年份<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DetermineRenderUplevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷是否可將驗證控制項呈現給較新版本 (上層) 的瀏覽器。</summary>
        <returns>
          如果可將驗證器控制項呈現給「上層」瀏覽器，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A>方法是 helper 函式，主要是供<xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A>屬性來判斷用戶端瀏覽器是否支援"新版"呈現 （較新的瀏覽器上呈現）。 <xref:System.Web.UI.WebControls.BaseCompareValidator>類別會覆寫此方法以傳回`false`如果目前的文化特性使用非西曆。  
  
> [!NOTE]
>  這個方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />方法，請務必呼叫基底類別中的對應方法。 否則，將會略過的基底類別中定義的條件。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetDateElementOrder () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetDateElementOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷月、日和年在目前文化特性的日期值中出現的順序。</summary>
        <returns>字串，表示月、日和年在目前文化特性的日期值中出現的順序。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 月、 日和年的日期值會以不同的順序，根據目前文化特性設定而定。 <xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A>方法用來判斷這些值會出現的順序。 下表顯示不同的值，這個方法所傳回。  
  
|日期項目順序|傳回值|  
|------------------------|------------------|  
|日、 月、 年|「 dmy"|  
|月、 日、 年|「 mdy"|  
|Year，Month，Day|「 ymd"|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFullYear (shortYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int GetFullYear(int shortYear);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">兩位數年份。</param>
        <summary>產生指定的兩位數年份的四位數年份表示。</summary>
        <returns>指定的兩位數年份的四位數年份表示。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A>方法來產生指定的兩位數年份的四位數年份表示。 值而定的四位數年份表示<xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A>屬性，其中包含可以由兩位數字中之年的 100 年範圍的最大年份。 例如，如果<xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A>屬性包含值`2029`、<xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A>方法會傳回一 1930 年和 2029年之間。 兩位數年份 30 被解譯為 1930，而 29 解譯為 2029年。 您可以變更可以藉由設定以二位數年份表示的最大年份<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>屬性。  
  
> [!NOTE]
>  因為這個方法是`static`，您可以使用它，而不需要建立類別的執行個體來限定方法名稱與類別名稱，例如`BaseCompareValidator.GetFullYear`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As ValidationDataType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationDataType Type { System::Web::UI::WebControls::ValidationDataType get(); void set(System::Web::UI::WebControls::ValidationDataType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數值在比較之前要轉換的資料型別。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 列舉值。 預設值是 <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>屬性來指定用於比較的資料類型。 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>屬性在不同的比較驗證控制項中有不同的使用方式。  
  
> [!IMPORTANT]
>  當<xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>屬性設定為<xref:System.Web.UI.WebControls.ValidationDataType.Date>目前的月曆類型和非西曆，驗證程式會執行伺服器端驗證。 驗證程式的用戶端指令碼僅支援西曆日曆。  
  
 例如，在<xref:System.Web.UI.WebControls.RangeValidator>執行任何比較之前，將會轉換成指定的資料類型的控制項，所有值進行比較 （上限、 下限和輸入控制項的值）。 不過，如果您使用<xref:System.Web.UI.WebControls.CompareValidator>控制項，並設定其<xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>屬性`ValidationCompareOperator.DataTypeCheck`，僅輸入控制項的值轉換成指定的資料類型。  
  
> [!NOTE]
>  如果驗證控制項相關聯輸入控制項的值無法轉換成指定的資料類型，則驗證失敗。 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>驗證控制項的屬性設定為`false`。  
  
 下表列出您可以使用的值<xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>屬性。  
  
|資料類型|描述|  
|---------------|-----------------|  
|`String`|指定字串資料類型。|  
|`Integer`|指定 32 位元帶正負號的整數資料類型。|  
|`Double`|指定雙精確度浮點數資料型別。|  
|`Date`|指定日期資料類型。|  
|`Currency`|指定貨幣資料類型。|  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>屬性來指定要比較的值進行比較之前會轉換成資料類型。  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的資料型別不是其中一個 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
  </Members>
</Type>