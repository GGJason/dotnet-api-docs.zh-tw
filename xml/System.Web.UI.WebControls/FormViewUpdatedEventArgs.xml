<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d385d36b6acfafb752e571b24a00b8be64b9a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> 事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>控制引發<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件時的 [更新] 按鈕 (按鈕其`CommandName`屬性設定為 「 更新 」) 控制項內按一下時，但之後<xref:System.Web.UI.WebControls.FormView>控制更新的記錄。 這可讓您提供執行自訂的常式，例如檢查更新作業的結果，此事件發生時的事件處理方法。  
  
 A<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>物件傳遞至事件處理方法，可讓您判斷受影響的記錄和任何例外狀況可能發生的數目。 若要判斷更新作業所影響的記錄數目，請使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>屬性。 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>屬性來判斷是否有發生任何例外狀況。 您還可以指出是否已處理例外狀況的事件處理方法中設定<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>屬性。 如果您要存取原始索引鍵欄位值更新記錄，請使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>屬性。 可以使用存取原始的非索引鍵欄位值<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>屬性。 已更新的值 （其中包含更新的索引鍵欄位值，如果您允許使用者編輯索引鍵欄位） 用來存取<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>屬性。  
  
 根據預設，<xref:System.Web.UI.WebControls.FormView>控制項會傳回所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>之後更新作業的屬性。 處理更新作業期間發生的例外狀況，您可以保有<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式，藉由設定<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>屬性`true`。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 如需 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 類別之執行個體的初始屬性值清單，請參閱 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A> 建構函式。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>物件傳遞至事件處理方法，以便<xref:System.Web.UI.WebControls.FormView.ItemUpdated>事件，以判斷是否更新作業期間發生例外狀況。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">更新作業所影響的資料列數目。</param>
        <param name="e">
          <see cref="T:System.Exception" />，表示在執行更新作業時引發了例外狀況。 如果沒有引發例外狀況，請將這個參數設為 <see langword="null" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式初始化的新執行個體<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>類別。  
  
 下表所顯示的是 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|`affectedRows` 參數的值。|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType>中所含物件`e`參數。|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|初始化為`false`。|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|初始化為`false`。|  
  
> [!NOTE]
>  引發事件時主要由控制項開發人員使用這個建構函式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得更新作業所影響的資料列數目。</summary>
        <value>更新作業所影響的資料列數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>屬性來判斷更新作業所影響的記錄數目。 這個屬性通常用於確認正確的記錄數目已更新以下情況：  
  
-   確認已更新一筆記錄。 有時候撰寫不正確的 update 陳述式可以更新多筆記錄。  
  
-   請確認不會引發例外狀況在更新作業期間發生錯誤時，已更新的資料錄。  
  
-   確認記錄已更新資料來源控制項時，支援衝突偵測 （開放式並行存取檢查），例如<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSource>控制、 具有其<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>屬性設定為`ConflictOptions.CompareAllValues`列舉值. 此設定時，可能不會更新已被另一位使用者並行的記錄。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>屬性，確認已更新的資料錄。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得更新作業中引發的例外狀況 (如果有的話)。</summary>
        <value>
          <see cref="T:System.Exception" /> 物件，表示更新作業中引發的例外狀況。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>屬性來判斷例外狀況 （如果有的話） 進行更新作業時所引發。 如果沒有引發例外狀況，這個屬性會傳回 `null`。  
  
> [!NOTE]
>  如果引發例外狀況，而且您決定要處理的例外狀況的事件處理常式，請務必設定<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>屬性`true`; 否則，請再次擲回例外狀況<xref:System.Web.UI.WebControls.FormView>控制項。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>屬性來判斷是否更新作業期間發生例外狀況。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否已在事件處理常式中處理更新作業中引發的例外狀況。</summary>
        <value>
          如果例外狀況在事件處理常式中已經過處理，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當更新作業期間引發例外狀況時，使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>屬性，指出是否已處理例外狀況的事件處理常式。 當這個屬性設定為`true`，例外狀況就視為已處理，並且不會擲回再次<xref:System.Web.UI.WebControls.FormView>控制項。 如果這個屬性設定為`false`，再次擲回例外狀況。 若要判斷引發的例外狀況，請使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>屬性。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>屬性來表示，已處理例外狀況的事件處理常式。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定指出 <see cref="T:System.Web.UI.WebControls.FormView" /> 控制項是否在更新作業後停留在編輯模式中的值。</summary>
        <value>
          <see langword="true" /> 表示會在更新作業後停留在編輯模式中，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Web.UI.WebControls.FormView>控制項會傳回所指定的模式<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>之後更新作業的屬性。 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>屬性來指定是否<xref:System.Web.UI.WebControls.FormView>控制項應該仍會處於編輯模式。 若要保留<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式下，將此屬性設定為`true`。  
  
> [!NOTE]
>  這個屬性應只一種情況發生時 （例如引發例外狀況） 需要比平常有不同的行為的控制項。 如果<xref:System.Web.UI.WebControls.FormView>控制項需要維持在編輯模式中，依預設，設定<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>屬性改為。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>屬性，以保留<xref:System.Web.UI.WebControls.FormView>控制項處於編輯模式時發生例外狀況。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字典，其包含已更新資料錄的原始索引鍵欄位名稱/值組。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，包含已更新資料錄原始索引鍵欄位名稱/值組的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>屬性包含的索引鍵欄位中所列的原始值<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>屬性<xref:System.Web.UI.WebControls.FormView>控制項。 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>屬性來存取更新的記錄的索引鍵欄位的值。 例如，您可以使用這些值來更新記錄的記錄。  
  
> [!NOTE]
>  如果您允許使用者更新的索引鍵的欄位值<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>屬性包含原始索引鍵欄位值。 已更新的值會儲存在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>屬性會傳回<xref:System.Collections.Specialized.OrderedDictionary>實作物件<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>介面。 <xref:System.Collections.Specialized.OrderedDictionary>物件包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>物件，表示已更新資料錄的欄位。 若要存取的欄位名稱，請使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>屬性<xref:System.Collections.Specialized.OrderedDictionary>物件。 同樣地，您可以存取的欄位值使用<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>屬性。  
  
> [!NOTE]
>  快速的方式，您也可以使用的索引子<xref:System.Collections.Specialized.OrderedDictionary>物件來存取該欄位值直接。 資料來源的欄位順序所依賴的控制項 (例如<xref:System.Web.UI.WebControls.AccessDataSource>) 可以只依索引存取欄位的值。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>屬性來存取更新的記錄的索引鍵欄位的值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字典，其包含已更新資料錄的新欄位名稱/值組。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，包含已更新資料錄新欄位名稱/值組的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>屬性來存取新的欄位值更新記錄。 例如，您可以使用這些值來更新記錄的記錄。  
  
> [!NOTE]
>  如果您允許使用者更新的索引鍵的欄位值<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>屬性包含原始索引鍵欄位值。 已更新的值會儲存在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>屬性會傳回<xref:System.Collections.Specialized.OrderedDictionary>實作物件<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>介面。 <xref:System.Collections.Specialized.OrderedDictionary>物件包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>物件，表示已更新資料錄的欄位。 若要存取的欄位名稱，請使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>屬性<xref:System.Collections.Specialized.OrderedDictionary>物件。 同樣地，您可以存取的欄位值使用<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>屬性。  
  
> [!NOTE]
>  快速的方式，您也可以使用的索引子<xref:System.Collections.Specialized.OrderedDictionary>物件來存取該欄位值直接。 資料來源的欄位順序所依賴的控制項 (例如<xref:System.Web.UI.WebControls.AccessDataSource>) 可以只依索引存取欄位的值。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>屬性來存取更新的資料錄的非索引鍵欄位由使用者所輸入的新值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字典，其包含已更新資料錄的原始非索引鍵欄位名稱/值組。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，包含已更新資料錄原始欄位名稱/值組的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>屬性來存取原始的非索引鍵欄位值更新記錄。 例如，您可以使用這些值來更新記錄的記錄。 支援衝突偵測 （開放式並行存取檢查），例如資料來源控制項<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSource>控制項，以其<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>屬性設定為`ConflictOptions.CompareAllValues`也會比對這些原始值執行更新作業之前在資料庫中的記錄。 如果記錄已被另一位使用者同時，記錄將不會更新。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>屬性不包含索引鍵欄位。 如果您允許使用者更新的索引鍵欄位的值時，原始的索引鍵欄位值會儲存在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>屬性。 已更新的值會儲存在<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>屬性會傳回<xref:System.Collections.Specialized.OrderedDictionary>實作物件<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>介面。 <xref:System.Collections.Specialized.OrderedDictionary>物件包含<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>物件，表示已更新資料錄的欄位。 若要存取的欄位名稱，請使用<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>屬性<xref:System.Collections.Specialized.OrderedDictionary>物件。 同樣地，您可以存取的欄位值使用<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>屬性。  
  
> [!NOTE]
>  快速的方式，您也可以使用的索引子<xref:System.Collections.Specialized.OrderedDictionary>物件來存取該欄位值直接。 資料來源的欄位順序所依賴的控制項 (例如<xref:System.Web.UI.WebControls.AccessDataSource>) 可以只依索引存取欄位的值。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>屬性來存取已更新資料錄的非索引鍵欄位的原始值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>