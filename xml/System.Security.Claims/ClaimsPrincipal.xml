<Type Name="ClaimsPrincipal" FullName="System.Security.Claims.ClaimsPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ed14e287be70866ec1fe6c9a38c56ffe4664d96" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36627173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsPrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsPrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipal : System::Security::Principal::IPrincipal" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipal = class&#xA;    interface IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fa9cf-101">
        <see cref="T:System.Security.Principal.IPrincipal" /> 實作，其支援多個宣告式身分識別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa9cf-101">An <see cref="T:System.Security.Principal.IPrincipal" /> implementation that supports multiple claims-based identities.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-102">從.NET Framework 4.5 開始，Windows Identity Foundation (WIF) 和宣告式身分識別已完全整合到.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-102">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="fa9cf-103">這表示現在代表.NET Framework 中的主體的許多類別衍生自<xref:System.Security.Claims.ClaimsPrincipal>而不只實作<xref:System.Security.Principal.IPrincipal>介面。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-103">This means that many classes that represent a principal in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsPrincipal> rather than simply implementing the <xref:System.Security.Principal.IPrincipal> interface.</span></span> <span data-ttu-id="fa9cf-104">除了實作<xref:System.Security.Principal.IPrincipal>介面，<xref:System.Security.Claims.ClaimsPrincipal>公開適用於使用具有宣告的屬性和方法。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-104">In addition to implementing the <xref:System.Security.Principal.IPrincipal> interface, <xref:System.Security.Claims.ClaimsPrincipal> exposes properties and methods that are useful for working with claims.</span></span>  
  
 <span data-ttu-id="fa9cf-105"><xref:System.Security.Claims.ClaimsPrincipal> 會公開的身分識別，其中每個的集合<xref:System.Security.Claims.ClaimsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-105"><xref:System.Security.Claims.ClaimsPrincipal> exposes a collection of identities, each of which is a <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="fa9cf-106">在一般情況下，這個集合，透過存取<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>屬性，將只有單一項目。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-106">In the common case, this collection, which is accessed through the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property, will only have a single element.</span></span>  
  
 <span data-ttu-id="fa9cf-107">導入<xref:System.Security.Claims.ClaimsPrincipal>做為主體最主要的類別衍生自.NET 4.5 中不會強制您變更任何項目在處理與身分識別的方式。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-107">The introduction of <xref:System.Security.Claims.ClaimsPrincipal> in .NET 4.5 as the principal from which most principal classes derive does not force you to change anything in the way in which you deal with identity.</span></span> <span data-ttu-id="fa9cf-108">不過它會開啟更多可能性並提供更多的機會，以進行更細微的存取控制。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-108">It does, however open up more possibilities and offer more chances to exercise finer access control.</span></span> <span data-ttu-id="fa9cf-109">例如: </span><span class="sxs-lookup"><span data-stu-id="fa9cf-109">For example:</span></span>  
  
-   <span data-ttu-id="fa9cf-110">應用程式程式碼本身可直接與目前的主體中包含的宣告，磁碟機額外的驗證、 授權及個人化的工作。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-110">The application code itself can work directly with the claims contained in the current principal to drive extra authentication, authorization, and personalization tasks.</span></span>  
  
-   <span data-ttu-id="fa9cf-111">您可以利用處理管線，可處理驗證要求及授權原則執行到您的程式碼之前宣告前端您的資源。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-111">You can front your resources with a claims processing pipeline, which can deal with authentication requests and authorization policy even before execution reaches your code.</span></span> <span data-ttu-id="fa9cf-112">例如，您可以設定 web 應用程式或服務與自訂宣告驗證管理員 」 是衍生自類別的執行個體<xref:System.Security.Claims.ClaimsAuthenticationManager>類別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-112">For example, you can configure a web-based application or service with a custom claims authentication manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthenticationManager> class.</span></span> <span data-ttu-id="fa9cf-113">如此設定，會叫用要求處理管線<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>方法在您將傳遞給它的宣告驗證管理員<xref:System.Security.Claims.ClaimsPrincipal>表示內送要求的內容。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-113">When so configured, the request processing pipeline invokes the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method on your claims authentication manager passing it a <xref:System.Security.Claims.ClaimsPrincipal> that represents the context of the incoming request.</span></span> <span data-ttu-id="fa9cf-114">您宣告的驗證管理員接著可以執行驗證，根據連入宣告的值。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-114">Your claims authentication manager can then perform authentication based on the values of the incoming claims.</span></span> <span data-ttu-id="fa9cf-115">它也可以篩選、 轉換或將宣告新增至連入宣告集。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-115">It can also filter, transform, or add claims to the incoming claim set.</span></span> <span data-ttu-id="fa9cf-116">例如，它可用於擴充具有本機資料來源，例如本機使用者設定檔建立新的宣告集的連入宣告</span><span class="sxs-lookup"><span data-stu-id="fa9cf-116">For example, it could be used to enrich the incoming claim set with new claims created from a local data source such as a local user profile</span></span>  
  
-   <span data-ttu-id="fa9cf-117">您可以使用自訂宣告授權管理員中，衍生自類別的執行個體設定的 web 型應用程式<xref:System.Security.Claims.ClaimsAuthorizationManager>類別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-117">You can configure a web-based application with a custom claims authorization manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthorizationManager> class.</span></span> <span data-ttu-id="fa9cf-118">如此設定，當要求處理管線會封裝傳入<xref:System.Security.Claims.ClaimsPrincipal>中<xref:System.Security.Claims.AuthorizationContext>並叫用<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>上 claims authorization manager 授權您的方法。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-118">When so configured, the request processing pipeline packages the incoming <xref:System.Security.Claims.ClaimsPrincipal> in an <xref:System.Security.Claims.AuthorizationContext> and invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method on your claims authorization manager.</span></span> <span data-ttu-id="fa9cf-119">Claims authorization manager 授權您接著可以強制執行內送宣告架構的授權。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-119">Your claims authorization manager can then enforce authorization based on the incoming claims.</span></span>  
  
-   <span data-ttu-id="fa9cf-120">可以由使用自訂宣告授權管理員來設定您的應用程式，而且使用的內嵌宣告式程式碼存取檢查<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>執行命令式存取檢查的類別或<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>執行宣告式存取檢查。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-120">Inline claims-based code access checks can be performed by configuring your application with a custom claims authorization manager and using either the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class to perform imperative access checks or the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> to perform declarative access checks.</span></span> <span data-ttu-id="fa9cf-121">宣告式程式碼存取檢查會執行的內嵌，外部處理管線中，並因此可用於所有應用程式，只要設定 claims authorization manager 授權。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-121">Claims-based code access checks are performed inline, outside of the processing pipeline, and so are available to all applications as long as a claims authorization manager is configured.</span></span>  
  
 <span data-ttu-id="fa9cf-122">您可以取得<xref:System.Security.Claims.ClaimsPrincipal>轉換相關聯的 RP 應用程式 （或執行執行緒的主體） 中的要求主體的執行個體<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>屬性<xref:System.Security.Claims.ClaimsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-122">You can obtain a <xref:System.Security.Claims.ClaimsPrincipal> instance for the principal associated with a request in an RP application (or the principal under which a thread is executing) by casting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property to <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="fa9cf-123">與相關聯的宣告<xref:System.Security.Claims.ClaimsPrincipal>物件都是透過其<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-123">The claims associated with an <xref:System.Security.Claims.ClaimsPrincipal> object are available through its <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property.</span></span> <span data-ttu-id="fa9cf-124"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>屬性會傳回所有與主體關聯的身分識別所包含的宣告。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-124">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims contained by the identities associated with the principal.</span></span> <span data-ttu-id="fa9cf-125">在罕見的情況中<xref:System.Security.Claims.ClaimsPrincipal>包含多個<xref:System.Security.Claims.ClaimsIdentity>執行個體，您可以使用<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>屬性，或者您可以使用存取的主要識別<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-125">In the uncommon case in which the <xref:System.Security.Claims.ClaimsPrincipal> contains multiple <xref:System.Security.Claims.ClaimsIdentity> instances, you can use the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property or you can access the primary identity by using the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="fa9cf-126"><xref:System.Security.Claims.ClaimsPrincipal> 提供數種方法可能會搜尋這些宣告並完全支援 Language Integrated Query (LINQ)。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-126"><xref:System.Security.Claims.ClaimsPrincipal> provides several methods through which these claims may be searched and fully supports Language Integrated Query (LINQ).</span></span> <span data-ttu-id="fa9cf-127">身分識別可以使用新增到主體<xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A>或<xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-127">Identities can be added to the principal by using the <xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A> or <xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa9cf-128">若要加入身分識別來<xref:System.Security.Claims.ClaimsPrincipal>，呼叫端必須具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-128">To add identities to the <xref:System.Security.Claims.ClaimsPrincipal>, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="fa9cf-129">根據預設，WIF 會排列優先順序<xref:System.Security.Principal.WindowsIdentity>物件選取要透過傳回的主要身分識別時<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-129">By default, WIF prioritizes <xref:System.Security.Principal.WindowsIdentity> objects when selecting the primary identity to return through the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="fa9cf-130">您可以修改此行為，藉由提供委派，以透過<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>執行選取的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-130">You can modify this behavior by supplying a delegate through the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to perform the selection.</span></span> <span data-ttu-id="fa9cf-131"><xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>屬性會提供類似的功能，如<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-131">The <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property provides similar functionality for the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 <span data-ttu-id="fa9cf-132">在宣告架構模型中，在指定的角色中的主體是否取決於提供其基礎的身分識別的宣告。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-132">In the claim-based model, whether a principal is in a specified role is determined by the claims presented by its underlying identities.</span></span> <span data-ttu-id="fa9cf-133"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>方法基本上會檢查以判斷它是否擁有指定的角色值的宣告主體相關聯的每個身分識別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-133">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method essentially examines each identity associated with the principal to determine whether it possesses a claim with the specified role value.</span></span> <span data-ttu-id="fa9cf-134">宣告的類型 (由其<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>屬性) 用來判斷哪些宣告都應該經過檢查角色期間檢查在透過身分識別指定其<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-134">The type of the claim (represented by its <xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType> property) used to determine which claims should be examined during role checks is specified on an identity through its <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fa9cf-135">因此，角色檢查期間檢查的宣告可以是不同的身分識別與主體關聯的不同型別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-135">Thus, the claims examined during role checks can be of a different type for different identities associated with the principal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa9cf-136">下列範例會擷取 HTTP 要求中的使用者提供的宣告，並將它們寫入 HTTP 回應。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-136">The following example extracts the claims presented by a user in an HTTP request and writes them to the HTTP response.</span></span> <span data-ttu-id="fa9cf-137">目前的使用者讀取<xref:System.Web.HttpContext>為<xref:System.Security.Claims.ClaimsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-137">The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="fa9cf-138">宣告會再讀取和便會寫入至回應。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-138">The claims are then read from it and then are written to the response.</span></span>  
  
```  
  
ClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  
if (null != principal)  
{  
   foreach (Claim claim in principal.Claims)  
   {  
      Response.Write("CLAIM TYPE: " + claim.Type + "; CLAIM VALUE: " + claim.Value + "</br>");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsIdentity" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthenticationManager" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-139">初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-139">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-140">初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-140">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-141">沒有識別與相關聯的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-141">No identities are associated with the new instance.</span></span> <span data-ttu-id="fa9cf-142">(<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合是空的)。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-142">(The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identities" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities">
          <span data-ttu-id="fa9cf-143">用來初始化新宣告主體的身份識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-143">The identities from which to initialize the new claims principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-144">使用指定的宣告身份識別，初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-144">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class using the specified claims identities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-145"><xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合已初始化使用指定的身分識別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-145">The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is initialized with the specified identities.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-146">
            <paramref name="identities" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-146">
              <paramref name="identities" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="fa9cf-147">指向 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的 <see cref="T:System.IO.BinaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-147">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-148">使用指定的 <see cref="T:System.IO.BinaryReader" />，初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-148">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsPrincipal" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-149">一般來說，<xref:System.IO.BinaryReader>建構使用位元組從<xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>和相同的方式初始化<xref:System.IO.BinaryWriter>。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-149">Normally, the <xref:System.IO.BinaryReader> is constructed using the bytes from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A> and initialized in the same way as the <xref:System.IO.BinaryWriter>.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-150">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-150">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IIdentity -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="fa9cf-151">初始化新宣告主體的來源識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-151">The identity from which to initialize the new claims principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-152">從指定的識別初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-152">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-153">如果指定的識別是可從<xref:System.Security.Claims.ClaimsIdentity>，用來初始化<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-153">If the specified identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, it is used to initialize the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="fa9cf-154">否則，<xref:System.Security.Claims.ClaimsIdentity>使用指定的身分識別建立，用來初始化集合。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-154">Otherwise, a <xref:System.Security.Claims.ClaimsIdentity> is created using the specified identity and is used to initialize the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-155">
            <paramref name="identity" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-155">
              <paramref name="identity" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As IPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal principal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="fa9cf-156">初始化新宣告主體的來源主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-156">The principal from which to initialize the new claims principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-157">從指定的主體，初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-157">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified principal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-158">如果指定的主體是可從<xref:System.Security.Claims.ClaimsPrincipal>，所有其身分識別會新增至<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-158">If the specified principal is assignable from <xref:System.Security.Claims.ClaimsPrincipal>, all of its identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="fa9cf-159">如果指定的主體不是可從<xref:System.Security.Claims.ClaimsPrincipal>，新<xref:System.Security.Claims.ClaimsIdentity>建立從<xref:System.Security.Principal.IIdentity>中其<xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType>屬性並新增至<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-159">If the specified principal is not assignable from <xref:System.Security.Claims.ClaimsPrincipal>, a new <xref:System.Security.Claims.ClaimsIdentity> is created from the <xref:System.Security.Principal.IIdentity> in its <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property and added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-160">
            <paramref name="principal" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-160">
              <paramref name="principal" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsPrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsPrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="fa9cf-161">序列化的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-161">The serialized data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fa9cf-162">序列化的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-162">The context for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-163">從使用 <see cref="T:System.Runtime.Serialization.ISerializable" /> 建立的序列化資料流，初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-163">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-164">
            <paramref name="info" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-164">
              <paramref name="info" /> is **null**.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="fa9cf-165">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-165">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fa9cf-166">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-166">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentities">
      <MemberSignature Language="C#" Value="public virtual void AddIdentities (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentities(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentities (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentities(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit&#xA;override this.AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit" Usage="claimsPrincipal.AddIdentities identities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities">
          <span data-ttu-id="fa9cf-167">要加入的宣告識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-167">The claims identities to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-168">將指定的宣告識別加入這個宣告主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-168">Adds the specified claims identities to this claims principal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-169">識別加入至<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-169">The identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-170">
            <paramref name="identities" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-170">
              <paramref name="identities" /> is **null**.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="fa9cf-171">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-171">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fa9cf-172">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-172">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentity">
      <MemberSignature Language="C#" Value="public virtual void AddIdentity (System.Security.Claims.ClaimsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentity(class System.Security.Claims.ClaimsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentity (identity As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentity(System::Security::Claims::ClaimsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit&#xA;override this.AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit" Usage="claimsPrincipal.AddIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="fa9cf-173">要加入的宣告識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-173">The claims identity to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-174">將指定的宣告識別加入這個宣告主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-174">Adds the specified claims identity to this claims principal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-175">識別加入至<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-175">The identity is added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-176">
            <paramref name="identity" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-176">
              <paramref name="identity" /> is **null**.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="fa9cf-177">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-177">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fa9cf-178">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-178">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-179">取得集合，其中包含來自與這個宣告主體相關聯的所有宣告身分識別之所有宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-179">Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9cf-180">與這個主體相關聯的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-180">The claims associated with this principal.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-181">宣告主體擁有集合<xref:System.Security.Claims.ClaimsIdentity>存取透過身分識別屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-181">A claims principal has a collection of <xref:System.Security.Claims.ClaimsIdentity> objects that is accessible through the Identities property.</span></span> <span data-ttu-id="fa9cf-182">每個<xref:System.Security.Claims.ClaimsIdentity>集合中包含一個或多個宣告。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-182">Each <xref:System.Security.Claims.ClaimsIdentity> in the collection contains one or more claims.</span></span> <span data-ttu-id="fa9cf-183"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>屬性會傳回所有的宣告從所有在此集合中的宣告身分識別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-183">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims from all of the claims identities in this collection.</span></span>  
  
 <span data-ttu-id="fa9cf-184"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>屬性可以檢驗的自訂實作<xref:System.Security.Claims.ClaimsAuthenticationManager>來進行驗證決策，或是篩選、 轉換或充實連入宣告集; 類別的自訂實作<xref:System.Security.Claims.ClaimsAuthorizationManager>類別來強制執行授權原則。或由應用程式程式碼來製作授權決策，或自訂使用者經驗會根據集合中的宣告。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-184">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property can be examined by custom implementations of the <xref:System.Security.Claims.ClaimsAuthenticationManager> class to make authentication decisions or to filter, transform, or enrich an incoming claim set; by custom implementations of the <xref:System.Security.Claims.ClaimsAuthorizationManager> class to enforce authorization policy; or by application code to make authorization decisions or to customize user experience based on the claims present in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipalSelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`1&lt;class System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClaimsPrincipalSelector As Func(Of ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ ClaimsPrincipalSelector { Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ get(); void set(Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipalSelector : Func&lt;System.Security.Claims.ClaimsPrincipal&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Claims.ClaimsPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-185">取得及設定用來選取 <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> 屬性所傳回宣告主體的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-185">Gets and sets the delegate used to select the claims principal returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9cf-186">委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-186">The delegate.</span>
          </span>
          <span data-ttu-id="fa9cf-187">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-187">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-188">您可以設定這個屬性來覆寫預設行為<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-188">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="fa9cf-189">設定作業需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-189">Set operation requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fa9cf-190">無法由部分信任或安全性透明程式碼中設定這個成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-190">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Current" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsPrincipal.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-191">傳回這個執行個體的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-191">Returns a copy of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-192">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 物件的新複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-192">A new copy of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity CreateClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaimsIdentity(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaimsIdentity (reader As BinaryReader) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ CreateClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity" Usage="claimsPrincipal.CreateClaimsIdentity reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="fa9cf-193">二進位檔讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-193">The binary reader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-194">建立新的宣告身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-194">Creates a new claims identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-195">建立的宣告身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-195">The created claims identity.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Security.Claims.ClaimsPrincipal Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Claims.ClaimsPrincipal Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Claims::ClaimsPrincipal ^ Current { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Claims.ClaimsPrincipal" Usage="System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-196">取得目前的宣告主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-196">Gets the current claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9cf-197">目前的宣告主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-197">The current claims principal.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-198">根據預設，<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>傳回。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-198">By default, <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> is returned.</span></span> <span data-ttu-id="fa9cf-199">您可以變更此行為，藉由設定<xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>屬性，以指定的委派，呼叫以判斷目前的主體。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-199">You can change this behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property to specify a delegate to be called to determine the current principal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSerializationData : byte[]" Usage="System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-200">包含衍生類型所提供的任何其他資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-200">Contains any additional data provided by a derived type.</span>
          </span>
          <span data-ttu-id="fa9cf-201">通常會在呼叫 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 時設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-201">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9cf-202">A<see cref="T:System.Byte" />陣列，表示的其他序列化資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-202">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-203">擷取所有符合指定條件的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-203">Retrieves all of the claims that match a specified condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="fa9cf-204">執行比對邏輯的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-204">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-205">擷取所有符合指定述詞的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-205">Retrieves all of the claims that are matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-206">符合的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-206">The matching claims.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-207">傳回宣告主體相關聯的所有身分識別宣告。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-207">Returns claims from all identities associated with the claims principal.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-208">
            <paramref name="match" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-208">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fa9cf-209">要比對宣告的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-209">The claim type against which to match claims.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-210">擷取所有具有指定宣告類型的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-210">Retrieves all or the claims that have the specified claim type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-211">符合的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-211">The matching claims.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-212">傳回宣告主體相關聯的所有身分識別宣告。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-212">Returns claims from all identities associated with the claims principal.</span></span> <span data-ttu-id="fa9cf-213">會使用序數的情況中區分上進行比較`type`。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-213">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-214">
            <paramref name="type" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-214">
              <paramref name="type" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-215">擷取符合指定條件的第一個宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-215">Retrieves the first claim that matches a specified condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="fa9cf-216">執行比對邏輯的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-216">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-217">擷取指定述詞所比對的第一個宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-217">Retrieves the first claim that is matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-218">第一個相符的宣告，如果找不到相符項目，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-218">The first matching claim or <see langword="null" /> if no match is found.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-219">
            <paramref name="match" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-219">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : string -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : string -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fa9cf-220">要比對的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-220">The claim type to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-221">擷取指定宣告類型的第一個宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-221">Retrieves the first claim with the specified claim type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-222">第一個相符的宣告，如果找不到相符項目，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-222">The first matching claim or <see langword="null" /> if no match is found.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-223">
            <paramref name="type" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-223">
              <paramref name="type" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="claimsPrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="fa9cf-224">要填入資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-224">The object to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fa9cf-225">這個序列化的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-225">The destination for this serialization.</span>
          </span>
          <span data-ttu-id="fa9cf-226">可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-226">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-227">將序列化目前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件所需的資料填入 <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-227">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-228">
            <paramref name="info" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-228">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="fa9cf-229">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-229">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fa9cf-230">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-230">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-231">判斷與此宣告主體相關聯之宣告身分識別的任何一個是否包含符合指定條件的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-231">Determines whether any of the claims identities associated with this claims principal contains a claim that matches specified conditions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool&#xA;override this.HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool" Usage="claimsPrincipal.HasClaim match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="fa9cf-232">執行比對邏輯的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-232">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-233">判斷與此宣告主體相關聯之宣告身分識別的任何一個是否包含指定述詞所比對的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-233">Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-234">如果相符的宣告存在，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-234">
              <see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-235">
            <paramref name="match" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-235">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : string * string -&gt; bool&#xA;override this.HasClaim : string * string -&gt; bool" Usage="claimsPrincipal.HasClaim (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fa9cf-236">要比對的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-236">The type of the claim to match.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fa9cf-237">要比對的宣告值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-237">The value of the claim to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-238">判斷與此宣告主體相關聯之宣告身分識別的任何一個，是否包含具有指定宣告類型和值的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-238">Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-239">如果相符的宣告存在，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-239">
              <see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-240">不會檢查<xref:System.Security.Claims.Claim.Issuer%2A>或<xref:System.Security.Claims.Claim.OriginalIssuer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-240">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="fa9cf-241">會使用序數，區分大小寫; 的值進行比較案例中區分型別上。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-241">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-242">
            <paramref name="type" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-242">
              <paramref name="type" /> is **null**.</span>
          </span>
          <span data-ttu-id="fa9cf-243">-或-  <paramref name="value" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-243">-or-  <paramref name="value" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Identities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; Identities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; Identities" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identities As IEnumerable(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ Identities { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identities : seq&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-244">取得集合，其中包含所有與這個宣告主體相關聯的宣告身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-244">Gets a collection that contains all of the claims identities associated with this claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9cf-245">宣告身分識別的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-245">The collection of claims identities.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-246">在常見的情況下，集合會包含單一項目。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-246">In the common case, the collection contains only a single element.</span></span>  
  
 <span data-ttu-id="fa9cf-247">集合包含一些項目，也就是可能`null`。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-247">It is possible for the collection to contain some elements which are `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IPrincipal.Identity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-248">取得與這個宣告主體關聯的主要宣告身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-248">Gets the primary claims identity associated with this claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9cf-249">與這個宣告主體關聯的主要宣告身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-249">The primary claims identity associated with this claims principal.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-250">根據預設，架構會排列優先順序的型別身分<xref:System.Security.Principal.WindowsIdentity>傳回身分識別時。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-250">By default, the framework prioritizes identities of type <xref:System.Security.Principal.WindowsIdentity> when returning the identity.</span></span> <span data-ttu-id="fa9cf-251">第一個<xref:System.Security.Principal.WindowsIdentity>中找到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>會傳回的集合。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-251">The first <xref:System.Security.Principal.WindowsIdentity> found in the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is returned.</span></span> <span data-ttu-id="fa9cf-252">如果沒有任何<xref:System.Security.Principal.WindowsIdentity>在集合中，第一個身分識別可從<xref:System.Security.Claims.ClaimsIdentity>傳回。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-252">If there is no <xref:System.Security.Principal.WindowsIdentity> in the collection, the first identity assignable from <xref:System.Security.Claims.ClaimsIdentity> is returned.</span></span> <span data-ttu-id="fa9cf-253">如果沒有任何<xref:System.Security.Claims.ClaimsIdentity>，`null`傳回。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-253">If there is no <xref:System.Security.Claims.ClaimsIdentity>, `null` is returned.</span></span> <span data-ttu-id="fa9cf-254">如果<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合是空的<xref:System.ArgumentNullException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-254">If the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="fa9cf-255">您可以變更預設行為，藉由設定<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>屬性，以指定的委派，呼叫以判斷識別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-255">You can change the default behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to specify a delegate to be called to determine the identity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="claimsPrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Principal.IPrincipal.IsInRole(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">
          <span data-ttu-id="fa9cf-256">要檢查的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-256">The role for which to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-257">傳回值，表示此宣告主體所代表之實體 (使用者) 是否在指定的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-257">Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa9cf-258">如果宣告主體在指定的角色中，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-258">
              <see langword="true" /> if claims principal is in the specified role; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-259"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>方法會檢查此宣告主體所擁有的身分識別是否包含宣告類型<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>宣告的值等於所指定的值`role`參數。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-259">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method checks whether an identity that this claims principal possesses contains a claim of type <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> where the value of the claim is equal to the value specified by the `role` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa9cf-260">每個<xref:System.Security.Claims.ClaimsIdentity>有它自己的定義，代表角色的宣告型別。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-260">Each <xref:System.Security.Claims.ClaimsIdentity> has its own definition of the claim type that represents a role.</span></span> <span data-ttu-id="fa9cf-261">這種宣告類型可以存取和設定透過<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-261">This claim type can be accessed and set through the <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentitySelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt;, class System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property PrimaryIdentitySelector As Func(Of IEnumerable(Of ClaimsIdentity), ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ PrimaryIdentitySelector { Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); void set(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryIdentitySelector : Func&lt;seq&lt;System.Security.Claims.ClaimsIdentity&gt;, System.Security.Claims.ClaimsIdentity&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa9cf-262">取得及設定委派，用來選取 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> 屬性所傳回的宣告識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-262">Gets and sets the delegate used to select the claims identity returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa9cf-263">委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-263">The delegate.</span>
          </span>
          <span data-ttu-id="fa9cf-264">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-264">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa9cf-265">您可以設定這個屬性來覆寫預設行為<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fa9cf-265">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="fa9cf-266">設定作業需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-266">Set operation requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fa9cf-267">無法由部分信任或安全性透明程式碼中設定這個成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-267">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter -&gt; unit" Usage="claimsPrincipal.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="fa9cf-268">要用於資料儲存的寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-268">The writer to use for data storage.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-269">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-269">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-270">
            <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-270">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="claimsPrincipal.WriteTo (writer, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="fa9cf-271">要用於資料儲存的寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-271">The writer to use for data storage.</span>
          </span>
        </param>
        <param name="userData">
          <span data-ttu-id="fa9cf-272">衍生類型所提供的其他資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-272">Additional data provided by the derived type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa9cf-273">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-273">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa9cf-274">
            <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa9cf-274">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>