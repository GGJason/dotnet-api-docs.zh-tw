<Type Name="ClaimsAuthorizationManager" FullName="System.Security.Claims.ClaimsAuthorizationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe203cb2b223a3ac68111978dbba00b7d0fb80ef" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489892" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsAuthorizationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthorizationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthorizationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthorizationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthorizationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="94bd1-101">定義宣告授權管理員的基底實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94bd1-101">Defines the base implementation for a claims authorization manager.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94bd1-102"><xref:System.Security.Claims.ClaimsAuthorizationManager>類別提供的基底實作宣告授權管理員。</span><span class="sxs-lookup"><span data-stu-id="94bd1-102">The <xref:System.Security.Claims.ClaimsAuthorizationManager> class provides the base implementation for a claims authorization manager.</span></span> <span data-ttu-id="94bd1-103">宣告授權管理員可以使用下列兩個案例中：</span><span class="sxs-lookup"><span data-stu-id="94bd1-103">A claims authorization manager can be used in the following two scenarios:</span></span>  
  
-   <span data-ttu-id="94bd1-104">在 web 應用程式和服務中，宣告授權管理員可以加入至處理管線，以提供您可以從中授權的應用程式程式碼之前的連入宣告值根據資源的存取權的擴充點實際實作要求之資源呼叫。</span><span class="sxs-lookup"><span data-stu-id="94bd1-104">In web-based applications and services, a claims authorization manager  can be added to the processing pipeline to provide an extensibility point from which you can authorize access to a resource according to the value of incoming claims before the application code that actually implements the requested resource is called.</span></span>  
  
-   <span data-ttu-id="94bd1-105">當您使用<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>類別或<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>執行命令式或宣告式的宣告型存取的類別會在您的程式碼中檢查 claims authorization manager 授權設定為您的應用程式由執行系統呼叫請檢查。</span><span class="sxs-lookup"><span data-stu-id="94bd1-105">When you use the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class or the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class to perform either imperative or declarative claims-based access checks in your code, the claims authorization manager that is configured for your application is called by the system to perform the check.</span></span> <span data-ttu-id="94bd1-106">Web 應用程式和桌面應用程式中，可以執行宣告為基礎的存取檢查。</span><span class="sxs-lookup"><span data-stu-id="94bd1-106">Claims-based access checks can be performed in both web-based applications and desktop applications.</span></span>  
  
 <span data-ttu-id="94bd1-107">所提供的預設實作<xref:System.Security.Claims.ClaimsAuthorizationManager>類別會授與存取呈現每個宣告的; 不過，您可以從這個類別衍生，並覆寫<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>方法以提供您自己的授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="94bd1-107">The default implementation provided by the <xref:System.Security.Claims.ClaimsAuthorizationManager> class authorizes access for each claim presented; however, you can derive from this class and override the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method to provide your own authorization logic.</span></span>  
  
 <span data-ttu-id="94bd1-108">宣告授權管理員的使用是選擇性的。</span><span class="sxs-lookup"><span data-stu-id="94bd1-108">The use of a claims authorization manager is optional.</span></span> <span data-ttu-id="94bd1-109">您可以設定您的應用程式使用宣告授權管理員以程式設計方式利用<xref:System.IdentityModel.Configuration.IdentityConfiguration>類別，或以宣告方式，藉由指定[ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)項目，這是子元素的[ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)應用程式組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-109">You can configure your application to use a claims authorization manager either programmatically by using the <xref:System.IdentityModel.Configuration.IdentityConfiguration> class or declaratively, by specifying the [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element, which is a child element of the [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element in your application configuration file.</span></span> <span data-ttu-id="94bd1-110">如果您的應用程式是網站或 web 應用程式裝載在網際網路資訊服務 (IIS) 中，您也必須加入<xref:System.IdentityModel.Services.ClaimsAuthorizationModule>ASP.NET HTTP 模組集合中。</span><span class="sxs-lookup"><span data-stu-id="94bd1-110">If your application is a web site or a web application hosted in Internet Information Services (IIS), you must also add the <xref:System.IdentityModel.Services.ClaimsAuthorizationModule> in the ASP.NET HTTP Modules collection.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="94bd1-111">當您使用<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>類別或<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>類別，用來執行存取檢查的宣告授權管理員是底下的身分識別設定中指定的一個<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="94bd1-111">When you use the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class or the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class, the claims authorization manager that is used to perform the access check is the one that is specified in the identity configuration under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="94bd1-112">在組態檔，它是`<identityConfiguration>`> 一節中所參考的預設`<federationConfiguration>`項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-112">In a configuration file, it is the `<identityConfiguration>` section that is referenced from the default `<federationConfiguration>` element.</span></span> <span data-ttu-id="94bd1-113">這是即使對於 Windows Communication Foundation (WCF) 服務與桌面應用程式，則為 true。</span><span class="sxs-lookup"><span data-stu-id="94bd1-113">This is true even for Windows Communication Foundation (WCF) services and desktop applications.</span></span>  
  
 <span data-ttu-id="94bd1-114"><xref:System.Security.Claims.ClaimsAuthorizationManager>基底類別不接受任何額外的設定; 不過，您可以覆寫<xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A>在衍生類別提供您 claims authorization manager 授權從子項目的初始化`<claimsAuthorizationElement>`。</span><span class="sxs-lookup"><span data-stu-id="94bd1-114">The <xref:System.Security.Claims.ClaimsAuthorizationManager> base class does not take any additional configuration; however, you can override the <xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A> in derived classes to provide initialization of your claims authorization manager from child elements of the `<claimsAuthorizationElement>`.</span></span> <span data-ttu-id="94bd1-115">典型的案例是要用於這些子元素指定授權原則會決定為了要能夠存取該資源所需的宣告類型和值。</span><span class="sxs-lookup"><span data-stu-id="94bd1-115">The typical scenario is to use these child elements to specify authorization policies which determine which claim types and values are required in order to gain access to which resource.</span></span> <span data-ttu-id="94bd1-116">這不是永久的需求，不過，您可用來定義任何使用方式和語法意義實作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-116">This is not a hard requirement, though you are free to define whatever usage and syntax make sense for your implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94bd1-117">中所使用的程式碼範例<xref:System.Security.Claims.ClaimsAuthorizationManager>主題摘錄自`Claims Based Authorization`範例。</span><span class="sxs-lookup"><span data-stu-id="94bd1-117">The code examples that are used in the <xref:System.Security.Claims.ClaimsAuthorizationManager> topics are taken from the `Claims Based Authorization` sample.</span></span> <span data-ttu-id="94bd1-118">這個範例提供可授權主體在組態中指定的原則為基礎的自訂宣告授權管理員。</span><span class="sxs-lookup"><span data-stu-id="94bd1-118">This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</span></span> <span data-ttu-id="94bd1-119">自訂宣告授權管理員包含三個基本元件： 的類別衍生自<xref:System.Security.Claims.ClaimsAuthorizationManager>實作管理員`ResourceAction`組資源和動作的類別和原則的讀取器讀取並編譯原則指定組態檔中。</span><span class="sxs-lookup"><span data-stu-id="94bd1-119">The custom claims authorization manager consists of three basic components: a class derived from <xref:System.Security.Claims.ClaimsAuthorizationManager> that implements the manager, the `ResourceAction` class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</span></span> <span data-ttu-id="94bd1-120">這會編譯原則可以然後宣告授權管理員用來評估來授與資源的存取權的主體。</span><span class="sxs-lookup"><span data-stu-id="94bd1-120">This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</span></span> <span data-ttu-id="94bd1-121">並非所有項目會顯示為了簡短起見。</span><span class="sxs-lookup"><span data-stu-id="94bd1-121">Not all elements are shown for the sake of brevity.</span></span> <span data-ttu-id="94bd1-122">如需此範例，並提供其他範例 WIF 以及有關下載這些檔案的位置資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="94bd1-122">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 <span data-ttu-id="94bd1-123">下列程式碼會示範自訂宣告授權管理員的實作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-123">The following code shows the implementation of the custom claims authorization manager.</span></span> <span data-ttu-id="94bd1-124"><xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A>方法會讀取並從設定的原則會使用編譯的 （未顯示） 的原則讀取器 helper 類別和<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>方法授與或拒絕此原則為基礎的存取。</span><span class="sxs-lookup"><span data-stu-id="94bd1-124">The <xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A> method reads and compiles the policy from configuration by using the policy reader helper class (not shown) and the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method grants or denies access based on this policy.</span></span>  
  
 [!code-csharp[WifClaimsBasedAuthorization#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#2)]  
  
 <span data-ttu-id="94bd1-125">下列程式碼會示範`ResourceAction`自訂宣告管理員所使用的類別。</span><span class="sxs-lookup"><span data-stu-id="94bd1-125">The following code shows the `ResourceAction` class used by the custom claims manager.</span></span>  
  
 [!code-csharp[WifClaimsBasedAuthorization#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/resourceaction.cs#1)]  
  
 <span data-ttu-id="94bd1-126">下列 XML 會示範如何設定宣告授權管理員 web 應用程式裝載在 IIS 7.5 中，如上所示。</span><span class="sxs-lookup"><span data-stu-id="94bd1-126">The following XML shows how to configure the claims authorization manager shown above for a web application hosted in IIS 7.5.</span></span> <span data-ttu-id="94bd1-127">只有特定的項目宣告授權管理員的組態會顯示。</span><span class="sxs-lookup"><span data-stu-id="94bd1-127">Only the elements specific to the configuration of the claims authorization manager are shown.</span></span> <span data-ttu-id="94bd1-128">請注意，參考<xref:System.IdentityModel.Services.ClaimsAuthorizationModule>類別必須新增至在管線`<system.Webserver>`項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-128">Note that a reference to the <xref:System.IdentityModel.Services.ClaimsAuthorizationModule> class must be added to the pipeline under the `<system.Webserver>` element.</span></span> <span data-ttu-id="94bd1-129">網站和應用程式裝載於 IIS 7 之前的 IIS 版本中的模組可以新增至在管線`<system.Web>`項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-129">For sites and applications hosted in versions of IIS prior to IIS 7 the modules can be added to the pipeline under the `<system.Web>` element.</span></span> <span data-ttu-id="94bd1-130">此設定時顯示，但是標記為註解。</span><span class="sxs-lookup"><span data-stu-id="94bd1-130">This configuration is shown but commented out.</span></span>  
  
 <span data-ttu-id="94bd1-131">使用宣告授權管理員的原則由自訂`<policy>`下的項目[ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-131">The policy used by the claims authorization manager is specified by custom `<policy>` elements under the [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element.</span></span> <span data-ttu-id="94bd1-132">在第一個原則中，主體必須擁有一個指定的宣告，以便在指定的資源上執行指定的動作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-132">In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</span></span> <span data-ttu-id="94bd1-133">在第二個原則中，主體必須擁有這兩個宣告能夠在指定的資源上執行指定的動作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-133">In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</span></span> <span data-ttu-id="94bd1-134">在所有其他主體自動授與存取權，不論它擁有的宣告。</span><span class="sxs-lookup"><span data-stu-id="94bd1-134">In all others, the principal is automatically granted access regardless of the claims it possesses.</span></span>  
  
```  
<configuration>  
  <configSections>  
    <!--WIF 4.5 sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    ...  
  
  </configSections>  
  
  ...  
  
  <system.web>  
    <httpModules>  
      <!--WIF 4.5 modules -->  
      <!--Not needed here for IIS >= 7 -->  
      <!--<add name="ClaimsAuthorizationModule" type="System.IdentityModel.Services.ClaimsAuthorizationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>-->  
    </httpModules>  
  </system.web>  
  
  ...  
  
  <system.webServer>  
    <modules>  
      <!--WIF 4.5 modules -->  
      <add name="ClaimsAuthorizationModule" type="System.IdentityModel.Services.ClaimsAuthorizationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
  
  ...  
  
  <!-- WIF 4.5 s.im section-->  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type="ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary">  
        <policy resource="http://localhost:28491/Developers.aspx" action="GET">  
          <or>  
            <claim claimType="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" claimValue="developer" />  
            <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
          </or>  
        </policy>  
        <policy resource="http://localhost:28491/Administrators.aspx" action="GET">  
          <and>  
            <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
            <claim claimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" claimValue="USA" />  
          </and>  
        </policy>  
        <policy resource="http://localhost:28491/Default.aspx" action="GET">  
        </policy>  
        <policy resource="http://localhost:28491/" action="GET">  
        </policy>  
        <policy resource="http://localhost:28491/Claims.aspx" action="GET">  
        </policy>  
      </claimsAuthorizationManager>  
  
      ...  
  
    </identityConfiguration>  
  </system.identityModel>  
  ...  
  
</configuration><configuration>  
  <configSections>  
    <!--WIF 4.5 sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    ...  
  
  </configSections>  
  
  ...  
  
  <system.web>  
    <httpModules>  
      <!--WIF 4.5 modules -->  
      <!--Not needed here for IIS >= 7 -->  
      <!--<add name="ClaimsAuthorizationModule" type="System.IdentityModel.Services.ClaimsAuthorizationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>-->  
    </httpModules>  
  </system.web>  
  
  ...  
  
  <system.webServer>  
    <modules>  
      <!--WIF 4.5 modules -->  
      <add name="ClaimsAuthorizationModule" type="System.IdentityModel.Services.ClaimsAuthorizationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
  
  ...  
  
  <!-- WIF 4.5 s.im section-->  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type="MyClaimsAuthorizationManager.SimpleClaimsAuthoirzationManager, MyClaimsAuthorizationManager" />  
      ...  
  
  </system.identityModel>  
  ...  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthorizationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthorizationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94bd1-135">初始化 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94bd1-135">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.Security.Claims.AuthorizationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.Security.Claims.AuthorizationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckAccess (context As AuthorizationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::Security::Claims::AuthorizationContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Security.Claims.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="94bd1-136">授權內容，其中包含授權要檢查的主旨、資源及動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94bd1-136">The authorization context that contains the subject, resource, and action for which authorization is to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94bd1-137">在衍生類別中實作時，檢查指定之內容中主題的授權，才能對指定的資源上執行指定的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94bd1-137">When implemented in a derived class, checks authorization for the subject in the specified context to perform the specified action on the specified resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94bd1-138">如果主體獲得授權，可以對指定的資源執行指定的動作，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94bd1-138">
              <see langword="true" /> if the subject is authorized to perform the specified action on the specified resource; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94bd1-139">基底實作一律會傳回`true`，這會授權存取。</span><span class="sxs-lookup"><span data-stu-id="94bd1-139">The base implementation always returns `true`, which authorizes access.</span></span> <span data-ttu-id="94bd1-140">您可以覆寫這個方法在衍生類別來授權存取權限 RP 應用程式的需求。</span><span class="sxs-lookup"><span data-stu-id="94bd1-140">You can override this method in a derived class to authorize access based on the requirements of your RP application.</span></span> <span data-ttu-id="94bd1-141">如果此方法傳回`false`，Windows Identity Foundation (WIF) 傳回給呼叫端未經授權的錯誤; 否則執行會傳遞至 RP 應用程式。</span><span class="sxs-lookup"><span data-stu-id="94bd1-141">If this method returns `false`, Windows Identity Foundation (WIF) returns an unauthorized error to the caller; otherwise, execution is passed to the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94bd1-142">中所使用的程式碼範例<xref:System.Security.Claims.ClaimsAuthorizationManager>主題摘錄自`Claims Based Authorization`範例。</span><span class="sxs-lookup"><span data-stu-id="94bd1-142">The code examples that are used in the <xref:System.Security.Claims.ClaimsAuthorizationManager> topics are taken from the `Claims Based Authorization` sample.</span></span> <span data-ttu-id="94bd1-143">這個範例提供可授權主體在組態中指定的原則為基礎的自訂宣告授權管理員。</span><span class="sxs-lookup"><span data-stu-id="94bd1-143">This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</span></span> <span data-ttu-id="94bd1-144">自訂宣告授權管理員包含三個基本元件： 的類別衍生自<xref:System.Security.Claims.ClaimsAuthorizationManager>實作管理員`ResourceAction`組資源和動作的類別和原則的讀取器讀取並編譯原則指定組態檔中。</span><span class="sxs-lookup"><span data-stu-id="94bd1-144">The custom claims authorization manager consists of three basic components: a class derived from <xref:System.Security.Claims.ClaimsAuthorizationManager> that implements the manager, the `ResourceAction` class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</span></span> <span data-ttu-id="94bd1-145">這會編譯原則可以然後宣告授權管理員用來評估來授與資源的存取權的主體。</span><span class="sxs-lookup"><span data-stu-id="94bd1-145">This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</span></span> <span data-ttu-id="94bd1-146">並非所有項目會顯示為了簡短起見。</span><span class="sxs-lookup"><span data-stu-id="94bd1-146">Not all elements are shown for the sake of brevity.</span></span> <span data-ttu-id="94bd1-147">如需此範例，並提供其他範例 WIF 以及有關下載這些檔案的位置資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="94bd1-147">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 <span data-ttu-id="94bd1-148">下列程式碼示範的覆寫<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94bd1-148">The following code shows the override of the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method.</span></span> <span data-ttu-id="94bd1-149">這個方法會授與或拒絕存取依讀取及編譯從組態檔的原則。</span><span class="sxs-lookup"><span data-stu-id="94bd1-149">This method grants or denies access based on a policy read and compiled from the configuration file.</span></span>  
  
 [!code-csharp[WifClaimsBasedAuthorization#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  
[!code-csharp[WifClaimsBasedAuthorization#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#5)]  
  
 <span data-ttu-id="94bd1-150">下列程式碼會示範`ResourceAction`自訂宣告管理員所使用的類別。</span><span class="sxs-lookup"><span data-stu-id="94bd1-150">The following code shows the `ResourceAction` class used by the custom claims manager.</span></span>  
  
 [!code-csharp[WifClaimsBasedAuthorization#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/resourceaction.cs#1)]  
  
 <span data-ttu-id="94bd1-151">使用宣告授權管理員的原則由自訂`<policy>`下的項目[ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-151">The policy used by the claims authorization manager is specified by custom `<policy>` elements under the [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element.</span></span> <span data-ttu-id="94bd1-152">這項原則會讀取並編譯<xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94bd1-152">This policy is read and compiled by the <xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A> method.</span></span> <span data-ttu-id="94bd1-153">在第一個原則中，主體必須擁有一個指定的宣告，以便在指定的資源上執行指定的動作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-153">In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</span></span> <span data-ttu-id="94bd1-154">在第二個原則中，主體必須擁有這兩個宣告能夠在指定的資源上執行指定的動作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-154">In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</span></span> <span data-ttu-id="94bd1-155">在所有其他主體自動授與存取權，不論它擁有的宣告。</span><span class="sxs-lookup"><span data-stu-id="94bd1-155">In all others, the principal is automatically granted access regardless of the claims it possesses.</span></span>  
  
```  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthorizationManager type="ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary">  
      <policy resource="http://localhost:28491/Developers.aspx" action="GET">  
        <or>  
          <claim claimType="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" claimValue="developer" />  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
        </or>  
      </policy>  
      <policy resource="http://localhost:28491/Administrators.aspx" action="GET">  
        <and>  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
          <claim claimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" claimValue="USA" />  
        </and>  
      </policy>  
      <policy resource="http://localhost:28491/Default.aspx" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/Claims.aspx" action="GET">  
      </policy>  
    </claimsAuthorizationManager>  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="94bd1-156">自訂組態項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94bd1-156">The custom configuration elements.</span>
          </span>
          <span data-ttu-id="94bd1-157">清單中的每個節點的型別為 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94bd1-157">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94bd1-158">在衍生類別中覆寫時，從 XML 載入自訂組態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94bd1-158">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94bd1-159"><xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>設定基礎結構會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="94bd1-159">The <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="94bd1-160">呼叫這個方法時，`nodelist`會包含最上層子項目的[ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)從組態檔項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-160">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element from the configuration file.</span></span> <span data-ttu-id="94bd1-161">每個這些項目，可能包含屬性或子項目，視您為您衍生的類別定義組態結構描述。</span><span class="sxs-lookup"><span data-stu-id="94bd1-161">Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span> <span data-ttu-id="94bd1-162">如果沒有子項目出現在`<claimsAuthorizationManager>`組態檔中的項目，這個方法不會呼叫。</span><span class="sxs-lookup"><span data-stu-id="94bd1-162">If no child elements appear under the `<claimsAuthorizationManager>` element in the configuration file, this method is not called.</span></span>  
  
 <span data-ttu-id="94bd1-163">預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="94bd1-163">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="94bd1-164">覆寫此方法以啟用宣告授權管理員從組態檔的初始化衍生類別中。</span><span class="sxs-lookup"><span data-stu-id="94bd1-164">Override this method in your derived class to enable initialization of your claims authorization manager from a configuration file.</span></span> <span data-ttu-id="94bd1-165">通常，組態項目用來表示授權原則。不過，可以定義項目，然後根據您的應用程式的需求有意義的任何方式使用它們。</span><span class="sxs-lookup"><span data-stu-id="94bd1-165">Typically, the configuration elements are used to express an authorization policy; however, you can define elements and use them in any way that makes sense based on the requirements of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94bd1-166">中所使用的程式碼範例<xref:System.Security.Claims.ClaimsAuthorizationManager>主題摘錄自`Claims Based Authorization`範例。</span><span class="sxs-lookup"><span data-stu-id="94bd1-166">The code examples that are used in the <xref:System.Security.Claims.ClaimsAuthorizationManager> topics are taken from the `Claims Based Authorization` sample.</span></span> <span data-ttu-id="94bd1-167">這個範例提供可授權主體在組態中指定的原則為基礎的自訂宣告授權管理員。</span><span class="sxs-lookup"><span data-stu-id="94bd1-167">This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</span></span> <span data-ttu-id="94bd1-168">自訂宣告授權管理員包含三個基本元件： 的類別衍生自<xref:System.Security.Claims.ClaimsAuthorizationManager>實作管理員`ResourceAction`組資源和動作的類別和原則的讀取器讀取並編譯原則指定組態檔中。</span><span class="sxs-lookup"><span data-stu-id="94bd1-168">The custom claims authorization manager consists of three basic components: a class derived from <xref:System.Security.Claims.ClaimsAuthorizationManager> that implements the manager, the `ResourceAction` class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</span></span> <span data-ttu-id="94bd1-169">這會編譯原則可以然後宣告授權管理員用來評估來授與資源的存取權的主體。</span><span class="sxs-lookup"><span data-stu-id="94bd1-169">This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</span></span> <span data-ttu-id="94bd1-170">並非所有項目會顯示為了簡短起見。</span><span class="sxs-lookup"><span data-stu-id="94bd1-170">Not all elements are shown for the sake of brevity.</span></span> <span data-ttu-id="94bd1-171">如需此範例，並提供其他範例 WIF 以及有關下載這些檔案的位置資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="94bd1-171">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 <span data-ttu-id="94bd1-172">下列程式碼示範的覆寫<xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94bd1-172">The following code shows the override of the <xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A> method.</span></span> <span data-ttu-id="94bd1-173">這個方法會使用 （未顯示） 的協助程式原則讀取器類別來讀取及編譯組態檔中指定的授權原則。</span><span class="sxs-lookup"><span data-stu-id="94bd1-173">This method uses a helper policy reader class (not shown) to read and compile authorization policies specified in the configuration file.</span></span> <span data-ttu-id="94bd1-174">原則加入至字典，而透過存取`ResourceAction`適用的資源和動作來建立的索引鍵物件。</span><span class="sxs-lookup"><span data-stu-id="94bd1-174">Policies are added to a dictionary and are accessed by a `ResourceAction` key object that is created from the resource and action for which they are intended.</span></span>  
  
 [!code-csharp[WifClaimsBasedAuthorization#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  
[!code-csharp[WifClaimsBasedAuthorization#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#4)]  
  
 <span data-ttu-id="94bd1-175">下列程式碼會示範`ResourceAction`自訂宣告管理員所使用的類別。</span><span class="sxs-lookup"><span data-stu-id="94bd1-175">The following code shows the `ResourceAction` class used by the custom claims manager.</span></span>  
  
 [!code-csharp[WifClaimsBasedAuthorization#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/resourceaction.cs#1)]  
  
 <span data-ttu-id="94bd1-176">使用宣告授權管理員的原則由自訂`<policy>`下的項目[ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)項目。</span><span class="sxs-lookup"><span data-stu-id="94bd1-176">The policy used by the claims authorization manager is specified by custom `<policy>` elements under the [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element.</span></span> <span data-ttu-id="94bd1-177">這項原則會讀取並編譯<xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94bd1-177">This policy is read and compiled by the <xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A> method.</span></span> <span data-ttu-id="94bd1-178">在第一個原則中，主體必須擁有一個指定的宣告，以便在指定的資源上執行指定的動作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-178">In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</span></span> <span data-ttu-id="94bd1-179">在第二個原則中，主體必須擁有這兩個宣告能夠在指定的資源上執行指定的動作。</span><span class="sxs-lookup"><span data-stu-id="94bd1-179">In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</span></span> <span data-ttu-id="94bd1-180">在所有其他主體自動授與存取權，不論它擁有的宣告。</span><span class="sxs-lookup"><span data-stu-id="94bd1-180">In all others, the principal is automatically granted access regardless of the claims it possesses.</span></span>  
  
```  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthorizationManager type="ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary">  
      <policy resource="http://localhost:28491/Developers.aspx" action="GET">  
        <or>  
          <claim claimType="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" claimValue="developer" />  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
        </or>  
      </policy>  
      <policy resource="http://localhost:28491/Administrators.aspx" action="GET">  
        <and>  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
          <claim claimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" claimValue="USA" />  
        </and>  
      </policy>  
      <policy resource="http://localhost:28491/Default.aspx" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/Claims.aspx" action="GET">  
      </policy>  
    </claimsAuthorizationManager>  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>