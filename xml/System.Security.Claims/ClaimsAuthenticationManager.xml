<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimsAuthenticationManager.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519d0027b7a929a454eabf2814d8a208ed8f72ee0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19d0027b7a929a454eabf2814d8a208ed8f72ee0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>Defines the base implementation for a claims authentication manager.</source>
          <target state="translated">定義宣告驗證管理員的基底實作。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, validation, extension) to the claims collection in the incoming principal before execution reaches your application code.</source>
          <target state="translated">宣告驗證管理員在宣告處理提供處理管線中提供一個位置，用於在執行您的應用程式程式碼之前套用處理邏輯 (篩選、驗證、延伸) 至連入主體的宣告集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The claims authentication manager provides an extensibility point in the application’s claims processing pipeline that you can use to validate, filter, modify, incoming claims or inject new claims into the set of claims presented by a <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> before the RP application code is executed.</source>
          <target state="translated">驗證管理員提供的擴充點，在應用程式的宣告處理管線，您可以用來驗證、 篩選、 修改的宣告，連入宣告，或所提供的宣告集合中插入新的宣告<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>RP 之前應用程式程式碼會執行。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>You can even return a custom implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> if your RP application requires it.</source>
          <target state="translated">您甚至可以傳回的自訂實作<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>如果 RP 應用程式需要它。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The default implementation provided by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> class returns the claims in the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> unmodified; however, you can derive from this class and override the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> method to modify the claims in the <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> (or to return a custom <ph id="ph5">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>).</source>
          <target state="translated">所提供的預設實作<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph>類別中的宣告會傳回<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>不想修改; 不過，您可以從這個類別衍生，並覆寫<ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph>方法，以修改中的宣告<ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>（或傳回自訂<ph id="ph5">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>A typical reason for creating a custom claims authentication manager is to add, remove, or transform claims based on information that is only known by or is, perhaps, better maintained by the RP application.</source>
          <target state="translated">建立自訂宣告驗證管理員的一般原因是新增、 移除或轉換宣告，只以識別或，進一步或許會 RP 應用程式所維護的資訊為基礎。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>For example, a history of customer purchases in a shopping cart application might be kept in a data base maintained by the RP application and then added to the claims principal returned by the claims authentication manager based on the value of a name claim found in the incoming principal.</source>
          <target state="translated">比方說，在購物車應用程式中的客戶購買的歷程記錄可能會保留在資料基底 RP 應用程式所維護，再加入宣告驗證管理員中找到名稱宣告的值為基礎所傳回宣告主體連入的主體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>You can configure your application to use a <ph id="ph1">`ClaimsAuthenticationManager`</ph> either programmatically by using the <ph id="ph2">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> class or in configuration through the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> element (which is a child element of the <bpt id="p2">[</bpt><ph id="ph5">&amp;lt;</ph>identityConfiguration<ph id="ph6">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element).</source>
          <target state="translated">您可以設定應用程式使用<ph id="ph1">`ClaimsAuthenticationManager`</ph>是以程式設計方式利用<ph id="ph2">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph>類別或透過組態<bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept>元素 (這是子元素的<bpt id="p2">[</bpt> <ph id="ph5">&amp;lt;</ph>identityConfiguration<ph id="ph6">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept>項目)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>You can override the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method to provide processing for custom child elements of the <ph id="ph2">`&lt;claimsAuthenticationManager&gt;`</ph> element through which your custom manager can be configured.</source>
          <target state="translated">您可以覆寫<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph>方法以提供自訂的子系項目的處理<ph id="ph2">`&lt;claimsAuthenticationManager&gt;`</ph>您自訂的管理員可以透過此設定項目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The base implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> does not handle any child elements.</source>
          <target state="translated">基底實作<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph>不會處理任何子項目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>Configuring your application to use a claims authentication manager ensures that it will be invoked by Windows Identity Foundation (WIF) from the request pipeline.</source>
          <target state="translated">設定應用程式使用宣告驗證管理員，可確保，它會從叫用 Windows Identity Foundation (WIF) 要求管線。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The following code shows a simple claims authentication manager that adds a role claim to the incoming principal without performing any check on the incoming claims..</source>
          <target state="translated">下列程式碼顯示簡單的宣告驗證新增到內送的主體的角色宣告而不執行任何檢查連入宣告上的管理員...</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The following XML shows the <ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph> element.</source>
          <target state="translated">下列 XML 會說明<ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The address of the resource that is being requested.</source>
          <target state="translated">所要求的資源的位址。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The claims principal that represents the authenticated user that is attempting to access the resource.</source>
          <target state="translated">宣告主體，代表嘗試存取資源的驗證使用者。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>When overridden in a derived class, returns a <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> object consistent with the requirements of the RP application.</source>
          <target state="translated">在衍生類別中覆寫時，傳回符合 RP 應用程式需求的 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The default implementation does not modify the incoming <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>.</source>
          <target state="translated">預設實作不會修改連入的 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>A claims principal that contains any modifications necessary for the RP application.</source>
          <target state="translated">包含 RP 應用程式所需之任何修改的宣告主體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The default implementation returns the incoming claims principal unmodified.</source>
          <target state="translated">預設實作會傳回未修改的連入宣告主體。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> method is called from the request processing pipeline You can override this method in a derived class to filter, modify, or inject claims into the claims principal according to the policy of your RP application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph>方法呼叫從您可以覆寫這個方法來篩選在衍生類別中的要求處理管線，修改或插入宣告主體根據 RP 應用程式的原則中的宣告。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>Depending on the requirements of the RP application, you can even return a custom implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>.</source>
          <target state="translated">根據 RP 應用程式的需求，您甚至可以傳回的自訂實作<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">自訂組態項目。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each node in the list is of type <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">清單中的每個節點的型別為 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">在衍生類別中覆寫時，從 XML 載入自訂組態。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph>設定基礎結構會呼叫方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> element from the configuration file.</source>
          <target state="translated">呼叫這個方法時，<ph id="ph1">`nodelist`</ph>會包含最上層子項目的<bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept>從組態檔項目。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
          <target state="translated">每個這些項目，可能包含屬性或子項目，視您為您衍生的類別定義組態結構描述。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>If no child elements appear under the <ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph> element in the configuration file, this method is not called.</source>
          <target state="translated">如果沒有子項目出現在<ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph>組態檔中的項目，這個方法不會呼叫。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">預設實作會擲回<ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Override this method in your derived class to enable initialization of your claims authentication manager from a configuration file.</source>
          <target state="translated">覆寫此方法以啟用宣告驗證管理員從組態檔的初始化衍生類別中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For example, the configuration elements might describe a policy to be followed when authenticating a claims principal; or they might be used to point to an attribute store from which additional claims are to be added to the principal.</source>
          <target state="translated">例如，組態項目可能會描述驗證的宣告主體; 時應遵循的原則或者，他們可能會用來指向其他宣告要從中新增到主體的屬性存放區。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>