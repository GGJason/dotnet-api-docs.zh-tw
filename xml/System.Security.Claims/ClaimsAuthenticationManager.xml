<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19d0027b7a929a454eabf2814d8a208ed8f72ee0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488822" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>定義宣告驗證管理員的基底實作。 宣告驗證管理員在宣告處理提供處理管線中提供一個位置，用於在執行您的應用程式程式碼之前套用處理邏輯 (篩選、驗證、延伸) 至連入主體的宣告集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 驗證管理員提供的擴充點，在應用程式的宣告處理管線，您可以用來驗證、 篩選、 修改的宣告，連入宣告，或所提供的宣告集合中插入新的宣告<xref:System.Security.Claims.ClaimsPrincipal>RP 之前應用程式程式碼會執行。 您甚至可以傳回的自訂實作<xref:System.Security.Claims.ClaimsPrincipal>如果 RP 應用程式需要它。 所提供的預設實作<xref:System.Security.Claims.ClaimsAuthenticationManager>類別中的宣告會傳回<xref:System.Security.Claims.ClaimsPrincipal>不想修改; 不過，您可以從這個類別衍生，並覆寫<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>方法，以修改中的宣告<xref:System.Security.Claims.ClaimsPrincipal>（或傳回自訂<xref:System.Security.Claims.ClaimsPrincipal>).  
  
 建立自訂宣告驗證管理員的一般原因是新增、 移除或轉換宣告，只以識別或，進一步或許會 RP 應用程式所維護的資訊為基礎。 比方說，在購物車應用程式中的客戶購買的歷程記錄可能會保留在資料基底 RP 應用程式所維護，再加入宣告驗證管理員中找到名稱宣告的值為基礎所傳回宣告主體連入的主體。  
  
 您可以設定應用程式使用`ClaimsAuthenticationManager`是以程式設計方式利用<xref:System.IdentityModel.Configuration.IdentityConfiguration>類別或透過組態[ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)元素 (這是子元素的[ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)項目)。 您可以覆寫<xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>方法以提供自訂的子系項目的處理`<claimsAuthenticationManager>`您自訂的管理員可以透過此設定項目。 基底實作<xref:System.Security.Claims.ClaimsAuthenticationManager>不會處理任何子項目。  
  
 設定應用程式使用宣告驗證管理員，可確保，它會從叫用 Windows Identity Foundation (WIF) 要求管線。  
  
   
  
## Examples  
 下列程式碼顯示簡單的宣告驗證新增到內送的主體的角色宣告而不執行任何檢查連入宣告上的管理員...  
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 下列 XML 會說明`<claimsAuthenticationManager>`項目。  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">所要求的資源的位址。</param>
        <param name="incomingPrincipal">宣告主體，代表嘗試存取資源的驗證使用者。</param>
        <summary>在衍生類別中覆寫時，傳回符合 RP 應用程式需求的 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 物件。 預設實作不會修改連入的 <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</summary>
        <returns>包含 RP 應用程式所需之任何修改的宣告主體。 預設實作會傳回未修改的連入宣告主體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>方法呼叫從您可以覆寫這個方法來篩選在衍生類別中的要求處理管線，修改或插入宣告主體根據 RP 應用程式的原則中的宣告。 根據 RP 應用程式的需求，您甚至可以傳回的自訂實作<xref:System.Security.Claims.ClaimsPrincipal>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">自訂組態項目。 清單中的每個節點的型別為 <see cref="T:System.Xml.XmlElement" />。</param>
        <summary>在衍生類別中覆寫時，從 XML 載入自訂組態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>設定基礎結構會呼叫方法。 呼叫這個方法時，`nodelist`會包含最上層子項目的[ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)從組態檔項目。 每個這些項目，可能包含屬性或子項目，視您為您衍生的類別定義組態結構描述。 如果沒有子項目出現在`<claimsAuthenticationManager>`組態檔中的項目，這個方法不會呼叫。  
  
 預設實作會擲回<xref:System.NotImplementedException>。 覆寫此方法以啟用宣告驗證管理員從組態檔的初始化衍生類別中。 例如，組態項目可能會描述驗證的宣告主體; 時應遵循的原則或者，他們可能會用來指向其他宣告要從中新增到主體的屬性存放區。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>