<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WindowsImpersonationContext.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac542e6bacc15051f9c9ccfa564551d6710a45bec8b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42e6bacc15051f9c9ccfa564551d6710a45bec8b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>Represents the Windows user prior to an impersonation operation.</source>
          <target state="translated">表示模擬作業前的 Windows 使用者。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>This class reverts a user's identity after the user impersonates another user.</source>
          <target state="translated">使用者模擬另一位使用者之後，這個類別就會還原使用者的身分識別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此類型會實作<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>方法中的<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面 &gt; 主題。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>The following example demonstrates how to impersonate a user and then revert to the original identity.</source>
          <target state="translated">下列範例會示範如何模擬使用者，然後還原成原始身分識別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>Because Microsoft Windows 98 and Windows Millennium Edition platforms do not have users or user tokens, impersonation cannot take place on those platforms.</source>
          <target state="translated">Microsoft Windows 98 和 Windows Millennium Edition 平台並沒有使用者或使用者 token，因為模擬不能使用這些平台上的位置。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Security.Principal.WindowsImpersonationContext">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Always call <ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>永遠呼叫<ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph>您釋放最後一個參考之前<ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> object's <bpt id="p1">**</bpt>Finalize<ept id="p1">**</ept> method.</source>
          <target state="translated">否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<ph id="ph1">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>物件的<bpt id="p1">**</bpt>Finalize<ept id="p1">**</ept>方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsImpersonationContext" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>參考。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>小心不要參考物件已處置過的早期呼叫中<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsImpersonationContext.Undo">
          <source>Reverts the user context to the Windows user represented by this object.</source>
          <target state="translated">將使用者內容還原成由這個物件表示的 Windows 使用者。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Undo">
          <source>The following example shows how to impersonate a Windows identity using a specified user token.</source>
          <target state="translated">下列範例會示範如何模擬使用指定的使用者語彙基元使用 Windows 身分識別。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Principal.WindowsImpersonationContext.Undo">
          <source>An attempt is made to use this method for any purpose other than to revert identity to self.</source>
          <target state="translated">為了將識別還原成本身以外的其他因素而嘗試使用這個方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Principal.WindowsImpersonationContext.Undo">
          <source>Because Microsoft Windows 98 and Windows Millennium Edition platforms do not have users or user tokens, impersonation cannot take place on those platforms.</source>
          <target state="translated">Microsoft Windows 98 和 Windows Millennium Edition 平台並沒有使用者或使用者 token，因為模擬不能使用這些平台上的位置。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>