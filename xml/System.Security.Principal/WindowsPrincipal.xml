<Type Name="WindowsPrincipal" FullName="System.Security.Principal.WindowsPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="557e738279013f54ed693289355a9cba4b121a55" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsPrincipal : System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsPrincipal extends System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsPrincipal&#xA;Inherits ClaimsPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsPrincipal : System::Security::Claims::ClaimsPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6b6d6-101">可讓程式碼檢查 Windows 使用者的 Windows 群組成員資格。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b6d6-101">Enables code to check the Windows group membership of a Windows user.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6d6-102"><xref:System.Security.Principal.WindowsPrincipal>類別主要是用來檢查 Windows 使用者的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-102">The <xref:System.Security.Principal.WindowsPrincipal> class is primarily used to check the role of a Windows user.</span></span> <span data-ttu-id="6b6d6-103"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType>方法多載可讓您檢查使用不同的角色內容的使用者角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-103">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType> method overloads let you check the user role by using different role contexts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b6d6-104">下列範例示範如何使用<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-104">The following example demonstrates how to use the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method overloads.</span></span> <span data-ttu-id="6b6d6-105"><xref:System.Security.Principal.WindowsBuiltInRole>當做來源使用列舉識別的內建角色相對識別碼 (Rid)。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-105">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the relative identifiers (RIDs) that identify the built-in roles.</span></span> <span data-ttu-id="6b6d6-106">Rid 用來判斷目前主體的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-106">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsPrincipal (System.Security.Principal.WindowsIdentity ntIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity ntIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ntIdentity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsPrincipal(System::Security::Principal::WindowsIdentity ^ ntIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ntIdentity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="ntIdentity">
          <span data-ttu-id="6b6d6-107">物件，做為建構 <see cref="T:System.Security.Principal.WindowsPrincipal" /> 之新執行個體的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-107">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsPrincipal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b6d6-108">使用指定的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件，初始化 <see cref="T:System.Security.Principal.WindowsPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-108">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsPrincipal" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b6d6-109">下列範例會建立新<xref:System.Security.Principal.WindowsPrincipal>物件從目前<xref:System.Security.Principal.WindowsIdentity>物件。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-109">The following example creates a new <xref:System.Security.Principal.WindowsPrincipal> object from the current <xref:System.Security.Principal.WindowsIdentity> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6b6d6-110">
            <paramref name="ntIdentity" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-110">
              <paramref name="ntIdentity" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b6d6-111">取得這個主體中的所有 Windows 裝置宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-111">Gets all Windows device claims from this principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b6d6-112">這個主體中所有 Windows 裝置宣告的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-112">A collection of all Windows device claims from this principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b6d6-113">取得目前主要物件的識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-113">Gets the identity of the current principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b6d6-114">目前主體的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-114">The <see cref="T:System.Security.Principal.WindowsIdentity" /> object of the current principal.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b6d6-115">下列範例會擷取使用者的名稱使用<xref:System.Security.Principal.WindowsPrincipal.Identity%2A>屬性<xref:System.Security.Principal.WindowsPrincipal>物件。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-115">The following example retrieves the name of the user by using the <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> property of the <xref:System.Security.Principal.WindowsPrincipal> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b6d6-116">判斷目前的主體是否屬於指定的 Windows 使用者群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-116">Determines whether the current principal belongs to a specified Windows user group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6d6-117">有四個多載，這個方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-117">There are four overloads for this method.</span></span> <span data-ttu-id="6b6d6-118">基於效能考量，<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29>強烈建議多載。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-118">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is strongly recommended.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6b6d6-119"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> Windows 98 或 Windows Millennium Edition 上不支援方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-119">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (int rid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(int32 rid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (rid As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(int rid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rid">
          <span data-ttu-id="6b6d6-120">Windows 使用者群組的 RID 是用來檢查主體的成員狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-120">The RID of the Windows user group in which to check for the principal’s membership status.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b6d6-121">判斷目前的主體是否屬於具有指定相關識別元 (RID) 的 Windows 使用者群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-121">Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b6d6-122">如果目前主體是指定之 Windows 使用者群組的成員 (也就是，有特定角色)，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-122">
              <see langword="true" /> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6d6-123">在測試新建立的角色資訊，例如新的使用者或新的群組，請務必先登出再登入強制執行的網域內的角色資訊傳播。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-123">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="6b6d6-124">不這樣可能會導致<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>返回測試`false`。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-124">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="6b6d6-125">在 Windows 98 或 Windows Millennium Edition 上不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-125">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="6b6d6-126">基於效能考量，<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29>多載建議為偏好的多載，來判斷使用者的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-126">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b6d6-127">在 Windows Vista 中，使用者帳戶控制 (UAC) 會判斷使用者的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-127">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6b6d6-128">如果您是內建 Administrators 群組的成員，系統會將兩個執行階段存取語彙基元 (Token) 指派給您：標準使用者存取語彙基元及管理員存取語彙基元。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-128">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6b6d6-129">根據預設，您會屬於標準使用者角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-129">By default, you are in the standard user role.</span></span> <span data-ttu-id="6b6d6-130">當您嘗試執行需要系統管理權限的工作時，以動態方式可以將您的角色提高使用同意對話方塊中。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-130">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-131">執行的程式碼<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法不會顯示 [同意] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-131">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-132">即使您是內建的 Administrators 群組中，傳回 false，如果您是在標準使用者角色中，程式碼。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-132">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="6b6d6-133">您以滑鼠右鍵按一下應用程式圖示，指出您想要執行的系統管理員身分執行程式碼之前，您可以提高您的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-133">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="6b6d6-134">相對識別碼 (Rid) 是 Windows 使用者群組的安全性識別碼 (SID) 的元件，並支援以避免跨平台當地語系化問題。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-134">Relative identifiers (RIDs) are components of a Windows user group's security identifier (SID) and are supported to help prevent cross-platform localization issues.</span></span> <span data-ttu-id="6b6d6-135">許多使用者帳戶、 本機群組和全域群組有預設 RID 值在所有的 Windows 版本的常數。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-135">Many user accounts, local groups, and global groups have a default RID value that is constant across all versions of Windows.</span></span>  
  
 <span data-ttu-id="6b6d6-136">例如，BUILTIN\Administrators 角色 RID 是 0x220。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-136">For example, the RID for the BUILTIN\Administrators role is 0x220.</span></span> <span data-ttu-id="6b6d6-137">做為輸入的參數使用 0x220<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法會產生`true`將傳回目前的主體是否為系統管理員。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-137">Using 0x220 as the input parameter for the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method results in `true` being returned if the current principal is an administrator.</span></span>  
  
 <span data-ttu-id="6b6d6-138">下表列出預設 RID 值。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-138">The following tables list the default RID values.</span></span>  
  
|<span data-ttu-id="6b6d6-139">內建使用者</span><span class="sxs-lookup"><span data-stu-id="6b6d6-139">Built-in users</span></span>|<span data-ttu-id="6b6d6-140">RID</span><span class="sxs-lookup"><span data-stu-id="6b6d6-140">RID</span></span>|  
|---------------------|---------|  
|<span data-ttu-id="6b6d6-141">DOMAINNAME\Administrator</span><span class="sxs-lookup"><span data-stu-id="6b6d6-141">DOMAINNAME\Administrator</span></span>|<span data-ttu-id="6b6d6-142">0x1F4</span><span class="sxs-lookup"><span data-stu-id="6b6d6-142">0x1F4</span></span>|  
|<span data-ttu-id="6b6d6-143">DOMAINNAME\Guest</span><span class="sxs-lookup"><span data-stu-id="6b6d6-143">DOMAINNAME\Guest</span></span>|<span data-ttu-id="6b6d6-144">0x1F5</span><span class="sxs-lookup"><span data-stu-id="6b6d6-144">0x1F5</span></span>|  
  
|<span data-ttu-id="6b6d6-145">內建的全域群組</span><span class="sxs-lookup"><span data-stu-id="6b6d6-145">Built-in global groups</span></span>|<span data-ttu-id="6b6d6-146">RID</span><span class="sxs-lookup"><span data-stu-id="6b6d6-146">RID</span></span>|  
|-----------------------------|---------|  
|<span data-ttu-id="6b6d6-147">DOMAINNAME\Domain Admins</span><span class="sxs-lookup"><span data-stu-id="6b6d6-147">DOMAINNAME\Domain Admins</span></span>|<span data-ttu-id="6b6d6-148">0x200</span><span class="sxs-lookup"><span data-stu-id="6b6d6-148">0x200</span></span>|  
|<span data-ttu-id="6b6d6-149">DOMAINNAME\Domain 使用者</span><span class="sxs-lookup"><span data-stu-id="6b6d6-149">DOMAINNAME\Domain Users</span></span>|<span data-ttu-id="6b6d6-150">0x201</span><span class="sxs-lookup"><span data-stu-id="6b6d6-150">0x201</span></span>|  
|<span data-ttu-id="6b6d6-151">DOMAINNAME\Domain 客體</span><span class="sxs-lookup"><span data-stu-id="6b6d6-151">DOMAINNAME\Domain Guests</span></span>|<span data-ttu-id="6b6d6-152">0x202</span><span class="sxs-lookup"><span data-stu-id="6b6d6-152">0x202</span></span>|  
  
|<span data-ttu-id="6b6d6-153">內建的本機群組</span><span class="sxs-lookup"><span data-stu-id="6b6d6-153">Built-in local groups</span></span>|<span data-ttu-id="6b6d6-154">RID</span><span class="sxs-lookup"><span data-stu-id="6b6d6-154">RID</span></span>|  
|----------------------------|---------|  
|<span data-ttu-id="6b6d6-155">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="6b6d6-155">BUILTIN\Administrators</span></span>|<span data-ttu-id="6b6d6-156">0x220</span><span class="sxs-lookup"><span data-stu-id="6b6d6-156">0x220</span></span>|  
|<span data-ttu-id="6b6d6-157">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="6b6d6-157">BUILTIN\Users</span></span>|<span data-ttu-id="6b6d6-158">0x221</span><span class="sxs-lookup"><span data-stu-id="6b6d6-158">0x221</span></span>|  
|<span data-ttu-id="6b6d6-159">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="6b6d6-159">BUILTIN\Guests</span></span>|<span data-ttu-id="6b6d6-160">0x222</span><span class="sxs-lookup"><span data-stu-id="6b6d6-160">0x222</span></span>|  
|<span data-ttu-id="6b6d6-161">BUILTIN\Account 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-161">BUILTIN\Account Operators</span></span>|<span data-ttu-id="6b6d6-162">0x224</span><span class="sxs-lookup"><span data-stu-id="6b6d6-162">0x224</span></span>|  
|<span data-ttu-id="6b6d6-163">BUILTIN\Server 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-163">BUILTIN\Server Operators</span></span>|<span data-ttu-id="6b6d6-164">0x225</span><span class="sxs-lookup"><span data-stu-id="6b6d6-164">0x225</span></span>|  
|<span data-ttu-id="6b6d6-165">BUILTIN\Print 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-165">BUILTIN\Print Operators</span></span>|<span data-ttu-id="6b6d6-166">0x226</span><span class="sxs-lookup"><span data-stu-id="6b6d6-166">0x226</span></span>|  
|<span data-ttu-id="6b6d6-167">BUILTIN\Backup 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-167">BUILTIN\Backup Operators</span></span>|<span data-ttu-id="6b6d6-168">0x227</span><span class="sxs-lookup"><span data-stu-id="6b6d6-168">0x227</span></span>|  
|<span data-ttu-id="6b6d6-169">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="6b6d6-169">BUILTIN\Replicator</span></span>|<span data-ttu-id="6b6d6-170">0x228</span><span class="sxs-lookup"><span data-stu-id="6b6d6-170">0x228</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6b6d6-171">下列程式碼範例示範如何使用<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-171">The following code example demonstrates the use of  the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> methods.</span></span> <span data-ttu-id="6b6d6-172"><xref:System.Security.Principal.WindowsBuiltInRole>列舉適用於做為來源識別內建角色的 Rid。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-172">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the RIDs that identify the built-in roles.</span></span> <span data-ttu-id="6b6d6-173">Rid 用來判斷目前主體的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-173">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (sid As SecurityIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid">
          <span data-ttu-id="6b6d6-174">
            <see cref="T:System.Security.Principal.SecurityIdentifier" />，可唯一識別 Windows 使用者群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-174">A <see cref="T:System.Security.Principal.SecurityIdentifier" /> that uniquely identifies a Windows user group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b6d6-175">判斷目前的主體是否屬於具有指定安全性識別碼 (SID) 的 Windows 使用者群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-175">Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b6d6-176">如果目前的主體是指定 Windows 使用者群組的成員，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-176">
              <see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6d6-177"><xref:System.Security.Principal.SecurityIdentifier>唯一識別使用者或群組對 Windows 2000、 Windows Server 和 Windows XP 的實作。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-177">The <xref:System.Security.Principal.SecurityIdentifier> uniquely identifies a user or group on Windows 2000, Windows Server, and Windows XP implementations.</span></span> <span data-ttu-id="6b6d6-178">在測試新建立的角色資訊，例如新的使用者或新的群組，請務必先登出再登入強制執行的網域內的角色資訊傳播。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-178">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="6b6d6-179">不這樣可能會導致<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>返回測試`false`。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-179">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="6b6d6-180">在 Windows 98 或 Windows Millennium Edition 上不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-180">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b6d6-181">在 Windows Vista 中，使用者帳戶控制 (UAC) 會判斷使用者的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-181">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6b6d6-182">如果您是內建 Administrators 群組的成員，系統會將兩個執行階段存取語彙基元 (Token) 指派給您：標準使用者存取語彙基元及管理員存取語彙基元。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-182">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6b6d6-183">根據預設，您會屬於標準使用者角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-183">By default, you are in the standard user role.</span></span> <span data-ttu-id="6b6d6-184">當您嘗試執行需要系統管理權限的工作時，以動態方式可以將您的角色提高使用同意對話方塊中。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-184">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-185">執行的程式碼<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法不會顯示 [同意] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-185">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-186">即使您是內建的 Administrators 群組中，傳回 false，如果您是在標準使用者角色中，程式碼。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-186">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="6b6d6-187">您以滑鼠右鍵按一下應用程式圖示，指出您想要執行的系統管理員身分執行程式碼之前，您可以提高您的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-187">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="6b6d6-188">基於效能考量，這是偏好的多載，來判斷使用者的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-188">For performance reasons, this is the preferable overload to determine a user's role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b6d6-189">下列程式碼範例示範如何使用<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-189">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6b6d6-190"><xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid>列舉值用來判斷目前的主體是否為系統管理員。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-190">The <xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid> enumeration value is used to determine whether the current principal is an administrator.</span></span> <span data-ttu-id="6b6d6-191">完整的程式碼範例，請參閱<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-191">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#5)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6b6d6-192">
            <paramref name="sid" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-192">
              <paramref name="sid" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="6b6d6-193">Windows 會傳回 Win32 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-193">Windows returned a Win32 error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">
          <span data-ttu-id="6b6d6-194">其中一個 <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-194">One of the <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b6d6-195">判斷目前的主體是否屬於具有指定 <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 的 Windows 使用者群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-195">Determines whether the current principal belongs to the Windows user group with the specified <see cref="T:System.Security.Principal.WindowsBuiltInRole" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b6d6-196">如果目前的主體是指定 Windows 使用者群組的成員，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-196">
              <see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6d6-197">在測試新建立的角色資訊，例如新的使用者或新的群組，請務必先登出再登入強制執行的網域內的角色資訊傳播。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-197">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="6b6d6-198">不這樣可能會導致<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>返回測試`false`。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-198">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="6b6d6-199">在 Windows 98 或 Windows Millennium Edition 上不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-199">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="6b6d6-200">基於效能考量，<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29>多載建議為偏好的多載，來判斷使用者的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-200">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b6d6-201">在 Windows Vista 中，使用者帳戶控制 (UAC) 會判斷使用者的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-201">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6b6d6-202">如果您是內建 Administrators 群組的成員，系統會將兩個執行階段存取語彙基元 (Token) 指派給您：標準使用者存取語彙基元及管理員存取語彙基元。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-202">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6b6d6-203">根據預設，您會屬於標準使用者角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-203">By default, you are in the standard user role.</span></span> <span data-ttu-id="6b6d6-204">當您嘗試執行需要系統管理權限的工作時，以動態方式可以將您的角色提高使用同意對話方塊中。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-204">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-205">執行的程式碼<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法不會顯示 [同意] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-205">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-206">即使您是內建的 Administrators 群組中，傳回 false，如果您是在標準使用者角色中，程式碼。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-206">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="6b6d6-207">您以滑鼠右鍵按一下應用程式圖示，指出您想要執行的系統管理員身分執行程式碼之前，您可以提高您的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-207">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b6d6-208">下列範例會使用<xref:System.Security.Principal.WindowsBuiltInRole>列舉用來判斷目前的主體是否為<xref:System.Security.Principal.WindowsBuiltInRole.Administrator>。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-208">The following example uses the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used to determine whether the current principal is an <xref:System.Security.Principal.WindowsBuiltInRole.Administrator>.</span></span> <span data-ttu-id="6b6d6-209">完整的程式碼範例，請參閱<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-209">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#4)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6b6d6-210">
            <paramref name="role" /> 不是有效的 <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-210">
              <paramref name="role" /> is not a valid <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">
          <span data-ttu-id="6b6d6-211">要檢查其成員資格之 Windows 使用者群組的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-211">The name of the Windows user group for which to check membership.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b6d6-212">判斷目前的主體是否屬於具有指定名稱的 Windows 使用者群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-212">Determines whether the current principal belongs to the Windows user group with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b6d6-213">如果目前的主體是指定 Windows 使用者群組的成員，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-213">
              <see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6d6-214">在測試新建立的角色資訊，例如新的使用者或新的群組，請務必先登出再登入強制執行的網域內的角色資訊傳播。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-214">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="6b6d6-215">不這樣可能會導致<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>返回測試`false`。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-215">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="6b6d6-216">在 Windows 98 或 Windows Millennium Edition 上不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-216">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="6b6d6-217">基於效能考量，<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29>多載建議為偏好的多載，來判斷使用者的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-217">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b6d6-218">在 Windows Vista 中，使用者帳戶控制 (UAC) 會判斷使用者的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-218">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6b6d6-219">如果您是內建 Administrators 群組的成員，系統會將兩個執行階段存取語彙基元 (Token) 指派給您：標準使用者存取語彙基元及管理員存取語彙基元。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-219">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6b6d6-220">根據預設，您會屬於標準使用者角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-220">By default, you are in the standard user role.</span></span> <span data-ttu-id="6b6d6-221">當您嘗試執行需要系統管理權限的工作時，以動態方式可以將您的角色提高使用同意對話方塊中。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-221">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-222">執行的程式碼<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法不會顯示 [同意] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-222">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="6b6d6-223">即使您是內建的 Administrators 群組中，傳回 false，如果您是在標準使用者角色中，程式碼。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-223">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="6b6d6-224">您以滑鼠右鍵按一下應用程式圖示，指出您想要執行的系統管理員身分執行程式碼之前，您可以提高您的權限。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-224">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="6b6d6-225">對於內建的角色，`role`字串的格式應該是 「 內建\\*RoleNameHere*"。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-225">For built-in roles, the `role` string should be in the form "BUILTIN\\*RoleNameHere*".</span></span> <span data-ttu-id="6b6d6-226">例如，若要測試的 Windows 系統管理員角色的成員資格，字串，代表角色應該是"BUILTIN\Administrators"。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-226">For example, to test for membership in the Windows administrator role, the string representing the role should be "BUILTIN\Administrators".</span></span> <span data-ttu-id="6b6d6-227">請注意，可能需要反斜線逸出。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-227">Note that the backslash might need to be escaped.</span></span> <span data-ttu-id="6b6d6-228">下表列出的內建的角色。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-228">The following table lists the built-in roles.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b6d6-229">內建角色格式字串的拼字不同於使用中的拼字<xref:System.Security.Principal.WindowsBuiltInRole>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-229">The spelling for the BUILTIN roles in string format differs from the spelling used in the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration.</span></span> <span data-ttu-id="6b6d6-230">例如，在列舉中的系統管理員的拼字是 「 系統管理員 」 沒有 「 系統管理員 」。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-230">For example, the spelling for an administrator in the enumeration is "Administrator", not "Administrators".</span></span> <span data-ttu-id="6b6d6-231">當使用這個多載，使用下表中角色拼字正確。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-231">When using this overload, use the spelling for the role from the following table.</span></span>  
  
|<span data-ttu-id="6b6d6-232">內建的本機群組</span><span class="sxs-lookup"><span data-stu-id="6b6d6-232">Built-in local groups</span></span>|  
|----------------------------|  
|<span data-ttu-id="6b6d6-233">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="6b6d6-233">BUILTIN\Administrators</span></span>|  
|<span data-ttu-id="6b6d6-234">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="6b6d6-234">BUILTIN\Users</span></span>|  
|<span data-ttu-id="6b6d6-235">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="6b6d6-235">BUILTIN\Guests</span></span>|  
|<span data-ttu-id="6b6d6-236">BUILTIN\Account 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-236">BUILTIN\Account Operators</span></span>|  
|<span data-ttu-id="6b6d6-237">BUILTIN\Server 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-237">BUILTIN\Server Operators</span></span>|  
|<span data-ttu-id="6b6d6-238">BUILTIN\Print 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-238">BUILTIN\Print Operators</span></span>|  
|<span data-ttu-id="6b6d6-239">BUILTIN\Backup 運算子</span><span class="sxs-lookup"><span data-stu-id="6b6d6-239">BUILTIN\Backup Operators</span></span>|  
|<span data-ttu-id="6b6d6-240">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="6b6d6-240">BUILTIN\Replicator</span></span>|  
  
 <span data-ttu-id="6b6d6-241">特定電腦角色`role`字串的格式應該是"MachineName\\*RoleNameHere*"。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-241">For machine-specific roles, the `role` string should be in the form "MachineName\\*RoleNameHere*".</span></span>  
  
 <span data-ttu-id="6b6d6-242">針對特定角色，`role`的格式應該為字串"DomainName\\*RoleNameHere*"; 例如， `"SomeDomain\Domain Users`"。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-242">For domain-specific roles, the `role` string should be in the form "DomainName\\*RoleNameHere*"; for example, `"SomeDomain\Domain Users`".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b6d6-243">在.NET Framework 1.0 版，`role`參數會區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-243">In the .NET Framework version 1.0, the `role` parameter is case-sensitive.</span></span> <span data-ttu-id="6b6d6-244">在.NET Framework 1.1 和更新，版本`role`參數不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-244">In the .NET Framework version 1.1 and later, the `role` parameter is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b6d6-245">下列程式碼範例示範如何使用<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-245">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6b6d6-246">字串`BUILTIN\Administrators`和`BUILTIN\Users`用來判斷目前的主體是否為系統管理員或使用者。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-246">The strings `BUILTIN\Administrators` and `BUILTIN\Users` are used to determine whether the current principal is an administrator or a user.</span></span> <span data-ttu-id="6b6d6-247">完整的程式碼範例，請參閱<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="6b6d6-247">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#3)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6b6d6-248">提供操作主體物件的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-248">for the ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="6b6d6-249">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-249">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b6d6-250">取得這個主體中的所有 Windows 使用者宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-250">Gets all Windows user claims from this principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b6d6-251">這個主體中所有 Windows 使用者宣告的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b6d6-251">A collection of all Windows user claims from this principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>