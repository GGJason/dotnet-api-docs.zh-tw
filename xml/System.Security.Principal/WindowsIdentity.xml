<Type Name="WindowsIdentity" FullName="System.Security.Principal.WindowsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46a26e7b858fae3931e6bdee1592e205b58446ff" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52612028" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsIdentity extends System.Security.Claims.ClaimsIdentity implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsIdentity&#xA;Inherits ClaimsIdentity&#xA;Implements IDeserializationCallback, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsIdentity : System::Security::Claims::ClaimsIdentity, IDisposable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WindowsIdentity = class&#xA;    inherit ClaimsIdentity&#xA;    interface IIdentity&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsIdentity</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d0c9e-101">表示 Windows 使用者。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0c9e-101">Represents a Windows user.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-102">呼叫<xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A>方法用來建立<xref:System.Security.Principal.WindowsIdentity>物件，表示目前的使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-102">Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0c9e-103">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="d0c9e-104">當您完成使用型別時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="d0c9e-105">若要直接處置型別，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="d0c9e-106">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="d0c9e-107">如需詳細資訊，請參閱 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-108">下列範例示範如何使用之成員的<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-108">The following example shows the use of members of <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  <span data-ttu-id="d0c9e-109">如需範例，示範如何取得 Windows 帳戶語彙基元，透過呼叫 unmanaged 的 Win32`LogonUser`函式，並且使用該權杖模擬另一位使用者，請參閱<xref:System.Security.Principal.WindowsImpersonationContext>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-109">For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-110">初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-110">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity userToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="d0c9e-111">使此程式碼為其執行之使用者的帳戶語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-111">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-112">為指定 Windows 帳戶語彙基元所表示的使用者，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-112">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-113">下表顯示的執行個體的初始屬性值<xref:System.Security.Principal.WindowsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-113">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="d0c9e-114">屬性</span><span class="sxs-lookup"><span data-stu-id="d0c9e-114">Property</span></span>|<span data-ttu-id="d0c9e-115">Initial value</span><span class="sxs-lookup"><span data-stu-id="d0c9e-115">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-116">您可以擷取所代表的語彙基元`userToken`藉由呼叫 unmanaged 程式碼，例如 Win32 API`LogonUser`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-116">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="d0c9e-117">要釋放`userToken`藉由呼叫 Win32 API`CloseHandle`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-117">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="d0c9e-118">如需有關呼叫 unmanaged 程式碼的詳細資訊，請參閱 <<c0> [ 使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-118">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0c9e-119">
            <paramref name="userToken" /> 為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-119">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="d0c9e-120">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-120">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-121">
            <paramref name="userToken" /> 對模擬而言是重複且無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-121">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-122">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-122">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-123">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-123">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-124">發生 Win32 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-124">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-125">提供存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-125">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-126">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (identity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WindowsIdentity(System::Security::Principal::WindowsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Security.Principal.WindowsIdentity -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="d0c9e-127">物件，做為建構 <see cref="T:System.Security.Principal.WindowsIdentity" /> 之新執行個體的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-127">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsIdentity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-128">使用指定的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-128">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity sUserPrincipalName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName">
          <span data-ttu-id="d0c9e-129">使此程式碼為其執行的使用者 UPN。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-129">The UPN for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-130">為指定使用者主要名稱 (UPN) 所表示的使用者，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-130">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-131">UPN 格式*使用者名稱*@*domainname*.com，也就是說，電子郵件地址。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-131">A UPN has the format *username*@*domainname*.com, in other words, an email address.</span></span> <span data-ttu-id="d0c9e-132">中所識別的 UPN`sUserPrincipalName`用來擷取該使用者透過 Win32 API 的權杖`LsaLogonUser`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-132">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="d0c9e-133">接著該語彙基元用來識別使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-133">In turn that token is used to identify the user.</span></span> <span data-ttu-id="d0c9e-134">因為無法使用所提供的 UPN 來登入，可能會傳回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-134">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-135">這個建構函式被用於只能在已加入至 Windows Server 2003 或更新版本的網域的電腦上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-135">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="d0c9e-136">例外狀況會擲回先前的網域類型。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-136">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="d0c9e-137">這項限制是因為，這個建構函式會使用[KERB_S4U_LOGON 結構](https://go.microsoft.com/fwlink/?LinkId=143533)，最初導入 Windows Server 2003 中。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-137">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](https://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0c9e-138">Windows 會傳回 Windows NT 狀態碼 STATUS_ACCESS_DENIED。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-138">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="d0c9e-139">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-139">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-140">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-140">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-141">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-141">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-142">電腦未附加到 Windows 2003 或更新版本的網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-142">The computer is not attached to a Windows 2003 or later domain.</span>
          </span>
          <span data-ttu-id="d0c9e-143">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-143">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-144">電腦未執行 Windows 2003 (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-144">The computer is not running Windows 2003 or later.</span>
          </span>
          <span data-ttu-id="d0c9e-145">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-145">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-146">使用者不是電腦所附加之網域的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-146">The user is not a member of the domain the computer is attached to.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-147">提供存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-147">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-148">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-148">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="d0c9e-149">使此程式碼為其執行之使用者的帳戶語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-149">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d0c9e-150">(僅供內部使用。)用來識別使用者的驗證類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-150">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-151">為指定 Windows 帳戶語彙基元和指定驗證 (Authentication) 類型所表示的使用者，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-151">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token and the specified authentication type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-152">下表顯示的執行個體的初始屬性值<xref:System.Security.Principal.WindowsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-152">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="d0c9e-153">屬性</span><span class="sxs-lookup"><span data-stu-id="d0c9e-153">Property</span></span>|<span data-ttu-id="d0c9e-154">Initial value</span><span class="sxs-lookup"><span data-stu-id="d0c9e-154">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="d0c9e-155">值`type`參數用來設定<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>參數。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-155">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="d0c9e-156">如果`type`是`null`，安全性系統組<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>要`Negotiate`Windows Vista 和更新版本的 Windows 作業系統中，並在`Kerberos`舊版 Windows 作業系統上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-156">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="d0c9e-157">安全性系統不會使用此值;這是僅供內部使用。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-157">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-158">您可以擷取所代表的語彙基元`userToken`藉由呼叫 unmanaged 程式碼，例如 Win32 API`LogonUser`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-158">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="d0c9e-159">要釋放`userToken`藉由呼叫 Win32 API`CloseHandle`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-159">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="d0c9e-160">如需有關呼叫 unmanaged 程式碼的詳細資訊，請參閱 <<c0> [ 使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-160">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-161">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A>建構函式建立的新執行個體<xref:System.Security.Principal.WindowsIdentity>使用者指定的 Windows 帳戶語彙基元和指定的驗證類型所代表的類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-161">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type.</span></span> <span data-ttu-id="d0c9e-162">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-162">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0c9e-163">
            <paramref name="userToken" /> 為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-163">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="d0c9e-164">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-164">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-165">
            <paramref name="userToken" /> 對模擬而言是重複且無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-165">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-166">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-166">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-167">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-167">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-168">發生 Win32 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-168">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-169">提供存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-169">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-170">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-170">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="d0c9e-171">包含使用者帳戶資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-171">The object containing the account information for the user.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d0c9e-172">表示資料流特性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-172">An object that indicates the stream characteristics.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-173">為 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 資料流中之資訊所表示的使用者，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-173">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by information in a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d0c9e-174">無法跨處理序序列化 <see cref="T:System.Security.Principal.WindowsIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-174">A <see cref="T:System.Security.Principal.WindowsIdentity" /> cannot be serialized across processes.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-175">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-175">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-176">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-176">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-177">發生 Win32 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-177">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-178">操作主體物件的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-178">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="d0c9e-179">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-179">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (sUserPrincipalName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName">
          <span data-ttu-id="d0c9e-180">使此程式碼為其執行的使用者 UPN。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-180">The UPN for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d0c9e-181">(僅供內部使用。)用來識別使用者的驗證類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-181">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-182">為指定使用者主要名稱 (UPN) 和指定驗證類型所代表的使用者，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-182">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-183">值`type`參數用來設定<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>參數。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-183">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="d0c9e-184">如果`type`是`null`，安全性系統組<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>要`Negotiate`Windows Vista 和更新版本的 Windows 作業系統中，並在`Kerberos`舊版 Windows 作業系統上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-184">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="d0c9e-185">安全性系統不會使用此值;這是僅供內部使用。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-185">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="d0c9e-186">中所識別的 UPN`sUserPrincipalName`用來擷取該使用者透過 Win32 API 的權杖`LsaLogonUser`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-186">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="d0c9e-187">接著該語彙基元用來識別使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-187">In turn that token is used to identify the user.</span></span> <span data-ttu-id="d0c9e-188">因為無法使用所提供的 UPN 來登入，可能會傳回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-188">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-189">這個建構函式被用於只能在已加入至 Windows Server 2003 或更新版本的網域的電腦上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-189">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="d0c9e-190">例外狀況會擲回先前的網域類型。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-190">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="d0c9e-191">這項限制是因為，這個建構函式會使用[KERB_S4U_LOGON 結構](https://go.microsoft.com/fwlink/?LinkId=143533)，最初導入 Windows Server 2003 中。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-191">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](https://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0c9e-192">Windows 會傳回 Windows NT 狀態碼 STATUS_ACCESS_DENIED。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-192">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="d0c9e-193">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-193">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-194">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-194">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-195">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-195">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-196">電腦未附加到 Windows 2003 或更新版本的網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-196">The computer is not attached to a Windows 2003 or later domain.</span>
          </span>
          <span data-ttu-id="d0c9e-197">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-197">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-198">電腦未執行 Windows 2003 (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-198">The computer is not running Windows 2003 or later.</span>
          </span>
          <span data-ttu-id="d0c9e-199">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-199">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-200">使用者不是電腦所附加之網域的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-200">The user is not a member of the domain the computer is attached to.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-201">提供存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-201">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-202">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-202">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="d0c9e-203">使此程式碼為其執行之使用者的帳戶語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-203">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d0c9e-204">(僅供內部使用。)用來識別使用者的驗證類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-204">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <param name="acctType">
          <span data-ttu-id="d0c9e-205">其中一個列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-205">One of the enumeration values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-206">為指定 Windows 帳戶語彙基元、指定驗證類型和指定 Windows 帳戶類型所代表使用者，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-206">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-207">下表顯示的執行個體的初始屬性值<xref:System.Security.Principal.WindowsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-207">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="d0c9e-208">屬性</span><span class="sxs-lookup"><span data-stu-id="d0c9e-208">Property</span></span>|<span data-ttu-id="d0c9e-209">初始值</span><span class="sxs-lookup"><span data-stu-id="d0c9e-209">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="d0c9e-210">值`type`參數用來設定<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>參數。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-210">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="d0c9e-211">如果`type`是`null`，安全性系統組<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>要`Negotiate`Windows Vista 和更新版本的 Windows 作業系統中，並在`Kerberos`舊版 Windows 作業系統上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-211">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="d0c9e-212">安全性系統不會使用此值;這是僅供內部使用。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-212">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-213">您可以擷取所代表的語彙基元`userToken`藉由呼叫 unmanaged 程式碼，例如 Win32 API`LogonUser`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-213">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="d0c9e-214">要釋放`userToken`藉由呼叫 Win32 API`CloseHandle`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-214">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="d0c9e-215">如需有關呼叫 unmanaged 程式碼的詳細資訊，請參閱 <<c0> [ 使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-215">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-216">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A>建構函式建立的新執行個體<xref:System.Security.Principal.WindowsIdentity>使用者指定的 Windows 帳戶語彙基元、 指定的驗證類型和指定的 Windows 帳戶類型所代表的類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-216">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span> <span data-ttu-id="d0c9e-217">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-217">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0c9e-218">
            <paramref name="userToken" /> 為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-218">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="d0c9e-219">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-219">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-220">
            <paramref name="userToken" /> 對模擬而言是重複且無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-220">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-221">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-221">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-222">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-222">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-223">發生 Win32 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-223">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-224">提供存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-224">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-225">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType * bool -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="d0c9e-226">使此程式碼為其執行之使用者的帳戶語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-226">The account token for the user on whose behalf the code is running.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d0c9e-227">(僅供內部使用。)用來識別使用者的驗證類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-227">(Informational use only.) The type of authentication used to identify the user.</span>
          </span>
        </param>
        <param name="acctType">
          <span data-ttu-id="d0c9e-228">其中一個列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-228">One of the enumeration values.</span>
          </span>
        </param>
        <param name="isAuthenticated">
          <span data-ttu-id="d0c9e-229">
            <see langword="true" /> 表示要驗證使用者，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-229">
              <see langword="true" /> to indicate that the user is authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-230">為指定 Windows 帳戶語彙基元、指定驗證類型、指定 Windows 帳戶類型和指定驗證狀態所代表的使用者，初始化 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-230">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-231">值`type`參數用來設定<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>參數。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-231">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="d0c9e-232">如果`type`是`null`，安全性系統組<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>要`Negotiate`Windows Vista 和更新版本的 Windows 作業系統中，並在`Kerberos`舊版 Windows 作業系統上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-232">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="d0c9e-233">安全性系統不會使用此值;這是僅供內部使用。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-233">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="d0c9e-234">您可以擷取所代表的語彙基元`userToken`藉由呼叫 unmanaged 程式碼，例如 Win32 API`LogonUser`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-234">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="d0c9e-235">要釋放`userToken`藉由呼叫 Win32 API`CloseHandle`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-235">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="d0c9e-236">如需有關呼叫 unmanaged 程式碼的詳細資訊，請參閱 <<c0> [ 使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-236">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-237">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A>建構函式建立的新執行個體<xref:System.Security.Principal.WindowsIdentity>所指定的 Windows 帳戶語彙基元、 指定的驗證類型、 指定的 Windows 帳戶類型，表示使用者的類別，指定的驗證狀態。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-237">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span> <span data-ttu-id="d0c9e-238">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-238">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0c9e-239">
            <paramref name="userToken" /> 為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-239">
              <paramref name="userToken" /> is 0.</span>
          </span>
          <span data-ttu-id="d0c9e-240">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-240">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-241">
            <paramref name="userToken" /> 對模擬而言是重複且無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-241">
              <paramref name="userToken" /> is duplicated and invalid for impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-242">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-242">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-243">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-243">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-244">發生 Win32 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-244">A Win32 error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-245">提供存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-245">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-246">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessToken As SafeAccessTokenHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ AccessToken { Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Usage="System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeAccessTokenHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-247">取得這個 <see cref="T:System.Security.Principal.WindowsIdentity" /> 執行個體的這個 <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-247">Gets this <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> for this <see cref="T:System.Security.Principal.WindowsIdentity" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-248">傳回 <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-248">Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public override sealed string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-249">取得用來識別使用者的驗證類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-249">Gets the type of authentication used to identify the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-250">用來識別使用者的驗證類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-250">The type of authentication used to identify the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-251">這個屬性僅提供資訊;它不是由安全性系統。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-251">This property is informational; it is not used by the security system.</span></span> <span data-ttu-id="d0c9e-252">在 Windows Vista 和更新版本的 Windows 作業系統上，這個屬性的預設值是`Negotiate`，從中進行選擇最佳的安全性支援提供者 (SSP) 根據客戶設定的安全性原則。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-252">On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy.</span></span> <span data-ttu-id="d0c9e-253">舊版的 Windows 作業系統的預設屬性值是`Kerberos`。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-253">The default property value for earlier versions of the Windows operating system is `Kerberos`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0c9e-254">Windows 會傳回 Windows NT 狀態碼 STATUS_ACCESS_DENIED。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-254">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="d0c9e-255">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-255">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-256">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-256">The caller does not have the correct permissions.</span>
          </span>
          <span data-ttu-id="d0c9e-257">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-257">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-258">電腦未附加到 Windows 2003 或更新版本的網域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-258">The computer is not attached to a Windows 2003 or later domain.</span>
          </span>
          <span data-ttu-id="d0c9e-259">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-259">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-260">電腦未執行 Windows 2003 (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-260">The computer is not running Windows 2003 or later.</span>
          </span>
          <span data-ttu-id="d0c9e-261">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-261">-or-</span>
          </span>
          <span data-ttu-id="d0c9e-262">使用者不是電腦所附加之網域的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-262">The user is not a member of the domain the computer is attached to.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__95))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-263">針對這個 Windows 識別所表示的使用者取得所有宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-263">Gets all claims for the user represented by this Windows identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-264">這個 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件的宣告集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-264">A collection of claims for this <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="windowsIdentity.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-265">建立目前執行個體複本的新物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-265">Creates a new  object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-266">目前執行個體的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-266">A copy of the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberSignature Language="F#" Value="val mutable DefaultIssuer : string" Usage="System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-267">識別預設 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 簽發者的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-267">Identifies the name of the default <see cref="T:System.Security.Claims.ClaimsIdentity" /> issuer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-268">取得具有 <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> 屬性索引鍵的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-268">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-269">具有 <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> 屬性索引鍵之宣告的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-269">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-270">釋放 <see cref="T:System.Security.Principal.WindowsIdentity" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-270">Releases the resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="windowsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-271">釋放 <see cref="T:System.Security.Principal.WindowsIdentity" /> 所使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-271">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-272"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Security.Principal.WindowsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-272">Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="d0c9e-273"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 方法會將 <xref:System.Security.Principal.WindowsIdentity> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-273">The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state.</span></span> <span data-ttu-id="d0c9e-274">之後呼叫<xref:System.Security.Principal.WindowsIdentity.Dispose%2A>，您必須釋放所有的參考<xref:System.Security.Principal.WindowsIdentity>讓記憶體回收行程可以回收記憶體，<xref:System.Security.Principal.WindowsIdentity>所佔用。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-274">After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying.</span></span> <span data-ttu-id="d0c9e-275">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-275">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-276">在您釋放最後一個 <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Security.Principal.WindowsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-276">Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="d0c9e-277">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Security.Principal.WindowsIdentity> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-277">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="windowsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d0c9e-278">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-278">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-279">釋放 <see cref="T:System.Security.Principal.WindowsIdentity" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-279">Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-280">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-280">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d0c9e-281">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-281">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d0c9e-282"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-282"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d0c9e-283">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Security.Principal.WindowsIdentity> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-283">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references.</span></span> <span data-ttu-id="d0c9e-284">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-284">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d0c9e-285">
              <see langword="Dispose" /> 可以被其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-285">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="d0c9e-286">當覆寫<see langword="Dispose(Boolean)" />小心不要參考先前處置好的呼叫中的物件<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-286">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="d0c9e-287">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-287">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="d0c9e-288">如需詳細資訊<see langword="Dispose" />並<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-288">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WindowsIdentity ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="windowsIdentity.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-289">將目前執行個體所持有的資源釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-289">Releases the resources held by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="d0c9e-290">這個成員會在.NET Framework 2.0 版及後續版本中移除。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-290">This member is removed in the .NET Framework version 2.0 and subsequent versions.</span></span>


<span data-ttu-id="d0c9e-291">應用程式程式碼不會呼叫這個方法。它會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-291">Application code does not call this method; it is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled.</span></span> <span data-ttu-id="d0c9e-292">如需詳細資訊，請參閱 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 與 <xref:System.Object.Finalize>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-292">For more information, see <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> and <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="d0c9e-293">這個方法會覆寫 <xref:System.Object.Finalize>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-293">This method overrides <xref:System.Object.Finalize>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnonymous">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetAnonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetAnonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAnonymous () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetAnonymous();" />
      <MemberSignature Language="F#" Value="static member GetAnonymous : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetAnonymous " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-294">傳回可在程式碼中用來做為代表匿名使用者之 Sentinel 值的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-294">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that you can use as a sentinel value in your code to represent an anonymous user.</span>
          </span>
          <span data-ttu-id="d0c9e-295">屬性值不代表 Windows 作業系統所使用的內建匿名識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-295">The property value does not represent the built-in anonymous identity used by the Windows operating system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-296">物件，表示匿名使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-296">An object that represents an anonymous user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-297">這個屬性會傳回空<xref:System.Security.Principal.WindowsIdentity>物件，可讓您將作業視為匿名。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-297">This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous.</span></span> <span data-ttu-id="d0c9e-298">屬性值未對應到 Windows 的匿名使用者，並不能用於模擬。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-298">The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</span></span> <span data-ttu-id="d0c9e-299">此外，請注意這個屬性所傳回的身分識別不是靜態的;每次呼叫<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>傳回不同的匿名識別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-299">Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.</span></span>  
  
 <span data-ttu-id="d0c9e-300">您可以使用<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>屬性來偵測的傳回值<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-300">You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span></span> <span data-ttu-id="d0c9e-301">不過，<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>會偵測 Windows 匿名身分識別，並由這個方法傳回匿名身分識別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-301">However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method.</span></span> <span data-ttu-id="d0c9e-302">若要使用的第二個身分識別，快取<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>傳回值，而不是依賴<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-302">To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-303">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>方法來傳回<xref:System.Security.Principal.WindowsIdentity>物件，表示匿名 Windows 使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-303">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user.</span></span> <span data-ttu-id="d0c9e-304">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-304">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-305">傳回表示目前 Windows 使用者的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-305">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent();" />
      <MemberSignature Language="F#" Value="static member GetCurrent : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-306">傳回表示目前 Windows 使用者的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-306">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-307">物件，表示目前的使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-307">An object that represents the current user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c9e-308">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A>方法來傳回<xref:System.Security.Principal.WindowsIdentity>物件，表示目前的 Windows 使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-308">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user.</span></span> <span data-ttu-id="d0c9e-309">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-309">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-310">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-310">The caller does not have the correct permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-311">操作主體物件的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-311">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="d0c9e-312">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-312">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(bool ifImpersonating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (ifImpersonating As Boolean) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(bool ifImpersonating);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : bool -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent ifImpersonating" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifImpersonating" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ifImpersonating">
          <span data-ttu-id="d0c9e-313">
            <see langword="true" /> 表示只有當執行緒目前正在模擬時才會傳回 <see cref="T:System.Security.Principal.WindowsIdentity" />；<see langword="false" /> 則表示如果執行緒目前正在模擬時，會傳回執行緒的 <see cref="T:System.Security.Principal.WindowsIdentity" />，或執行緒目前不是正在模擬時，則會傳回處理程序的 <see cref="T:System.Security.Principal.WindowsIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-313">
              <see langword="true" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> only if the thread is currently impersonating; <see langword="false" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the thread if it is impersonating or the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the process if the thread is not currently impersonating.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-314">傳回表示執行緒或處理程序之 Windows 識別的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件，視 <paramref name="ifImpersonating" /> 參數的值而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-314">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the Windows identity for either the thread or the process, depending on the value of the <paramref name="ifImpersonating" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-315">物件，表示 Windows 使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-315">An object that represents a Windows user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-316">如果`ifImpersonating`已`true`和執行緒不模擬時，傳回<xref:System.Security.Principal.WindowsIdentity>物件沒有任何值。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-316">If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.</span></span>  <span data-ttu-id="d0c9e-317">如果`ifImpersonating`已`false`和執行緒模擬、<xref:System.Security.Principal.WindowsIdentity>執行緒會傳回。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-317">If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.</span></span>  <span data-ttu-id="d0c9e-318">如果`ifImpersonating`已`false`和執行緒未模擬、<xref:System.Security.Principal.WindowsIdentity>程序會傳回。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-318">If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-319">操作主體物件的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-319">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="d0c9e-320">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-320">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(valuetype System.Security.Principal.TokenAccessLevels desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (desiredAccess As TokenAccessLevels) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(System::Security::Principal::TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : System.Security.Principal.TokenAccessLevels -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent desiredAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" />
      </Parameters>
      <Docs>
        <param name="desiredAccess">
          <span data-ttu-id="d0c9e-321">列舉值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-321">A bitwise combination of the enumeration values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-322">使用指定所要的語彙基元存取層級，傳回代表目前 Windows 使用者的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-322">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user, using the specified desired token access level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-323">物件，表示目前的使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-323">An object that represents the current user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-324">`desiredAccess`參數會指定識別的存取權限的存取權杖的要求的類型的存取遮罩。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-324">The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token.</span></span> <span data-ttu-id="d0c9e-325">這些要求的存取類型的語彙基元的判別存取控制清單 (DACL)，以判斷哪些類型的存取權限會授與或拒絕與相比較。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-325">These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-326">操作主體物件的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-326">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="d0c9e-327">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-327">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReferenceCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IdentityReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IdentityReferenceCollection ^ Groups { System::Security::Principal::IdentityReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Security.Principal.IdentityReferenceCollection" Usage="System.Security.Principal.WindowsIdentity.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-328">取得目前 Windows 使用者所屬的群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-328">Gets the groups the current Windows user belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-329">物件，表示目前 Windows 使用者所屬的群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-329">An object representing the groups the current Windows user belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c9e-330">下列程式碼範例示範使用<xref:System.Security.Principal.WindowsIdentity.Groups%2A>屬性來顯示目前使用者所屬的群組的識別參考。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-330">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Groups%2A> property to display the identity references for the groups the current user belongs to.</span></span>  <span data-ttu-id="d0c9e-331">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-331">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-332">允許程式碼模擬不同的 Windows 使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-332">Allows code to impersonate a different Windows user.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.WindowsImpersonationContext Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::WindowsImpersonationContext ^ Impersonate();" />
      <MemberSignature Language="F#" Value="abstract member Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext&#xA;override this.Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="windowsIdentity.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-333">模擬由 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件所代表的使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-333">Impersonates the user represented by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-334">物件，表示模擬前的 Windows 使用者，這個物件可以用來還原為原始使用者的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-334">An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-335">在 Windows NT 平台，目前的使用者必須具有足夠的權限，以允許模擬。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-335">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-336">下列範例示範如何取得 Windows 帳戶語彙基元，藉由呼叫 unmanaged 的 Win32`LogonUser`函式，以及如何使用該權杖來模擬其他使用者，然後還原成原始身分識別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-336">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d0c9e-337">匿名識別會嘗試執行模擬。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-337">An anonymous identity attempted to perform an impersonation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-338">發生 Win32 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-338">A Win32 error occurred.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d0c9e-339">Microsoft Windows 98 和 Windows Millennium Edition (Windows Me 檔案) 平台沒有使用者權杖，因為模擬能在這些平台上的位置。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-339">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="d0c9e-340">在使用後<see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />，請務必呼叫<see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" />方法以結束模擬。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-340">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsImpersonationContext Impersonate(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr) As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsImpersonationContext ^ Impersonate(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="System.Security.Principal.WindowsIdentity.Impersonate userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <span data-ttu-id="d0c9e-341">Windows 帳戶語彙基元的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-341">The handle of a Windows account token.</span>
          </span>
          <span data-ttu-id="d0c9e-342">這個語彙基元通常是透過呼叫 Unmanaged 程式碼所擷取的，例如對 Win32 API <see langword="LogonUser" /> 函式的呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-342">This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <see langword="LogonUser" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-343">模擬由指定使用者語彙基元所表示的使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-343">Impersonates the user represented by the specified user token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-344">物件，表示模擬前的 Windows 使用者，這個物件可以用來還原為原始使用者的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-344">An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-345">在 Windows NT 平台，目前的使用者必須具有足夠的權限，以允許模擬。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-345">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-346">呼叫<xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29>方法`userToken`的值<xref:System.IntPtr.Zero>相當於呼叫 Win32`RevertToSelf`函式。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-346">Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function.</span></span> <span data-ttu-id="d0c9e-347">如果另一位使用者目前正被模擬，控制項將會還原為原始使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-347">If another user is currently being impersonated, control reverts to the original user.</span></span>  
  
 <span data-ttu-id="d0c9e-348">如需有關呼叫 unmanaged 程式碼的詳細資訊，請參閱[使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-348">For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-349">下列範例示範如何取得 Windows 帳戶語彙基元，藉由呼叫 unmanaged 的 Win32`LogonUser`函式，以及如何使用該權杖來模擬其他使用者，然後還原成原始身分識別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-349">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0c9e-350">Windows 會傳回 Windows NT 狀態碼 STATUS_ACCESS_DENIED。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-350">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="d0c9e-351">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-351">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d0c9e-352">呼叫端沒有正確的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-352">The caller does not have the correct permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-353">提供操作之主體物件，並存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-353">for the ability to manipulate the principal object and access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-354">相關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />和 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-354">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d0c9e-355">Microsoft Windows 98 和 Windows Millennium Edition (Windows Me 檔案) 平台沒有使用者權杖，因為模擬能在這些平台上的位置。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-355">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="d0c9e-356">在使用後<see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />，請務必呼叫<see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" />方法以結束模擬。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0c9e-356">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-357">設定使用者的模擬層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-357">Gets the impersonation level for the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-358">其中一個列舉值，這個值指定模擬層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-358">One of the enumeration values that specifies the impersonation level.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-359">描述用來連接至 WMI 的模擬等級。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-359">Describes the impersonation level to be used to connect to WMI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-360">下列程式碼範例示範使用<xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A>屬性來顯示目前使用者的模擬層級。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-360">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> property to display the impersonation level for the current user.</span></span> <span data-ttu-id="d0c9e-361">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-361">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public virtual bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-362">取得值，指出使用者帳戶是否已經由系統識別為匿名帳戶。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-362">Gets a value that indicates whether the user account is identified as an anonymous account by the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-363">如果使用者帳戶是匿名帳戶，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-363">
              <see langword="true" /> if the user account is an anonymous account; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-364"><xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>屬性會偵測 Windows 匿名身分識別和所傳回的匿名識別<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-364">The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.</span></span>  
  
 <span data-ttu-id="d0c9e-365">匿名帳戶通常只會遇到只能從 ASP.NET 應用程式內時由網際網路資訊服務 (IIS) 允許匿名存取。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-365">Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-366">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>屬性來偵測使用者帳戶是否已由系統識別為匿名帳戶。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-366">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect whether the user account is identified as an anonymous account by the system.</span></span> <span data-ttu-id="d0c9e-367">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-367">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-368">取得值，指出使用者是否已經由 Windows 驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-368">Gets a value indicating whether the user has been authenticated by Windows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-369">如果使用者已驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-369">
              <see langword="true" /> if the user was authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGuest">
      <MemberSignature Language="C#" Value="public virtual bool IsGuest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGuest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsGuest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGuest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGuest : bool" Usage="System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-370">取得值，指出使用者帳戶是否由系統識別為 <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> 帳戶。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-370">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account by the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-371">如果使用者帳戶是 <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> 帳戶，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-371">
              <see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c9e-372">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.IsGuest%2A>屬性傳回值，指出是否要將使用者帳戶識別為<xref:System.Security.Principal.WindowsAccountType.Guest>系統的帳戶。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-372">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.Guest> account by the system.</span></span> <span data-ttu-id="d0c9e-373">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-373">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public virtual bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSystem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystem : bool" Usage="System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-374">取得值，指出使用者帳戶是否由系統識別為 <see cref="F:System.Security.Principal.WindowsAccountType.System" /> 帳戶。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-374">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account by the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-375">如果使用者帳戶是 <see cref="F:System.Security.Principal.WindowsAccountType.System" /> 帳戶，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-375">
              <see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c9e-376">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.IsSystem%2A>屬性傳回值，指出是否要將使用者帳戶識別為<xref:System.Security.Principal.WindowsAccountType.System>系統的帳戶。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-376">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.System> account by the system.</span></span> <span data-ttu-id="d0c9e-377">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-377">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Principal.WindowsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-378">取得使用者的 Windows 登入名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-378">Gets the user's Windows logon name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-379">使此程式碼為其執行之使用者的 Windows 登入名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-379">The Windows logon name of the user on whose behalf the code is being run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-380">登入名稱是在表單的 網域 \ 使用者名稱。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-380">The logon name is in the form DOMAIN\USERNAME.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-381">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.Name%2A>屬性來取得使用者的 Windows 登入名稱。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-381">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.Name%2A> property to get the user's Windows logon name.</span></span> <span data-ttu-id="d0c9e-382">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-382">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ Owner { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-383">取得語彙基元擁有人的安全識別項 (SID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-383">Gets the security identifier (SID) for the token owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-384">語彙基元擁有人的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-384">An object for the token owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-385">SID 可唯一識別使用者或群組，在所有 Windows NT 實作上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-385">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  <span data-ttu-id="d0c9e-386">傳回的 SID 識別預設擁有者將會套用至新建立之物件的 SID。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-386">The returned SID identifies the default owner SID that will be applied to newly created objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-387">下列程式碼範例示範使用<xref:System.Security.Principal.WindowsIdentity.Owner%2A>顯示語彙基元擁有人的安全識別項的屬性。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-387">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Owner%2A> property to display the security identifier for the token owner.</span></span>  <span data-ttu-id="d0c9e-388">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別</span><span class="sxs-lookup"><span data-stu-id="d0c9e-388">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated">
      <MemberSignature Language="C#" Value="public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunImpersonated(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Action ^ action);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Action -&gt; unit" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="safeAccessTokenHandle">
          <span data-ttu-id="d0c9e-389">模擬之 Windows 身分識別的 SafeAccessTokenHandle。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-389">The SafeAccessTokenHandle of the impersonated Windows identity.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="d0c9e-390">要執行的 System.Action。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-390">The System.Action to run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-391">以模擬的 Windows 身分識別執行指定的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-391">Runs the specified action as the impersonated Windows identity.</span>
          </span>
          <span data-ttu-id="d0c9e-392">您可以使用 <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> 並提供您的函式做為參數，而不需要使用個人化的方法呼叫並在 <see cref="T:System.Security.Principal.WindowsImpersonationContext" /> 中執行您的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-392">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c9e-393">下列範例示範如何使用<xref:System.Security.Principal.WindowsIdentity>類別來模擬使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-393">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d0c9e-394">此範例會要求使用者在主控台畫面上輸入密碼。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-394">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="d0c9e-395">因為主控台視窗並不以原生方式支援遮罩的輸入，會顯示在畫面上，密碼。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-395">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T RunImpersonated&lt;T&gt;(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Func&lt;T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Func&lt;'T&gt; -&gt; 'T" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d0c9e-396">函式使用的物件類型與傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-396">The type of object used by and returned by the function.</span>
          </span>
        </typeparam>
        <param name="safeAccessTokenHandle">
          <span data-ttu-id="d0c9e-397">模擬之 Windows 身分識別的 SafeAccessTokenHandle。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-397">The SafeAccessTokenHandle of the impersonated Windows identity.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="d0c9e-398">要執行的 System.Func。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-398">The System.Func to run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-399">以模擬的 Windows 身分識別執行指定的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-399">Runs the specified function as the impersonated Windows identity.</span>
          </span>
          <span data-ttu-id="d0c9e-400">您可以使用 <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> 並提供您的函式做為參數，而不需要使用個人化的方法呼叫並在 <see cref="T:System.Security.Principal.WindowsImpersonationContext" /> 中執行您的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-400">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c9e-401">傳回函式的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-401">Returns the result of the function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d0c9e-402">下列範例示範如何使用<xref:System.Security.Principal.WindowsIdentity>類別來模擬使用者。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-402">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d0c9e-403">此範例會要求使用者在主控台畫面上輸入密碼。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-403">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="d0c9e-404">因為主控台視窗並不以原生方式支援遮罩的輸入，會顯示在畫面上，密碼。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-404">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="d0c9e-405">還原序列化之事件的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-405">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-406">實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面並在還原序列化完成時，由還原序列化事件回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-406">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="d0c9e-407">包含序列化 <see cref="T:System.Collections.Hashtable" /> 所需資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-407">An object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d0c9e-408">物件，該物件包含與 <see cref="T:System.Collections.Hashtable" /> 關聯之序列化資料流的來源和目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-408">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c9e-409">將具有邏輯內容資訊的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，設定為需要重新建立此執行內容的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-409">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of this execution context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-410">這個方法會設定<xref:System.Runtime.Serialization.SerializationInfo>使用邏輯呼叫內容資訊。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-410">This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="d0c9e-411">還原序列化期間，系統的執行內容物件<xref:System.Runtime.Serialization.SerializationInfo>資料流上傳輸。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-411">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="d0c9e-412">如需詳細資訊，請參閱<xref:System.Runtime.Serialization.SerializationInfo>。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-412">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d0c9e-413">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-413">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d0c9e-414">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-414">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual IntPtr Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Token" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Token { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : nativeint" Usage="System.Security.Principal.WindowsIdentity.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-415">取得使用者的 Windows 帳戶的語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-415">Gets the Windows account token for the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-416">與目前所執行的執行緒相關聯的存取語彙基元控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-416">The handle of the access token associated with the current execution thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-417">請勿明確釋放由帳戶語彙基元<xref:System.Security.Principal.WindowsIdentity.Token%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-417">Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property.</span></span> <span data-ttu-id="d0c9e-418">語彙基元，會釋放<xref:System.Security.Principal.WindowsIdentity.Dispose%2A>方法，您可以在程式碼中呼叫。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-418">The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code.</span></span> <span data-ttu-id="d0c9e-419"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> 也會自動由記憶體回收行程呼叫。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-419"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-420">所傳回的帳戶語彙基元<xref:System.Security.Principal.WindowsIdentity.Token%2A>屬性是用來建立 Windows 語彙基元的複本<xref:System.Security.Principal.WindowsIdentity>物件，並由.NET Framework 時，就會自動釋放。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-420">The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework.</span></span> <span data-ttu-id="d0c9e-421">這是不同的帳戶語彙基元 (`userToken`建構函式的參數)，這用來建立<xref:System.Security.Principal.WindowsIdentity>物件。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-421">This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object.</span></span> <span data-ttu-id="d0c9e-422">`userToken` 是的呼叫所建立的 Windows 帳戶語彙基元`LogonUser`和必須關閉，以避免記憶體流失。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-422">`userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0c9e-423">下列程式碼示範如何使用<xref:System.Security.Principal.WindowsIdentity.IsSystem%2A>屬性來取得使用者的 Windows 帳戶語彙基元。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-423">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user.</span></span> <span data-ttu-id="d0c9e-424">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Principal.WindowsIdentity>類別。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-424">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0c9e-425">提供存取 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-425">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="d0c9e-426">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-426">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier User" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ User { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-427">取得使用者的安全識別項 (SID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-427">Gets the security identifier (SID) for the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-428">使用者的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-428">An object for the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c9e-429">SID 可唯一識別使用者或群組，在所有 Windows NT 實作上。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-429">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0c9e-430"><xref:System.Security.Principal.WindowsIdentity>所傳回的物件<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>方法不是 Windows 的匿名使用者相同。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-430">The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user.</span></span> <span data-ttu-id="d0c9e-431">這個屬性會取得`null`所表示匿名使用者<xref:System.Security.Principal.WindowsIdentity>所傳回的物件<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>方法; 它不會取得代表匿名 Windows 使用者的 SID。</span><span class="sxs-lookup"><span data-stu-id="d0c9e-431">This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c9e-432">取得具有 <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> 屬性索引鍵的宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-432">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c9e-433">具有 <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> 屬性索引鍵之宣告的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c9e-433">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>