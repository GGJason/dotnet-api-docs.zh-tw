<Type Name="ResolveEventHandler" FullName="System.ResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d65eda97513adafe712056cfa98b598f933c1c42" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52384532" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Assembly ResolveEventHandler(object sender, ResolveEventArgs args);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ResolveEventHandler(sender As Object, args As ResolveEventArgs) As Assembly " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Assembly ^ ResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ args);" />
  <TypeSignature Language="F#" Value="type ResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Assembly" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="args" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Assembly</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="c63ab-101">事件的來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c63ab-101">The source of the event.</span>
      </span>
    </param>
    <param name="args">
      <span data-ttu-id="c63ab-102">事件資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c63ab-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="c63ab-103">表示處理 <see cref="E:System.AppDomain.TypeResolve" /> 之 <see cref="E:System.AppDomain.ResourceResolve" />、<see cref="E:System.AppDomain.AssemblyResolve" /> 或 <see cref="T:System.AppDomain" /> 事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c63ab-103">Represents a method that handles the <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, or <see cref="E:System.AppDomain.AssemblyResolve" /> event of an <see cref="T:System.AppDomain" />.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="c63ab-104">用來解析型別、組件或資源的組件，如果無法解析組件則為 <see langword="null" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c63ab-104">The assembly that resolves the type, assembly, or resource; or <see langword="null" /> if the assembly cannot be resolved.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c63ab-105">如果執行階段類別載入器無法解析的參考組件、 類型或資源，對應的事件會引發，讓回呼告知執行階段參考的組件、 類型或資源是在哪個組件。</span><span class="sxs-lookup"><span data-stu-id="c63ab-105">If the runtime class loader cannot resolve a reference to an assembly, type, or resource, the corresponding events are raised to give the callback a chance to tell the runtime which assembly the referenced assembly, type, or resource is in.</span></span> <span data-ttu-id="c63ab-106">它負責<xref:System.ResolveEventHandler>傳回型別、 組件或資源解析的組件，或如果無法辨識的組件傳回 null。</span><span class="sxs-lookup"><span data-stu-id="c63ab-106">It is the responsibility of the <xref:System.ResolveEventHandler> to return the assembly that resolves the type, assembly, or resource, or to return null if the assembly is not recognized.</span></span> <span data-ttu-id="c63ab-107">如需詳細資訊，請參閱 <<c0> [ 解析組件載入](~/docs/framework/app-domains/resolve-assembly-loads.md)並<xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>， <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>，和<xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="c63ab-107">For more information, see [Resolving Assembly Loads](~/docs/framework/app-domains/resolve-assembly-loads.md) and the <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>, <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>, and <xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType> events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c63ab-108">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，則<xref:System.ResolveEventHandler?displayProperty=nameWithType>所有組件，包括資源組件都會引發事件。</span><span class="sxs-lookup"><span data-stu-id="c63ab-108">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventHandler?displayProperty=nameWithType> event is raised for all assemblies, including resource assemblies.</span></span> <span data-ttu-id="c63ab-109">在舊版中，資源組件不引發事件。</span><span class="sxs-lookup"><span data-stu-id="c63ab-109">In earlier versions, the event was not raised for resource assemblies.</span></span> <span data-ttu-id="c63ab-110">如果當地語系化的作業系統，可能會呼叫處理常式多次： 每個文化特性後援鏈結中的一次。</span><span class="sxs-lookup"><span data-stu-id="c63ab-110">If the operating system is localized, the handler might be called multiple times: once for each culture in the fallback chain.</span></span>  
  
 <span data-ttu-id="c63ab-111">每個衍生的類別<xref:System.Delegate>並<xref:System.MulticastDelegate>的建構函式和`Invoke`方法。</span><span class="sxs-lookup"><span data-stu-id="c63ab-111">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and an `Invoke` method.</span></span> <span data-ttu-id="c63ab-112">C + + 程式碼範例中的描述，請參閱<xref:System.Delegate>類別。</span><span class="sxs-lookup"><span data-stu-id="c63ab-112">See the C++ code example in the description for the <xref:System.Delegate> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
    <related type="Article" href="https://msdn.microsoft.com/library/5099e549-f4fd-49fb-a290-549edd456c6a">
      <span data-ttu-id="c63ab-113">解析組件載入</span>
      <span class="sxs-lookup">
        <span data-stu-id="c63ab-113">Resolving Assembly Loads</span>
      </span>
    </related>
  </Docs>
</Type>