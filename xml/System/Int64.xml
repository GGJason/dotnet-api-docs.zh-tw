<Type Name="Int64" FullName="System.Int64">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34c4a2b8f08bec3281cd530c8b4cd1671a2a5d4b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52215258" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int64" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int64&#xA;Implements IComparable, IComparable(Of Long), IConvertible, IEquatable(Of Long), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="419a5-101">表示 64 位元帶正負號的整數。</span>
      <span class="sxs-lookup">
        <span data-stu-id="419a5-101">Represents a 64-bit signed integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-102"><xref:System.Int64> 是不可變的實值型別代表帶正負號的整數值的範圍從負數 9223372036854775808 (表示<xref:System.Int64.MinValue?displayProperty=nameWithType>常數) 到正 9,223,372,036,854,775,807 （這由<xref:System.Int64.MaxValue?displayProperty=nameWithType>常數。</span><span class="sxs-lookup"><span data-stu-id="419a5-102"><xref:System.Int64> is an immutable value type that represents signed integers with values that range from negative 9,223,372,036,854,775,808 (which is represented by the <xref:System.Int64.MinValue?displayProperty=nameWithType> constant) through positive 9,223,372,036,854,775,807 (which is represented by the <xref:System.Int64.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="419a5-103">.NET Framework 也包含不帶正負號的 64 位元整數值類型， <xref:System.UInt64>，代表範圍從 0 到 18446744073709551615 的值。</span><span class="sxs-lookup"><span data-stu-id="419a5-103">The .NET Framework also includes an unsigned 64-bit integer value type, <xref:System.UInt64>, which represents values that range from 0 to 18,446,744,073,709,551,615.</span></span>  
  
## <a name="instantiating-an-int64-value"></a><span data-ttu-id="419a5-104">具現化的 Int64 值</span><span class="sxs-lookup"><span data-stu-id="419a5-104">Instantiating an Int64 Value</span></span>  
 <span data-ttu-id="419a5-105">您可以具現化<xref:System.Int64>值以數種方式：</span><span class="sxs-lookup"><span data-stu-id="419a5-105">You can instantiate an <xref:System.Int64> value in several ways:</span></span>  
  
-   <span data-ttu-id="419a5-106">您可以宣告<xref:System.Int64>變數並將其指派的範圍內的常值的整數值<xref:System.Int64>資料型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-106">You can declare an <xref:System.Int64> variable and assign it a literal integer value that is within the range of the <xref:System.Int64> data type.</span></span> <span data-ttu-id="419a5-107">下列範例會宣告兩個<xref:System.Int64>變數並將它們指派這種方式的值。</span><span class="sxs-lookup"><span data-stu-id="419a5-107">The following example declares two <xref:System.Int64> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#1)]
     [!code-vb[System.Int64.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#1)]  
  
-   <span data-ttu-id="419a5-108">您可以將其範圍是一小部分的整數類資料類型的值指派的<xref:System.Int64>型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-108">You can assign the value of an integral type whose range is a subset of the <xref:System.Int64> type.</span></span> <span data-ttu-id="419a5-109">這是擴展轉換，不需要轉換運算子，在 C# 或 Visual Basic 中的轉換方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#4)]
     [!code-vb[System.Int64.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#4)]  
  
-   <span data-ttu-id="419a5-110">您可以指派數字型別，其範圍超過值的<xref:System.Int64>型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int64> type.</span></span> <span data-ttu-id="419a5-111">這是縮小轉換，因此如果需要轉換運算子，在 C# 和 Visual Basic 中的轉換方法`Option Strict`上。</span><span class="sxs-lookup"><span data-stu-id="419a5-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="419a5-112">如果數字的值是<xref:System.Single>， <xref:System.Double>，或<xref:System.Decimal>包含小數部分，而它的小數部分的處理的值取決於編譯器執行轉換。</span><span class="sxs-lookup"><span data-stu-id="419a5-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="419a5-113">下列範例會將數個數值的縮小轉換<xref:System.Int64>變數。</span><span class="sxs-lookup"><span data-stu-id="419a5-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int64> variables.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#2)]
     [!code-vb[System.Int64.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="419a5-114">您可以呼叫的方法<xref:System.Convert>類別，以轉換任何支援的型別<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="419a5-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int64> value.</span></span> <span data-ttu-id="419a5-115">這可能是因為<xref:System.Int64>支援<xref:System.IConvertible>介面。</span><span class="sxs-lookup"><span data-stu-id="419a5-115">This is possible because <xref:System.Int64> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-116">下列範例說明轉換的一連串<xref:System.Decimal>值來<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="419a5-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int64> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
     [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
-   <span data-ttu-id="419a5-117">您可以呼叫<xref:System.Int64.Parse%2A>或是<xref:System.Int64.TryParse%2A>方法，將轉換的字串表示法<xref:System.Int64>值<xref:System.Int64>。</span><span class="sxs-lookup"><span data-stu-id="419a5-117">You can call the <xref:System.Int64.Parse%2A> or <xref:System.Int64.TryParse%2A> method to convert the string representation of an <xref:System.Int64> value to an <xref:System.Int64>.</span></span> <span data-ttu-id="419a5-118">字串可以包含十進位或十六進位的數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="419a5-119">下列範例說明使用十進位和十六進位字串的剖析作業。</span><span class="sxs-lookup"><span data-stu-id="419a5-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#3)]
     [!code-vb[System.Int64.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int64-values"></a><span data-ttu-id="419a5-120">Int64 值上執行的作業</span><span class="sxs-lookup"><span data-stu-id="419a5-120">Performing Operations on Int64 Values</span></span>  
 <span data-ttu-id="419a5-121"><xref:System.Int64>類型支援標準的數學運算，例如加法、 減法、 部門、 乘法、 負號、 和一元否定運算。</span><span class="sxs-lookup"><span data-stu-id="419a5-121">The <xref:System.Int64> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="419a5-122">像其他整數類資料類型，<xref:System.Int64>類型也支援位元`AND`， `OR`， `XOR`，左 shift 鍵和向右移位運算子。</span><span class="sxs-lookup"><span data-stu-id="419a5-122">Like the other integral types, the <xref:System.Int64> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="419a5-123">您可以使用標準數值運算子比較兩個<xref:System.Int64>值，或您可以呼叫<xref:System.Int64.CompareTo%2A>或<xref:System.Int64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-123">You can use the standard numeric operators to compare two <xref:System.Int64> values, or you can call the <xref:System.Int64.CompareTo%2A> or <xref:System.Int64.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="419a5-124">您也可以呼叫的成員<xref:System.Math>類別來執行各種不同的數字的作業，包括取得數值的絕對值，計算商數和餘數整數除法運算，判斷兩個最大或最小值長整數、 取得數字符號和捨入數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two long integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int64-as-a-string"></a><span data-ttu-id="419a5-125">表示為字串的 Int64</span><span class="sxs-lookup"><span data-stu-id="419a5-125">Representing an Int64 as a String</span></span>  
 <span data-ttu-id="419a5-126"><xref:System.Int64>型別提供完整支援標準和自訂數值格式字串。</span><span class="sxs-lookup"><span data-stu-id="419a5-126">The <xref:System.Int64> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="419a5-127">(如需詳細資訊，請參閱 <<c0> [ 格式化型別](~/docs/standard/base-types/formatting-types.md)，[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)，並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。)</span><span class="sxs-lookup"><span data-stu-id="419a5-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="419a5-128">若要格式化<xref:System.Int64>值為沒有前置零的整數類資料字串，您可以呼叫無參數<xref:System.Int64.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-128">To format an <xref:System.Int64> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="419a5-129">藉由使用"D"格式規範，您也可以包含指定之字串表示法中的前置零的數目。</span><span class="sxs-lookup"><span data-stu-id="419a5-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="419a5-130">藉由使用"N"格式規範，您可以包含群組分隔符號，並指定才會出現在數字的字串表示的小數位數。</span><span class="sxs-lookup"><span data-stu-id="419a5-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="419a5-131">您可以藉由使用"X"格式規範，表示<xref:System.Int64>做為十六進位字串的值。</span><span class="sxs-lookup"><span data-stu-id="419a5-131">By using the "X" format specifier, you can represent an <xref:System.Int64> value as a hexadecimal string.</span></span> <span data-ttu-id="419a5-132">下列範例會格式化的陣列中的項目<xref:System.Int64>下列四種方式的值。</span><span class="sxs-lookup"><span data-stu-id="419a5-132">The following example formats the elements in an array of <xref:System.Int64> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#1)]
 [!code-vb[System.Int64.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#1)]  
  
 <span data-ttu-id="419a5-133">您也可以格式化<xref:System.Int64>值為二進位，八進位、 十進位或十六進位的字串，藉由呼叫<xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29>方法並提供方法的第二個參數的基底。</span><span class="sxs-lookup"><span data-stu-id="419a5-133">You can also format an <xref:System.Int64> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="419a5-134">下列範例會呼叫此方法，以顯示二進位、 八進位和十六進位表示的整數值的陣列。</span><span class="sxs-lookup"><span data-stu-id="419a5-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#2)]
 [!code-vb[System.Int64.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="419a5-135">使用非十進位 32 位元整數值</span><span class="sxs-lookup"><span data-stu-id="419a5-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="419a5-136">除了使用個別的長整數，做為十進位值，您可能想要執行位元運算的長整數的值，或使用長整數值的二進位或十六進位表示。</span><span class="sxs-lookup"><span data-stu-id="419a5-136">In addition to working with individual long integers as decimal values, you may want to perform bitwise operations with long integer values, or work with the binary or hexadecimal representations of long integer values.</span></span> <span data-ttu-id="419a5-137"><xref:System.Int64> 值會表示 63 個位元，做為正負號位元六十第四位元。</span><span class="sxs-lookup"><span data-stu-id="419a5-137"><xref:System.Int64> values are represented in 63 bits, with the sixty-fourth bit used as a sign bit.</span></span> <span data-ttu-id="419a5-138">正值是利用標誌大小表示法來表示。</span><span class="sxs-lookup"><span data-stu-id="419a5-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="419a5-139">負數的值為二補數表示法中。</span><span class="sxs-lookup"><span data-stu-id="419a5-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="419a5-140">這很重要要牢記在心，當您在上執行位元運算<xref:System.Int64>值，或當您使用個別位元。</span><span class="sxs-lookup"><span data-stu-id="419a5-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int64> values or when you work with individual bits.</span></span> <span data-ttu-id="419a5-141">若要執行的數字、 布林值或在任何兩個非十進位值的比較作業，這兩個值都必須使用相同的表示法。</span><span class="sxs-lookup"><span data-stu-id="419a5-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="419a5-142">此型別的所有成員都是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="419a5-142">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="419a5-143">若要修改執行個體狀態會顯示的成員實際上會傳回新的值進行初始化的新執行個體。</span>
      <span class="sxs-lookup">
        <span data-stu-id="419a5-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="419a5-144">為與任何其他型別，讀取和寫入共用的變數，其中包含這個型別的執行個體必須受到鎖定，以確保執行緒安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="419a5-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.UInt64" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
      <span data-ttu-id="419a5-145">範例：.NET Framework 4 格式化公用程式</span>
      <span class="sxs-lookup">
        <span data-stu-id="419a5-145">Sample: .NET Framework 4 Formatting Utility</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="419a5-146">將這個執行個體與指定的物件或 <see cref="T:System.Int64" /> 相比較，並傳回它們的相對值指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-146">Compares this instance to a specified object or <see cref="T:System.Int64" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(long value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int64 -&gt; int&#xA;override this.CompareTo : int64 -&gt; int" Usage="int64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="419a5-147">要比較的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-147">An integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-148">將這個執行個體與指定的 64 元帶正負號的整數相比較，並傳回它們的相對值指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-148">Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-149">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-149">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="419a5-150">傳回值</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-150">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-151">描述</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-151">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="419a5-152">小於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-152">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-153">這個執行個體小於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-153">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="419a5-154">零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-154">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-155">這個執行個體等於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-155">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="419a5-156">大於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-156">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-157">這個執行個體大於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-157">This instance is greater than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-158">這個方法會實作<xref:System.IComparable%601?displayProperty=nameWithType>介面並執行稍微優於<xref:System.Int64.CompareTo%2A?displayProperty=nameWithType>方法因為並沒有將`value`物件的參數。</span><span class="sxs-lookup"><span data-stu-id="419a5-158">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="419a5-159">根據您的程式語言，可能是程式碼可能<xref:System.Int64.CompareTo%2A>方法的參數類型具有較少的位元的位置 （較窄） 與執行個體類型。</span><span class="sxs-lookup"><span data-stu-id="419a5-159">Depending on your programming language, it might be possible to code a <xref:System.Int64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="419a5-160">這可能是因為有些程式語言會執行隱含的擴展轉換，將參數表示為型別具有相同位元數與執行個體。</span><span class="sxs-lookup"><span data-stu-id="419a5-160">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="419a5-161">例如，假設此執行個體類型是<xref:System.Int32>，且參數類型為<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="419a5-161">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="419a5-162">Microsoft C# 編譯器會產生代表做為參數的值的指示<xref:System.Int32>物件，則會產生<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比較的值的方法<xref:System.Int32>執行個體和<xref:System.Int32>參數表示法。</span><span class="sxs-lookup"><span data-stu-id="419a5-162">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="419a5-163">請參閱您的程式語言的文件，以判斷其編譯器是否會執行隱含的擴展轉換數值類型上。</span><span class="sxs-lookup"><span data-stu-id="419a5-163">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-164">下列程式碼範例示範泛型和非泛型版本<xref:System.Int64.CompareTo%2A>數的值和參考類型的方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-164">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="419a5-165">要比較的物件或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-165">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-166">將這個執行個體與指定的物件相比較，並傳回它們的相對值指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-166">Compares this instance to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-167">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-167">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="419a5-168">傳回值</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-168">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-169">描述</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-169">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="419a5-170">小於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-170">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-171">這個執行個體小於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-171">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="419a5-172">零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-172">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-173">這個執行個體等於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-173">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="419a5-174">大於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-174">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="419a5-175">這個執行個體大於 <paramref name="value" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-175">This instance is greater than <paramref name="value" />.</span>
                </span>
                <span data-ttu-id="419a5-176">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-176">-or-</span>
                </span>
                <span data-ttu-id="419a5-177">
                  <paramref name="value" /> 為 <see langword="null" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="419a5-177">
                    <paramref name="value" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-178"><xref:System.Int64>，不論其值會被視為大於為 null 參考。</span><span class="sxs-lookup"><span data-stu-id="419a5-178">An <xref:System.Int64>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="419a5-179">`value`參數必須是`null`或執行個體<xref:System.Int64>，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="419a5-179">The `value` parameter must be `null` or an instance of <xref:System.Int64>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="419a5-180">
            <paramref name="value" /> 不是 <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-180">
              <paramref name="value" /> is not an <see cref="T:System.Int64" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="419a5-181">傳回表示這個執行個體是否等於指定物件或 <see cref="T:System.Int64" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-181">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(long obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="int64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="419a5-182">要與此執行個體相比較的 <see cref="T:System.Int64" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-182">An <see cref="T:System.Int64" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-183">傳回值，表示這個執行個體是否等於指定的 <see cref="T:System.Int64" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-183">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-184">如果 <see langword="true" /> 與這個執行個體具有相同的值，則為 <paramref name="obj" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-184">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-185">這個方法會實作<xref:System.IEquatable%601?displayProperty=nameWithType>介面，並執行稍微優於<xref:System.Int64.Equals%2A>因為並沒有將`obj`物件的參數。</span><span class="sxs-lookup"><span data-stu-id="419a5-185">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="419a5-186">編譯器多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.Int64.Equals(System.Int64)" />方法多載。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-186">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span>
            </span>
            <span data-ttu-id="419a5-187">如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.Int64" />定義和引數型別不是作為<see cref="T:System.Object" />，編譯器會執行隱含轉換和呼叫<see cref="M:System.Int64.Equals(System.Int64)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-187">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span>
            </span>
            <span data-ttu-id="419a5-188">否則，呼叫<see cref="M:System.Int64.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.Int64" />值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-188">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span>
            </span>
            <span data-ttu-id="419a5-189">下列範例說明這兩個方法多載之間的行為差異。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-189">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="419a5-190">若是<see cref="T:System.Byte" />， <see cref="T:System.SByte" />， <see cref="T:System.Int16" />， <see cref="T:System.UInt16" />， <see cref="T:System.Int32" />，和<see cref="T:System.UInt32" />值，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換和呼叫<see cref="M:System.Int64.Equals(System.Int64)" />方法，而第二個比較會傳回<see langword="false" />因為編譯器會呼叫<see cref="M:System.Int64.Equals(System.Object)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-190">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="419a5-191">[！ 的程式碼 csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [！ 的程式碼 vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-191">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="419a5-192">與這個執行個體相互比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-192">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-193">傳回值，指出這個執行個體 (Instance) 是否和指定的物件相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-193">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-194">如果 <see langword="true" /> 是 <paramref name="obj" /> 的執行個體，且等於這個執行個體的值，則為 <see cref="T:System.Int64" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-194">
              <see langword="true" /> if <paramref name="obj" /> is an instance of an <see cref="T:System.Int64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="419a5-195">下列程式碼範例示範如何將`Equals`的內容中`Int64`，比較兩個長值，並傳回`true`如果它們代表相同的數字，或`false`如果不相符。</span><span class="sxs-lookup"><span data-stu-id="419a5-195">The following code example illustrates the use of `Equals` in the context of `Int64`, comparing two long values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int64_Equals/CPP/int64_equals.cpp#1)]
 [!code-csharp[Int64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int64_Equals/CS/int64_equals.cs#1)]
 [!code-vb[Int64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int64_Equals/VB/int64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="419a5-196">編譯器多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.Int64.Equals(System.Int64)" />方法多載。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-196">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span>
            </span>
            <span data-ttu-id="419a5-197">如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.Int64" />定義和引數型別不是作為<see cref="T:System.Object" />，編譯器會執行隱含轉換和呼叫<see cref="M:System.Int64.Equals(System.Int64)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-197">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span>
            </span>
            <span data-ttu-id="419a5-198">否則，呼叫<see cref="M:System.Int64.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.Int64" />值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-198">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span>
            </span>
            <span data-ttu-id="419a5-199">下列範例說明這兩個方法多載之間的行為差異。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-199">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="419a5-200">若是<see cref="T:System.Byte" />， <see cref="T:System.SByte" />， <see cref="T:System.Int16" />， <see cref="T:System.UInt16" />， <see cref="T:System.Int32" />，和<see cref="T:System.UInt32" />值，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換和呼叫<see cref="M:System.Int64.Equals(System.Int64)" />方法，而第二個比較會傳回<see langword="false" />因為編譯器會呼叫<see cref="M:System.Int64.Equals(System.Object)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-200">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="419a5-201">[！ 的程式碼 csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [！ 的程式碼 vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="419a5-201">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Int64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="419a5-202">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-202">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-203">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-203">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="419a5-204">傳回實值類型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-204">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-205">列舉常數 <see cref="F:System.TypeCode.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-205">The enumerated constant, <see cref="F:System.TypeCode.Int64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const long MaxValue = 9223372036854775807;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MaxValue = int64(9223372036854775807)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Long  = 9223372036854775807" />
      <MemberSignature Language="C++ CLI" Value="public: long MaxValue = 9223372036854775807;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int64" Usage="System.int64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>9223372036854775807</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="419a5-206">代表 <see langword="Int64" /> 最大的可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-206">Represents the largest possible value of an <see langword="Int64" />.</span>
          </span>
          <span data-ttu-id="419a5-207">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-207">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-208">這個常數的值為 9223372036854775807;也就是十六進位 0x7FFFFFFFFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="419a5-208">The value of this constant is 9,223,372,036,854,775,807; that is, hexadecimal 0x7FFFFFFFFFFFFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const long MinValue = -9223372036854775808;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MinValue = int64(-9223372036854775808)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Long  = -9223372036854775808" />
      <MemberSignature Language="C++ CLI" Value="public: long MinValue = -9223372036854775808;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int64" Usage="System.int64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>-9223372036854775808</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="419a5-209">代表 <see langword="Int64" /> 的最小可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-209">Represents the smallest possible value of an <see langword="Int64" />.</span>
          </span>
          <span data-ttu-id="419a5-210">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-210">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-211">這個常數的值是負 9223372036854775808;也就是十六進位 0x8000000000000000。</span><span class="sxs-lookup"><span data-stu-id="419a5-211">The value of this constant is negative 9,223,372,036,854,775,808; that is, hexadecimal 0x8000000000000000.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="419a5-212">將數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-212">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int64" Usage="System.int64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="419a5-213">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-213">A string containing a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-214">將數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-214">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-215">64 位元帶正負號的整數，與 <paramref name="s" /> 中所包含的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-215">A 64-bit signed integer equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-216">`s`參數會包含數字的格式：</span><span class="sxs-lookup"><span data-stu-id="419a5-216">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="419a5-217">[ws][簽署] 數字 [ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-217">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="419a5-218">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-218">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="419a5-219">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="419a5-219">The following table describes each element.</span></span>  
  
|<span data-ttu-id="419a5-220">元素</span><span class="sxs-lookup"><span data-stu-id="419a5-220">Element</span></span>|<span data-ttu-id="419a5-221">描述</span><span class="sxs-lookup"><span data-stu-id="419a5-221">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="419a5-222">ws</span><span class="sxs-lookup"><span data-stu-id="419a5-222">ws</span></span>|<span data-ttu-id="419a5-223">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="419a5-223">Optional white space.</span></span>|  
|<span data-ttu-id="419a5-224">Sign</span><span class="sxs-lookup"><span data-stu-id="419a5-224">sign</span></span>|<span data-ttu-id="419a5-225">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-225">An optional sign.</span></span>|  
|<span data-ttu-id="419a5-226">digits</span><span class="sxs-lookup"><span data-stu-id="419a5-226">digits</span></span>|<span data-ttu-id="419a5-227">範圍從 0 到 9 的數字順序。</span><span class="sxs-lookup"><span data-stu-id="419a5-227">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="419a5-228">`s`參數會解譯使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="419a5-228">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="419a5-229">除了十進位數字，只允許前置和尾端空格，以及前置正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-229">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="419a5-230">若要明確地定義中可以存在的樣式項目`s`，使用任何一種<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>或<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-230">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="419a5-231">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-231">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="419a5-232">若要剖析的字串時使用其他文化特性格式資訊，請使用<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-232">To parse a string using the formatting information of some other culture, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-233">下列範例示範如何將字串值轉換成 64 位元帶正負號的整數值，使用<xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-233">The following example demonstrates how to convert a string value into a 64-bit signed integer value using the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="419a5-234">然後，它會顯示產生的長整數值。</span><span class="sxs-lookup"><span data-stu-id="419a5-234">It then displays the resulting long integer value.</span></span>  
  
 [!code-csharp[System.Int64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="419a5-235">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-235">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="419a5-236">
            <paramref name="s" /> 的格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-236">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="419a5-237">
            <paramref name="s" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-237">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="419a5-238">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-238">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int64" Usage="System.int64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="419a5-239">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-239">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="419a5-240">
            <see cref="T:System.Globalization.NumberStyles" /> 值的位元組合，表示 <paramref name="s" /> 的允許格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-240">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="419a5-241">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-241">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-242">將指定樣式之數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-242">Converts the string representation of a number in a specified style to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-243">64 位元帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-243">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-244">`style`參數定義的樣式項目 (例如空白字元、 正數或負號或千分位分隔符號) 中允許`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="419a5-244">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="419a5-245">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-245">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="419a5-246">值而定`style`，則`s`參數可能包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="419a5-246">Depending on the value of `style`, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="419a5-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="419a5-248">或者，如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="419a5-248">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="419a5-249">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-249">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="419a5-250">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-250">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="419a5-251">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="419a5-251">The following table describes each element.</span></span>  
  
|<span data-ttu-id="419a5-252">元素</span><span class="sxs-lookup"><span data-stu-id="419a5-252">Element</span></span>|<span data-ttu-id="419a5-253">描述</span><span class="sxs-lookup"><span data-stu-id="419a5-253">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="419a5-254">*ws*</span><span class="sxs-lookup"><span data-stu-id="419a5-254">*ws*</span></span>|<span data-ttu-id="419a5-255">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="419a5-255">Optional white space.</span></span> <span data-ttu-id="419a5-256">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-256">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="419a5-257">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-257">A culture-specific currency symbol.</span></span> <span data-ttu-id="419a5-258">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="419a5-258">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="419a5-259">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-259">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-260">*簽署*</span><span class="sxs-lookup"><span data-stu-id="419a5-260">*sign*</span></span>|<span data-ttu-id="419a5-261">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-261">An optional sign.</span></span> <span data-ttu-id="419a5-262">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-262">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="419a5-263">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-263">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-264">*digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-264">*digits*</span></span><br /><br /> <span data-ttu-id="419a5-265">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-265">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="419a5-266">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-266">*exponential_digits*</span></span>|<span data-ttu-id="419a5-267">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="419a5-267">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="419a5-268">針對*fractional_digits*，只有數字 0 是有效。</span><span class="sxs-lookup"><span data-stu-id="419a5-268">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="419a5-269">*、*</span><span class="sxs-lookup"><span data-stu-id="419a5-269">*,*</span></span>|<span data-ttu-id="419a5-270">特定文化特性的千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-270">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="419a5-271">目前的文化特性的千分位分隔符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-271">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-272">*.*</span><span class="sxs-lookup"><span data-stu-id="419a5-272">*.*</span></span>|<span data-ttu-id="419a5-273">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-273">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="419a5-274">目前的文化特性的貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-274">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="419a5-275">只是數字 0 會顯示為小數位數的剖析作業才會成功;如果*fractional_digits*包含任何其他數字，<xref:System.OverflowException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="419a5-275">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="419a5-276">*e*</span><span class="sxs-lookup"><span data-stu-id="419a5-276">*e*</span></span>|<span data-ttu-id="419a5-277">'E' 或者 'E' 字元，表示代表的值時，會以指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-277">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="419a5-278">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-278">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-279">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="419a5-279">*hexdigits*</span></span>|<span data-ttu-id="419a5-280">一連串的從 0 到 f 或 0 到 f 的十六進位數字</span><span class="sxs-lookup"><span data-stu-id="419a5-280">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="419a5-281">中的任何終止 NUL (u+0000) 字元`s`剖析作業中，不論值會忽略`style`引數。</span><span class="sxs-lookup"><span data-stu-id="419a5-281">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="419a5-282">只有數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 的範圍內時永遠會成功的剖析<xref:System.Int64>型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-282">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="419a5-283">大部分的其餘<xref:System.Globalization.NumberStyles>成員控制可能，但不是一定要出現在輸入字串的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-283">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="419a5-284">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-284">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="419a5-285">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="419a5-285">NumberStyles value</span></span>|<span data-ttu-id="419a5-286">允許 s 除了數字中的項目</span><span class="sxs-lookup"><span data-stu-id="419a5-286">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="419a5-287">*數字*只有項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-287">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="419a5-288">小數點 ( *。*</span><span class="sxs-lookup"><span data-stu-id="419a5-288">The decimal point ( *.*</span></span> <span data-ttu-id="419a5-289">) 和*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-289">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="419a5-290">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-290">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="419a5-291">如果`s`表示指數標記法，產生的數字值的數字不能包含任何非零的小數數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-291">If `s` represents a number in exponential notation, the resulting numeric value cannot include any non-zero fractional digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="419a5-292">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-292">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="419a5-293">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-293">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="419a5-294">*號*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-294">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="419a5-295">*號*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-295">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="419a5-296">*號*括號括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-296">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="419a5-297">千分位分隔符號 ( *，* ) 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-297">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="419a5-298">*$* 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-298">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="419a5-299">全部。</span><span class="sxs-lookup"><span data-stu-id="419a5-299">All.</span></span> <span data-ttu-id="419a5-300">`s`參數不能代表十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-300">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="419a5-301">*Ws*元素的開頭或結尾`s`，*登*開頭`s`，並在小數點 ( *。*</span><span class="sxs-lookup"><span data-stu-id="419a5-301">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="419a5-302">) 符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-302">) symbol.</span></span> <span data-ttu-id="419a5-303">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-303">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="419a5-304">*Ws*，*號*，千分位分隔符號 ( *，* )，和小數點 ( *。*</span><span class="sxs-lookup"><span data-stu-id="419a5-304">The *ws*, *sign*, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="419a5-305">) 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-305">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="419a5-306">所有的樣式，除了`s`無法代表十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-306">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="419a5-307">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>旗標用，`s`必須是不含前置詞的十六進位值。</span><span class="sxs-lookup"><span data-stu-id="419a5-307">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="419a5-308">例如，"C9AF3 「 剖析成功，但是"0xC9AF3 」 並不會。</span><span class="sxs-lookup"><span data-stu-id="419a5-308">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="419a5-309">只有其他旗標，可以結合`s`參數都<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="419a5-309">The only other flags that can be combined with the `s` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="419a5-310">(<xref:System.Globalization.NumberStyles>列舉會包含複合的數字樣式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含這兩個空白字元旗標。)</span><span class="sxs-lookup"><span data-stu-id="419a5-310">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="419a5-311">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-311">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="419a5-312">若要指定的文化特性的格式資訊用於剖析作業，請呼叫<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>多載。</span><span class="sxs-lookup"><span data-stu-id="419a5-312">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-313">下列範例會使用<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>方法來剖析的字串表示，數個<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="419a5-313">The following example uses the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int64> values.</span></span> <span data-ttu-id="419a5-314">目前的文化特性的範例中是 EN-US。</span><span class="sxs-lookup"><span data-stu-id="419a5-314">The current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.Int64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="419a5-315">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-315">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="419a5-316">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-316">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="419a5-317">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-317">-or-</span>
          </span>
          <span data-ttu-id="419a5-318">
            <paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-318">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="419a5-319">
            <paramref name="s" /> 的格式與 <paramref name="style" /> 不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-319">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="419a5-320">
            <paramref name="s" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-320">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="419a5-321">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-321">-or-</span>
          </span>
          <span data-ttu-id="419a5-322">
            <paramref name="style" /> 支援小數數字，但 <paramref name="s" /> 包含非零的小數數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-322">
              <paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="419a5-323">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-323">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="419a5-324">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-324">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="419a5-325">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-325">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-326">將指定特定文化特性格式之數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-326">Converts the string representation of a number in a specified culture-specific format to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-327">64 位元帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-327">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-328">這個多載<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用來將各種不同的方式來格式化的文字轉換<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="419a5-328">This overload of the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int64> value.</span></span> <span data-ttu-id="419a5-329">比方說，它可以用來轉換使用者 HTML 文字方塊中輸入數值的文字。</span><span class="sxs-lookup"><span data-stu-id="419a5-329">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="419a5-330">`s`參數會包含數字的格式：</span><span class="sxs-lookup"><span data-stu-id="419a5-330">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="419a5-331">[ws][簽署] 數字 [ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-331">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="419a5-332">在方括號 （[和]） 是選擇性的項目與其他項目如下所示。</span><span class="sxs-lookup"><span data-stu-id="419a5-332">Items in square brackets ([ and ]) are optional, and other items are as follows.</span></span>  
  
 <span data-ttu-id="419a5-333">ws</span><span class="sxs-lookup"><span data-stu-id="419a5-333">ws</span></span>  
 <span data-ttu-id="419a5-334">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="419a5-334">An optional white space.</span></span>  
  
 <span data-ttu-id="419a5-335">Sign</span><span class="sxs-lookup"><span data-stu-id="419a5-335">sign</span></span>  
 <span data-ttu-id="419a5-336">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-336">An optional sign.</span></span>  
  
 <span data-ttu-id="419a5-337">digits</span><span class="sxs-lookup"><span data-stu-id="419a5-337">digits</span></span>  
 <span data-ttu-id="419a5-338">範圍從 0 到 9 的數字順序。</span><span class="sxs-lookup"><span data-stu-id="419a5-338">A sequence of digits ranging from 0 to 9.</span></span>  
  
 <span data-ttu-id="419a5-339">`s`參數會解譯使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="419a5-339">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="419a5-340">除了十進位數字，只允許前置和尾端空格，以及前置正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-340">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="419a5-341">若要明確地定義中可以存在的樣式項目`s`，使用<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-341">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="419a5-342">`provider`參數是<xref:System.IFormatProvider>實作，例如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-342">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="419a5-343">`provider`參數提供特定文化特性格式資訊`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-343">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="419a5-344">如果`provider`已`null`，則<xref:System.Globalization.NumberFormatInfo>會使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="419a5-344">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-345">下列範例是按鈕 click 事件處理常式的 Web 表單。</span><span class="sxs-lookup"><span data-stu-id="419a5-345">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="419a5-346">它會使用所傳回的陣列<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>屬性來判斷使用者的地區設定。</span><span class="sxs-lookup"><span data-stu-id="419a5-346">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="419a5-347">它接著會執行個體化<xref:System.Globalization.CultureInfo>對應至該地區設定物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-347">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="419a5-348"><xref:System.Globalization.NumberFormatInfo>所屬的物件<xref:System.Globalization.CultureInfo>物件會傳遞至<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29>方法，將轉換使用者輸入的目標<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="419a5-348">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int64> value.</span></span>  
  
 [!code-csharp[ParseMethod#5](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#5)]
 [!code-vb[ParseMethod#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="419a5-349">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-349">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="419a5-350">
            <paramref name="s" /> 的格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-350">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="419a5-351">
            <paramref name="s" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-351">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="419a5-352">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-352">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Long" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="419a5-353">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-353">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="419a5-354">列舉值的位元組合，表示 <paramref name="s" /> 中可以存在的樣式項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-354">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="419a5-355">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-355">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="419a5-356">
            <see cref="T:System.IFormatProvider" />，提供 <paramref name="s" /> 的相關特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-356">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-357">將指定樣式和特定文化特性格式之數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-357">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-358">64 位元帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-358">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-359">`style`參數定義中允許的樣式項目 （例如空格或正號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="419a5-359">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="419a5-360">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-360">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="419a5-361">值而定`style`，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="419a5-361">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="419a5-362">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-362">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="419a5-363">或者，如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="419a5-363">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="419a5-364">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-364">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="419a5-365">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-365">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="419a5-366">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="419a5-366">The following table describes each element.</span></span>  
  
|<span data-ttu-id="419a5-367">元素</span><span class="sxs-lookup"><span data-stu-id="419a5-367">Element</span></span>|<span data-ttu-id="419a5-368">描述</span><span class="sxs-lookup"><span data-stu-id="419a5-368">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="419a5-369">*ws*</span><span class="sxs-lookup"><span data-stu-id="419a5-369">*ws*</span></span>|<span data-ttu-id="419a5-370">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="419a5-370">Optional white space.</span></span> <span data-ttu-id="419a5-371">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，也可以顯示在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-371">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="419a5-372">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-372">A culture-specific currency symbol.</span></span> <span data-ttu-id="419a5-373">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>的屬性<xref:System.Globalization.NumberFormatInfo>所傳回的物件<xref:System.IFormatProvider.GetFormat%2A>方法`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="419a5-373">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="419a5-374">貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-374">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-375">*簽署*</span><span class="sxs-lookup"><span data-stu-id="419a5-375">*sign*</span></span>|<span data-ttu-id="419a5-376">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-376">An optional sign.</span></span> <span data-ttu-id="419a5-377">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標或結尾處`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-377">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="419a5-378">可用於括號`s`表示負值`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-378">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-379">*digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-379">*digits*</span></span><br /><br /> <span data-ttu-id="419a5-380">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-380">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="419a5-381">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-381">*exponential_digits*</span></span>|<span data-ttu-id="419a5-382">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="419a5-382">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="419a5-383">*、*</span><span class="sxs-lookup"><span data-stu-id="419a5-383">*,*</span></span>|<span data-ttu-id="419a5-384">特定文化特性的千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-384">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="419a5-385">千分位分隔符號所指定的文化特性`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-385">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-386">*.*</span><span class="sxs-lookup"><span data-stu-id="419a5-386">*.*</span></span>|<span data-ttu-id="419a5-387">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-387">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="419a5-388">指定的文化特性的小數點符號`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-388">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="419a5-389">只是數字 0 會顯示為小數位數的剖析作業才會成功;如果*fractional_digits*包含任何其他數字，<xref:System.OverflowException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="419a5-389">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="419a5-390">*e*</span><span class="sxs-lookup"><span data-stu-id="419a5-390">*e*</span></span>|<span data-ttu-id="419a5-391">'E' 或者 'E' 字元，表示代表的值時，會以指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-391">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="419a5-392">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-392">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-393">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="419a5-393">*hexdigits*</span></span>|<span data-ttu-id="419a5-394">一連串的從 0 到 f 或 0 到 f 的十六進位數字</span><span class="sxs-lookup"><span data-stu-id="419a5-394">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="419a5-395">中的任何終止 NUL (u+0000) 字元`s`剖析作業中，不論值會忽略`style`引數。</span><span class="sxs-lookup"><span data-stu-id="419a5-395">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="419a5-396">十進位數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 的範圍內時永遠會成功的剖析<xref:System.Int64>型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-396">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="419a5-397">大部分的其餘<xref:System.Globalization.NumberStyles>成員控制可能，但不是一定要出現在此輸入字串的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-397">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="419a5-398">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-398">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="419a5-399">非複合的 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="419a5-399">Non-composite NumberStyles values</span></span>|<span data-ttu-id="419a5-400">允許 s 除了數字中的項目</span><span class="sxs-lookup"><span data-stu-id="419a5-400">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="419a5-401">只有小數位數。</span><span class="sxs-lookup"><span data-stu-id="419a5-401">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="419a5-402">小數點 ( *。*</span><span class="sxs-lookup"><span data-stu-id="419a5-402">The decimal point ( *.*</span></span> <span data-ttu-id="419a5-403">) 和*小數位數*項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-403">) and *fractional-digits* elements.</span></span> <span data-ttu-id="419a5-404">不過，*小數位數*必須包含一個或多個 0 的數字或<xref:System.OverflowException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="419a5-404">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="419a5-405">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-405">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="419a5-406">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-406">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="419a5-407">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-407">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="419a5-408">之前不可以出現登*位數*。</span><span class="sxs-lookup"><span data-stu-id="419a5-408">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="419a5-409">之後可以出現的徵兆*位數*。</span><span class="sxs-lookup"><span data-stu-id="419a5-409">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="419a5-410">*號*括號括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-410">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="419a5-411">千分位分隔符號 ( *，* ) 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-411">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="419a5-412">*$* 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-412">The *$* element.</span></span>|  
  
 <span data-ttu-id="419a5-413">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>旗標用，`s`必須是不含前置詞的十六進位值。</span><span class="sxs-lookup"><span data-stu-id="419a5-413">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="419a5-414">例如，"C9AF3 「 剖析成功，但是"0xC9AF3 」 並不會。</span><span class="sxs-lookup"><span data-stu-id="419a5-414">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="419a5-415">只有其他旗標可存在於`style`都<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="419a5-415">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="419a5-416">(<xref:System.Globalization.NumberStyles>列舉型別有複合的數字樣式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含這兩個空白字元旗標。)</span><span class="sxs-lookup"><span data-stu-id="419a5-416">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="419a5-417">`provider`參數是<xref:System.IFormatProvider>實作，例如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-417">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="419a5-418">`provider`參數提供用於剖析的特定文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="419a5-418">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="419a5-419">如果`provider`已`null`，則<xref:System.Globalization.NumberFormatInfo>會使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="419a5-419">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-420">下列範例會使用各種`style`並`provider`剖析的字串表示的參數<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="419a5-420">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int64> values.</span></span> <span data-ttu-id="419a5-421">它也說明一些可以解譯相同的字串，根據文化特性的格式資訊用於剖析作業中的不同方式。</span><span class="sxs-lookup"><span data-stu-id="419a5-421">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-csharp[System.Int64.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int64.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="419a5-422">
            <paramref name="s" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-422">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="419a5-423">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-423">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="419a5-424">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-424">-or-</span>
          </span>
          <span data-ttu-id="419a5-425">
            <paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-425">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="419a5-426">
            <paramref name="s" /> 的格式與 <paramref name="style" /> 不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-426">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="419a5-427">
            <paramref name="s" /> 代表小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-427">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="419a5-428">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-428">-or-</span>
          </span>
          <span data-ttu-id="419a5-429">
            <paramref name="style" /> 支援小數數字，但 <paramref name="s" /> 包含非零的小數數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-429">
              <paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="419a5-430">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-430">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-431">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-431">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-432">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-432">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-433">如果目前執行個體的值不是零，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-433">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-434">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-434">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-435">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-435">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-436">建議的替代做法是呼叫<xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-436">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-437">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-437">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-438">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-438">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-439">目前執行個體的值，轉換為 <see cref="T:System.Byte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-439">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-440">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-440">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-441">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-441">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-442">建議的替代做法是呼叫<xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-442">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-443">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-443">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-444">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-444">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-445">目前執行個體的值，轉換為 <see cref="T:System.Char" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-445">The value of the current instance, converted to a <see cref="T:System.Char" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-446">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-446">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-447">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-447">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-448">建議的替代做法是呼叫<xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-448">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-449">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-449">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-450">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-450">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="419a5-451">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-451">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-452">不支援這個轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-452">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="419a5-453">沒有傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-453">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="419a5-454">在所有情況下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-454">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-455">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-455">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-456">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-456">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-457">目前執行個體的值，轉換為 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-457">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-458">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-458">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-459">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-459">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-460">建議的替代做法是呼叫<xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-460">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-461">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-461">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-462">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-462">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-463">目前執行個體的值，轉換為 <see cref="T:System.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-463">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-464">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-464">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-465">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-465">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-466">建議的替代做法是呼叫<xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-466">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-467">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-467">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-468">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-468">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-469">目前執行個體的值，轉換為 <see cref="T:System.Int16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-469">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-470">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-470">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-471">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-471">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-472">建議的替代做法是呼叫<xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-472">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-473">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-473">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-474">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-474">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-475">目前執行個體的值，轉換為 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-475">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-476">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-477">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-477">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-478">建議的替代做法是呼叫<xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-478">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-479">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-479">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-480">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-480">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-481">目前執行個體的值，未變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-481">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-482">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-483">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-483">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-484">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-484">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-485">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-485">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-486">目前執行個體的值，轉換為 <see cref="T:System.SByte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-486">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-487">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-487">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-488">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-488">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-489">建議的替代做法是呼叫<xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-489">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-490">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-490">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-491">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-491">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-492">目前執行個體的值，轉換為 <see cref="T:System.Single" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-492">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-493">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-493">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-494">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-494">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-495">建議的替代做法是呼叫<xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-495">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="419a5-496">此 <see cref="T:System.Int64" /> 值轉換所得的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-496">The type to which to convert this <see cref="T:System.Int64" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="419a5-497">
            <see cref="T:System.IFormatProvider" /> 實作，提供傳回值格式的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-497">An <see cref="T:System.IFormatProvider" /> implementation that provides information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-498">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-498">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-499">目前執行個體的值，轉換為 <paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-499">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-500">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-500">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-501">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-501">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-502">建議的替代做法是呼叫`static`(`Shared` Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-502">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-503">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-503">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-504">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-504">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-505">目前執行個體的值，轉換為 <see cref="T:System.UInt16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-505">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-506">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-506">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-507">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-507">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-508">建議的替代做法是呼叫<xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-508">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-509">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-509">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-510">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-510">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-511">目前執行個體的值，轉換為 <see cref="T:System.UInt32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-511">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-512">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-512">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-513">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-513">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-514">建議的替代做法是呼叫<xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-514">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-515">這個參數已忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-515">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-516">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-516">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-517">目前執行個體的值，轉換為 <see cref="T:System.UInt64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-517">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-518">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="419a5-518">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="419a5-519">只有在 <xref:System.Int64> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="419a5-519">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="419a5-520">建議的替代做法是呼叫<xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-520">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="419a5-521">將這個執行個體的數值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-521">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="419a5-522">將這個執行個體的數值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-522">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-523">這個執行個體值的字串表示，包含減號 (如果數值為負) 及一連串範圍由 0 到 9 的數字 (沒有前置字元零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-523">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-524"><xref:System.Int64.ToString>方法格式<xref:System.Int64>預設值 （"G"或一般） 中的值使用的格式<xref:System.Globalization.NumberFormatInfo>目前文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-524">The <xref:System.Int64.ToString> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="419a5-525">如果您想要指定不同的格式或文化特性，使用的其他多載<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="419a5-525">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="419a5-526">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="419a5-526">To use format</span></span>|<span data-ttu-id="419a5-527">文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-527">For culture</span></span>|<span data-ttu-id="419a5-528">使用多載</span><span class="sxs-lookup"><span data-stu-id="419a5-528">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="419a5-529">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="419a5-529">Default ("G") format</span></span>|<span data-ttu-id="419a5-530">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-530">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="419a5-531">以特定格式</span><span class="sxs-lookup"><span data-stu-id="419a5-531">A specific format</span></span>|<span data-ttu-id="419a5-532">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-532">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="419a5-533">以特定格式</span><span class="sxs-lookup"><span data-stu-id="419a5-533">A specific format</span></span>|<span data-ttu-id="419a5-534">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-534">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="419a5-535">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="419a5-535">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="419a5-536">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-536">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="419a5-537">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-537">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-538">下列範例會顯示<xref:System.Int64>值使用預設<xref:System.Int64.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-538">The following example displays an <xref:System.Int64> value using the default <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="419a5-539">它也會顯示的字串表示<xref:System.Int64>天時，使用標準格式規範數目的值。</span><span class="sxs-lookup"><span data-stu-id="419a5-539">It also displays the string representations of the <xref:System.Int64> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="419a5-540">範例會顯示使用 EN-US 文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="419a5-540">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="419a5-541">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-541">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int64.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="419a5-542">
            <see cref="T:System.IFormatProvider" />，提供特定文化特性的格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-542">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-543">使用指定的特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-543">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-544">這個執行個體值的字串表示，如同 <paramref name="provider" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-544">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-545"><xref:System.Int64.ToString%28System.IFormatProvider%29>方法格式<xref:System.Int64>預設值 （"G"或一般） 中的值使用的格式<xref:System.Globalization.NumberFormatInfo>指定文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-545">The <xref:System.Int64.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="419a5-546">如果您想要指定不同的格式或目前的文化特性，使用的其他多載<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="419a5-546">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="419a5-547">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="419a5-547">To use format</span></span>|<span data-ttu-id="419a5-548">文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-548">For culture</span></span>|<span data-ttu-id="419a5-549">使用多載</span><span class="sxs-lookup"><span data-stu-id="419a5-549">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="419a5-550">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="419a5-550">Default ("G") format</span></span>|<span data-ttu-id="419a5-551">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-551">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="419a5-552">以特定格式</span><span class="sxs-lookup"><span data-stu-id="419a5-552">A specific format</span></span>|<span data-ttu-id="419a5-553">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-553">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="419a5-554">以特定格式</span><span class="sxs-lookup"><span data-stu-id="419a5-554">A specific format</span></span>|<span data-ttu-id="419a5-555">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-555">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="419a5-556">`provider`參數是該物件會實作<xref:System.IFormatProvider>介面。</span><span class="sxs-lookup"><span data-stu-id="419a5-556">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="419a5-557">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性格式資訊由這個方法傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="419a5-557">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="419a5-558">實作的物件<xref:System.IFormatProvider>可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="419a5-558">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="419a5-559">A<xref:System.Globalization.CultureInfo>物件，表示要使用之格式化規則所屬的文化特性。</span><span class="sxs-lookup"><span data-stu-id="419a5-559">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="419a5-560">A<xref:System.Globalization.NumberFormatInfo>包含特定數字的格式資訊，此值的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-560">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="419a5-561">自訂物件實作<xref:System.IFormatProvider>，且<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-561">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="419a5-562">如果`provider`已`null`或<xref:System.Globalization.NumberFormatInfo>無法取得物件，從`provider`，以格式化傳回值<xref:System.Globalization.NumberFormatInfo>目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-562">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="419a5-563">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="419a5-563">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="419a5-564">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-564">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="419a5-565">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-565">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-566">下列範例顯示的字串表示法<xref:System.Int64>值使用<xref:System.Globalization.CultureInfo>代表數個不同的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-566">The following example displays the string representation of an <xref:System.Int64> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="419a5-567">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-567">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int64.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="419a5-568">數值格式字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-568">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-569">使用指定格式，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-569">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-570">這個執行個體值的字串表示，如同 <paramref name="format" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-570">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-571"><xref:System.Int64.ToString%28System.String%29>方法格式<xref:System.Int64>中指定的格式，使用值<xref:System.Globalization.NumberFormatInfo>物件，表示目前的文化特性的慣例。</span><span class="sxs-lookup"><span data-stu-id="419a5-571">The <xref:System.Int64.ToString%28System.String%29> method formats an <xref:System.Int64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="419a5-572">如果您想要使用預設值 （"G"或一般） 格式或指定不同的文化特性，請使用的其他多載<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="419a5-572">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="419a5-573">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="419a5-573">To use format</span></span>|<span data-ttu-id="419a5-574">文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-574">For culture</span></span>|<span data-ttu-id="419a5-575">使用多載</span><span class="sxs-lookup"><span data-stu-id="419a5-575">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="419a5-576">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="419a5-576">Default ("G") format</span></span>|<span data-ttu-id="419a5-577">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-577">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="419a5-578">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="419a5-578">Default ("G") format</span></span>|<span data-ttu-id="419a5-579">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-579">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="419a5-580">以特定格式</span><span class="sxs-lookup"><span data-stu-id="419a5-580">A specific format</span></span>|<span data-ttu-id="419a5-581">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-581">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="419a5-582">`format`參數可以是任何有效的標準數值格式規範，除了"R"，以及自訂數值格式規範的任何組合。</span><span class="sxs-lookup"><span data-stu-id="419a5-582">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="419a5-583">如果`format`是`null`或空字串 ("")，這個執行個體傳回的值會格式化以一般的數值格式規範 ("G")。</span><span class="sxs-lookup"><span data-stu-id="419a5-583">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="419a5-584">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="419a5-584">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="419a5-585">如需有關數值格式規範[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-585">For more information about numeric format specifiers, [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="419a5-586">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-586">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="419a5-587">這個執行個體傳回的值會以格式化<xref:System.Globalization.NumberFormatInfo>目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="419a5-587">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-588">下列範例會顯示<xref:System.Int64>值使用每個支援標準數值格式規範，以及兩個自訂數值格式字串。</span><span class="sxs-lookup"><span data-stu-id="419a5-588">The following example displays an <xref:System.Int64> value using each of the supported standard numeric format specifiers together with two custom numeric format strings.</span></span> <span data-ttu-id="419a5-589">在將數字的值轉換為字串，此範例會使用 EN-US 文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="419a5-589">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="419a5-590">
            <paramref name="format" /> 無效或不受支援。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-590">
              <paramref name="format" /> is invalid or not supported.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="419a5-591">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-591">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">
          <span data-ttu-id="419a5-592">標準數值格式字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-592">Standard Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">
          <span data-ttu-id="419a5-593">自訂數值格式字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-593">Custom Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="419a5-594">如何：以前置字元零來填補數字</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-594">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int64.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="419a5-595">數值格式字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-595">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="419a5-596">物件，提供關於這個執行個體的特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-596">An object that supplies culture-specific formatting information about this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-597">使用指定的格式和特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-597">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-598">這個執行個體值的字串表示，如同 <paramref name="format" /> 和 <paramref name="provider" /> 所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-598">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-599"><xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.Int64>中指定的格式，使用值<xref:System.Globalization.NumberFormatInfo>指定文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-599">The <xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="419a5-600">如果您想要使用預設格式或文化特性設定，使用的其他多載<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="419a5-600">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="419a5-601">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="419a5-601">To use format</span></span>|<span data-ttu-id="419a5-602">文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-602">For culture</span></span>|<span data-ttu-id="419a5-603">使用多載</span><span class="sxs-lookup"><span data-stu-id="419a5-603">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="419a5-604">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="419a5-604">Default ("G") format</span></span>|<span data-ttu-id="419a5-605">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-605">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="419a5-606">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="419a5-606">Default ("G") format</span></span>|<span data-ttu-id="419a5-607">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-607">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="419a5-608">以特定格式</span><span class="sxs-lookup"><span data-stu-id="419a5-608">A specific format</span></span>|<span data-ttu-id="419a5-609">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="419a5-609">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
  
 <span data-ttu-id="419a5-610">`format`參數可以是標準或自訂數值格式字串。</span><span class="sxs-lookup"><span data-stu-id="419a5-610">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="419a5-611">支援"R"（或"r"） 以外的所有標準數值格式字串，因為所有的自訂數值格式字元。</span><span class="sxs-lookup"><span data-stu-id="419a5-611">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="419a5-612">如果`format`是`null`或空字串 ("")，傳回值，這個執行個體使用一般的數值格式規範 ("G") 格式。</span><span class="sxs-lookup"><span data-stu-id="419a5-612">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="419a5-613">`provider`參數是該物件會實作<xref:System.IFormatProvider>介面。</span><span class="sxs-lookup"><span data-stu-id="419a5-613">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="419a5-614">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性格式資訊由這個方法傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="419a5-614">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="419a5-615">實作的物件<xref:System.IFormatProvider>可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="419a5-615">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="419a5-616">A<xref:System.Globalization.CultureInfo>物件，表示要使用之格式化規則所屬的文化特性。</span><span class="sxs-lookup"><span data-stu-id="419a5-616">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="419a5-617">A<xref:System.Globalization.NumberFormatInfo>包含特定數字的格式資訊，此值的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-617">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="419a5-618">自訂物件實作<xref:System.IFormatProvider>，且<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-618">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="419a5-619">如果`provider`是`null`或是<xref:System.Globalization.NumberFormatInfo>無法取得物件，從`provider`，以格式化傳回值，這個執行個體<xref:System.Globalization.NumberFormatInfo>目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="419a5-619">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="419a5-620">.NET Framework 會提供廣泛的格式化支援，這會在下列格式化主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="419a5-620">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="419a5-621">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)並[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-621">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="419a5-622">如需有關格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="419a5-622">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-623">下列範例顯示正值和負值針對三個不同的文化特性使用每個支援標準數值格式規範。</span><span class="sxs-lookup"><span data-stu-id="419a5-623">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="419a5-624">
            <paramref name="format" /> 無效或不受支援。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-624">
              <paramref name="format" /> is invalid or not supported.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="419a5-625">在 .NET 中將類型格式化</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-625">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">
          <span data-ttu-id="419a5-626">標準數值格式字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-626">Standard Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">
          <span data-ttu-id="419a5-627">自訂數值格式字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-627">Custom Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="419a5-628">如何：以前置字元零來填補數字</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-628">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="419a5-629">範例：.NET Framework 4 格式化公用程式</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-629">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="419a5-630">將數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-630">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="419a5-631">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-631">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.int64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.int64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="419a5-632">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-632">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="419a5-633">如果轉換成功，這個方法會傳回包含與 <paramref name="s" /> 中內含數字相等的 64 位元帶正負號整數，如果轉換失敗則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-633">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="419a5-634">如果 <paramref name="s" /> 參數為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是正確的格式，或是表示小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字，則轉換會失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-634">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="419a5-635">這個參數未初始化便傳遞，<paramref name="result" /> 中原始提供的任何值都將遭到覆寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-635">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-636">將數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-636">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="419a5-637">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-637">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-638">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-638">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-639"><xref:System.Int64.TryParse%2A>方法就像是<xref:System.Int64.Parse%2A>方法，除了<xref:System.Int64.TryParse%2A>方法不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="419a5-639">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="419a5-640">它就不需要使用例外狀況處理來測試<xref:System.FormatException>萬一`s`無效，無法成功剖析。</span><span class="sxs-lookup"><span data-stu-id="419a5-640">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="419a5-641">`s`參數會包含數字的格式：</span><span class="sxs-lookup"><span data-stu-id="419a5-641">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="419a5-642">[ws][簽署] 數字 [ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-642">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="419a5-643">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-643">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="419a5-644">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="419a5-644">The following table describes each element.</span></span>  
  
|<span data-ttu-id="419a5-645">元素</span><span class="sxs-lookup"><span data-stu-id="419a5-645">Element</span></span>|<span data-ttu-id="419a5-646">描述</span><span class="sxs-lookup"><span data-stu-id="419a5-646">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="419a5-647">*ws*</span><span class="sxs-lookup"><span data-stu-id="419a5-647">*ws*</span></span>|<span data-ttu-id="419a5-648">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="419a5-648">An optional white space.</span></span>|  
|<span data-ttu-id="419a5-649">*簽署*</span><span class="sxs-lookup"><span data-stu-id="419a5-649">*sign*</span></span>|<span data-ttu-id="419a5-650">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-650">An optional sign.</span></span>|  
|<span data-ttu-id="419a5-651">*digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-651">*digits*</span></span>|<span data-ttu-id="419a5-652">範圍從 0 到 9 的數字順序。</span><span class="sxs-lookup"><span data-stu-id="419a5-652">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="419a5-653">`s`參數會解譯使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="419a5-653">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="419a5-654">除了十進位數字，只允許前置和尾端空格，以及前置正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-654">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="419a5-655">若要明確定義的樣式項目，以及可出現在特定文化特性格式資訊`s`，使用<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-655">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method.</span></span>  
  
 <span data-ttu-id="419a5-656">`s`參數會剖析使用的格式設定資訊中<xref:System.Globalization.NumberFormatInfo>初始化目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-656">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="419a5-657">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="419a5-657">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="419a5-658">這個多載<xref:System.Int64.TryParse%2A>方法會解譯中的所有位數`s`參數做為十進位數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-658">This overload of the <xref:System.Int64.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="419a5-659">若要剖析的十六進位數字的字串表示，呼叫<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>多載。</span><span class="sxs-lookup"><span data-stu-id="419a5-659">To parse the string representation of a hexadecimal number, call the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-660">下列範例會呼叫<xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType>具有幾個不同字串值的方法。</span><span class="sxs-lookup"><span data-stu-id="419a5-660">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="419a5-661">部分的字串，<xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29>方法是無法在此範例中，將會：</span><span class="sxs-lookup"><span data-stu-id="419a5-661">Some of the strings that the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="419a5-662">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="419a5-662">"9432.0".</span></span> <span data-ttu-id="419a5-663">轉換會失敗，因為字串不能包含小數點;它必須包含整數數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-663">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="419a5-664">"16,667".</span><span class="sxs-lookup"><span data-stu-id="419a5-664">"16,667".</span></span> <span data-ttu-id="419a5-665">轉換會失敗，因為字串不能包含群組分隔符號;它必須包含整數數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-665">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="419a5-666">"(100)".</span><span class="sxs-lookup"><span data-stu-id="419a5-666">"(100)".</span></span> <span data-ttu-id="419a5-667">轉換會失敗，因為字串不能包含不同於目前的文化特性所定義的負號<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="419a5-667">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="419a5-668">「 01FA"。</span><span class="sxs-lookup"><span data-stu-id="419a5-668">"01FA".</span></span> <span data-ttu-id="419a5-669">轉換會失敗，因為字串不能包含十六進位數字;它必須包含十進位數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-669">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="419a5-670">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-670">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="419a5-671">範例：.NET Framework 4 格式化公用程式</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-671">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="419a5-672">字串，包含要轉換的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-672">A string containing a number to convert.</span>
          </span>
          <span data-ttu-id="419a5-673">這個字串使用 <paramref name="style" /> 指定的樣式來解譯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-673">The string is interpreted using the style specified by <paramref name="style" />.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="419a5-674">列舉值的位元組合，表示 <paramref name="s" /> 中可以存在的樣式項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-674">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="419a5-675">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-675">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="419a5-676">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-676">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="419a5-677">如果轉換成功，這個方法會傳回包含與 <paramref name="s" /> 中內含數字相等的 64 位元帶正負號整數，如果轉換失敗則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-677">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="419a5-678">轉換失敗的狀況包括：如果 <paramref name="s" /> 參數為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式與 <paramref name="style" /> 不相容，或是表示小於 <see cref="F:System.Int64.MinValue" /> 或大於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-678">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="419a5-679">這個參數未初始化便傳遞，<paramref name="result" /> 中原始提供的任何值都將遭到覆寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-679">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="419a5-680">將指定樣式和特定文化特性格式之數字的字串表示轉換成它的對等 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-680">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="419a5-681">傳回值會指出轉換成功或失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-681">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="419a5-682">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-682">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419a5-683"><xref:System.Int64.TryParse%2A>方法就像是<xref:System.Int64.Parse%2A>方法，除了<xref:System.Int64.TryParse%2A>方法不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="419a5-683">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="419a5-684">它就不需要使用例外狀況處理來測試<xref:System.FormatException>萬一`s`無效，無法成功剖析。</span><span class="sxs-lookup"><span data-stu-id="419a5-684">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="419a5-685">`style`參數定義中允許的樣式項目 （例如空格或正的或負號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="419a5-685">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="419a5-686">它必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="419a5-686">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="419a5-687">值而定`style`，則`s`參數可能包括下列項目：</span><span class="sxs-lookup"><span data-stu-id="419a5-687">Depending on the value of `style`,the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="419a5-688">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-688">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="419a5-689">或者，如果`style`參數包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="419a5-689">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="419a5-690">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="419a5-690">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="419a5-691">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-691">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="419a5-692">下表說明每個元素。</span><span class="sxs-lookup"><span data-stu-id="419a5-692">The following table describes each element.</span></span>  
  
|<span data-ttu-id="419a5-693">元素</span><span class="sxs-lookup"><span data-stu-id="419a5-693">Element</span></span>|<span data-ttu-id="419a5-694">描述</span><span class="sxs-lookup"><span data-stu-id="419a5-694">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="419a5-695">*ws*</span><span class="sxs-lookup"><span data-stu-id="419a5-695">*ws*</span></span>|<span data-ttu-id="419a5-696">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="419a5-696">Optional white space.</span></span> <span data-ttu-id="419a5-697">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，或在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-697">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="419a5-698">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-698">A culture-specific currency symbol.</span></span> <span data-ttu-id="419a5-699">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>的屬性<xref:System.Globalization.NumberFormatInfo>所傳回的物件<xref:System.IFormatProvider.GetFormat%2A>方法`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="419a5-699">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="419a5-700">貨幣符號會出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-700">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-701">*簽署*</span><span class="sxs-lookup"><span data-stu-id="419a5-701">*sign*</span></span>|<span data-ttu-id="419a5-702">選擇性正負號。</span><span class="sxs-lookup"><span data-stu-id="419a5-702">An optional sign.</span></span> <span data-ttu-id="419a5-703">符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>或<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-703">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="419a5-704">*digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-704">*digits*</span></span><br /><br /> <span data-ttu-id="419a5-705">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-705">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="419a5-706">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="419a5-706">*exponential_digits*</span></span>|<span data-ttu-id="419a5-707">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="419a5-707">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="419a5-708">針對*fractional_digits*，只有數字 0 是有效。</span><span class="sxs-lookup"><span data-stu-id="419a5-708">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="419a5-709">*、*</span><span class="sxs-lookup"><span data-stu-id="419a5-709">*,*</span></span>|<span data-ttu-id="419a5-710">特定文化特性的千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-710">A culture-specific thousands separator.</span></span> <span data-ttu-id="419a5-711">千分位分隔符號所指定的文化特性`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-711">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-712">*.*</span><span class="sxs-lookup"><span data-stu-id="419a5-712">*.*</span></span>|<span data-ttu-id="419a5-713">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-713">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="419a5-714">指定的文化特性的小數點符號`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-714">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-715">*e*</span><span class="sxs-lookup"><span data-stu-id="419a5-715">*e*</span></span>|<span data-ttu-id="419a5-716">'E' 或者 'E' 字元，表示代表的值時，會以指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-716">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="419a5-717">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="419a5-717">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="419a5-718">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="419a5-718">*hexdigits*</span></span>|<span data-ttu-id="419a5-719">一連串的從 0 到 f 或 0 到 f 的十六進位數字</span><span class="sxs-lookup"><span data-stu-id="419a5-719">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="419a5-720">中的任何終止 NUL (u+0000) 字元`s`剖析作業中，不論值會忽略`style`引數。</span><span class="sxs-lookup"><span data-stu-id="419a5-720">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="419a5-721">十進位數字的字串 (對應至<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>旗標) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="419a5-721">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="419a5-722">大部分的其餘<xref:System.Globalization.NumberStyles>成員控制可能，但不是一定要出現在此輸入字串的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-722">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="419a5-723">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響可能會出現在項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-723">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="419a5-724">非複合的 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="419a5-724">Non-composite NumberStyles values</span></span>|<span data-ttu-id="419a5-725">允許 s 除了數字中的項目</span><span class="sxs-lookup"><span data-stu-id="419a5-725">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="419a5-726">只有小數位數。</span><span class="sxs-lookup"><span data-stu-id="419a5-726">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="419a5-727">小數點 ( *。*</span><span class="sxs-lookup"><span data-stu-id="419a5-727">The decimal point ( *.*</span></span> <span data-ttu-id="419a5-728">) 和*fractional_digits*項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-728">) and *fractional_digits* elements.</span></span> <span data-ttu-id="419a5-729">不過， *fractional_digits*必須包含一個或多個 0 的數字或這個方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="419a5-729">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="419a5-730">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-730">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="419a5-731">`s`參數必須代表整數的範圍內<xref:System.Int64>沒有非零的小數部分的資料類型。</span><span class="sxs-lookup"><span data-stu-id="419a5-731">The `s` parameter must represent an integer within the range of the <xref:System.Int64> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="419a5-732">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-732">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="419a5-733">*Ws*結尾的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-733">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="419a5-734">之前不可以出現登*位數*。</span><span class="sxs-lookup"><span data-stu-id="419a5-734">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="419a5-735">之後可以出現的徵兆*位數*。</span><span class="sxs-lookup"><span data-stu-id="419a5-735">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="419a5-736">*號*括號括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-736">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="419a5-737">千分位分隔符號 ( *，* ) 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-737">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="419a5-738">*$* 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-738">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="419a5-739">所有項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-739">All elements.</span></span> <span data-ttu-id="419a5-740">`s`參數不能代表十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-740">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="419a5-741">*Ws*元素的開頭或結尾`s`，*登*開頭`s`，並在小數點 ( *。*</span><span class="sxs-lookup"><span data-stu-id="419a5-741">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="419a5-742">) 符號。</span><span class="sxs-lookup"><span data-stu-id="419a5-742">) symbol.</span></span> <span data-ttu-id="419a5-743">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="419a5-743">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="419a5-744">*Ws*，*號*，千分位分隔符號 (*，*)，和小數點 (*。*) 項目。</span><span class="sxs-lookup"><span data-stu-id="419a5-744">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="419a5-745">所有的樣式，除了`s`無法代表十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="419a5-745">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="419a5-746">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>旗標用，`s`必須是不含前置詞的十六進位值。</span><span class="sxs-lookup"><span data-stu-id="419a5-746">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="419a5-747">例如，"C9AF3 「 剖析成功，但是"0xC9AF3 」 並不會。</span><span class="sxs-lookup"><span data-stu-id="419a5-747">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="419a5-748">只有其他旗標可存在於`style`都<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="419a5-748">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="419a5-749">(<xref:System.Globalization.NumberStyles>列舉型別有複合樣式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含這兩個空白字元旗標。)</span><span class="sxs-lookup"><span data-stu-id="419a5-749">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="419a5-750">`provider`參數是<xref:System.IFormatProvider>實作，例如<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.NumberFormatInfo>物件，其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="419a5-750">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="419a5-751"><xref:System.Globalization.NumberFormatInfo>物件提供特定文化特性格式資訊`s`。</span><span class="sxs-lookup"><span data-stu-id="419a5-751">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="419a5-752">如果`provider`已`null`，則<xref:System.Globalization.NumberFormatInfo>物件會使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="419a5-752">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="419a5-753">下列範例會呼叫<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>具有不同的字串數目的方法和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="419a5-753">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="419a5-754">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-754">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="419a5-755">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-755">-or-</span>
          </span>
          <span data-ttu-id="419a5-756">
            <paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-756">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="419a5-757">在 .NET 中剖析數值字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="419a5-757">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>