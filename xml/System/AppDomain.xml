<Type Name="AppDomain" FullName="System.AppDomain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="77e5b29fae81c7e7c9afa3a56b486d48eb06a161" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37484884" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AppDomain : MarshalByRefObject, _AppDomain, System.Security.IEvidenceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AppDomain extends System.MarshalByRefObject implements class System._AppDomain, class System.Security.IEvidenceFactory" />
  <TypeSignature Language="DocId" Value="T:System.AppDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AppDomain&#xA;Inherits MarshalByRefObject&#xA;Implements _AppDomain, IEvidenceFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomain sealed : MarshalByRefObject, _AppDomain, System::Security::IEvidenceFactory" />
  <TypeSignature Language="F#" Value="type AppDomain = class&#xA;    inherit MarshalByRefObject&#xA;    interface _AppDomain&#xA;    interface IEvidenceFactory" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System._AppDomain</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IEvidenceFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System._AppDomain))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8a822-101">Represents an application domain, which is an isolated environment where applications execute.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a822-101">Represents an application domain, which is an isolated environment where applications execute.</span>
      </span>
      <span data-ttu-id="8a822-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a822-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-103">應用程式定義域，由<xref:System.AppDomain>物件，可協助提供隔離、 卸載和安全性界限執行 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-103">Application domains, which are represented by <xref:System.AppDomain> objects, help provide isolation, unloading, and security boundaries for executing managed code.</span></span>  
  
-   <span data-ttu-id="8a822-104">您可以使用應用程式定義域來隔離可能會使處理序的工作。</span><span class="sxs-lookup"><span data-stu-id="8a822-104">Use application domains to isolate tasks that might bring down a process.</span></span> <span data-ttu-id="8a822-105">如果狀態<xref:System.AppDomain>，正在執行的工作變得不穩定，<xref:System.AppDomain>即可予以卸載而不會影響此程序。</span><span class="sxs-lookup"><span data-stu-id="8a822-105">If the state of the <xref:System.AppDomain> that's executing a task becomes unstable, the <xref:System.AppDomain> can be unloaded without affecting the process.</span></span> <span data-ttu-id="8a822-106">當長時間執行的處理序，必須將它不需要重新啟動時，這很重要。</span><span class="sxs-lookup"><span data-stu-id="8a822-106">This is important when a process must run for long periods without restarting.</span></span> <span data-ttu-id="8a822-107">您也可以使用應用程式定義域來隔離不應共用資料的工作。</span><span class="sxs-lookup"><span data-stu-id="8a822-107">You can also use application domains to isolate tasks that should not share data.</span></span>  
  
-   <span data-ttu-id="8a822-108">如果組件載入至預設應用程式定義域時，它不能從記憶體卸載的情況，而處理序正在執行。</span><span class="sxs-lookup"><span data-stu-id="8a822-108">If an assembly is loaded into the default application domain, it cannot be unloaded from memory while the process is running.</span></span> <span data-ttu-id="8a822-109">不過，如果您開啟以載入和執行組件的第二個應用程式定義域時，組件會卸載該應用程式定義域卸載時。</span><span class="sxs-lookup"><span data-stu-id="8a822-109">However, if you open a second application domain to load and execute the assembly, the assembly is unloaded when that application domain is unloaded.</span></span> <span data-ttu-id="8a822-110">您可以使用這項技巧來減少有時候使用大型的 Dll 的長時間執行處理序的工作集。</span><span class="sxs-lookup"><span data-stu-id="8a822-110">Use this technique to minimize the working set of long-running processes that occasionally use large DLLs.</span></span>  
  
 <span data-ttu-id="8a822-111">多個應用程式定義域可以單一處理序中執行;不過，沒有應用程式定義域和執行緒之間的一對一關聯性。</span><span class="sxs-lookup"><span data-stu-id="8a822-111">Multiple application domains can run in a single process; however, there is not a one-to-one correlation between application domains and threads.</span></span> <span data-ttu-id="8a822-112">數個執行緒可以隸屬於單一應用程式網域，而且雖然之給定的執行緒並不侷限於單一應用程式網域，在任何時候，執行緒會執行單一應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-112">Several threads can belong to a single application domain, and while a given thread is not confined to a single application domain, at any given time, a thread executes in a single application domain.</span></span>  
  
 <span data-ttu-id="8a822-113">使用建立應用程式定義域<xref:System.AppDomain.CreateDomain%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-113">Application domains are created using the <xref:System.AppDomain.CreateDomain%2A> method.</span></span> <span data-ttu-id="8a822-114"><xref:System.AppDomain> 執行個體用來載入和執行組件 (<xref:System.Reflection.Assembly>)。</span><span class="sxs-lookup"><span data-stu-id="8a822-114"><xref:System.AppDomain> instances are used to load and execute assemblies (<xref:System.Reflection.Assembly>).</span></span> <span data-ttu-id="8a822-115">當<xref:System.AppDomain>已不再使用中，它可以卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-115">When an <xref:System.AppDomain> is no longer in use, it can be unloaded.</span></span>  
  
 <span data-ttu-id="8a822-116"><xref:System.AppDomain>類別會實作一組可讓應用程式在載入組件，應用程式定義域將會卸載，或擲回未處理的例外狀況時回應的事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-116">The <xref:System.AppDomain> class implements a set of events that enable applications to respond when an assembly is loaded, when an application domain will be unloaded, or when an unhandled exception is thrown.</span></span>  
  
 <span data-ttu-id="8a822-117">如需有關如何使用應用程式定義域的詳細資訊，請參閱 <<c0> [ 應用程式定義域](~/docs/framework/app-domains/application-domains.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-117">For more information on using application domains, see [Application Domains](~/docs/framework/app-domains/application-domains.md).</span></span>  
  
 <span data-ttu-id="8a822-118">這個類別會實作<xref:System.MarshalByRefObject>， <xref:System._AppDomain>，和<xref:System.Security.IEvidenceFactory>介面。</span><span class="sxs-lookup"><span data-stu-id="8a822-118">This class implements the <xref:System.MarshalByRefObject>, <xref:System._AppDomain>, and <xref:System.Security.IEvidenceFactory> interfaces.</span></span>  
  
 <span data-ttu-id="8a822-119">您應該永遠不會建立可遠端處理包裝函式<xref:System.AppDomain>物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-119">You should never create a remotable wrapper for an <xref:System.AppDomain> object.</span></span> <span data-ttu-id="8a822-120">如此一來，無法發行的遠端參考<xref:System.AppDomain>，例如公開方法<xref:System.AppDomain.CreateInstance%2A>遠端存取並有效地終結該的 程式碼存取安全性<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="8a822-120">Doing so could publish a remote reference to that <xref:System.AppDomain>, exposing methods such as <xref:System.AppDomain.CreateInstance%2A> to remote access and effectively destroying code access security for that <xref:System.AppDomain>.</span></span> <span data-ttu-id="8a822-121">惡意用戶端連接到遠端<xref:System.AppDomain>無法存取任何資源<xref:System.AppDomain>本身具有存取權。</span><span class="sxs-lookup"><span data-stu-id="8a822-121">Malicious clients connecting to the remoted <xref:System.AppDomain> could obtain access to any resource the <xref:System.AppDomain> itself has access to.</span></span> <span data-ttu-id="8a822-122">不會建立可遠端處理的包裝函式延伸任何型別的<xref:System.MarshalByRefObject>和實作可能遭到惡意用戶端用來略過安全性系統的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-122">Do not create remotable wrappers for any type that extends <xref:System.MarshalByRefObject> and that implements methods that could be used by malicious clients to bypass the security system.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8a822-123">預設值<xref:System.AppDomainSetup.DisallowCodeDownload%2A?displayProperty=nameWithType>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="8a822-123">The default value for the <xref:System.AppDomainSetup.DisallowCodeDownload%2A?displayProperty=nameWithType> property is `false`.</span></span> <span data-ttu-id="8a822-124">此設定是不安全的服務。</span><span class="sxs-lookup"><span data-stu-id="8a822-124">This setting is unsafe for services.</span></span> <span data-ttu-id="8a822-125">若要避免服務下載部分信任程式碼，請將此屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="8a822-125">To prevent services from downloading partially trusted code, set this property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-126">此範例示範如何建立新<xref:System.AppDomain>，具現化型別中的新<xref:System.AppDomain>，並與該類型的物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-126">This example shows how to create a new <xref:System.AppDomain>, instantiate a type in that new <xref:System.AppDomain>, and communicate with that type’s object.</span></span> <span data-ttu-id="8a822-127">此外，此範例示範如何卸載<xref:System.AppDomain>造成要進行記憶體回收的物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-127">In addition, this example shows how to unload the <xref:System.AppDomain> causing the object to be garbage collected.</span></span>  
  
 [!code-cpp[AppDomainX#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainX/cpp/AppDomainX.cpp#1)]
 [!code-csharp[AppDomainX#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainX/cs/AppDomainX.cs#1)]
 [!code-vb[AppDomainX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainX/VB/AppDomainX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivationContext">
      <MemberSignature Language="C#" Value="public ActivationContext ActivationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ActivationContext ActivationContext" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.ActivationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationContext As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext ^ ActivationContext { ActivationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationContext : ActivationContext" Usage="System.AppDomain.ActivationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-128">Gets the activation context for the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-128">Gets the activation context for the current application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-129">物件，表示目前應用程式定義域的啟動內容，如果此定義域沒有任何啟動內容，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-129">An object that represents the activation context for the current application domain, or <see langword="null" /> if the domain has no activation context.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-130">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-130">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-131">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-131">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AppendPrivatePath">
      <MemberSignature Language="C#" Value="public void AppendPrivatePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPrivatePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.AppendPrivatePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendPrivatePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendPrivatePath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member AppendPrivatePath : string -&gt; unit&#xA;override this.AppendPrivatePath : string -&gt; unit" Usage="appDomain.AppendPrivatePath path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.AppendPrivatePath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("AppDomain.AppendPrivatePath has been deprecated. Please investigate the use of AppDomainSetup.PrivateBinPath instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="8a822-132">The name of the directory to be appended to the private path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-132">The name of the directory to be appended to the private path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-133">Appends the specified directory name to the private path list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-133">Appends the specified directory name to the private path list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-134">不建議使用這個屬性，因為它們已經被載入之後，它可能會針對組件變更探查的路徑。</span><span class="sxs-lookup"><span data-stu-id="8a822-134">The use of this property is not recommended, because it might change the probing path for assemblies after they have already been loaded.</span></span> <span data-ttu-id="8a822-135">請改用 <xref:System.AppDomainSetup.PrivateBinPath%2A?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-135">Use the <xref:System.AppDomainSetup.PrivateBinPath%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 <span data-ttu-id="8a822-136">私用的路徑或相對搜尋路徑是相對於組件解析程式其中探查私用組件的基底目錄路徑。</span><span class="sxs-lookup"><span data-stu-id="8a822-136">The private path, or relative search path, is the path relative to the base directory where the assembly resolver probes for private assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-137">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-137">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-138">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-138">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-139">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-139">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationIdentity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity ApplicationIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity ApplicationIdentity" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.ApplicationIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationIdentity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ ApplicationIdentity { ApplicationIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationIdentity : ApplicationIdentity" Usage="System.AppDomain.ApplicationIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-140">Gets the identity of the application in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-140">Gets the identity of the application in the application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-141">物件，可識別應用程式定義域中的應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-141">An object that identifies the application in the application domain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-142">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-142">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-143">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-143">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust ApplicationTrust { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust ApplicationTrust" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.ApplicationTrust" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationTrust As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ ApplicationTrust { System::Security::Policy::ApplicationTrust ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationTrust : System.Security.Policy.ApplicationTrust" Usage="System.AppDomain.ApplicationTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-144">Gets information describing permissions granted to an application and whether the application has a trust level that allows it to run.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-144">Gets information describing permissions granted to an application and whether the application has a trust level that allows it to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-145">物件，可針對應用程式定義域中的應用程式來封裝使用權限和信任資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-145">An object that encapsulates permission and trust information for the application in the application domain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-146">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-146">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-147">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-147">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ApplyPolicy">
      <MemberSignature Language="C#" Value="public string ApplyPolicy (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ApplyPolicy(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ApplyPolicy(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyPolicy (assemblyName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ApplyPolicy(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.ApplyPolicy : string -&gt; string" Usage="appDomain.ApplyPolicy assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-148">The assembly display name, in the form provided by the <see cref="P:System.Reflection.Assembly.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-148">The assembly display name, in the form provided by the <see cref="P:System.Reflection.Assembly.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-149">Returns the assembly display name after policy has been applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-149">Returns the assembly display name after policy has been applied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-150">A string containing the assembly display name after policy has been applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-150">A string containing the assembly display name after policy has been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-151"><xref:System.AppDomain.ApplyPolicy%2A>方法會採用組件的顯示名稱，並傳回原則後顯示名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-151">The <xref:System.AppDomain.ApplyPolicy%2A> method takes an assembly display name and returns the post-policy display name.</span></span> <span data-ttu-id="8a822-152">這非常有用，如果您要載入組件使用 「 原則 」，因為僅限反映的內容不會套用原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-152">This is useful if you need to load an assembly using policy, because the reflection-only context does not apply policy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyLoad">
      <MemberSignature Language="C#" Value="public event AssemblyLoadEventHandler AssemblyLoad;" />
      <MemberSignature Language="ILAsm" Value=".event class System.AssemblyLoadEventHandler AssemblyLoad" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.AssemblyLoad" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AssemblyLoad As AssemblyLoadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event AssemblyLoadEventHandler ^ AssemblyLoad;" />
      <MemberSignature Language="F#" Value="member this.AssemblyLoad : AssemblyLoadEventHandler " Usage="member this.AssemblyLoad : System.AssemblyLoadEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System._AppDomain.AssemblyLoad</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AssemblyLoadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-153">Occurs when an assembly is loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-153">Occurs when an assembly is loaded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-154"><xref:System.AssemblyLoadEventHandler>委派這個事件表示哪些組件已載入。</span><span class="sxs-lookup"><span data-stu-id="8a822-154">The <xref:System.AssemblyLoadEventHandler> delegate for this event indicates what assembly was loaded.</span></span>  
  
 <span data-ttu-id="8a822-155">若要註冊此事件的事件處理常式，您必須擁有必要的權限，或<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-155">To register an event handler for this event, you must have the required permissions, or a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="8a822-156">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-156">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-157">下列範例會示範<xref:System.AppDomain.AssemblyLoad>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-157">The following sample demonstrates the <xref:System.AppDomain.AssemblyLoad> event.</span></span>  
  
 <span data-ttu-id="8a822-158">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-158">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-159">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_AssemblyLoad#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_AssemblyLoad/CPP/assemblyload.cpp#1)]
 [!code-csharp[AppDomain_AssemblyLoad#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_AssemblyLoad/CS/assemblyload.cs#1)]
 [!code-vb[AppDomain_AssemblyLoad#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_AssemblyLoad/VB/assemblyload.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-160">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-160">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-161">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AssemblyResolve">
      <MemberSignature Language="C#" Value="public event ResolveEventHandler AssemblyResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ResolveEventHandler AssemblyResolve" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.AssemblyResolve" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AssemblyResolve As ResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event ResolveEventHandler ^ AssemblyResolve;" />
      <MemberSignature Language="F#" Value="member this.AssemblyResolve : ResolveEventHandler " Usage="member this.AssemblyResolve : System.ResolveEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System._AppDomain.AssemblyResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-162">Occurs when the resolution of an assembly fails.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-162">Occurs when the resolution of an assembly fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-163">它負責<xref:System.ResolveEventHandler>傳回組件中所指定此事件<xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType>屬性，或傳回 null，如果無法辨識的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-163">It is the responsibility of the <xref:System.ResolveEventHandler> for this event to return the assembly that is specified by the <xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType> property, or to return null if the assembly is not recognized.</span></span> <span data-ttu-id="8a822-164">組件必須載入到執行內容;如果載入僅限反映的內容時，會引發這個事件的負載將會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-164">The assembly must be loaded into an execution context; if it is loaded into the reflection-only context, the load that caused this event to be raised fails.</span></span>  
  
 <span data-ttu-id="8a822-165">如需使用這個事件的指引，請參閱 <<c0> [ 解析組件載入](~/docs/framework/app-domains/resolve-assembly-loads.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-165">For guidance on the use of this event, see [Resolving Assembly Loads](~/docs/framework/app-domains/resolve-assembly-loads.md).</span></span>  
  
 <span data-ttu-id="8a822-166">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，則<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>屬性會傳回要求無法解析組件載入的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-166">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType> property returns the assembly that requested the assembly load that could not be resolved.</span></span> <span data-ttu-id="8a822-167">例如，載入器可能無法載入要求的組件的相依性，因為要求的組件和其相依性不在探查路徑。</span><span class="sxs-lookup"><span data-stu-id="8a822-167">For example, the loader might be unable to load a dependency of the requesting assembly because the requesting assembly and its dependency are not in the probing path.</span></span> <span data-ttu-id="8a822-168">了解要求的組件的識別可能有助於在尋找相依性，或找出正確的版本中，如果使用多個版本的相依性。</span><span class="sxs-lookup"><span data-stu-id="8a822-168">Knowing the identity of the requesting assembly might be useful in locating the dependency or in identifying the correct version, if more than one version of the dependency is available.</span></span> <span data-ttu-id="8a822-169">如需詳細資訊，請參閱<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-169">For more information, see <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-170">開頭[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，則<xref:System.ResolveEventHandler>所有組件，包括資源組件都會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-170">Beginning with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <xref:System.ResolveEventHandler> event is raised for all assemblies, including resource assemblies.</span></span> <span data-ttu-id="8a822-171">在舊版中，資源組件不引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-171">In earlier versions, the event was not raised for resource assemblies.</span></span> <span data-ttu-id="8a822-172">如果當地語系化的作業系統，可能會呼叫處理常式多次： 每個文化特性後援鏈結中的一次。</span><span class="sxs-lookup"><span data-stu-id="8a822-172">If the operating system is localized, the handler might be called multiple times: once for each culture in the fallback chain.</span></span>  
  
 <span data-ttu-id="8a822-173">對於此事件，<xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType>套用原則之前，屬性會傳回組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-173">For this event, the <xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType> property returns the assembly name before policy is applied.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-174">如果此事件註冊一個以上的事件處理常式，事件 handlersarecalled，直到事件處理常式的傳回值的順序，不是`null`。</span><span class="sxs-lookup"><span data-stu-id="8a822-174">If more than one event handler is registered for this event, the event handlersarecalled in order until an event handler returns a value that isn't `null`.</span></span> <span data-ttu-id="8a822-175">後續的事件處理常式會被忽略。</span><span class="sxs-lookup"><span data-stu-id="8a822-175">Subsequent event handlers are ignored.</span></span>  
  
 <span data-ttu-id="8a822-176">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-176">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-177">下列範例會示範<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-177">The following sample demonstrates the <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-178">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-178">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-179">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-179">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AssemblyResolve#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyResolve/CPP/assemblyresolve.cpp#1)]
 [!code-csharp[AssemblyResolve#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyResolve/CS/assemblyresolve.cs#1)]
 [!code-vb[AssemblyResolve#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyResolve/VB/assemblyresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-180">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-180">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-181">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.ResolveEventArgs.RequestingAssembly" />
      </Docs>
    </Member>
    <Member MemberName="BaseDirectory">
      <MemberSignature Language="C#" Value="public string BaseDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseDirectory" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.BaseDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseDirectory : string" Usage="System.AppDomain.BaseDirectory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System._AppDomain.BaseDirectory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-182">Gets the base directory that the assembly resolver uses to probe for assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-182">Gets the base directory that the assembly resolver uses to probe for assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-183">組件解析程式用來探查組件的基底目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-183">The base directory that the assembly resolver uses to probe for assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-184">此屬性會對應至<xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-184">This property corresponds to the <xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8a822-185">它也可以擷取使用<xref:System.AppDomain.GetData%2A>與字串"APPBASE"的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-185">It can also be retrieved using the <xref:System.AppDomain.GetData%2A> method with the string "APPBASE".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-186">下列程式碼範例會建立新的應用程式定義域，指定要載入定義域時搜尋組件使用的基底目錄。</span><span class="sxs-lookup"><span data-stu-id="8a822-186">The following code example creates a new application domain, specifying a base directory to use when searching for assemblies to load into the domain.</span></span> <span data-ttu-id="8a822-187">然後此範例使用<xref:System.AppDomain.BaseDirectory%2A>屬性取得的基底目錄路徑，顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="8a822-187">The example then uses the <xref:System.AppDomain.BaseDirectory%2A> property to obtain the base directory path, for display to the console.</span></span>  
  
 [!code-cpp[ADSetup#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADSetup/CPP/adsetup.cpp#1)]
 [!code-csharp[ADSetup#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADSetup/CS/adsetup.cs#1)]
 [!code-vb[ADSetup#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADSetup/VB/adsetup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-188">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-188">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-189">存取路徑本身中的資訊，包括如果路徑的格式為"file:// 或\\\UNC\dir 或"c:\\"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-189">for access to the information in the path itself, including if the path is in the form "file://" or \\\UNC\dir or "c:\\".</span>
          </span>
          <span data-ttu-id="8a822-190">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-190">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomainSetup.ApplicationBase" />
      </Docs>
    </Member>
    <Member MemberName="ClearPrivatePath">
      <MemberSignature Language="C#" Value="public void ClearPrivatePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearPrivatePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ClearPrivatePath" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearPrivatePath ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearPrivatePath();" />
      <MemberSignature Language="F#" Value="abstract member ClearPrivatePath : unit -&gt; unit&#xA;override this.ClearPrivatePath : unit -&gt; unit" Usage="appDomain.ClearPrivatePath " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.ClearPrivatePath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("AppDomain.ClearPrivatePath has been deprecated. Please investigate the use of AppDomainSetup.PrivateBinPath instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-191">Resets the path that specifies the location of private assemblies to the empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-191">Resets the path that specifies the location of private assemblies to the empty string ("").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-192">私用路徑是相對於 common language runtime 會搜尋來尋找私用組件的基底目錄路徑。</span><span class="sxs-lookup"><span data-stu-id="8a822-192">The private path is a path relative to the base directory that the common language runtime searches to locate private assemblies.</span></span>  
  
 <span data-ttu-id="8a822-193">如需詳細資訊，請參閱<xref:System.AppDomainSetup.PrivateBinPath%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-193">For more information, see <xref:System.AppDomainSetup.PrivateBinPath%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-194">下列程式碼範例示範如何使用<xref:System.AppDomain.ClearPrivatePath%2A>方法，以從載入的組件時所要搜尋的私用路徑的清單中移除所有項目。</span><span class="sxs-lookup"><span data-stu-id="8a822-194">The following code example demonstrates how to use the <xref:System.AppDomain.ClearPrivatePath%2A> method to remove all entries from the list of private paths to search when assemblies are loaded.</span></span>  
  
 <span data-ttu-id="8a822-195">此方法現已淘汰，並不應該用於新的開發。</span><span class="sxs-lookup"><span data-stu-id="8a822-195">This method is now obsolete, and should not be used for new development.</span></span>  
  
 [!code-cpp[ADClearPrivatePath#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADClearPrivatePath/CPP/adclearprivatepath.cpp#1)]
 [!code-csharp[ADClearPrivatePath#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADClearPrivatePath/CS/adclearprivatepath.cs#1)]
 [!code-vb[ADClearPrivatePath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADClearPrivatePath/VB/adclearprivatepath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-196">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-196">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-197">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-197">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-198">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-198">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ClearShadowCopyPath">
      <MemberSignature Language="C#" Value="public void ClearShadowCopyPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearShadowCopyPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ClearShadowCopyPath" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearShadowCopyPath ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearShadowCopyPath();" />
      <MemberSignature Language="F#" Value="abstract member ClearShadowCopyPath : unit -&gt; unit&#xA;override this.ClearShadowCopyPath : unit -&gt; unit" Usage="appDomain.ClearShadowCopyPath " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.ClearShadowCopyPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AppDomainSetup.ShadowCopyDirectories")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-199">Resets the list of directories containing shadow copied assemblies to the empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-199">Resets the list of directories containing shadow copied assemblies to the empty string ("").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-200">陰影複製路徑是儲存的陰影複製組件的所在的目錄清單。</span><span class="sxs-lookup"><span data-stu-id="8a822-200">The shadow copy path is a list of directories where shadow copied assemblies are stored.</span></span>  
  
 <span data-ttu-id="8a822-201">如需詳細資訊，請參閱 <<c0> <xref:System.AppDomainSetup.ShadowCopyDirectories%2A?displayProperty=nameWithType> 並[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-201">For more information, see <xref:System.AppDomainSetup.ShadowCopyDirectories%2A?displayProperty=nameWithType> and [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-202">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-202">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-203">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-203">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-204">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-204">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-205">Creates a new instance of a specified COM type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-205">Creates a new instance of a specified COM type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-206">The name of a file containing an assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-206">The name of a file containing an assembly that defines the requested type.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-207">The name of the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-207">The name of the requested type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-208">Creates a new instance of a specified COM type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-208">Creates a new instance of a specified COM type.</span>
          </span>
          <span data-ttu-id="8a822-209">Parameters specify the name of a file that contains an assembly containing the type and the name of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-209">Parameters specify the name of a file that contains an assembly containing the type and the name of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-210">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-210">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="8a822-211">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-211">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-212">使用這個方法，從遠端建立物件，而不需要載入在本機的型別。</span><span class="sxs-lookup"><span data-stu-id="8a822-212">Use this method to create objects remotely without having to load the type locally.</span></span>  
  
 <span data-ttu-id="8a822-213">傳回的值必須解除包裝以存取實際物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-213">The return value must to be unwrapped to access the real object.</span></span>  
  
 <span data-ttu-id="8a822-214">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>屬性的值`true`必須套用明確或預設為 COM 型別，此方法來建立該類型; 的執行個體，否則為<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-214">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type for this method to create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-215">下列範例會示範</span><span class="sxs-lookup"><span data-stu-id="8a822-215">The following sample demonstrates</span></span>  
  
 [!code-cpp[AppDomain_CreateComInstanceFrom#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_CreateComInstanceFrom/CPP/createcominstancefrom.cpp#1)]
 [!code-csharp[AppDomain_CreateComInstanceFrom#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_CreateComInstanceFrom/CS/createcominstancefrom.cs#1)]
 [!code-vb[AppDomain_CreateComInstanceFrom#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_CreateComInstanceFrom/VB/createcominstancefrom.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-216">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-216">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-217">The type cannot be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-217">The type cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-218">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-218">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-219">No public parameterless constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-219">No public parameterless constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-220">
            <paramref name="assemblyName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-220">
              <paramref name="assemblyName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="8a822-221">
            <paramref name="typeName" /> is an abstract class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-221">
              <paramref name="typeName" /> is an abstract class.</span>
          </span>
          <span data-ttu-id="8a822-222">-or-  This member was invoked with a late-binding mechanism.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-222">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-223">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-223">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-224">
            <paramref name="assemblyName" /> is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-224">
              <paramref name="assemblyName" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-225">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-225">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-226">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-226">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-227">The COM object that is being referred to is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-227">The COM object that is being referred to is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-228">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-228">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-229">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-229">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-230">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-230">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyFile, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyFile, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComInstanceFrom (assemblyFile As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateComInstanceFrom (assemblyFile, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-231">The name of a file containing an assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-231">The name of a file containing an assembly that defines the requested type.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-232">The name of the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-232">The name of the requested type.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="8a822-233">Represents the value of the computed hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-233">Represents the value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="8a822-234">Represents the hash algorithm used by the assembly manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-234">Represents the hash algorithm used by the assembly manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-235">Creates a new instance of a specified COM type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-235">Creates a new instance of a specified COM type.</span>
          </span>
          <span data-ttu-id="8a822-236">Parameters specify the name of a file that contains an assembly containing the type and the name of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-236">Parameters specify the name of a file that contains an assembly containing the type and the name of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-237">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-237">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="8a822-238">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-238">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-239">使用這個方法，從遠端建立物件，而不需要載入在本機的型別。</span><span class="sxs-lookup"><span data-stu-id="8a822-239">Use this method to create objects remotely without having to load the type locally.</span></span>  
  
 <span data-ttu-id="8a822-240">傳回的值必須解除包裝以存取實際物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-240">The return value must to be unwrapped to access the real object.</span></span>  
  
 <span data-ttu-id="8a822-241">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>屬性的值`true`必須套用明確或預設為 COM 型別，此方法來建立該類型; 的執行個體，否則為<xref:System.TypeLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-241">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type for this method to create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-242">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-242">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-243">The type cannot be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-243">The type cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-244">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-244">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-245">No public parameterless constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-245">No public parameterless constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-246">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-246">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="8a822-247">
            <paramref name="typeName" /> is an abstract class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-247">
              <paramref name="typeName" /> is an abstract class.</span>
          </span>
          <span data-ttu-id="8a822-248">-or-  This member was invoked with a late-binding mechanism.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-248">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-249">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-249">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-250">
            <paramref name="assemblyFile" /> is the empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-250">
              <paramref name="assemblyFile" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-251">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-251">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-252">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-252">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-253">The COM object that is being referred to is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-253">The COM object that is being referred to is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-254">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-254">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-255">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-255">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-256">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-256">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDomain">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-257">Creates a new application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-257">Creates a new application domain.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public static AppDomain CreateDomain (string friendlyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain CreateDomain(string friendlyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDomain (friendlyName As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ CreateDomain(System::String ^ friendlyName);" />
      <MemberSignature Language="F#" Value="static member CreateDomain : string -&gt; AppDomain" Usage="System.AppDomain.CreateDomain friendlyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="friendlyName">
          <span data-ttu-id="8a822-258">The friendly name of the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-258">The friendly name of the domain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-259">Creates a new application domain with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-259">Creates a new application domain with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-260">The newly created application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-260">The newly created application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-261">`friendlyName`參數要識別網域是讓人有意義的方式。</span><span class="sxs-lookup"><span data-stu-id="8a822-261">The `friendlyName` parameter is intended to identify the domain in a manner that is meaningful to humans.</span></span> <span data-ttu-id="8a822-262">此字串應該是適合在使用者介面中顯示。</span><span class="sxs-lookup"><span data-stu-id="8a822-262">This string should be suitable for display in user interfaces.</span></span>  
  
 <span data-ttu-id="8a822-263">這個方法多載會使用<xref:System.AppDomainSetup>從預設應用程式定義域的資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-263">This method overload uses the <xref:System.AppDomainSetup> information from the default application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-264">下列範例示範，在一般情況下，如何建立使用其中一種網域<xref:System.AppDomain.CreateDomain%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-264">The following sample demonstrates, in general, how to create a domain using one of the <xref:System.AppDomain.CreateDomain%2A> overloads.</span></span>  
  
 [!code-cpp[AppDomain_Setup#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_Setup/CPP/setup.cpp#1)]
 [!code-csharp[AppDomain_Setup#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_Setup/CS/setup.cs#1)]
 [!code-vb[AppDomain_Setup#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_Setup/VB/setup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-265">
            <paramref name="friendlyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-265">
              <paramref name="friendlyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-266">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-266">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-267">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-267">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomain.FriendlyName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDomain (friendlyName As String, securityInfo As Evidence) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomain : string * System.Security.Policy.Evidence -&gt; AppDomain" Usage="System.AppDomain.CreateDomain (friendlyName, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="friendlyName">
          <span data-ttu-id="8a822-268">The friendly name of the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-268">The friendly name of the domain.</span>
          </span>
          <span data-ttu-id="8a822-269">This friendly name can be displayed in user interfaces to identify the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-269">This friendly name can be displayed in user interfaces to identify the domain.</span>
          </span>
          <span data-ttu-id="8a822-270">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-270">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="8a822-271">Evidence that establishes the identity of the code that runs in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-271">Evidence that establishes the identity of the code that runs in the application domain.</span>
          </span>
          <span data-ttu-id="8a822-272">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-272">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-273">Creates a new application domain with the given name using the supplied evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-273">Creates a new application domain with the given name using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-274">The newly created application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-274">The newly created application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-275">這個方法多載會使用<xref:System.AppDomainSetup>從預設應用程式定義域的資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-275">This method overload uses the <xref:System.AppDomainSetup> information from the default application domain.</span></span>  
  
 <span data-ttu-id="8a822-276">如果`securityInfo`是未提供，會使用目前的應用程式定義域的辨識項。</span><span class="sxs-lookup"><span data-stu-id="8a822-276">If `securityInfo` is not supplied, the evidence from the current application domain is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-277">請勿使用這個方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-277">Do not use this method overload to create sandboxed application domains.</span></span> <span data-ttu-id="8a822-278">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，所提供的辨識項`securityInfo`不會再影響應用程式定義域的授權集。</span><span class="sxs-lookup"><span data-stu-id="8a822-278">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the evidence that is supplied for `securityInfo` no longer affects the grant set of the application domain.</span></span> <span data-ttu-id="8a822-279">使用<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29>方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-279">Use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29> method overload to create sandboxed application domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-280">下列範例示範，在一般情況下，如何建立使用其中一種網域<xref:System.AppDomain.CreateDomain%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-280">The following sample demonstrates, in general, how to create a domain using one of the <xref:System.AppDomain.CreateDomain%2A> overloads.</span></span>  
  
 [!code-cpp[AppDomain_Setup#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_Setup/CPP/setup.cpp#1)]
 [!code-csharp[AppDomain_Setup#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_Setup/CS/setup.cs#1)]
 [!code-vb[AppDomain_Setup#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_Setup/VB/setup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-281">
            <paramref name="friendlyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-281">
              <paramref name="friendlyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-282">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-282">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-283">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-283">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDomain (friendlyName As String, securityInfo As Evidence, info As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ info);" />
      <MemberSignature Language="F#" Value="static member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomain.CreateDomain (friendlyName, securityInfo, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="info" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">
          <span data-ttu-id="8a822-284">The friendly name of the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-284">The friendly name of the domain.</span>
          </span>
          <span data-ttu-id="8a822-285">This friendly name can be displayed in user interfaces to identify the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-285">This friendly name can be displayed in user interfaces to identify the domain.</span>
          </span>
          <span data-ttu-id="8a822-286">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-286">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="8a822-287">Evidence that establishes the identity of the code that runs in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-287">Evidence that establishes the identity of the code that runs in the application domain.</span>
          </span>
          <span data-ttu-id="8a822-288">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-288">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          </span>
        </param>
        <param name="info">
          <span data-ttu-id="8a822-289">An object that contains application domain initialization information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-289">An object that contains application domain initialization information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-290">Creates a new application domain using the specified name, evidence, and application domain setup information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-290">Creates a new application domain using the specified name, evidence, and application domain setup information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-291">The newly created application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-291">The newly created application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-292">如果`info`是未提供，這個方法多載會使用<xref:System.AppDomainSetup>從預設應用程式定義域的資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-292">If `info` is not supplied, this method overload uses the <xref:System.AppDomainSetup> information from the default application domain.</span></span>  
  
 <span data-ttu-id="8a822-293">如果`securityInfo`是未提供，會使用目前的應用程式定義域的辨識項。</span><span class="sxs-lookup"><span data-stu-id="8a822-293">If `securityInfo` is not supplied, the evidence from the current application domain is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-294">請勿使用這個方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-294">Do not use this method overload to create sandboxed application domains.</span></span> <span data-ttu-id="8a822-295">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，所提供的辨識項`securityInfo`不會再影響應用程式定義域的授權集。</span><span class="sxs-lookup"><span data-stu-id="8a822-295">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the evidence that is supplied for `securityInfo` no longer affects the grant set of the application domain.</span></span> <span data-ttu-id="8a822-296">使用<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29>方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-296">Use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29> method overload to create sandboxed application domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-297">下列範例示範，在一般情況下，如何建立使用其中一種網域<xref:System.AppDomain.CreateDomain%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-297">The following sample demonstrates, in general, how to create a domain using one of the <xref:System.AppDomain.CreateDomain%2A> overloads.</span></span>  
  
 [!code-cpp[AppDomain_Setup#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_Setup/CPP/setup.cpp#1)]
 [!code-csharp[AppDomain_Setup#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_Setup/CS/setup.cs#1)]
 [!code-vb[AppDomain_Setup#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_Setup/VB/setup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-298">
            <paramref name="friendlyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-298">
              <paramref name="friendlyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-299">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-299">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-300">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-300">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup info, System.Security.PermissionSet grantSet, params System.Security.Policy.StrongName[] fullTrustAssemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup info, class System.Security.PermissionSet grantSet, class System.Security.Policy.StrongName[] fullTrustAssemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup,System.Security.PermissionSet,System.Security.Policy.StrongName[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDomain (friendlyName As String, securityInfo As Evidence, info As AppDomainSetup, grantSet As PermissionSet, ParamArray fullTrustAssemblies As StrongName()) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ info, System::Security::PermissionSet ^ grantSet, ... cli::array &lt;System::Security::Policy::StrongName ^&gt; ^ fullTrustAssemblies);" />
      <MemberSignature Language="F#" Value="static member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup * System.Security.PermissionSet * System.Security.Policy.StrongName[] -&gt; AppDomain" Usage="System.AppDomain.CreateDomain (friendlyName, securityInfo, info, grantSet, fullTrustAssemblies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="info" Type="System.AppDomainSetup" />
        <Parameter Name="grantSet" Type="System.Security.PermissionSet" />
        <Parameter Name="fullTrustAssemblies" Type="System.Security.Policy.StrongName[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="friendlyName">
          <span data-ttu-id="8a822-301">The friendly name of the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-301">The friendly name of the domain.</span>
          </span>
          <span data-ttu-id="8a822-302">This friendly name can be displayed in user interfaces to identify the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-302">This friendly name can be displayed in user interfaces to identify the domain.</span>
          </span>
          <span data-ttu-id="8a822-303">For more information, see the description of <see cref="P:System.AppDomain.FriendlyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-303">For more information, see the description of <see cref="P:System.AppDomain.FriendlyName" />.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="8a822-304">Evidence that establishes the identity of the code that runs in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-304">Evidence that establishes the identity of the code that runs in the application domain.</span>
          </span>
          <span data-ttu-id="8a822-305">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-305">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          </span>
        </param>
        <param name="info">
          <span data-ttu-id="8a822-306">An object that contains application domain initialization information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-306">An object that contains application domain initialization information.</span>
          </span>
        </param>
        <param name="grantSet">
          <span data-ttu-id="8a822-307">A default permission set that is granted to all assemblies loaded into the new application domain that do not have specific grants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-307">A default permission set that is granted to all assemblies loaded into the new application domain that do not have specific grants.</span>
          </span>
        </param>
        <param name="fullTrustAssemblies">
          <span data-ttu-id="8a822-308">An array of strong names representing assemblies to be considered fully trusted in the new application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-308">An array of strong names representing assemblies to be considered fully trusted in the new application domain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-309">Creates a new application domain using the specified name, evidence, application domain setup information, default permission set, and array of fully trusted assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-309">Creates a new application domain using the specified name, evidence, application domain setup information, default permission set, and array of fully trusted assemblies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-310">The newly created application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-310">The newly created application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-311">您必須設定<xref:System.AppDomainSetup.ApplicationBase%2A>的屬性<xref:System.AppDomainSetup>物件，為您提供`info`。</span><span class="sxs-lookup"><span data-stu-id="8a822-311">You must set the <xref:System.AppDomainSetup.ApplicationBase%2A> property of the <xref:System.AppDomainSetup> object that you supply for `info`.</span></span> <span data-ttu-id="8a822-312">否則，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-312">Otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="8a822-313">如果`securityInfo`是未提供，會使用目前的應用程式定義域的辨識項。</span><span class="sxs-lookup"><span data-stu-id="8a822-313">If `securityInfo` is not supplied, the evidence from the current application domain is used.</span></span>  
  
 <span data-ttu-id="8a822-314">提供的資訊`grantSet`並`fullTrustAssemblies`用來建立<xref:System.Security.Policy.ApplicationTrust>新的應用程式定義域的物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-314">The information provided for `grantSet` and `fullTrustAssemblies` is used to create an <xref:System.Security.Policy.ApplicationTrust> object for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-315">
            <paramref name="friendlyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-315">
              <paramref name="friendlyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a822-316">The application domain is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-316">The application domain is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-317">-or-  The <see cref="P:System.AppDomainSetup.ApplicationBase" /> property is not set on the <see cref="T:System.AppDomainSetup" /> object that is supplied for <paramref name="info" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-317">-or-  The <see cref="P:System.AppDomainSetup.ApplicationBase" /> property is not set on the <see cref="T:System.AppDomainSetup" /> object that is supplied for <paramref name="info" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-318">提供建立及管理應用程式定義域的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-318">for the ability to create and manipulate an application domain.</span>
          </span>
          <span data-ttu-id="8a822-319">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-319">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</span>
          </span>
          <span data-ttu-id="8a822-320">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-320">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDomain (friendlyName As String, securityInfo As Evidence, appBasePath As String, appRelativeSearchPath As String, shadowCopyFiles As Boolean) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, System::String ^ appBasePath, System::String ^ appRelativeSearchPath, bool shadowCopyFiles);" />
      <MemberSignature Language="F#" Value="static member CreateDomain : string * System.Security.Policy.Evidence * string * string * bool -&gt; AppDomain" Usage="System.AppDomain.CreateDomain (friendlyName, securityInfo, appBasePath, appRelativeSearchPath, shadowCopyFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appBasePath" Type="System.String" />
        <Parameter Name="appRelativeSearchPath" Type="System.String" />
        <Parameter Name="shadowCopyFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="friendlyName">
          <span data-ttu-id="8a822-321">The friendly name of the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-321">The friendly name of the domain.</span>
          </span>
          <span data-ttu-id="8a822-322">This friendly name can be displayed in user interfaces to identify the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-322">This friendly name can be displayed in user interfaces to identify the domain.</span>
          </span>
          <span data-ttu-id="8a822-323">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-323">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="8a822-324">Evidence that establishes the identity of the code that runs in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-324">Evidence that establishes the identity of the code that runs in the application domain.</span>
          </span>
          <span data-ttu-id="8a822-325">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-325">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          </span>
        </param>
        <param name="appBasePath">
          <span data-ttu-id="8a822-326">The base directory that the assembly resolver uses to probe for assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-326">The base directory that the assembly resolver uses to probe for assemblies.</span>
          </span>
          <span data-ttu-id="8a822-327">For more information, see <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-327">For more information, see <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="appRelativeSearchPath">
          <span data-ttu-id="8a822-328">The path relative to the base directory where the assembly resolver should probe for private assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-328">The path relative to the base directory where the assembly resolver should probe for private assemblies.</span>
          </span>
          <span data-ttu-id="8a822-329">For more information, see <see cref="P:System.AppDomain.RelativeSearchPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-329">For more information, see <see cref="P:System.AppDomain.RelativeSearchPath" />.</span>
          </span>
        </param>
        <param name="shadowCopyFiles">
          <span data-ttu-id="8a822-330">If <see langword="true" />, a shadow copy of an assembly is loaded into this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-330">If <see langword="true" />, a shadow copy of an assembly is loaded into this application domain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-331">Creates a new application domain with the given name, using evidence, application base path, relative search path, and a parameter that specifies whether a shadow copy of an assembly is to be loaded into the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-331">Creates a new application domain with the given name, using evidence, application base path, relative search path, and a parameter that specifies whether a shadow copy of an assembly is to be loaded into the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-332">The newly created application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-332">The newly created application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-333">如果`securityInfo`是未提供，會使用目前的應用程式定義域的辨識項。</span><span class="sxs-lookup"><span data-stu-id="8a822-333">If `securityInfo` is not supplied, the evidence from the current application domain is used.</span></span>  
  
 <span data-ttu-id="8a822-334">如需陰影複製的詳細資訊，請參閱<xref:System.AppDomain.ShadowCopyFiles%2A>並[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-334">For more information about shadow copying, see <xref:System.AppDomain.ShadowCopyFiles%2A> and [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-335">請勿使用這個方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-335">Do not use this method overload to create sandboxed application domains.</span></span> <span data-ttu-id="8a822-336">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，所提供的辨識項`securityInfo`不會再影響應用程式定義域的授權集。</span><span class="sxs-lookup"><span data-stu-id="8a822-336">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the evidence that is supplied for `securityInfo` no longer affects the grant set of the application domain.</span></span> <span data-ttu-id="8a822-337">使用<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29>方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-337">Use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29> method overload to create sandboxed application domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-338">下列範例示範，在一般情況下，如何建立使用其中一種網域<xref:System.AppDomain.CreateDomain%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-338">The following sample demonstrates, in general, how to create a domain using one of the <xref:System.AppDomain.CreateDomain%2A> overloads.</span></span>  
  
 [!code-cpp[AppDomain_Setup#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_Setup/CPP/setup.cpp#1)]
 [!code-csharp[AppDomain_Setup#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_Setup/CS/setup.cs#1)]
 [!code-vb[AppDomain_Setup#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_Setup/VB/setup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-339">
            <paramref name="friendlyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-339">
              <paramref name="friendlyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-340">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-340">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-341">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-341">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles, AppDomainInitializer adInit, string[] adInitArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles, class System.AppDomainInitializer adInit, string[] adInitArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean,System.AppDomainInitializer,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDomain (friendlyName As String, securityInfo As Evidence, appBasePath As String, appRelativeSearchPath As String, shadowCopyFiles As Boolean, adInit As AppDomainInitializer, adInitArgs As String()) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, System::String ^ appBasePath, System::String ^ appRelativeSearchPath, bool shadowCopyFiles, AppDomainInitializer ^ adInit, cli::array &lt;System::String ^&gt; ^ adInitArgs);" />
      <MemberSignature Language="F#" Value="static member CreateDomain : string * System.Security.Policy.Evidence * string * string * bool * AppDomainInitializer * string[] -&gt; AppDomain" Usage="System.AppDomain.CreateDomain (friendlyName, securityInfo, appBasePath, appRelativeSearchPath, shadowCopyFiles, adInit, adInitArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appBasePath" Type="System.String" />
        <Parameter Name="appRelativeSearchPath" Type="System.String" />
        <Parameter Name="shadowCopyFiles" Type="System.Boolean" />
        <Parameter Name="adInit" Type="System.AppDomainInitializer" />
        <Parameter Name="adInitArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="friendlyName">
          <span data-ttu-id="8a822-342">The friendly name of the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-342">The friendly name of the domain.</span>
          </span>
          <span data-ttu-id="8a822-343">This friendly name can be displayed in user interfaces to identify the domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-343">This friendly name can be displayed in user interfaces to identify the domain.</span>
          </span>
          <span data-ttu-id="8a822-344">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-344">For more information, see <see cref="P:System.AppDomain.FriendlyName" />.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="8a822-345">Evidence that establishes the identity of the code that runs in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-345">Evidence that establishes the identity of the code that runs in the application domain.</span>
          </span>
          <span data-ttu-id="8a822-346">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-346">Pass <see langword="null" /> to use the evidence of the current application domain.</span>
          </span>
        </param>
        <param name="appBasePath">
          <span data-ttu-id="8a822-347">The base directory that the assembly resolver uses to probe for assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-347">The base directory that the assembly resolver uses to probe for assemblies.</span>
          </span>
          <span data-ttu-id="8a822-348">For more information, see <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-348">For more information, see <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="appRelativeSearchPath">
          <span data-ttu-id="8a822-349">The path relative to the base directory where the assembly resolver should probe for private assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-349">The path relative to the base directory where the assembly resolver should probe for private assemblies.</span>
          </span>
          <span data-ttu-id="8a822-350">For more information, see <see cref="P:System.AppDomain.RelativeSearchPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-350">For more information, see <see cref="P:System.AppDomain.RelativeSearchPath" />.</span>
          </span>
        </param>
        <param name="shadowCopyFiles">
          <span data-ttu-id="8a822-351">
            <see langword="true" /> to load a shadow copy of an assembly into the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-351">
              <see langword="true" /> to load a shadow copy of an assembly into the application domain.</span>
          </span>
        </param>
        <param name="adInit">
          <span data-ttu-id="8a822-352">An <see cref="T:System.AppDomainInitializer" /> delegate that represents a callback method to invoke when the new <see cref="T:System.AppDomain" /> object is initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-352">An <see cref="T:System.AppDomainInitializer" /> delegate that represents a callback method to invoke when the new <see cref="T:System.AppDomain" /> object is initialized.</span>
          </span>
        </param>
        <param name="adInitArgs">
          <span data-ttu-id="8a822-353">An array of string arguments to be passed to the callback represented by <c>adInit</c>, when the new <see cref="T:System.AppDomain" /> object is initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-353">An array of string arguments to be passed to the callback represented by <c>adInit</c>, when the new <see cref="T:System.AppDomain" /> object is initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-354">Creates a new application domain with the given name, using evidence, application base path, relative search path, and a parameter that specifies whether a shadow copy of an assembly is to be loaded into the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-354">Creates a new application domain with the given name, using evidence, application base path, relative search path, and a parameter that specifies whether a shadow copy of an assembly is to be loaded into the application domain.</span>
          </span>
          <span data-ttu-id="8a822-355">Specifies a callback method that is invoked when the application domain is initialized, and an array of string arguments to pass the callback method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-355">Specifies a callback method that is invoked when the application domain is initialized, and an array of string arguments to pass the callback method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-356">The newly created application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-356">The newly created application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-357">所表示之方法`adInit`新建立的應用程式定義域的內容中執行。</span><span class="sxs-lookup"><span data-stu-id="8a822-357">The method represented by `adInit` is executed in the context of the newly created application domain.</span></span>  
  
 <span data-ttu-id="8a822-358">如果`securityInfo`是未提供，會使用目前的應用程式定義域的辨識項。</span><span class="sxs-lookup"><span data-stu-id="8a822-358">If `securityInfo` is not supplied, the evidence from the current application domain is used.</span></span>  
  
 <span data-ttu-id="8a822-359">如需陰影複製的詳細資訊，請參閱<xref:System.AppDomain.ShadowCopyFiles%2A>並[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-359">For more information about shadow copying, see <xref:System.AppDomain.ShadowCopyFiles%2A> and [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-360">請勿使用這個方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-360">Do not use this method overload to create sandboxed application domains.</span></span> <span data-ttu-id="8a822-361">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，所提供的辨識項`securityInfo`不會再影響應用程式定義域的授權集。</span><span class="sxs-lookup"><span data-stu-id="8a822-361">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the evidence that is supplied for `securityInfo` no longer affects the grant set of the application domain.</span></span> <span data-ttu-id="8a822-362">使用<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29>方法多載來建立沙箱應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-362">Use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29> method overload to create sandboxed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-363">
            <paramref name="friendlyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-363">
              <paramref name="friendlyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-364">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-364">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-365">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-365">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-366">Creates a new instance of a specified type defined in a specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-366">Creates a new instance of a specified type defined in a specified assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.CreateInstance(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-367">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-367">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-368">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-368">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-369">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-369">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-370">Creates a new instance of the specified type defined in the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-370">Creates a new instance of the specified type defined in the specified assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-371">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-371">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="8a822-372">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-372">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-373">這個方法會呼叫預設建構函式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-373">This method calls the default constructor for `typeName`.</span></span>  
  
 <span data-ttu-id="8a822-374">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-374">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span>  
  
 <span data-ttu-id="8a822-375">嘗試呼叫<xref:System.AppDomain.CreateInstance%2A>目標上，不是目前的應用程式定義域的應用程式定義域會導致成功的載入目標應用程式定義域中的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-375">An attempt to call <xref:System.AppDomain.CreateInstance%2A> on a target application domain that is not the current application domain will result in a successful load of the assembly in the target application domain.</span></span> <span data-ttu-id="8a822-376">由於<xref:System.Reflection.Assembly>不是<xref:System.MarshalByRefObject>，當這個方法會嘗試傳回<xref:System.Reflection.Assembly>針對至目前的應用程式定義域載入的組件，common language runtime 會嘗試將組件載入目前的應用程式定義域和負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-376">Since an <xref:System.Reflection.Assembly> is not <xref:System.MarshalByRefObject>, when this method attempts to return the <xref:System.Reflection.Assembly> for the loaded assembly to the current application domain, the common language runtime will try to load the assembly into the current application domain and the load might fail.</span></span> <span data-ttu-id="8a822-377">載入至目前的應用程式定義域的組件可能不同於已在不同的兩個應用程式定義域的路徑設定是否先載入的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-377">The assembly that is loaded into the current application domain might be different from the assembly that was loaded first if the path settings for the two application domains are different.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-378">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-378">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-379">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-379">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-380">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-380">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-381">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-381">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-382">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-382">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-383">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-383">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-384">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-384">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-385">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-385">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-386">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-386">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-387">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-387">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-388">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-388">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-389">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-389">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-390">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-390">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-391">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-391">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="8a822-392">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-392">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.CreateInstance(System.String,System.String,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-393">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-393">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-394">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-394">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-395">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-395">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-396">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-396">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-397">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-397">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-398">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-398">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-399">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-399">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-400">Creates a new instance of the specified type defined in the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-400">Creates a new instance of the specified type defined in the specified assembly.</span>
          </span>
          <span data-ttu-id="8a822-401">A parameter specifies an array of activation attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-401">A parameter specifies an array of activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-402">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-402">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="8a822-403">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-403">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-404">這個方法會呼叫預設建構函式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-404">This method calls the default constructor for `typeName`.</span></span>  
  
 <span data-ttu-id="8a822-405">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-405">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span>  
  
 <span data-ttu-id="8a822-406">嘗試呼叫<xref:System.AppDomain.CreateInstance%2A>目標上，不是目前的應用程式定義域的應用程式定義域會導致成功的載入目標應用程式定義域中的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-406">An attempt to call <xref:System.AppDomain.CreateInstance%2A> on a target application domain that is not the current application domain will result in a successful load of the assembly in the target application domain.</span></span> <span data-ttu-id="8a822-407">由於<xref:System.Reflection.Assembly>不是<xref:System.MarshalByRefObject>，當這個方法會嘗試傳回<xref:System.Reflection.Assembly>針對至目前的應用程式定義域載入的組件，common language runtime 會嘗試將組件載入目前的應用程式定義域和負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-407">Since an <xref:System.Reflection.Assembly> is not <xref:System.MarshalByRefObject>, when this method attempts to return the <xref:System.Reflection.Assembly> for the loaded assembly to the current application domain, the common language runtime will try to load the assembly into the current application domain and the load might fail.</span></span> <span data-ttu-id="8a822-408">載入至目前的應用程式定義域的組件可能不同於已在不同的兩個應用程式定義域的路徑設定是否先載入的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-408">The assembly that is loaded into the current application domain might be different from the assembly that was loaded first if the path settings for the two application domains are different.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-409">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-409">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-410">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-410">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-411">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-411">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-412">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-412">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-413">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-413">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-414">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-414">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-415">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-415">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-416">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-416">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-417">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-417">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-418">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-418">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-419">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-419">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-420">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-420">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-421">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-421">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-422">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-422">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-423">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-423">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="8a822-424">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-424">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8a822-425">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-425">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="8a822-426">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-426">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-427">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-427">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-428">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-428">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-429">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-429">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-430">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-430">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-431">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-431">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-432">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-432">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-433">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-433">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="8a822-434">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-434">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-435">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-435">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-436">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-436">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-437">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-437">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-438">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-438">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-439">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-439">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-440">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-440">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-441">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-441">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-442">This parameter is related to client-activated objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-442">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="8a822-443">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-443">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-444">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-444">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-445">Creates a new instance of the specified type defined in the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-445">Creates a new instance of the specified type defined in the specified assembly.</span>
          </span>
          <span data-ttu-id="8a822-446">Parameters specify a binder, binding flags, constructor arguments, culture-specific information used to interpret arguments, and optional activation attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-446">Parameters specify a binder, binding flags, constructor arguments, culture-specific information used to interpret arguments, and optional activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-447">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-447">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="8a822-448">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-448">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-449">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-449">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span>  
  
 <span data-ttu-id="8a822-450">嘗試呼叫<xref:System.AppDomain.CreateInstance%2A>目標上，不是目前的應用程式定義域的應用程式定義域會導致成功的載入目標應用程式定義域中的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-450">An attempt to call <xref:System.AppDomain.CreateInstance%2A> on a target application domain that is not the current application domain will result in a successful load of the assembly in the target application domain.</span></span> <span data-ttu-id="8a822-451">由於<xref:System.Reflection.Assembly>不是<xref:System.MarshalByRefObject>，當這個方法會嘗試傳回<xref:System.Reflection.Assembly>針對至目前的應用程式定義域載入的組件，common language runtime 會嘗試將組件載入目前的應用程式定義域和負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-451">Since an <xref:System.Reflection.Assembly> is not <xref:System.MarshalByRefObject>, when this method attempts to return the <xref:System.Reflection.Assembly> for the loaded assembly to the current application domain, the common language runtime will try to load the assembly into the current application domain and the load might fail.</span></span> <span data-ttu-id="8a822-452">載入至目前的應用程式定義域的組件可能不同於已在不同的兩個應用程式定義域的路徑設定是否先載入的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-452">The assembly that is loaded into the current application domain might be different from the assembly that was loaded first if the path settings for the two application domains are different.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-453">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-453">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-454">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-454">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-455">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-455">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-456">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-456">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-457">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-457">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-458">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-458">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-459">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-459">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-460">No matching constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-460">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-461">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-461">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-462">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-462">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-463">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-463">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-464">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-464">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-465">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-465">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-466">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-466">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-467">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-467">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="8a822-468">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-468">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8a822-469">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-469">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="8a822-470">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-470">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-471">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-471">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-472">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-472">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-473">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-473">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-474">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-474">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-475">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-475">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-476">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-476">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-477">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-477">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="8a822-478">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-478">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-479">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-479">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-480">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-480">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-481">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-481">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-482">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-482">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-483">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-483">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-484">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-484">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-485">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-485">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-486">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-486">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-487">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-487">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="8a822-488">Information used to authorize creation of <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-488">Information used to authorize creation of <c>typeName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-489">Creates a new instance of the specified type defined in the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-489">Creates a new instance of the specified type defined in the specified assembly.</span>
          </span>
          <span data-ttu-id="8a822-490">Parameters specify a binder, binding flags, constructor arguments, culture-specific information used to interpret arguments, activation attributes, and authorization to create the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-490">Parameters specify a binder, binding flags, constructor arguments, culture-specific information used to interpret arguments, activation attributes, and authorization to create the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-491">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-491">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="8a822-492">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-492">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-493">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-493">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span>  
  
 <span data-ttu-id="8a822-494">嘗試呼叫<xref:System.AppDomain.CreateInstance%2A>目標上，不是目前的應用程式定義域的應用程式定義域會導致成功的載入目標應用程式定義域中的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-494">An attempt to call <xref:System.AppDomain.CreateInstance%2A> on a target application domain that is not the current application domain will result in a successful load of the assembly in the target application domain.</span></span> <span data-ttu-id="8a822-495">由於<xref:System.Reflection.Assembly>不是<xref:System.MarshalByRefObject>，當這個方法會嘗試傳回<xref:System.Reflection.Assembly>針對至目前的應用程式定義域載入的組件，common language runtime 會嘗試將組件載入目前的應用程式定義域和負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-495">Since an <xref:System.Reflection.Assembly> is not <xref:System.MarshalByRefObject>, when this method attempts to return the <xref:System.Reflection.Assembly> for the loaded assembly to the current application domain, the common language runtime will try to load the assembly into the current application domain and the load might fail.</span></span> <span data-ttu-id="8a822-496">載入至目前的應用程式定義域的組件可能不同於已在不同的兩個應用程式定義域的路徑設定是否先載入的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-496">The assembly that is loaded into the current application domain might be different from the assembly that was loaded first if the path settings for the two application domains are different.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-497">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-497">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-498">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-498">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-499">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-499">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-500">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-500">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-501">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-501">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-502">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-502">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-503">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-503">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-504">No matching constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-504">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-505">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-505">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="8a822-506">-or-  <paramref name="securityAttributes" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-506">-or-  <paramref name="securityAttributes" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-507">When legacy CAS policy is not enabled, <paramref name="securityAttributes" /> should be <see langword="null." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-507">When legacy CAS policy is not enabled, <paramref name="securityAttributes" /> should be <see langword="null." /></span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-508">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-508">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-509">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-509">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-510">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-510">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-511">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-511">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-512">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-512">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-513">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-513">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-514">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-514">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8a822-515">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-515">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="8a822-516">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-516">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceAndUnwrap">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-517">Creates a new instance of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-517">Creates a new instance of a specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceAndUnwrap (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceAndUnwrap(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceAndUnwrap (assemblyName As String, typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceAndUnwrap(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceAndUnwrap : string * string -&gt; obj" Usage="appDomain.CreateInstanceAndUnwrap (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-518">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-518">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-519">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-519">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-520">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-520">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-521">Creates a new instance of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-521">Creates a new instance of the specified type.</span>
          </span>
          <span data-ttu-id="8a822-522">Parameters specify the assembly where the type is defined, and the name of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-522">Parameters specify the assembly where the type is defined, and the name of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-523">An instance of the object specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-523">An instance of the object specified by <paramref name="typeName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-524">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstance%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-524">This is a convenience method that combines <xref:System.AppDomain.CreateInstance%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a822-525">這個方法會呼叫預設建構函式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-525">This method calls the default constructor for `typeName`.</span></span>  
  
 <span data-ttu-id="8a822-526">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-526">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span> <span data-ttu-id="8a822-527">請參閱<xref:System.Type.FullName%2A?displayProperty=nameWithType>屬性的格式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-527">See the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property for the format of `typeName`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-528">若要呼叫的方法的早期繫結`M`類型的物件`T1`所傳回的<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>，方法會進行早期繫結呼叫的型別物件的方法和`T2`組件中`C`以外目前的組件或包含的組件`T1`，組件`C`載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-528">If you make an early-bound call to a method `M` of an object of type `T1` that was returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>, and that method makes an early-bound call to a method of an object of type `T2` in an assembly `C` other than the current assembly or the assembly containing `T1`, assembly `C` is loaded into the current application domain.</span></span> <span data-ttu-id="8a822-529">即使早期繫結呼叫，就會發生此載入`T1.M()`的主體中所做<xref:System.Reflection.Emit.DynamicMethod>，或是使用其他動態產生的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-529">This loading occurs even if the early-bound call to `T1.M()` was made in the body of a <xref:System.Reflection.Emit.DynamicMethod>, or in other dynamically generated code.</span></span> <span data-ttu-id="8a822-530">如果目前的網域是預設網域，組件`C`程序結束之前無法卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-530">If the current domain is the default domain, assembly `C` cannot be unloaded until the process ends.</span></span> <span data-ttu-id="8a822-531">如果目前的網域稍後嘗試載入組件`C`，負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-531">If the current domain later attempts to load assembly `C`, the load might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-532">下列程式碼範例示範另一個應用程式定義域中執行程式碼最簡單的方式。</span><span class="sxs-lookup"><span data-stu-id="8a822-532">The following code example shows the simplest way to execute code in another application domain.</span></span> <span data-ttu-id="8a822-533">此範例會定義名為類別`Worker`繼承自<xref:System.MarshalByRefObject>。</span><span class="sxs-lookup"><span data-stu-id="8a822-533">The example defines a class named `Worker` that inherits from <xref:System.MarshalByRefObject>.</span></span> <span data-ttu-id="8a822-534">`Worker`類別會定義方法，以顯示其執行所在之應用程式定義域的名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-534">The `Worker` class defines a method that displays the name of the application domain in which it is executing.</span></span> <span data-ttu-id="8a822-535">此範例會建立的執行個體`Worker`在預設應用程式定義域和新的應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-535">The example creates instances of `Worker` in the default application domain and in a new application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-536">包含的組件`Worker`必須載入到兩個應用程式定義域，但它可以載入新的應用程式定義域只存在於其他組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-536">The assembly that contains `Worker` must be loaded into both application domains, but it can load other assemblies that exist only in the new application domain.</span></span>  
  
 [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]
 [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]
 [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-537">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-537">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-538">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-538">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-539">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-539">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-540">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-540">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-541">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-541">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-542">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-542">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-543">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-543">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-544">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-544">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-545">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-545">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-546">能夠讀取檔案包含組件資訊清單中，或如果您要建立從模組資訊清單檔以外的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-546">for the ability to read the file containing the assembly manifest, or if you are creating a type from a module other than the manifest file.</span>
          </span>
          <span data-ttu-id="8a822-547">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-547">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-548">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-548">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.AppDomain.CreateInstance(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceAndUnwrap (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceAndUnwrap(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceAndUnwrap (assemblyName As String, typeName As String, activationAttributes As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceAndUnwrap(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceAndUnwrap : string * string * obj[] -&gt; obj" Usage="appDomain.CreateInstanceAndUnwrap (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-549">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-549">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-550">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-550">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-551">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-551">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-552">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-552">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-553">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-553">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-554">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-554">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-555">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-555">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-556">Creates a new instance of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-556">Creates a new instance of the specified type.</span>
          </span>
          <span data-ttu-id="8a822-557">Parameters specify the assembly where the type is defined, the name of the type, and an array of activation attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-557">Parameters specify the assembly where the type is defined, the name of the type, and an array of activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-558">An instance of the object specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-558">An instance of the object specified by <paramref name="typeName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-559">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstance%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-559">This is a convenience method that combines <xref:System.AppDomain.CreateInstance%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a822-560">這個方法會呼叫預設建構函式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-560">This method calls the default constructor for `typeName`.</span></span>  
  
 <span data-ttu-id="8a822-561">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-561">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span> <span data-ttu-id="8a822-562">請參閱<xref:System.Type.FullName%2A?displayProperty=nameWithType>屬性的格式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-562">See the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property for the format of `typeName`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-563">若要呼叫的方法的早期繫結`M`類型的物件`T1`所傳回的<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>，方法會進行早期繫結呼叫的型別物件的方法和`T2`組件中`C`以外目前的組件或包含的組件`T1`，組件`C`載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-563">If you make an early-bound call to a method `M` of an object of type `T1` that was returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>, and that method makes an early-bound call to a method of an object of type `T2` in an assembly `C` other than the current assembly or the assembly containing `T1`, assembly `C` is loaded into the current application domain.</span></span> <span data-ttu-id="8a822-564">即使早期繫結呼叫，就會發生此載入`T1.M()`的主體中所做<xref:System.Reflection.Emit.DynamicMethod>，或是使用其他動態產生的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-564">This loading occurs even if the early-bound call to `T1.M()` was made in the body of a <xref:System.Reflection.Emit.DynamicMethod>, or in other dynamically generated code.</span></span> <span data-ttu-id="8a822-565">如果目前的網域是預設網域，組件`C`程序結束之前無法卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-565">If the current domain is the default domain, assembly `C` cannot be unloaded until the process ends.</span></span> <span data-ttu-id="8a822-566">如果目前的網域稍後嘗試載入組件`C`，負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-566">If the current domain later attempts to load assembly `C`, the load might fail.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ADDyno#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDyno/CPP/addyno.cpp#1)]
 [!code-csharp[ADDyno#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDyno/CS/addyno.cs#1)]
 [!code-vb[ADDyno#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDyno/VB/addyno.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-567">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-567">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-568">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-568">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-569">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-569">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-570">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-570">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-571">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-571">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-572">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-572">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-573">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-573">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-574">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-574">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-575">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-575">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-576">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-576">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-577">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-577">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-578">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-578">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-579">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-579">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-580">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-580">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="8a822-581">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-581">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8a822-582">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-582">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="8a822-583">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-583">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.AppDomain.CreateInstance(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceAndUnwrap (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceAndUnwrap(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceAndUnwrap(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceAndUnwrap : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="appDomain.CreateInstanceAndUnwrap (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-584">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-584">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-585">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-585">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-586">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-586">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-587">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-587">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-588">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-588">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-589">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-589">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-590">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-590">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="8a822-591">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-591">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-592">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-592">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-593">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-593">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-594">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-594">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-595">A culture-specific object used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-595">A culture-specific object used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="8a822-596">If <c>culture</c> is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-596">If <c>culture</c> is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-597">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-597">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-598">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-598">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="8a822-599">that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-599">that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-600">This parameter is related to client-activated objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-600">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="8a822-601">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-601">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-602">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-602">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-603">Creates a new instance of the specified type defined in the specified assembly, specifying whether the case of the type name is ignored; the binding attributes and the binder that are used to select the type to be created; the arguments of the constructor; the culture; and the activation attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-603">Creates a new instance of the specified type defined in the specified assembly, specifying whether the case of the type name is ignored; the binding attributes and the binder that are used to select the type to be created; the arguments of the constructor; the culture; and the activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-604">An instance of the object specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-604">An instance of the object specified by <paramref name="typeName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-605">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstance%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-605">This is a convenience method that combines <xref:System.AppDomain.CreateInstance%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a822-606">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-606">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span> <span data-ttu-id="8a822-607">請參閱<xref:System.Type.FullName%2A?displayProperty=nameWithType>屬性的格式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-607">See the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property for the format of `typeName`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-608">若要呼叫的方法的早期繫結`M`類型的物件`T1`所傳回的<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>，方法會進行早期繫結呼叫的型別物件的方法和`T2`組件中`C`以外目前的組件或包含的組件`T1`，組件`C`載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-608">If you make an early-bound call to a method `M` of an object of type `T1` that was returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>, and that method makes an early-bound call to a method of an object of type `T2` in an assembly `C` other than the current assembly or the assembly containing `T1`, assembly `C` is loaded into the current application domain.</span></span> <span data-ttu-id="8a822-609">即使早期繫結呼叫，就會發生此載入`T1.M()`的主體中所做<xref:System.Reflection.Emit.DynamicMethod>，或是使用其他動態產生的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-609">This loading occurs even if the early-bound call to `T1.M()` was made in the body of a <xref:System.Reflection.Emit.DynamicMethod>, or in other dynamically generated code.</span></span> <span data-ttu-id="8a822-610">如果目前的網域是預設網域，組件`C`程序結束之前無法卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-610">If the current domain is the default domain, assembly `C` cannot be unloaded until the process ends.</span></span> <span data-ttu-id="8a822-611">如果目前的網域稍後嘗試載入組件`C`，負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-611">If the current domain later attempts to load assembly `C`, the load might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-612">下列範例示範如何使用`ignoreCase`參數。</span><span class="sxs-lookup"><span data-stu-id="8a822-612">The following sample demonstrates the use of the `ignoreCase` parameter.</span></span>  
  
 [!code-cpp[AppDomain_CreateInstance_IgnoreCase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_CreateInstance_IgnoreCase/CPP/ignorecase.cpp#1)]
 [!code-csharp[AppDomain_CreateInstance_IgnoreCase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_CreateInstance_IgnoreCase/CS/ignorecase.cs#1)]
 [!code-vb[AppDomain_CreateInstance_IgnoreCase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_CreateInstance_IgnoreCase/VB/ignorecase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-613">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-613">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-614">No matching constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-614">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-615">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-615">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-616">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-616">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-617">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-617">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-618">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-618">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-619">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-619">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-620">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-620">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-621">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-621">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-622">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-622">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-623">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-623">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-624">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-624">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-625">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-625">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-626">提供建立委派的執行個體時，呼叫 unmanaged 程式碼的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-626">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="8a822-627">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-627">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8a822-628">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-628">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="8a822-629">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-629">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.AppDomain.CreateInstance(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceAndUnwrap (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceAndUnwrap(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceAndUnwrap(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceAndUnwrap : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; obj" Usage="appDomain.CreateInstanceAndUnwrap (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-630">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-630">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-631">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-631">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-632">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-632">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-633">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-633">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-634">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-634">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-635">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-635">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-636">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-636">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="8a822-637">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-637">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-638">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-638">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-639">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-639">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-640">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-640">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-641">A culture-specific object used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-641">A culture-specific object used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="8a822-642">If <c>culture</c> is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-642">If <c>culture</c> is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-643">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-643">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-644">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-644">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-645">This parameter is related to client-activated objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-645">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="8a822-646">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-646">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-647">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-647">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="8a822-648">Information used to authorize creation of <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-648">Information used to authorize creation of <c>typeName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-649">Creates a new instance of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-649">Creates a new instance of the specified type.</span>
          </span>
          <span data-ttu-id="8a822-650">Parameters specify the name of the type, and how it is found and created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-650">Parameters specify the name of the type, and how it is found and created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-651">An instance of the object specified by <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-651">An instance of the object specified by <paramref name="typeName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-652">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstance%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-652">This is a convenience method that combines <xref:System.AppDomain.CreateInstance%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a822-653">請參閱<xref:System.Reflection.AssemblyName>格式的`assemblyName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-653">See <xref:System.Reflection.AssemblyName> for the format of `assemblyName`.</span></span> <span data-ttu-id="8a822-654">請參閱<xref:System.Type.FullName%2A?displayProperty=nameWithType>屬性的格式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-654">See the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property for the format of `typeName`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-655">若要呼叫的方法的早期繫結`M`類型的物件`T1`所傳回的<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>，方法會進行早期繫結呼叫的型別物件的方法和`T2`組件中`C`以外目前的組件或包含的組件`T1`，組件`C`載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-655">If you make an early-bound call to a method `M` of an object of type `T1` that was returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>, and that method makes an early-bound call to a method of an object of type `T2` in an assembly `C` other than the current assembly or the assembly containing `T1`, assembly `C` is loaded into the current application domain.</span></span> <span data-ttu-id="8a822-656">即使早期繫結呼叫，就會發生此載入`T1.M()`的主體中所做<xref:System.Reflection.Emit.DynamicMethod>，或是使用其他動態產生的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-656">This loading occurs even if the early-bound call to `T1.M()` was made in the body of a <xref:System.Reflection.Emit.DynamicMethod>, or in other dynamically generated code.</span></span> <span data-ttu-id="8a822-657">如果目前的網域是預設網域，組件`C`程序結束之前無法卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-657">If the current domain is the default domain, assembly `C` cannot be unloaded until the process ends.</span></span> <span data-ttu-id="8a822-658">如果目前的網域稍後嘗試載入組件`C`，負載可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8a822-658">If the current domain later attempts to load assembly `C`, the load might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-659">下列範例示範如何使用`ignoreCase`參數。</span><span class="sxs-lookup"><span data-stu-id="8a822-659">The following sample demonstrates the use of the `ignoreCase` parameter.</span></span>  
  
 [!code-cpp[AppDomain_CreateInstance_IgnoreCase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_CreateInstance_IgnoreCase/CPP/ignorecase.cpp#1)]
 [!code-csharp[AppDomain_CreateInstance_IgnoreCase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_CreateInstance_IgnoreCase/CS/ignorecase.cs#1)]
 [!code-vb[AppDomain_CreateInstance_IgnoreCase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_CreateInstance_IgnoreCase/VB/ignorecase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-660">
            <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-660">
              <paramref name="assemblyName" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-661">No matching constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-661">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-662">
            <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-662">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-663">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-663">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-664">The caller does not have permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-664">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-665">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-665">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-666">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-666">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-667">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-667">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-668">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-668">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-669">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-669">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-670">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-670">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-671">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-671">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-672">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-672">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-673">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-673">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-674">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-674">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8a822-675">提供所有型別成員上叫用作業的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-675">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="8a822-676">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-676">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.AppDomain.CreateInstance(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-677">Creates a new instance of a specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-677">Creates a new instance of a specified type defined in the specified assembly file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.CreateInstanceFrom(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-678">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-678">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          </span>
          <span data-ttu-id="8a822-679">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-679">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-680">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-680">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-681">Creates a new instance of the specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-681">Creates a new instance of the specified type defined in the specified assembly file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-682">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-682">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="8a822-683">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-683">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-684">預設建構函式`typeName`叫用。</span><span class="sxs-lookup"><span data-stu-id="8a822-684">The default constructor for `typeName` is invoked.</span></span>  
  
 <span data-ttu-id="8a822-685">如需詳細資訊，請參閱 <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-685">For more information, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8a822-686">當<xref:System.AppDomain.CreateInstanceFrom%2A>方法用來建立目標應用程式定義域中，進行呼叫的應用程式定義域以外的執行個體，在目標應用程式定義域中載入的組件時。</span><span class="sxs-lookup"><span data-stu-id="8a822-686">When the <xref:System.AppDomain.CreateInstanceFrom%2A> method is used to create an instance in a target application domain, other than the application domain from which the call is made, the assembly is loaded in the target application domain.</span></span> <span data-ttu-id="8a822-687">不過，如果呼叫的應用程式定義域中執行個體未包裝，以特定方式使用的未包裝的執行個體可能會導致要載入至呼叫的應用程式定義域的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-687">However, if the instance is unwrapped in the calling application domain, using the unwrapped instance in certain ways can cause the assembly to be loaded into the calling application domain.</span></span> <span data-ttu-id="8a822-688">例如，未包裝的執行個體之後，可能會要求其型別資訊，以便呼叫其方法晚期繫結。</span><span class="sxs-lookup"><span data-stu-id="8a822-688">For example, after the instance is unwrapped, its type information might be requested, in order to call its methods late-bound.</span></span> <span data-ttu-id="8a822-689">當組件載入至呼叫的應用程式定義域時，可能會發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-689">When the assembly is loaded into the calling application domain, exceptions can occur.</span></span>  
  
-   <span data-ttu-id="8a822-690">如果另一個版本相同的組件的先前已載入至呼叫的應用程式定義域中，或如果呼叫的應用程式定義域的載入路徑為不同的目標應用程式定義域，例外狀況<xref:System.MissingMethodException>可能會發生。</span><span class="sxs-lookup"><span data-stu-id="8a822-690">If another version of the same assembly was previously loaded into the calling application domain, or if the load path of the calling application domain is different from that of the target application domain, exceptions such as <xref:System.MissingMethodException> can occur.</span></span>  
  
-   <span data-ttu-id="8a822-691">如果呼叫的應用程式定義域呼叫早期繫結執行個體的型別，<xref:System.InvalidCastException>嘗試轉型執行個體時，可能會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-691">If the calling application domain makes early-bound calls to the instance type, <xref:System.InvalidCastException> can be thrown when an attempt is made to cast the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-692">下列範例示範如何使用<xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%29>方法多載來建立目標應用程式定義域中的物件的執行個體，並呼叫其方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-692">The following example shows how to use the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%29> method overload to create an instance of an object in a target application domain and call its methods.</span></span>  
  
 <span data-ttu-id="8a822-693">此範例會定義`MarshallableExample`類別，可以跨應用程式定義域界限封送處理。</span><span class="sxs-lookup"><span data-stu-id="8a822-693">The example defines the `MarshallableExample` class, which can be marshaled across application domain boundaries.</span></span> <span data-ttu-id="8a822-694">範例會建置目前執行的組件的路徑、 建立目標應用程式定義域，並使用<xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%29>方法多載來載入目標應用程式定義域中的範例組件和建立的執行個體`MarshallableExample`。</span><span class="sxs-lookup"><span data-stu-id="8a822-694">The example builds a path to the currently executing assembly, creates a target application domain, and uses the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%29> method overload to load the example assembly into the target application domain and create an instance of `MarshallableExample`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-695">路徑是在此範例中，絕對路徑，但相對路徑也可以運作，因為<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>方法用來載入組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-695">The path is absolute in this example, but a relative path would also work because the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method is used to load the assembly.</span></span>  
  
 <span data-ttu-id="8a822-696">如果之後解除包裝的物件控制代碼，此範例會示範三種方式可使用目標應用程式定義域中的物件：</span><span class="sxs-lookup"><span data-stu-id="8a822-696">After unwrapping the object handle, the example demonstrates three ways to use an object in a target application domain:</span></span>  
  
-   <span data-ttu-id="8a822-697">叫用方法，以使用反映的晚期繫結。</span><span class="sxs-lookup"><span data-stu-id="8a822-697">Invoking a method with late binding, using reflection.</span></span> <span data-ttu-id="8a822-698">這需要型別資訊，這會導致要載入至呼叫端的應用程式定義域的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-698">This requires type information, which causes the assembly to be loaded into the application domain of the caller.</span></span> <span data-ttu-id="8a822-699">（在此範例中，已經載入也是。）</span><span class="sxs-lookup"><span data-stu-id="8a822-699">(In this example, it is already loaded.)</span></span>  
  
-   <span data-ttu-id="8a822-700">呼叫端和被呼叫端知道介面將物件轉型。</span><span class="sxs-lookup"><span data-stu-id="8a822-700">Casting the object to an interface known to both the caller and the callee.</span></span> <span data-ttu-id="8a822-701">如果呼叫的組件或呼叫端和被呼叫端所參考的第三個組件中定義的介面，則呼叫的組件不載入至呼叫端的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-701">If the interface is defined in the calling assembly or in a third assembly referenced by both the caller and the callee, the called assembly is not loaded into the application domain of the caller.</span></span>  
  
-   <span data-ttu-id="8a822-702">直接呼叫端知道它的型別時，請使用物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-702">Using the object directly when its type is known to the caller.</span></span> <span data-ttu-id="8a822-703">組件必須載入到呼叫端的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-703">The assembly must be loaded into the application domain of the caller.</span></span>  
  
 <span data-ttu-id="8a822-704">若要避免被呼叫的組件載入至呼叫端的應用程式定義域的另一個方法是呼叫者是衍生自<xref:System.MarshalByRefObject>類別，以及定義可以在目標應用程式定義域中執行的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-704">Another way to avoid loading the called assembly into the application domain of the caller is for the caller to derive from the <xref:System.MarshalByRefObject> class and to define a method that can be run in the target application domain.</span></span> <span data-ttu-id="8a822-705">該方法可以使用反映來檢查目標組件，因為目標組件已載入至目標應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-705">That method can use reflection to examine a target assembly, because the target assembly is already loaded into the target application domain.</span></span> <span data-ttu-id="8a822-706">範例，請參閱<xref:System.AppDomain.DynamicDirectory%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-706">See the example for the <xref:System.AppDomain.DynamicDirectory%2A> property.</span></span>  
  
 [!code-cpp[System.AppDomain.CreateInstanceFrom_StringString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.appdomain.createinstancefrom_stringstring/cpp/example.cpp#1)]
 [!code-csharp[System.AppDomain.CreateInstanceFrom_StringString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.createinstancefrom_stringstring/cs/example.cs#1)]
 [!code-vb[System.AppDomain.CreateInstanceFrom_StringString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.createinstancefrom_stringstring/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-707">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-707">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-708">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-708">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-709">
            <paramref name="assemblyFile" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-709">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-710">
            <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-710">
              <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-711">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-711">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-712">No parameterless public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-712">No parameterless public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-713">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-713">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-714">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-714">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-715">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-715">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-716">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-716">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-717">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-717">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-718">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-718">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-719">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-719">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-720">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-720">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-721">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-721">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          </span>
          <span data-ttu-id="8a822-722">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-722">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-723">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-723">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-724">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-724">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-725">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-725">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-726">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-726">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-727">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-727">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-728">Creates a new instance of the specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-728">Creates a new instance of the specified type defined in the specified assembly file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-729">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-729">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="8a822-730">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-730">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-731">預設建構函式`typeName`叫用。</span><span class="sxs-lookup"><span data-stu-id="8a822-731">The default constructor for `typeName` is invoked.</span></span>  
  
 <span data-ttu-id="8a822-732">如需有關這個方法的詳細資訊，請參閱<xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-732">For more information about this method, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8a822-733">當<xref:System.AppDomain.CreateInstanceFrom%2A>方法用來建立目標應用程式定義域中，進行呼叫的應用程式定義域以外的執行個體，在目標應用程式定義域中載入的組件時。</span><span class="sxs-lookup"><span data-stu-id="8a822-733">When the <xref:System.AppDomain.CreateInstanceFrom%2A> method is used to create an instance in a target application domain, other than the application domain from which the call is made, the assembly is loaded in the target application domain.</span></span> <span data-ttu-id="8a822-734">不過，如果呼叫的應用程式定義域中執行個體未包裝，以特定方式使用的未包裝的執行個體可能會導致要載入至呼叫的應用程式定義域的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-734">However, if the instance is unwrapped in the calling application domain, using the unwrapped instance in certain ways can cause the assembly to be loaded into the calling application domain.</span></span> <span data-ttu-id="8a822-735">例如，未包裝的執行個體之後，可能會要求其型別資訊，以便呼叫其方法晚期繫結。</span><span class="sxs-lookup"><span data-stu-id="8a822-735">For example, after the instance is unwrapped, its type information might be requested, in order to call its methods late-bound.</span></span> <span data-ttu-id="8a822-736">當組件載入至呼叫的應用程式定義域時，可能會發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-736">When the assembly is loaded into the calling application domain, exceptions can occur.</span></span>  
  
-   <span data-ttu-id="8a822-737">如果另一個版本相同的組件的先前已載入至呼叫的應用程式定義域中，或如果呼叫的應用程式定義域的載入路徑為不同的目標應用程式定義域，例外狀況<xref:System.MissingMethodException>可能會發生。</span><span class="sxs-lookup"><span data-stu-id="8a822-737">If another version of the same assembly was previously loaded into the calling application domain, or if the load path of the calling application domain is different from that of the target application domain, exceptions such as <xref:System.MissingMethodException> can occur.</span></span>  
  
-   <span data-ttu-id="8a822-738">如果呼叫的應用程式定義域呼叫早期繫結執行個體的型別，<xref:System.InvalidCastException>嘗試轉型執行個體時，可能會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-738">If the calling application domain makes early-bound calls to the instance type, <xref:System.InvalidCastException> can be thrown when an attempt is made to cast the instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-739">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-739">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-740">
            <paramref name="assemblyFile" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-740">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-741">
            <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-741">
              <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-742">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-742">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-743">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-743">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-744">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-744">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-745">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-745">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-746">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-746">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-747">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-747">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-748">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-748">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-749">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-749">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-750">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-750">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-751">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-751">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-752">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-752">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-753">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-753">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          </span>
          <span data-ttu-id="8a822-754">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-754">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-755">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-755">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-756">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-756">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-757">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-757">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-758">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-758">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-759">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-759">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="8a822-760">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-760">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-761">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-761">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-762">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-762">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-763">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-763">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-764">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-764">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-765">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-765">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-766">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-766">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-767">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-767">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-768">This parameter is related to client-activated objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-768">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="8a822-769">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-769">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-770">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-770">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-771">Creates a new instance of the specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-771">Creates a new instance of the specified type defined in the specified assembly file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-772">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-772">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="8a822-773">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-773">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-774">如需詳細資訊，請參閱 <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-774">For more information, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8a822-775">當<xref:System.AppDomain.CreateInstanceFrom%2A>方法用來建立目標應用程式定義域中，進行呼叫的應用程式定義域以外的執行個體，在目標應用程式定義域中載入的組件時。</span><span class="sxs-lookup"><span data-stu-id="8a822-775">When the <xref:System.AppDomain.CreateInstanceFrom%2A> method is used to create an instance in a target application domain, other than the application domain from which the call is made, the assembly is loaded in the target application domain.</span></span> <span data-ttu-id="8a822-776">不過，如果呼叫的應用程式定義域中執行個體未包裝，以特定方式使用的未包裝的執行個體可能會導致要載入至呼叫的應用程式定義域的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-776">However, if the instance is unwrapped in the calling application domain, using the unwrapped instance in certain ways can cause the assembly to be loaded into the calling application domain.</span></span> <span data-ttu-id="8a822-777">例如，未包裝的執行個體之後，可能會要求其型別資訊，以便呼叫其方法晚期繫結。</span><span class="sxs-lookup"><span data-stu-id="8a822-777">For example, after the instance is unwrapped, its type information might be requested, in order to call its methods late-bound.</span></span> <span data-ttu-id="8a822-778">當組件載入至呼叫的應用程式定義域時，可能會發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-778">When the assembly is loaded into the calling application domain, exceptions can occur.</span></span>  
  
-   <span data-ttu-id="8a822-779">如果另一個版本相同的組件的先前已載入至呼叫的應用程式定義域中，或如果呼叫的應用程式定義域的載入路徑為不同的目標應用程式定義域，例外狀況<xref:System.MissingMethodException>可能會發生。</span><span class="sxs-lookup"><span data-stu-id="8a822-779">If another version of the same assembly was previously loaded into the calling application domain, or if the load path of the calling application domain is different from that of the target application domain, exceptions such as <xref:System.MissingMethodException> can occur.</span></span>  
  
-   <span data-ttu-id="8a822-780">如果呼叫的應用程式定義域呼叫早期繫結執行個體的型別，<xref:System.InvalidCastException>嘗試轉型執行個體時，可能會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-780">If the calling application domain makes early-bound calls to the instance type, <xref:System.InvalidCastException> can be thrown when an attempt is made to cast the instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-781">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-781">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-782">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-782">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-783">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-783">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-784">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-784">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-785">
            <paramref name="assemblyFile" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-785">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-786">
            <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-786">
              <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-787">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-787">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-788">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-788">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-789">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-789">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-790">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-790">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-791">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-791">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-792">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-792">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-793">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-793">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-794">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-794">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-795">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-795">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="appDomain.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-796">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-796">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          </span>
          <span data-ttu-id="8a822-797">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-797">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-798">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-798">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-799">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-799">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-800">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-800">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-801">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-801">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-802">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-802">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="8a822-803">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-803">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-804">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-804">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-805">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-805">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-806">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-806">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-807">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-807">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-808">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-808">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-809">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-809">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-810">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-810">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-811">This parameter is related to client-activated objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-811">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="8a822-812">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-812">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-813">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-813">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="8a822-814">Information used to authorize creation of <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-814">Information used to authorize creation of <c>typeName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-815">Creates a new instance of the specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-815">Creates a new instance of the specified type defined in the specified assembly file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-816">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-816">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="8a822-817">The return value needs to be unwrapped to access the real object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-817">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-818">如需有關這個方法的詳細資訊，請參閱<xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-818">For more information about this method, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8a822-819">當<xref:System.AppDomain.CreateInstanceFrom%2A>方法用來建立目標應用程式定義域中，進行呼叫的應用程式定義域以外的執行個體，在目標應用程式定義域中載入的組件時。</span><span class="sxs-lookup"><span data-stu-id="8a822-819">When the <xref:System.AppDomain.CreateInstanceFrom%2A> method is used to create an instance in a target application domain, other than the application domain from which the call is made, the assembly is loaded in the target application domain.</span></span> <span data-ttu-id="8a822-820">不過，如果呼叫的應用程式定義域中執行個體未包裝，以特定方式使用的未包裝的執行個體可能會導致要載入至呼叫的應用程式定義域的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-820">However, if the instance is unwrapped in the calling application domain, using the unwrapped instance in certain ways can cause the assembly to be loaded into the calling application domain.</span></span> <span data-ttu-id="8a822-821">例如，未包裝的執行個體之後，可能會要求其型別資訊，以便呼叫其方法晚期繫結。</span><span class="sxs-lookup"><span data-stu-id="8a822-821">For example, after the instance is unwrapped, its type information might be requested, in order to call its methods late-bound.</span></span> <span data-ttu-id="8a822-822">當組件載入至呼叫的應用程式定義域時，可能會發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-822">When the assembly is loaded into the calling application domain, exceptions can occur.</span></span>  
  
-   <span data-ttu-id="8a822-823">如果另一個版本相同的組件的先前已載入至呼叫的應用程式定義域中，或如果呼叫的應用程式定義域的載入路徑為不同的目標應用程式定義域，例外狀況<xref:System.MissingMethodException>可能會發生。</span><span class="sxs-lookup"><span data-stu-id="8a822-823">If another version of the same assembly was previously loaded into the calling application domain, or if the load path of the calling application domain is different from that of the target application domain, exceptions such as <xref:System.MissingMethodException> can occur.</span></span>  
  
-   <span data-ttu-id="8a822-824">如果呼叫的應用程式定義域呼叫早期繫結執行個體的型別，<xref:System.InvalidCastException>嘗試轉型執行個體時，可能會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-824">If the calling application domain makes early-bound calls to the instance type, <xref:System.InvalidCastException> can be thrown when an attempt is made to cast the instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-825">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-825">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-826">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-826">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-827">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-827">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="8a822-828">-or-  <paramref name="securityAttributes" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-828">-or-  <paramref name="securityAttributes" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-829">When legacy CAS policy is not enabled, <paramref name="securityAttributes" /> should be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-829">When legacy CAS policy is not enabled, <paramref name="securityAttributes" /> should be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-830">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-830">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-831">
            <paramref name="assemblyFile" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-831">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-832">
            <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-832">
              <paramref name="typeName" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-833">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-833">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-834">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-834">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-835">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-835">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-836">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-836">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-837">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-837">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8a822-838">This instance is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-838">This instance is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-839">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-839">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-840">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-840">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-841">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-841">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-842">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-842">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-843">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-843">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFromAndUnwrap">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-844">Creates a new instance of a specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-844">Creates a new instance of a specified type defined in the specified assembly file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFromAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceFromAndUnwrap (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceFromAndUnwrap(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceFromAndUnwrap (assemblyName As String, typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceFromAndUnwrap(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceFromAndUnwrap : string * string -&gt; obj" Usage="appDomain.CreateInstanceFromAndUnwrap (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-845">The file name and path of the assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-845">The file name and path of the assembly that defines the requested type.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-846">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-846">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-847">Creates a new instance of the specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-847">Creates a new instance of the specified type defined in the specified assembly file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-848">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-848">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-849">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstanceFrom%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-849">This is a convenience method that combines <xref:System.AppDomain.CreateInstanceFrom%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a822-850">這個方法會呼叫預設建構函式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-850">This method calls the default constructor for `typeName`.</span></span>  
  
 <span data-ttu-id="8a822-851">如需詳細資訊，請參閱 <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-851">For more information, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-852">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-852">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-853">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-853">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-854">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-854">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-855">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-855">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-856">
            <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-856">
              <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-857">No parameterless public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-857">No parameterless public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-858">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-858">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-859">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-859">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-860">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-860">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-861">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-861">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-862">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-862">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-863">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-863">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-864">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-864">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFromAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceFromAndUnwrap (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceFromAndUnwrap(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceFromAndUnwrap (assemblyName As String, typeName As String, activationAttributes As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceFromAndUnwrap(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceFromAndUnwrap : string * string * obj[] -&gt; obj" Usage="appDomain.CreateInstanceFromAndUnwrap (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-865">The file name and path of the assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-865">The file name and path of the assembly that defines the requested type.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-866">The fully qualified name of the requested type, including the namespace but not the assembly (see the <see cref="P:System.Type.FullName" /> property).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-866">The fully qualified name of the requested type, including the namespace but not the assembly (see the <see cref="P:System.Type.FullName" /> property).</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-867">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-867">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-868">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-868">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-869">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-869">This parameter is related to client-activated objects.Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-870">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-870">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-871">Creates a new instance of the specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-871">Creates a new instance of the specified type defined in the specified assembly file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-872">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-872">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-873">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstanceFrom%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-873">This is a convenience method that combines <xref:System.AppDomain.CreateInstanceFrom%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a822-874">這個方法會呼叫預設建構函式`typeName`。</span><span class="sxs-lookup"><span data-stu-id="8a822-874">This method calls the default constructor for `typeName`.</span></span>  
  
 <span data-ttu-id="8a822-875">如需有關這個方法的詳細資訊，請參閱<xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-875">For more information about this method, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-876">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-876">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-877">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-877">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-878">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-878">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-879">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-879">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-880">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-880">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-881">
            <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-881">
              <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-882">No parameterless public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-882">No parameterless public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-883">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-883">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-884">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-884">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-885">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-885">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-886">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-886">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-887">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-887">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-888">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-888">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-889">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-889">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFromAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceFromAndUnwrap (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceFromAndUnwrap(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceFromAndUnwrap(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceFromAndUnwrap : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="appDomain.CreateInstanceFromAndUnwrap (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-890">The file name and path of the assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-890">The file name and path of the assembly that defines the requested type.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-891">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-891">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-892">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-892">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-893">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-893">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-894">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-894">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-895">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-895">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="8a822-896">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-896">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-897">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-897">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-898">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-898">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-899">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-899">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-900">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-900">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-901">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-901">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-902">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-902">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-903">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-903">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-904">This parameter is related to client-activated objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-904">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="8a822-905">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-905">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-906">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-906">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-907">Creates a new instance of the specified type defined in the specified assembly file, specifying whether the case of the type name is ignored; the binding attributes and the binder that are used to select the type to be created; the arguments of the constructor; the culture; and the activation attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-907">Creates a new instance of the specified type defined in the specified assembly file, specifying whether the case of the type name is ignored; the binding attributes and the binder that are used to select the type to be created; the arguments of the constructor; the culture; and the activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-908">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-908">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-909">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstanceFrom%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-909">This is a convenience method that combines <xref:System.AppDomain.CreateInstanceFrom%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a822-910">如需有關這個方法的詳細資訊，請參閱<xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-910">For more information about this method, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-911">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-911">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-912">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-912">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-913">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-913">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-914">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-914">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-915">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-915">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-916">
            <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-916">
              <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-917">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-917">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-918">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-918">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-919">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-919">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-920">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime that the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-920">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime that the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-921">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-921">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-922">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-922">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-923">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-923">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-924">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-924">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFromAndUnwrap">
      <MemberSignature Language="C#" Value="public object CreateInstanceFromAndUnwrap (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstanceFromAndUnwrap(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstanceFromAndUnwrap(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceFromAndUnwrap : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; obj" Usage="appDomain.CreateInstanceFromAndUnwrap (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-925">The file name and path of the assembly that defines the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-925">The file name and path of the assembly that defines the requested type.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="8a822-926">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-926">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8a822-927">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-927">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="8a822-928">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-928">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-929">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-929">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="8a822-930">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-930">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="8a822-931">If <c>binder</c> is null, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-931">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-932">The arguments to pass to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-932">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="8a822-933">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-933">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="8a822-934">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-934">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8a822-935">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-935">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="8a822-936">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-936">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="8a822-937">An array of one or more attributes that can participate in activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-937">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="8a822-938">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-938">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="8a822-939">This parameter is related to client-activated objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-939">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="8a822-940">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-940">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="8a822-941">Distributed applications should instead use Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-941">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="8a822-942">Information used to authorize creation of <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-942">Information used to authorize creation of <c>typeName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-943">Creates a new instance of the specified type defined in the specified assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-943">Creates a new instance of the specified type defined in the specified assembly file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-944">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-944">The requested object, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-945">這是很便利的方法，結合了<xref:System.AppDomain.CreateInstanceFrom%2A>和<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-945">This is a convenience method that combines <xref:System.AppDomain.CreateInstanceFrom%2A> and <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a822-946">如需有關這個方法的詳細資訊，請參閱<xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-946">For more information about this method, see the <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-947">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-947">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-948">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-948">-or-  <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-949">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-949">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-950">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-950">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-951">
            <paramref name="assemblyName" /> was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-951">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="8a822-952">
            <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-952">
              <paramref name="typeName" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-953">No matching public constructor was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-953">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="8a822-954">The caller does not have sufficient permission to call this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-954">The caller does not have sufficient permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-955">
            <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-955">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-956">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-956">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-957">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-957">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="8a822-958">提供讀取包含組件資訊清單檔案的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-958">for the ability to read the file containing the assembly manifest.</span>
          </span>
          <span data-ttu-id="8a822-959">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-959">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-960">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-960">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
        <altmember cref="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDomain">
      <MemberSignature Language="C#" Value="public static AppDomain CurrentDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.AppDomain CurrentDomain" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.CurrentDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDomain As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property AppDomain ^ CurrentDomain { AppDomain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDomain : AppDomain" Usage="System.AppDomain.CurrentDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-961">Gets the current application domain for the current <see cref="T:System.Threading.Thread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-961">Gets the current application domain for the current <see cref="T:System.Threading.Thread" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-962">目前的應用程式定義域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-962">The current application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a822-963">下列程式碼範例會建立新的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-963">The following code example creates a new application domain.</span></span> <span data-ttu-id="8a822-964"><xref:System.AppDomain.CurrentDomain%2A>屬性用來取得<xref:System.AppDomain>物件，表示目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-964">The <xref:System.AppDomain.CurrentDomain%2A> property is used to obtain an <xref:System.AppDomain> object that represents the current application domain.</span></span> <span data-ttu-id="8a822-965"><xref:System.AppDomain.FriendlyName%2A>屬性會提供目前的應用程式定義域，然後在命令列顯示的名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-965">The <xref:System.AppDomain.FriendlyName%2A> property provides the name of the current application domain, which is then displayed at the command line.</span></span>  
  
 [!code-cpp[ADApplicationBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADApplicationBase/CPP/adapplicationbase.cpp#1)]
 [!code-csharp[ADApplicationBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADApplicationBase/CS/adapplicationbase.cs#1)]
 [!code-vb[ADApplicationBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADApplicationBase/VB/adapplicationbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-966">Defines a dynamic assembly in the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-966">Defines a dynamic assembly in the current application domain.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-967">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-967">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-968">The access mode for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-968">The access mode for the dynamic assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-969">Defines a dynamic assembly with the specified name and access mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-969">Defines a dynamic assembly with the specified name and access mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-970">A dynamic assembly with the specified name and access mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-970">A dynamic assembly with the specified name and access mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-971">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-971">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-972">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-972">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-973">在開發期間會發出動態組件的程式碼，建議您使用的多載<xref:System.AppDomain.DefineDynamicAssembly%2A>方法所指定的辨識項和權限，提供您想要並將包含的動態組件的辨識項<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>中`refusedPermissions`.</span><span class="sxs-lookup"><span data-stu-id="8a822-973">During the development of code that emits dynamic assemblies, it is recommended that you use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence and permissions, supply the evidence you want the dynamic assembly to have, and include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-974">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-974">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-975">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-975">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-976">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-976">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-977">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-977">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-978">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-978">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-979">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-979">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-980">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-980">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-981">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-981">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-982">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-982">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * seq&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, assemblyAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-983">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-983">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-984">The access mode for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-984">The access mode for the dynamic assembly.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="8a822-985">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-985">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-986">Defines a dynamic assembly with the specified name, access mode, and custom attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-986">Defines a dynamic assembly with the specified name, access mode, and custom attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-987">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-987">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-988">您可以使用這個方法多載來指定將無法正常運作除非建立動態組件時，它們會套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-988">Use this method overload to specify attributes that do not work correctly unless they are applied when a dynamic assembly is created.</span></span> <span data-ttu-id="8a822-989">比方說，安全性屬性這類<xref:System.Security.SecurityTransparentAttribute>和<xref:System.Security.SecurityCriticalAttribute>無法正常運作如果在建立動態組件之後，它們會加入。</span><span class="sxs-lookup"><span data-stu-id="8a822-989">For example, security attributes such as <xref:System.Security.SecurityTransparentAttribute> and <xref:System.Security.SecurityCriticalAttribute> do not work correctly if they are added after a dynamic assembly has been created.</span></span>  
  
 <span data-ttu-id="8a822-990">這個方法應只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-990">This method should be used only to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-991">如需有關這項限制的詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-991">For more information about this restriction, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
 <span data-ttu-id="8a822-992">中引進這個方法多載[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="8a822-992">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-993">下列程式碼範例示範如何建立動態組件具有<xref:System.Security.SecurityTransparentAttribute>。</span><span class="sxs-lookup"><span data-stu-id="8a822-993">The following code sample shows how to create a dynamic assembly that has the <xref:System.Security.SecurityTransparentAttribute>.</span></span> <span data-ttu-id="8a822-994">屬性必須指定為陣列的項目<xref:System.Reflection.Emit.CustomAttributeBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-994">The attribute must be specified as an element of an array of <xref:System.Reflection.Emit.CustomAttributeBuilder> objects.</span></span>  
  
 <span data-ttu-id="8a822-995">建立第一個步驟<xref:System.Reflection.Emit.CustomAttributeBuilder>是取得屬性的建構函式。</span><span class="sxs-lookup"><span data-stu-id="8a822-995">The first step in creating the <xref:System.Reflection.Emit.CustomAttributeBuilder> is to obtain a constructor for the attribute.</span></span> <span data-ttu-id="8a822-996">建構函式沒有任何參數，因此<xref:System.Type.GetConstructor%2A>方法呼叫的空陣列<xref:System.Type>物件，以表示參數的類型。</span><span class="sxs-lookup"><span data-stu-id="8a822-996">The constructor has no parameters, so the <xref:System.Type.GetConstructor%2A> method is called with an empty array of <xref:System.Type> objects to represent the types of the parameters.</span></span> <span data-ttu-id="8a822-997">第二個步驟是將產生<xref:System.Reflection.ConstructorInfo>物件的建構函式<xref:System.Reflection.Emit.CustomAttributeBuilder>類別，以及類型的空陣列<xref:System.Object>來表示引數。</span><span class="sxs-lookup"><span data-stu-id="8a822-997">The second step is to pass the resulting <xref:System.Reflection.ConstructorInfo> object to the constructor for the <xref:System.Reflection.Emit.CustomAttributeBuilder> class, together with an empty array of type <xref:System.Object> to represent the arguments.</span></span>  
  
 <span data-ttu-id="8a822-998">產生<xref:System.Reflection.Emit.CustomAttributeBuilder>接著會傳遞給<xref:System.AppDomain.DefineDynamicAssembly%2A>做為唯一的項目陣列的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-998">The resulting <xref:System.Reflection.Emit.CustomAttributeBuilder> is then passed to the <xref:System.AppDomain.DefineDynamicAssembly%2A> method as the only element of an array.</span></span>  
  
 <span data-ttu-id="8a822-999">範例程式碼定義的模組，然後輸入新的動態組件，並接著會顯示組件的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-999">The example code defines a module and a type in the new dynamic assembly, and then displays the assembly's attributes.</span></span>  
  
 [!code-cpp[DefineDynamicAssemblyWithAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/DefineDynamicAssemblyWithAttributes/cpp/source.cpp#1)]
 [!code-csharp[DefineDynamicAssemblyWithAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/DefineDynamicAssemblyWithAttributes/cs/source.cs#1)]
 [!code-vb[DefineDynamicAssemblyWithAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DefineDynamicAssemblyWithAttributes/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1000">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1000">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1001">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1001">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1002">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1002">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1003">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1003">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.Policy.Evidence -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.Policy.Evidence -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, evidence)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1004">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1004">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1005">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1005">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="8a822-1006">The evidence supplied for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1006">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="8a822-1007">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1007">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1008">Defines a dynamic assembly using the specified name, access mode, and evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1008">Defines a dynamic assembly using the specified name, access mode, and evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1009">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1009">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1010">只有完全受信任的呼叫端可以提供他們`evidence`定義動態時<xref:System.Reflection.Assembly>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1010">Only fully trusted callers can supply their `evidence` when defining a dynamic <xref:System.Reflection.Assembly>.</span></span> <span data-ttu-id="8a822-1011">執行階段會將對應<xref:System.Security.Policy.Evidence>透過安全性原則，以判斷授與的權限。</span><span class="sxs-lookup"><span data-stu-id="8a822-1011">The runtime will map the <xref:System.Security.Policy.Evidence> through the security policy to determine the granted permissions.</span></span> <span data-ttu-id="8a822-1012">部分信任的呼叫端必須提供 null `evidence`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1012">Partially trusted callers must supply a null `evidence`.</span></span> <span data-ttu-id="8a822-1013">如果`evidence`已`null`，執行階段會將複製的權限集合，也就是目前授與和拒絕呼叫端的集<xref:System.Reflection.Assembly>至動態<xref:System.Reflection.Assembly>所定義，並標示為已解決的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-1013">If `evidence` is `null`, the runtime copies the permission sets, that is, the current grant and deny sets, from the caller's <xref:System.Reflection.Assembly> to the dynamic <xref:System.Reflection.Assembly> being defined and marks policy as resolved.</span></span>  
  
 <span data-ttu-id="8a822-1014">如果動態<xref:System.Reflection.Assembly>是儲存至磁碟，後續的載入將會取得位置相關聯的原則為基礎的授與其中<xref:System.Reflection.Assembly>已儲存。</span><span class="sxs-lookup"><span data-stu-id="8a822-1014">If the dynamic <xref:System.Reflection.Assembly> is saved to disk, subsequent loads will get grants based on policies associated with the location where the <xref:System.Reflection.Assembly> was saved.</span></span>  
  
 <span data-ttu-id="8a822-1015">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1015">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1016">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1016">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1017">在開發期間會發出動態組件的程式碼，建議您使用的多載<xref:System.AppDomain.DefineDynamicAssembly%2A>方法所指定的辨識項和權限，提供您想要並將包含的動態組件的辨識項<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>中`refusedPermissions`.</span><span class="sxs-lookup"><span data-stu-id="8a822-1017">During the development of code that emits dynamic assemblies, it is recommended that you use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence and permissions, supply the evidence you want the dynamic assembly to have, and include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1018">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1018">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1019">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1019">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1020">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1020">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and the <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1021">首先，程式碼範例會嘗試建立的執行個體`MyDynamicType`藉由呼叫<xref:System.AppDomain.CreateInstance%2A>方法具有無效的組件名稱，並攔截產生的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-1021">First, the code example tries to create an instance of `MyDynamicType` by calling the <xref:System.AppDomain.CreateInstance%2A> method with an invalid assembly name, and catches the resulting exception.</span></span>  
  
 <span data-ttu-id="8a822-1022">程式碼範例接著會新增事件處理常式<xref:System.AppDomain.AssemblyResolve>事件，然後再次嘗試建立的執行個體`MyDynamicType`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1022">The code example then adds an event handler for the <xref:System.AppDomain.AssemblyResolve> event, and again tries to create an instance of`MyDynamicType`.</span></span> <span data-ttu-id="8a822-1023">在呼叫期間<xref:System.AppDomain.CreateInstance%2A>，則<xref:System.AppDomain.AssemblyResolve>無效的組件都會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1023">During the call to <xref:System.AppDomain.CreateInstance%2A>, the <xref:System.AppDomain.AssemblyResolve> event is raised for the invalid assembly.</span></span> <span data-ttu-id="8a822-1024">事件處理常式會建立動態組件，其中包含名為的型別`MyDynamicType`、 提供的類型的無參數建構函式，並傳回新的動態組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1024">The event handler creates a dynamic assembly that contains a type named `MyDynamicType`, gives the type a parameterless constructor, and returns the new dynamic assembly.</span></span> <span data-ttu-id="8a822-1025">在呼叫<xref:System.AppDomain.CreateInstance%2A>成功，然後完成的建構函式和`MyDynamicType`在主控台上顯示一則訊息。</span><span class="sxs-lookup"><span data-stu-id="8a822-1025">The call to <xref:System.AppDomain.CreateInstance%2A> then finishes successfully, and the constructor for `MyDynamicType` displays a message at the console.</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1026">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1026">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1027">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1027">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1028">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1028">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1029">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1029">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1030">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1030">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1031">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1031">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, dir As String) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, dir)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1032">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1032">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1033">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1033">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="8a822-1034">The name of the directory where the assembly will be saved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1034">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="8a822-1035">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1035">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1036">Defines a dynamic assembly using the specified name, access mode, and storage directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1036">Defines a dynamic assembly using the specified name, access mode, and storage directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1037">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1037">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1038">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1038">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1039">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1039">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1040">在開發期間會發出動態組件的程式碼，建議您使用的多載<xref:System.AppDomain.DefineDynamicAssembly%2A>方法所指定的辨識項和權限，提供您想要並將包含的動態組件的辨識項<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>中`refusedPermissions`.</span><span class="sxs-lookup"><span data-stu-id="8a822-1040">During the development of code that emits dynamic assemblies, it is recommended that you use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence and permissions, supply the evidence you want the dynamic assembly to have, and include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1041">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1041">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1042">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1042">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1043">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1043">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1044">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1044">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1045">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1045">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1046">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1046">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1047">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1047">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1048">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1048">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1049">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1049">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes, System.Security.SecurityContextSource securityContextSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes, valuetype System.Security.SecurityContextSource securityContextSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes, System::Security::SecurityContextSource securityContextSource);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * seq&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; * System.Security.SecurityContextSource -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, assemblyAttributes, securityContextSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
        <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1050">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1050">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1051">The access mode for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1051">The access mode for the dynamic assembly.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="8a822-1052">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1052">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          </span>
        </param>
        <param name="securityContextSource">
          <span data-ttu-id="8a822-1053">The source of the security context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1053">The source of the security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1054">Defines a dynamic assembly with the specified name, access mode, and custom attributes, and using the specified source for its security context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1054">Defines a dynamic assembly with the specified name, access mode, and custom attributes, and using the specified source for its security context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1055">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1055">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1056">您可以使用這個方法多載來指定將無法正常運作除非建立動態組件時，它們會套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1056">Use this method overload to specify attributes that do not work correctly unless they are applied when a dynamic assembly is created.</span></span> <span data-ttu-id="8a822-1057">比方說，安全性屬性這類<xref:System.Security.SecurityTransparentAttribute>和<xref:System.Security.SecurityCriticalAttribute>無法正常運作如果在建立動態組件之後，它們會加入。</span><span class="sxs-lookup"><span data-stu-id="8a822-1057">For example, security attributes such as <xref:System.Security.SecurityTransparentAttribute> and <xref:System.Security.SecurityCriticalAttribute> do not work correctly if they are added after a dynamic assembly has been created.</span></span>  
  
 <span data-ttu-id="8a822-1058">這個方法應只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1058">This method should be used only to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1059">如需有關這項限制的詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1059">For more information about this restriction, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1060">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1060">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1061">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1061">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1062">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1062">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1063">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1063">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a822-1064">The value of <paramref name="securityContextSource" /> was not one of the enumeration values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1064">The value of <paramref name="securityContextSource" /> was not one of the enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, dir, evidence)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1065">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1065">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1066">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1066">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="8a822-1067">The name of the directory where the assembly will be saved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1067">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="8a822-1068">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1068">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="8a822-1069">The evidence supplied for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1069">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="8a822-1070">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1070">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1071">Defines a dynamic assembly using the specified name, access mode, storage directory, and evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1071">Defines a dynamic assembly using the specified name, access mode, storage directory, and evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1072">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1072">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1073">只有完全受信任的呼叫端可以提供他們`evidence`定義動態時<xref:System.Reflection.Assembly>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1073">Only fully trusted callers can supply their `evidence` when defining a dynamic <xref:System.Reflection.Assembly>.</span></span> <span data-ttu-id="8a822-1074">執行階段會將對應<xref:System.Security.Policy.Evidence>透過安全性原則，以判斷授與的權限。</span><span class="sxs-lookup"><span data-stu-id="8a822-1074">The runtime will map the <xref:System.Security.Policy.Evidence> through the security policy to determine the granted permissions.</span></span> <span data-ttu-id="8a822-1075">部分信任的呼叫端必須提供 null `evidence`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1075">Partially trusted callers must supply a null `evidence`.</span></span> <span data-ttu-id="8a822-1076">如果`evidence`已`null`，執行階段會將複製的權限集合，也就是目前授與和拒絕呼叫端的集<xref:System.Reflection.Assembly>至動態<xref:System.Reflection.Assembly>所定義，並標示為已解決的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-1076">If `evidence` is `null`, the runtime copies the permission sets, that is, the current grant and deny sets, from the caller's <xref:System.Reflection.Assembly> to the dynamic <xref:System.Reflection.Assembly> being defined and marks policy as resolved.</span></span>  
  
 <span data-ttu-id="8a822-1077">如果動態<xref:System.Reflection.Assembly>是儲存至磁碟，後續的載入將會取得位置相關聯的原則為基礎的授與其中<xref:System.Reflection.Assembly>已儲存。</span><span class="sxs-lookup"><span data-stu-id="8a822-1077">If the dynamic <xref:System.Reflection.Assembly> is saved to disk, subsequent loads will get grants based on policies associated with the location where the <xref:System.Reflection.Assembly> was saved.</span></span>  
  
 <span data-ttu-id="8a822-1078">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1078">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1079">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1079">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1080">在開發期間會發出動態組件的程式碼，建議您使用的多載<xref:System.AppDomain.DefineDynamicAssembly%2A>方法所指定的辨識項和權限，提供您想要並將包含的動態組件的辨識項<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>中`refusedPermissions`.</span><span class="sxs-lookup"><span data-stu-id="8a822-1080">During the development of code that emits dynamic assemblies, it is recommended that you use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence and permissions, supply the evidence you want the dynamic assembly to have, and include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1081">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1081">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1082">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1082">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1083">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1083">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1084">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1084">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1085">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1085">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1086">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1086">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1087">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1087">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1088">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1088">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1089">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1089">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1090">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1090">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1091">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1091">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, requiredPermissions As PermissionSet, optionalPermissions As PermissionSet, refusedPermissions As PermissionSet) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1092">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1092">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1093">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1093">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="8a822-1094">The required permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1094">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="8a822-1095">The optional permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1095">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="8a822-1096">The refused permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1096">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1097">Defines a dynamic assembly using the specified name, access mode, and permission requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1097">Defines a dynamic assembly using the specified name, access mode, and permission requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1098">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1098">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1099">針對指定的權限要求`requiredPermissions`， `optionalPermissions`，和`refusedPermissions`不會使用，除非已儲存並重新載入到記憶體的動態組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1099">The permission requests specified for `requiredPermissions`, `optionalPermissions`, and `refusedPermissions` are not used unless the dynamic assembly has been saved and reloaded into memory.</span></span> <span data-ttu-id="8a822-1100">若要指定不會儲存到磁碟，請使用的多載的暫時性組件的權限要求<xref:System.AppDomain.DefineDynamicAssembly%2A>方法，也會為要求的權限，並提供為指定的辨識項<xref:System.Security.Policy.Evidence>物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1100">To specify permission requests for a transient assembly that is never saved to disk, use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence as well as requested permissions, and supply an <xref:System.Security.Policy.Evidence> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1101">在開發期間會發出動態組件的程式碼，建議您使用的多載<xref:System.AppDomain.DefineDynamicAssembly%2A>方法所指定的辨識項和權限，提供您想要並將包含的動態組件的辨識項<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>中`refusedPermissions`.</span><span class="sxs-lookup"><span data-stu-id="8a822-1101">During the development of code that emits dynamic assemblies, it is recommended that you use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence and permissions, supply the evidence you want the dynamic assembly to have, and include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1102">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1102">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1103">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1103">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
 <span data-ttu-id="8a822-1104">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1104">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1105">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1105">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1106">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1106">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1107">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1107">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1108">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1108">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1109">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1109">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1110">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1110">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1111">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1111">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1112">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1112">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, bool isSynchronized, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, bool isSynchronized, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, dir As String, isSynchronized As Boolean, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, bool isSynchronized, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * bool * seq&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, dir, isSynchronized, assemblyAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="isSynchronized" Type="System.Boolean" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1113">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1113">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1114">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1114">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="8a822-1115">The name of the directory where the dynamic assembly will be saved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1115">The name of the directory where the dynamic assembly will be saved.</span>
          </span>
          <span data-ttu-id="8a822-1116">If <c>dir</c> is <see langword="null" />, the current directory is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1116">If <c>dir</c> is <see langword="null" />, the current directory is used.</span>
          </span>
        </param>
        <param name="isSynchronized">
          <span data-ttu-id="8a822-1117">
            <see langword="true" /> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1117">
              <see langword="true" /> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="8a822-1118">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1118">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1119">Defines a dynamic assembly using the specified name, access mode, storage directory, and synchronization option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1119">Defines a dynamic assembly using the specified name, access mode, storage directory, and synchronization option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1120">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1120">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1121">您可以使用這個方法多載來指定將無法正常運作除非建立動態組件時，它們會套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1121">Use this method overload to specify attributes that do not work correctly unless they are applied when a dynamic assembly is created.</span></span> <span data-ttu-id="8a822-1122">比方說，安全性屬性這類<xref:System.Security.SecurityTransparentAttribute>和<xref:System.Security.SecurityCriticalAttribute>無法正常運作如果在建立動態組件之後，它們會加入。</span><span class="sxs-lookup"><span data-stu-id="8a822-1122">For example, security attributes such as <xref:System.Security.SecurityTransparentAttribute> and <xref:System.Security.SecurityCriticalAttribute> do not work correctly if they are added after a dynamic assembly has been created.</span></span>  
  
 <span data-ttu-id="8a822-1123">如果`isSynchronized`是`true`，下列方法產生<xref:System.Reflection.Emit.AssemblyBuilder>將會同步處理： <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A>，和<xref:System.Reflection.Emit.AssemblyBuilder.Save%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1123">If `isSynchronized` is `true`, the following methods of the resulting <xref:System.Reflection.Emit.AssemblyBuilder> will be synchronized: <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A>, and <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A>.</span></span> <span data-ttu-id="8a822-1124">其中兩種方法會呼叫不同的執行緒上，如果其中一個會封鎖直到另完成為止。</span><span class="sxs-lookup"><span data-stu-id="8a822-1124">If two of these methods are called on different threads, one will block until the other is completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1125">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1125">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1126">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1126">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1127">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1127">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1128">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1128">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, evidence, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1129">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1129">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1130">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1130">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="8a822-1131">The evidence supplied for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1131">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="8a822-1132">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1132">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="8a822-1133">The required permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1133">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="8a822-1134">The optional permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1134">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="8a822-1135">The refused permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1135">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1136">Defines a dynamic assembly using the specified name, access mode, evidence, and permission requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1136">Defines a dynamic assembly using the specified name, access mode, evidence, and permission requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1137">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1137">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1138">針對指定的權限要求`requiredPermissions`， `optionalPermissions`，並`refusedPermissions`才會使用`evidence`也提供，或如果儲存動態組件，而且重新載入到記憶體。</span><span class="sxs-lookup"><span data-stu-id="8a822-1138">The permission requests specified for `requiredPermissions`, `optionalPermissions`, and `refusedPermissions` are used only if `evidence` is also supplied, or if the dynamic assembly is saved and reloaded into memory.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1139">在開發期間會發出動態組件的程式碼，建議您包含<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>在`refusedPermissions`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1139">During the development of code that emits dynamic assemblies, it is recommended that you include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1140">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1140">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1141">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1141">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
 <span data-ttu-id="8a822-1142">只有完全受信任的呼叫端可以提供他們`evidence`定義動態時<xref:System.Reflection.Assembly>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1142">Only fully trusted callers can supply their `evidence` when defining a dynamic <xref:System.Reflection.Assembly>.</span></span> <span data-ttu-id="8a822-1143">執行階段會將對應<xref:System.Security.Policy.Evidence>透過安全性原則，以判斷授與的權限。</span><span class="sxs-lookup"><span data-stu-id="8a822-1143">The runtime will map the <xref:System.Security.Policy.Evidence> through the security policy to determine the granted permissions.</span></span> <span data-ttu-id="8a822-1144">部分信任的呼叫端必須提供 null `evidence`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1144">Partially trusted callers must supply a null `evidence`.</span></span> <span data-ttu-id="8a822-1145">如果`evidence`已`null`，執行階段會將複製的權限集合，也就是目前授與和拒絕呼叫端的集<xref:System.Reflection.Assembly>至動態<xref:System.Reflection.Assembly>所定義，並標示為已解決的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-1145">If `evidence` is `null`, the runtime copies the permission sets, that is, the current grant and deny sets, from the caller's <xref:System.Reflection.Assembly> to the dynamic <xref:System.Reflection.Assembly> being defined and marks policy as resolved.</span></span>  
  
 <span data-ttu-id="8a822-1146">如果動態<xref:System.Reflection.Assembly>是儲存至磁碟，後續的載入將會取得位置相關聯的原則為基礎的授與其中<xref:System.Reflection.Assembly>已儲存。</span><span class="sxs-lookup"><span data-stu-id="8a822-1146">If the dynamic <xref:System.Reflection.Assembly> is saved to disk, subsequent loads will get grants based on policies associated with the location where the <xref:System.Reflection.Assembly> was saved.</span></span>  
  
 <span data-ttu-id="8a822-1147">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1147">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1148">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1148">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1149">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1149">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1150">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1150">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1151">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1151">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1152">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1152">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1153">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1153">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1154">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1154">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1155">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1155">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1156">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1156">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1157">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1157">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, dir As String, requiredPermissions As PermissionSet, optionalPermissions As PermissionSet, refusedPermissions As PermissionSet) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, dir, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1158">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1158">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1159">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1159">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="8a822-1160">The name of the directory where the assembly will be saved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1160">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="8a822-1161">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1161">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="8a822-1162">The required permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1162">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="8a822-1163">The optional permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1163">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="8a822-1164">The refused permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1164">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1165">Defines a dynamic assembly using the specified name, access mode, storage directory, and permission requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1165">Defines a dynamic assembly using the specified name, access mode, storage directory, and permission requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1166">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1166">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1167">針對指定的權限要求`requiredPermissions`， `optionalPermissions`，和`refusedPermissions`不會使用，除非已儲存並重新載入到記憶體的動態組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1167">The permission requests specified for `requiredPermissions`, `optionalPermissions`, and `refusedPermissions` are not used unless the dynamic assembly has been saved and reloaded into memory.</span></span> <span data-ttu-id="8a822-1168">若要指定不會儲存到磁碟，請使用的多載的暫時性組件的權限要求<xref:System.AppDomain.DefineDynamicAssembly%2A>方法，也會為要求的權限，並提供為指定的辨識項<xref:System.Security.Policy.Evidence>物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1168">To specify permission requests for a transient assembly that is never saved to disk, use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence as well as requested permissions, and supply an <xref:System.Security.Policy.Evidence> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1169">在開發期間會發出動態組件的程式碼，建議您使用的多載<xref:System.AppDomain.DefineDynamicAssembly%2A>方法所指定的辨識項和權限，提供您想要並將包含的動態組件的辨識項<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>中`refusedPermissions`.</span><span class="sxs-lookup"><span data-stu-id="8a822-1169">During the development of code that emits dynamic assemblies, it is recommended that you use an overload of the <xref:System.AppDomain.DefineDynamicAssembly%2A> method that specifies evidence and permissions, supply the evidence you want the dynamic assembly to have, and include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1170">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1170">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1171">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1171">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
 <span data-ttu-id="8a822-1172">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1172">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1173">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1173">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1174">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1174">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1175">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1175">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1176">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1176">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1177">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1177">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1178">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1178">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1179">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1179">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1180">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1180">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, dir, evidence, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1181">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1181">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1182">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1182">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="8a822-1183">The name of the directory where the assembly will be saved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1183">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="8a822-1184">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1184">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="8a822-1185">The evidence supplied for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1185">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="8a822-1186">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1186">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="8a822-1187">The required permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1187">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="8a822-1188">The optional permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1188">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="8a822-1189">The refused permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1189">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1190">Defines a dynamic assembly using the specified name, access mode, storage directory, evidence, and permission requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1190">Defines a dynamic assembly using the specified name, access mode, storage directory, evidence, and permission requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1191">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1191">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1192">針對指定的權限要求`requiredPermissions`， `optionalPermissions`，並`refusedPermissions`才會使用`evidence`也提供，或如果儲存動態組件，而且重新載入到記憶體。</span><span class="sxs-lookup"><span data-stu-id="8a822-1192">The permission requests specified for `requiredPermissions`, `optionalPermissions`, and `refusedPermissions` are used only if `evidence` is also supplied, or if the dynamic assembly is saved and reloaded into memory.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1193">在開發期間會發出動態組件的程式碼，建議您包含<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>在`refusedPermissions`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1193">During the development of code that emits dynamic assemblies, it is recommended that you include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1194">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1194">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1195">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1195">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
 <span data-ttu-id="8a822-1196">只有完全受信任的呼叫端可以提供他們`evidence`定義動態時<xref:System.Reflection.Assembly>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1196">Only fully trusted callers can supply their `evidence` when defining a dynamic <xref:System.Reflection.Assembly>.</span></span> <span data-ttu-id="8a822-1197">執行階段會將對應<xref:System.Security.Policy.Evidence>透過安全性原則，以判斷授與的權限。</span><span class="sxs-lookup"><span data-stu-id="8a822-1197">The runtime will map the <xref:System.Security.Policy.Evidence> through the security policy to determine the granted permissions.</span></span> <span data-ttu-id="8a822-1198">部分信任的呼叫端必須提供 null `evidence`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1198">Partially trusted callers must supply a null `evidence`.</span></span> <span data-ttu-id="8a822-1199">如果`evidence`已`null`，執行階段會將複製的權限集合，也就是目前授與和拒絕呼叫端的集<xref:System.Reflection.Assembly>至動態<xref:System.Reflection.Assembly>所定義，並標示為已解決的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-1199">If `evidence` is `null`, the runtime copies the permission sets, that is, the current grant and deny sets, from the caller's <xref:System.Reflection.Assembly> to the dynamic <xref:System.Reflection.Assembly> being defined and marks policy as resolved.</span></span>  
  
 <span data-ttu-id="8a822-1200">如果動態<xref:System.Reflection.Assembly>是儲存至磁碟，後續的載入將會取得位置相關聯的原則為基礎的授與其中<xref:System.Reflection.Assembly>已儲存。</span><span class="sxs-lookup"><span data-stu-id="8a822-1200">If the dynamic <xref:System.Reflection.Assembly> is saved to disk, subsequent loads will get grants based on policies associated with the location where the <xref:System.Reflection.Assembly> was saved.</span></span>  
  
 <span data-ttu-id="8a822-1201">這個方法應該只用來定義動態組件中目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1201">This method should only be used to define a dynamic assembly in the current application domain.</span></span> <span data-ttu-id="8a822-1202">如需詳細資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1202">For more information, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1203">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1203">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1204">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1204">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1205">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1205">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1206">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1206">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1207">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1207">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1208">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1208">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1209">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1209">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1210">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1210">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1211">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions, bool isSynchronized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions, bool isSynchronized);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet * bool -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet * bool -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, dir, evidence, requiredPermissions, optionalPermissions, refusedPermissions, isSynchronized)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="isSynchronized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1212">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1212">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1213">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1213">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="8a822-1214">The name of the directory where the dynamic assembly will be saved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1214">The name of the directory where the dynamic assembly will be saved.</span>
          </span>
          <span data-ttu-id="8a822-1215">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1215">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="8a822-1216">The evidence supplied for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1216">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="8a822-1217">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1217">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="8a822-1218">The required permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1218">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="8a822-1219">The optional permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1219">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="8a822-1220">The refused permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1220">The refused permissions request.</span>
          </span>
        </param>
        <param name="isSynchronized">
          <span data-ttu-id="8a822-1221">
            <see langword="true" /> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1221">
              <see langword="true" /> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1222">Defines a dynamic assembly using the specified name, access mode, storage directory, evidence, permission requests, and synchronization option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1222">Defines a dynamic assembly using the specified name, access mode, storage directory, evidence, permission requests, and synchronization option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1223">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1223">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1224">針對指定的權限要求`requiredPermissions`， `optionalPermissions`，並`refusedPermissions`才會使用`evidence`也提供，或如果儲存動態組件，而且重新載入到記憶體。</span><span class="sxs-lookup"><span data-stu-id="8a822-1224">The permission requests specified for `requiredPermissions`, `optionalPermissions`, and `refusedPermissions` are used only if `evidence` is also supplied, or if the dynamic assembly is saved and reloaded into memory.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1225">在開發期間會發出動態組件的程式碼，建議您包含<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>在`refusedPermissions`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1225">During the development of code that emits dynamic assemblies, it is recommended that you include <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> in `refusedPermissions`.</span></span> <span data-ttu-id="8a822-1226">包括<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification>在`refusedPermissions`參數可確保會驗證 MSIL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1226">Including <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification> in the `refusedPermissions` parameter ensures that the MSIL is verified.</span></span> <span data-ttu-id="8a822-1227">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1227">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when used with code that demands full trust.</span></span>  
  
 <span data-ttu-id="8a822-1228">只有完全受信任的呼叫端可以提供其辨識項，當定義動態<xref:System.Reflection.Assembly>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1228">Only fully trusted callers can supply their evidence when defining a dynamic <xref:System.Reflection.Assembly>.</span></span> <span data-ttu-id="8a822-1229">執行階段會將對應<xref:System.Security.Policy.Evidence>透過安全性原則，以判斷授與的權限。</span><span class="sxs-lookup"><span data-stu-id="8a822-1229">The runtime will map the <xref:System.Security.Policy.Evidence> through the security policy to determine the granted permissions.</span></span> <span data-ttu-id="8a822-1230">部分信任的呼叫端必須提供`null`針對`evidence`參數。</span><span class="sxs-lookup"><span data-stu-id="8a822-1230">Partially trusted callers must supply `null` for the `evidence` parameter.</span></span> <span data-ttu-id="8a822-1231">如果`evidence`已`null`，執行階段會將複製的權限集合，也就是目前授與和拒絕呼叫端的集<xref:System.Reflection.Assembly>至動態<xref:System.Reflection.Assembly>所定義，並標示為已解決的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-1231">If `evidence` is `null`, the runtime copies the permission sets, that is, the current grant and deny sets, from the caller's <xref:System.Reflection.Assembly> to the dynamic <xref:System.Reflection.Assembly> being defined and marks policy as resolved.</span></span>  
  
 <span data-ttu-id="8a822-1232">如果動態<xref:System.Reflection.Assembly>是儲存至磁碟，後續的載入將會取得位置相關聯的原則為基礎的授與其中<xref:System.Reflection.Assembly>已儲存。</span><span class="sxs-lookup"><span data-stu-id="8a822-1232">If the dynamic <xref:System.Reflection.Assembly> is saved to disk, subsequent loads will get grants based on policies associated with the location where the <xref:System.Reflection.Assembly> was saved.</span></span>  
  
 <span data-ttu-id="8a822-1233">如果`isSynchronized`是`true`，下列方法產生<xref:System.Reflection.Emit.AssemblyBuilder>將會同步處理： <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A>，和<xref:System.Reflection.Emit.AssemblyBuilder.Save%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1233">If `isSynchronized` is `true`, the following methods of the resulting <xref:System.Reflection.Emit.AssemblyBuilder> will be synchronized: <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A>, and <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A>.</span></span> <span data-ttu-id="8a822-1234">如果這些方法的兩個不同的執行緒上呼叫，其中將會封鎖其他作業完成之前。</span><span class="sxs-lookup"><span data-stu-id="8a822-1234">If two of these methods are called on different threads, one will block until the other completes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1235">下列範例會示範<xref:System.AppDomain.DefineDynamicAssembly%2A>方法和<xref:System.AppDomain.AssemblyResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1235">The following sample demonstrates the <xref:System.AppDomain.DefineDynamicAssembly%2A> method and <xref:System.AppDomain.AssemblyResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-1236">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1236">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1237">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1237">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CPP/definedynamicassembly.cpp#1)]
 [!code-csharp[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/CS/definedynamicassembly.cs#1)]
 [!code-vb[AppDomain_DefineDynamicAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DefineDynamicAssembly/VB/definedynamicassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1238">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1238">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1239">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1239">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1240">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1240">-or-  The <see langword="Name" /> property of <paramref name="name" /> begins with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1241">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1241">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1242">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1242">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1243">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1243">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions, bool isSynchronized, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions, bool isSynchronized, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet * bool * seq&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="appDomain.DefineDynamicAssembly (name, access, dir, evidence, requiredPermissions, optionalPermissions, refusedPermissions, isSynchronized, assemblyAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Declarative security for assembly level is no longer enforced")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="isSynchronized" Type="System.Boolean" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1244">The unique identity of the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1244">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8a822-1245">The mode in which the dynamic assembly will be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1245">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="8a822-1246">The name of the directory where the dynamic assembly will be saved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1246">The name of the directory where the dynamic assembly will be saved.</span>
          </span>
          <span data-ttu-id="8a822-1247">If <c>dir</c> is <see langword="null" />, the current directory is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1247">If <c>dir</c> is <see langword="null" />, the current directory is used.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="8a822-1248">The evidence that is supplied for the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1248">The evidence that is supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="8a822-1249">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1249">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="8a822-1250">The required permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1250">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="8a822-1251">The optional permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1251">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="8a822-1252">The refused permissions request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1252">The refused permissions request.</span>
          </span>
        </param>
        <param name="isSynchronized">
          <span data-ttu-id="8a822-1253">
            <see langword="true" /> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1253">
              <see langword="true" /> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="8a822-1254">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1254">An enumerable list of attributes to be applied to the assembly, or <see langword="null" /> if there are no attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1255">Defines a dynamic assembly with the specified name, access mode, storage directory, evidence, permission requests, synchronization option, and custom attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1255">Defines a dynamic assembly with the specified name, access mode, storage directory, evidence, permission requests, synchronization option, and custom attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1256">A dynamic assembly with the specified name and features.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1256">A dynamic assembly with the specified name and features.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1257">您可以使用這個方法多載來指定將無法正常運作除非建立動態組件時，它們會套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1257">Use this method overload to specify attributes that do not work correctly unless they are applied when a dynamic assembly is created.</span></span> <span data-ttu-id="8a822-1258">比方說，安全性屬性這類<xref:System.Security.SecurityTransparentAttribute>和<xref:System.Security.SecurityCriticalAttribute>無法正常運作如果在建立動態組件之後，它們會加入。</span><span class="sxs-lookup"><span data-stu-id="8a822-1258">For example, security attributes such as <xref:System.Security.SecurityTransparentAttribute> and <xref:System.Security.SecurityCriticalAttribute> do not work correctly if they are added after a dynamic assembly has been created.</span></span>  
  
 <span data-ttu-id="8a822-1259">針對指定的權限要求`requiredPermissions`， `optionalPermissions`，並`refusedPermissions`才會使用的參數`evidence`也提供參數，或如果儲存動態組件，而且重新載入到記憶體。</span><span class="sxs-lookup"><span data-stu-id="8a822-1259">The permission requests specified for the `requiredPermissions`, `optionalPermissions`, and `refusedPermissions` parameters are used only if the `evidence` parameter is also supplied, or if the dynamic assembly is saved and reloaded into memory.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1260">當您開發可發出動態組件的程式碼時，我們建議您包含<xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType>加上旗標在`refusedPermissions`參數。</span><span class="sxs-lookup"><span data-stu-id="8a822-1260">When you develop code that emits dynamic assemblies, we recommend that you include the <xref:System.Security.Permissions.SecurityPermissionFlag.SkipVerification?displayProperty=nameWithType> flag in the `refusedPermissions` parameter.</span></span> <span data-ttu-id="8a822-1261">此旗標包含確保的 Microsoft intermediate language (MSIL) 會進行驗證。</span><span class="sxs-lookup"><span data-stu-id="8a822-1261">The inclusion of this flag ensures that the Microsoft intermediate language (MSIL) will be verified.</span></span> <span data-ttu-id="8a822-1262">這項技術會偵測到意外產生無法驗證的程式碼，否則這是非常難以偵測。</span><span class="sxs-lookup"><span data-stu-id="8a822-1262">This technique will detect the unintentional generation of unverifiable code, which otherwise is very difficult to detect.</span></span> <span data-ttu-id="8a822-1263">這項技術的限制是，它也會使<xref:System.Security.SecurityException>要求完全信任的程式碼搭配使用時擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1263">A limitation of this technique is that it also causes <xref:System.Security.SecurityException> to be thrown when it is used with code that demands full trust.</span></span>  
  
 <span data-ttu-id="8a822-1264">只有完全受信任的呼叫端可以提供辨識項，當定義動態<xref:System.Reflection.Assembly>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1264">Only fully trusted callers can supply evidence when defining a dynamic <xref:System.Reflection.Assembly>.</span></span> <span data-ttu-id="8a822-1265">執行階段對應<xref:System.Security.Policy.Evidence>透過安全性原則，以判斷授與的權限。</span><span class="sxs-lookup"><span data-stu-id="8a822-1265">The runtime maps the <xref:System.Security.Policy.Evidence> through the security policy to determine the granted permissions.</span></span> <span data-ttu-id="8a822-1266">部分信任的呼叫端必須提供`null`針對`evidence`參數。</span><span class="sxs-lookup"><span data-stu-id="8a822-1266">Partially trusted callers must supply `null` for the `evidence` parameter.</span></span> <span data-ttu-id="8a822-1267">如果`evidence`是`null`，執行階段將 （也就是，目前的授與和拒絕集） 的權限集合從呼叫者的組件複製到的動態組件所定義，且標示為已解決的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-1267">If `evidence` is `null`, the runtime copies the permission sets (that is, the current grant and deny sets) from the caller's assembly to the dynamic assembly that is being defined, and marks the policy as resolved.</span></span>  
  
 <span data-ttu-id="8a822-1268">如果動態組件會儲存至磁碟，則後續載入會根據儲存動態組件的位置與相關聯的原則授與。</span><span class="sxs-lookup"><span data-stu-id="8a822-1268">If the dynamic assembly is saved to disk, subsequent loads will get grants based on policies that are associated with the location where the dynamic assembly was saved.</span></span>  
  
 <span data-ttu-id="8a822-1269">如果`isSynchronized`是`true`，下列方法產生<xref:System.Reflection.Emit.AssemblyBuilder>將會同步處理： <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule%2A>， <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A>，和<xref:System.Reflection.Emit.AssemblyBuilder.Save%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1269">If `isSynchronized` is `true`, the following methods of the resulting <xref:System.Reflection.Emit.AssemblyBuilder> will be synchronized: <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule%2A>, <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A>, and <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A>.</span></span> <span data-ttu-id="8a822-1270">其中兩種方法會呼叫不同的執行緒上，如果其中一個會封鎖直到另完成為止。</span><span class="sxs-lookup"><span data-stu-id="8a822-1270">If two of these methods are called on different threads, one will block until the other is completed.</span></span>  
  
 <span data-ttu-id="8a822-1271">中引進這個方法多載[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="8a822-1271">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1272">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1272">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1273">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1273">The <see langword="Name" /> property of <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1274">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1274">-or-  The <see langword="Name" /> property of <paramref name="name" /> starts with white space, or contains a forward or backward slash.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1275">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1275">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1276">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1276">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1277">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1277">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="DoCallBack">
      <MemberSignature Language="C#" Value="public void DoCallBack (CrossAppDomainDelegate callBackDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoCallBack(class System.CrossAppDomainDelegate callBackDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoCallBack (callBackDelegate As CrossAppDomainDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoCallBack(CrossAppDomainDelegate ^ callBackDelegate);" />
      <MemberSignature Language="F#" Value="abstract member DoCallBack : CrossAppDomainDelegate -&gt; unit&#xA;override this.DoCallBack : CrossAppDomainDelegate -&gt; unit" Usage="appDomain.DoCallBack callBackDelegate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callBackDelegate" Type="System.CrossAppDomainDelegate" />
      </Parameters>
      <Docs>
        <param name="callBackDelegate">
          <span data-ttu-id="8a822-1278">A delegate that specifies a method to call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1278">A delegate that specifies a method to call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1279">Executes the code in another application domain that is identified by the specified delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1279">Executes the code in another application domain that is identified by the specified delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1280">`callBackDelegate` 可以封送處理為傳值方式指定， <xref:System.MarshalByRefObject>，或<xref:System.ContextBoundObject>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1280">`callBackDelegate` can specify a marshal-by-value, <xref:System.MarshalByRefObject>, or <xref:System.ContextBoundObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1281">下列範例示範如何使用靜態<xref:System.AppDomain.DoCallBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1281">The following sample demonstrates using a static <xref:System.AppDomain.DoCallBack%2A> method.</span></span>  
  
 [!code-cpp[AppDomain_DoCallBack#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DoCallBack/CPP/docallback_static.cpp#1)]
 [!code-csharp[AppDomain_DoCallBack#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DoCallBack/CS/docallback_static.cs#1)]
 [!code-vb[AppDomain_DoCallBack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DoCallBack/VB/docallback_static.vb#1)]  
  
 <span data-ttu-id="8a822-1282">下列範例示範如何使用<xref:System.AppDomain.DoCallBack%2A>值的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1282">The following sample demonstrates using the <xref:System.AppDomain.DoCallBack%2A> method by value.</span></span>  
  
 [!code-cpp[AppDomain_DoCallBack#2](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DoCallBack/CPP/docallback_byval.cpp#2)]
 [!code-csharp[AppDomain_DoCallBack#2](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DoCallBack/CS/docallback_byval.cs#2)]
 [!code-vb[AppDomain_DoCallBack#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DoCallBack/VB/docallback_byval.vb#2)]  
  
 <span data-ttu-id="8a822-1283">下列範例示範如何使用<xref:System.AppDomain.DoCallBack%2A>所參考的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1283">The following sample demonstrates using the <xref:System.AppDomain.DoCallBack%2A> method by reference.</span></span>  
  
 [!code-cpp[AppDomain_DoCallBack#3](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_DoCallBack/CPP/docallback_byref.cpp#3)]
 [!code-csharp[AppDomain_DoCallBack#3](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_DoCallBack/CS/docallback_byref.cs#3)]
 [!code-vb[AppDomain_DoCallBack#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_DoCallBack/VB/docallback_byref.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1284">
            <paramref name="callBackDelegate" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1284">
              <paramref name="callBackDelegate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DomainManager">
      <MemberSignature Language="C#" Value="public AppDomainManager DomainManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomainManager DomainManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.DomainManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainManager As AppDomainManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManager ^ DomainManager { AppDomainManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainManager : AppDomainManager" Usage="System.AppDomain.DomainManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1285">Gets the domain manager that was provided by the host when the application domain was initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1285">Gets the domain manager that was provided by the host when the application domain was initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1286">物件，表示在已經初始化應用程式定義域時，由主應用程式提供的定義域管理員；如果未提供任何定義域管理員，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1286">An object that represents the domain manager provided by the host when the application domain was initialized, or <see langword="null" /> if no domain manager was provided.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1287">受管理的主機，common language runtime (CLR) 可以提供網域管理員。</span><span class="sxs-lookup"><span data-stu-id="8a822-1287">An unmanaged host of the common language runtime (CLR) can provide a domain manager.</span></span> <span data-ttu-id="8a822-1288">可以初始化新的應用程式定義域中參與的定義域管理員，並將其提供其他管理員中，例如<xref:System.Security.HostSecurityManager>，參與的應用程式定義域的作業。</span><span class="sxs-lookup"><span data-stu-id="8a822-1288">The domain manager can participate in initializing the new application domain and supply other managers, such as a <xref:System.Security.HostSecurityManager>, that participate in the operations of the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1289">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1289">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1290">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1290">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DomainUnload">
      <MemberSignature Language="C#" Value="public event EventHandler DomainUnload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DomainUnload" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.DomainUnload" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DomainUnload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ DomainUnload;" />
      <MemberSignature Language="F#" Value="member this.DomainUnload : EventHandler " Usage="member this.DomainUnload : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System._AppDomain.DomainUnload</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1291">Occurs when an <see cref="T:System.AppDomain" /> is about to be unloaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1291">Occurs when an <see cref="T:System.AppDomain" /> is about to be unloaded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1292"><xref:System.EventHandler>委派為這個事件可以在應用程式網域卸載之前執行任何終止活動。</span><span class="sxs-lookup"><span data-stu-id="8a822-1292">The <xref:System.EventHandler> delegate for this event can perform any termination activities before the application domain is unloaded.</span></span>  
  
 <span data-ttu-id="8a822-1293">每個應用程式定義域必須執行處理卸載時應該註冊這個事件的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-1293">Each application domain that needs to perform processing when it is unloaded should register an event handler for this event.</span></span> <span data-ttu-id="8a822-1294">共用的事件處理常式應該不使用，因為<xref:System.EventHandler>委派不會識別正在卸載的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1294">A shared event handler should not be used, because the <xref:System.EventHandler> delegate does not identify the domain that is being unloaded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1295">預設應用程式定義域中永遠不會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1295">This event is never raised in the default application domain.</span></span>  
  
 <span data-ttu-id="8a822-1296">請勿在執行緒引發事件的相關假設。</span><span class="sxs-lookup"><span data-stu-id="8a822-1296">Do not make assumptions about the thread the event is raised on.</span></span> <span data-ttu-id="8a822-1297">可以在不同的執行緒以外的呼叫引發事件<xref:System.AppDomain.Unload%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1297">The event can be raised on a different thread than the one that called the <xref:System.AppDomain.Unload%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1298">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1298">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDirectory">
      <MemberSignature Language="C#" Value="public string DynamicDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDirectory" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.DynamicDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDirectory : string" Usage="System.AppDomain.DynamicDirectory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System._AppDomain.DynamicDirectory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1299">Gets the directory that the assembly resolver uses to probe for dynamically created assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1299">Gets the directory that the assembly resolver uses to probe for dynamically created assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1300">組件解析程式用來探查以動態建立組件的目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1300">The directory that the assembly resolver uses to probe for dynamically created assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1301">若要設定的動態的目錄，將指定的基底目錄路徑<xref:System.AppDomainSetup.DynamicBase%2A?displayProperty=nameWithType>屬性<xref:System.AppDomainSetup>會用以建立新的應用程式定義域的物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1301">To set the dynamic directory, assign a base directory path to the <xref:System.AppDomainSetup.DynamicBase%2A?displayProperty=nameWithType> property of the <xref:System.AppDomainSetup> object that will be used to create the new application domain.</span></span> <span data-ttu-id="8a822-1302">修改指派給屬性的基底目錄路徑的簡單名稱是指派給字串的雜湊程式碼子目錄<xref:System.AppDomainSetup.ApplicationName%2A?displayProperty=nameWithType>屬性，所以基底目錄格式*原始路徑* \\*雜湊碼*。</span><span class="sxs-lookup"><span data-stu-id="8a822-1302">The base directory path you assign to the property is modified by the addition of a subdirectory whose simple name is the hash code of the string you assign to the <xref:System.AppDomainSetup.ApplicationName%2A?displayProperty=nameWithType> property, so the format of the base directory is *original path*\\*hash code*.</span></span> <span data-ttu-id="8a822-1303">此基底目錄的子目錄動態的目錄。</span><span class="sxs-lookup"><span data-stu-id="8a822-1303">The dynamic directory is a subdirectory of this base directory.</span></span> <span data-ttu-id="8a822-1304">其簡單的名稱是值<xref:System.AppDomainSetup.ApplicationName%2A?displayProperty=nameWithType>屬性，因此它的格式*原始路徑*\\*雜湊碼*\\*應用程式名稱*。</span><span class="sxs-lookup"><span data-stu-id="8a822-1304">Its simple name is the value of the <xref:System.AppDomainSetup.ApplicationName%2A?displayProperty=nameWithType> property, so its format is *original path*\\*hash code*\\*application name*.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1305">下列範例與目錄的應用程式定義域建立動態組件的、 發出動態組件和將它儲存在動態的目錄中，將組件載入新的應用程式定義域然後使用它。</span><span class="sxs-lookup"><span data-stu-id="8a822-1305">The following example creates an application domain with a directory for dynamic assemblies, emits a dynamic assembly and stores it in the dynamic directory, and then loads the assembly into the new application domain and uses it.</span></span>  
  
 <span data-ttu-id="8a822-1306">此範例會建立<xref:System.AppDomainSetup>物件以及設定其<xref:System.AppDomainSetup.ApplicationName%2A>"Example"的屬性並將其<xref:System.AppDomainSetup.DynamicBase%2A>"C:\DynamicAssemblyDir"的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1306">The example creates an <xref:System.AppDomainSetup> object and sets its <xref:System.AppDomainSetup.ApplicationName%2A> property to "Example" and its <xref:System.AppDomainSetup.DynamicBase%2A> property to "C:\DynamicAssemblyDir".</span></span> <span data-ttu-id="8a822-1307">此範例接著會顯示<xref:System.AppDomainSetup.DynamicBase%2A>屬性，以顯示應用程式名稱的雜湊碼，已附加為原本指派路徑的子目錄。</span><span class="sxs-lookup"><span data-stu-id="8a822-1307">The example then displays the <xref:System.AppDomainSetup.DynamicBase%2A> property, to show that the hash code of the application name has been appended as a subdirectory of the path that was originally assigned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1308">在此範例中的基底目錄就是要探查路徑外部的範例應用程式。</span><span class="sxs-lookup"><span data-stu-id="8a822-1308">The base directory in this example is intended to be outside the probing path for the example application.</span></span> <span data-ttu-id="8a822-1309">請務必在編譯中的不同位置的範例。</span><span class="sxs-lookup"><span data-stu-id="8a822-1309">Be sure to compile the example in a different location.</span></span> <span data-ttu-id="8a822-1310">刪除的基底目錄及其所有子目錄每次執行此範例的資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-1310">Delete the base directory and all its subdirectories each time you run the example.</span></span>  
  
 <span data-ttu-id="8a822-1311">此範例會建立新的應用程式定義域中，使用<xref:System.AppDomainSetup>物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1311">The example creates a new application domain, using the <xref:System.AppDomainSetup> object.</span></span> <span data-ttu-id="8a822-1312">此範例會使用<xref:System.AppDomain.DynamicDirectory%2A>屬性，以擷取目錄的名稱，因此它可以建立該目錄。</span><span class="sxs-lookup"><span data-stu-id="8a822-1312">The example uses the <xref:System.AppDomain.DynamicDirectory%2A> property to retrieve the name of the directory, so it can create the directory.</span></span> <span data-ttu-id="8a822-1313">（此範例可以輕鬆地建立目錄事先藉由串連的原始路徑，應用程式名稱，而應用程式名稱的雜湊碼。）</span><span class="sxs-lookup"><span data-stu-id="8a822-1313">(The example could just as easily create the directory beforehand by concatenating the original path, the hash code of the application name, and the application name.)</span></span>  
  
 <span data-ttu-id="8a822-1314">此範例包含 `GenerateDynamicAssembly`方法，會發出名為組件`DynamicHelloWorld.dll`並將它儲存在新的應用程式定義域的動態目錄中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1314">The example has a `GenerateDynamicAssembly` method that emits an assembly named `DynamicHelloWorld.dll` and stores it in the new application domain's dynamic directory.</span></span> <span data-ttu-id="8a822-1315">動態組件包含一種類型， `HelloWorld`，，有一個靜態方法 (`Shared`方法，在 Visual Basic 中的) 名為`HelloFromAD`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1315">The dynamic assembly contains one type, `HelloWorld`, that has a static method (`Shared` method in Visual Basic) named `HelloFromAD`.</span></span> <span data-ttu-id="8a822-1316">呼叫這個方法會顯示應用程式定義域的名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1316">Calling this method displays the name of the application domain.</span></span>  
  
 <span data-ttu-id="8a822-1317">`Example`類別衍生自<xref:System.MarshalByRefObject>，因此範例可以建立類別的執行個體，在新的應用程式定義域，並呼叫其`Test`方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1317">The `Example` class derives from <xref:System.MarshalByRefObject>, so the example can create an instance of the class in the new application domain and call its `Test` method.</span></span> <span data-ttu-id="8a822-1318">`Test`方法會依其顯示名稱載入的動態組件，並呼叫靜態`HelloFromAD`方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1318">The `Test` method loads the dynamic assembly by its display name and calls the static `HelloFromAD` method.</span></span>  
  
 <span data-ttu-id="8a822-1319">您可以顯示的動態目錄搜尋一般探查路徑之後，撰寫程式碼組件名為`DynamicHelloWorld.dll`和編譯此範例中的相同目錄中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1319">You can show that the dynamic directory is searched after the normal probing paths by writing code for an assembly named `DynamicHelloWorld.dll` and compiling it in the same directory as this example.</span></span> <span data-ttu-id="8a822-1320">組件必須具有一個名為類別`HelloWorld`靜態方法，名為`HelloFromAD`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1320">The assembly must have a class named `HelloWorld` with a static method named `HelloFromAD`.</span></span> <span data-ttu-id="8a822-1321">這個方法不需要有相同的功能與在範例中，它只可以在主控台中顯示的字串。</span><span class="sxs-lookup"><span data-stu-id="8a822-1321">This method does not have to have the same functionality as the one in the example; it can simply display a string to the console.</span></span> <span data-ttu-id="8a822-1322">組件也必須<xref:System.Reflection.AssemblyVersionAttribute>將它的版本設定為 1.0.0.0 的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1322">The assembly must also have an <xref:System.Reflection.AssemblyVersionAttribute> attribute that sets its version to 1.0.0.0.</span></span> <span data-ttu-id="8a822-1323">當您執行範例時，才能動態的目錄中搜尋找到您編譯目前目錄中的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1323">When you run the example, the assembly you compiled in the current directory is found before the dynamic directory is searched.</span></span>  
  
 [!code-cpp[ADDynamicBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDynamicBase/CPP/addynamicbase.cpp#1)]
 [!code-csharp[ADDynamicBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDynamicBase/CS/addynamicbase.cs#1)]
 [!code-vb[ADDynamicBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDynamicBase/VB/addynamicbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1324">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1324">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1325">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1325">for access to the path information.</span>
          </span>
          <span data-ttu-id="8a822-1326">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1326">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.AppDomain.Evidence" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.IEvidenceFactory.Evidence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1327">Gets the <see cref="T:System.Security.Policy.Evidence" /> associated with this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1327">Gets the <see cref="T:System.Security.Policy.Evidence" /> associated with this application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1328">與此應用程式定義域相關聯的辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1328">The evidence associated with this application domain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1329">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1329">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1330">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1330">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1331">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1331">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
          <span data-ttu-id="8a822-1332">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1332">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1333">Executes the assembly contained in the specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1333">Executes the assembly contained in the specified file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteAssembly(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ExecuteAssembly(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAssembly : string -&gt; int&#xA;override this.ExecuteAssembly : string -&gt; int" Usage="appDomain.ExecuteAssembly assemblyFile" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.ExecuteAssembly(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-1334">The name of the file that contains the assembly to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1334">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1335">Executes the assembly contained in the specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1335">Executes the assembly contained in the specified file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1336">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1336">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1337">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1337">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1338">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1338">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 <span data-ttu-id="8a822-1339">這個方法會載入組件使用<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1339">This method loads assemblies using the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span> <span data-ttu-id="8a822-1340">您也可以執行使用的組件<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法，載入組件使用<xref:System.Reflection.Assembly.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1340">You can also execute assemblies using the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method, which loads assemblies using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1341">若要建立<xref:System.AppDomain>載入並執行，請使用<xref:System.AppDomain.CreateDomain%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1341">To create the <xref:System.AppDomain> to load and execute, use the <xref:System.AppDomain.CreateDomain%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1342">下列範例示範如何使用其中一個多載的<xref:System.AppDomain.ExecuteAssembly%2A>上兩個不同的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1342">The following sample demonstrates using one of the overloads of <xref:System.AppDomain.ExecuteAssembly%2A> on two different domains.</span></span>  
  
 [!code-cpp[AppDomain_ExecuteAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CPP/executeassembly.cpp#1)]
 [!code-csharp[AppDomain_ExecuteAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CS/executeassembly.cs#1)]
 [!code-vb[AppDomain_ExecuteAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_ExecuteAssembly/VB/executeassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1343">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1343">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1344">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1344">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1345">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1345">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1346">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1346">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1347">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1347">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1348">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1348">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1349">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1349">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1350">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1350">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1351">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1351">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1352">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1352">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1353">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1353">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1354">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1354">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteAssembly(string assemblyFile, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String, assemblySecurity As Evidence) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ExecuteAssembly(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAssembly : string * System.Security.Policy.Evidence -&gt; int&#xA;override this.ExecuteAssembly : string * System.Security.Policy.Evidence -&gt; int" Usage="appDomain.ExecuteAssembly (assemblyFile, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-1355">The name of the file that contains the assembly to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1355">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1356">Evidence for loading the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1356">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1357">Executes the assembly contained in the specified file, using the specified evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1357">Executes the assembly contained in the specified file, using the specified evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1358">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1358">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1359">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1359">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1360"><xref:System.AppDomain.ExecuteAssembly%2A>方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1360">The <xref:System.AppDomain.ExecuteAssembly%2A> method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 <span data-ttu-id="8a822-1361">這個方法會載入組件使用<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1361">This method loads assemblies using the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span> <span data-ttu-id="8a822-1362">您也可以執行使用的組件<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法，載入組件使用<xref:System.Reflection.Assembly.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1362">You can also execute assemblies using the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method, which loads assemblies using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1363">下列範例示範如何使用其中一個多載的<xref:System.AppDomain.ExecuteAssembly%2A>上兩個不同的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1363">The following sample demonstrates using one of the overloads of <xref:System.AppDomain.ExecuteAssembly%2A> on two different domains.</span></span>  
  
 [!code-cpp[AppDomain_ExecuteAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CPP/executeassembly.cpp#1)]
 [!code-csharp[AppDomain_ExecuteAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CS/executeassembly.cs#1)]
 [!code-vb[AppDomain_ExecuteAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_ExecuteAssembly/VB/executeassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1364">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1364">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1365">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1365">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1366">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1366">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1367">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1367">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1368">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1368">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1369">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1369">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1370">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1370">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1371">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1371">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1372">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1372">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1373">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1373">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1374">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1374">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1375">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1375">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1376">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1376">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1377">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1377">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssembly(string assemblyFile, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String, args As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssembly(System::String ^ assemblyFile, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssembly : string * string[] -&gt; int" Usage="appDomain.ExecuteAssembly (assemblyFile, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-1378">The name of the file that contains the assembly to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1378">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1379">The arguments to the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1379">The arguments to the entry point of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1380">Executes the assembly contained in the specified file, using the specified arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1380">Executes the assembly contained in the specified file, using the specified arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1381">The value that is returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1381">The value that is returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1382">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1382">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1383">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1383">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 <span data-ttu-id="8a822-1384">這個方法會載入組件使用<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1384">This method loads assemblies using the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span> <span data-ttu-id="8a822-1385">您也可以執行使用的組件<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法，載入組件使用<xref:System.Reflection.Assembly.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1385">You can also execute assemblies using the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method, which loads assemblies using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1386">下列範例示範如何使用其中一個多載的<xref:System.AppDomain.ExecuteAssembly%2A>上兩個不同的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1386">The following sample demonstrates using one of the overloads of <xref:System.AppDomain.ExecuteAssembly%2A> on two different domains.</span></span>  
  
 [!code-cpp[AppDomain_ExecuteAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CPP/executeassembly.cpp#1)]
 [!code-csharp[AppDomain_ExecuteAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CS/executeassembly.cs#1)]
 [!code-vb[AppDomain_ExecuteAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_ExecuteAssembly/VB/executeassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1387">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1387">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1388">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1388">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1389">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1389">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1390">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1390">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1391">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1391">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1392">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1392">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1393">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1393">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1394">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1394">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1395">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1395">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1396">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1396">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1397">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1397">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1398">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1398">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteAssembly(string assemblyFile, class System.Security.Policy.Evidence assemblySecurity, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String, assemblySecurity As Evidence, args As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ExecuteAssembly(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ assemblySecurity, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAssembly : string * System.Security.Policy.Evidence * string[] -&gt; int&#xA;override this.ExecuteAssembly : string * System.Security.Policy.Evidence * string[] -&gt; int" Usage="appDomain.ExecuteAssembly (assemblyFile, assemblySecurity, args)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-1399">The name of the file that contains the assembly to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1399">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1400">The supplied evidence for the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1400">The supplied evidence for the assembly.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1401">The arguments to the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1401">The arguments to the entry point of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1402">Executes the assembly contained in the specified file, using the specified evidence and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1402">Executes the assembly contained in the specified file, using the specified evidence and arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1403">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1403">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1404">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1404">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1405">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1405">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 <span data-ttu-id="8a822-1406">這個方法會載入組件使用<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1406">This method loads assemblies using the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span> <span data-ttu-id="8a822-1407">您也可以執行使用的組件<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法，載入組件使用<xref:System.Reflection.Assembly.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1407">You can also execute assemblies using the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method, which loads assemblies using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1408">下列範例示範如何使用其中一個多載的<xref:System.AppDomain.ExecuteAssembly%2A>上兩個不同的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1408">The following sample demonstrates using one of the overloads of <xref:System.AppDomain.ExecuteAssembly%2A> on two different domains.</span></span>  
  
 [!code-cpp[AppDomain_ExecuteAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CPP/executeassembly.cpp#1)]
 [!code-csharp[AppDomain_ExecuteAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CS/executeassembly.cs#1)]
 [!code-vb[AppDomain_ExecuteAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_ExecuteAssembly/VB/executeassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1409">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1409">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1410">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1410">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1411">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1411">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1412">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1412">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1413">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1413">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1414">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1414">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-1415">
            <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1415">
              <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1416">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1416">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1417">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1417">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1418">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1418">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1419">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1419">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1420">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1420">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1421">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1421">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1422">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1422">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1423">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1423">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1424">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1424">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile, string[] args, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssembly(string assemblyFile, string[] args, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String, args As String(), hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssembly(System::String ^ assemblyFile, cli::array &lt;System::String ^&gt; ^ args, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssembly : string * string[] * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; int" Usage="appDomain.ExecuteAssembly (assemblyFile, args, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-1425">The name of the file that contains the assembly to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1425">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1426">The arguments to the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1426">The arguments to the entry point of the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="8a822-1427">Represents the value of the computed hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1427">Represents the value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="8a822-1428">Represents the hash algorithm used by the assembly manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1428">Represents the hash algorithm used by the assembly manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1429">Executes the assembly contained in the specified file, using the specified arguments, hash value, and hash algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1429">Executes the assembly contained in the specified file, using the specified arguments, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1430">The value that is returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1430">The value that is returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1431">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1431">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1432">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1432">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 <span data-ttu-id="8a822-1433">這個方法會載入組件使用<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1433">This method loads assemblies using the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span> <span data-ttu-id="8a822-1434">您也可以執行使用的組件<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法，載入組件使用<xref:System.Reflection.Assembly.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1434">You can also execute assemblies using the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method, which loads assemblies using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1435">下列範例示範如何使用其中一個多載的<xref:System.AppDomain.ExecuteAssembly%2A>上兩個不同的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1435">The following sample demonstrates using one of the overloads of <xref:System.AppDomain.ExecuteAssembly%2A> on two different domains.</span></span>  
  
 [!code-cpp[AppDomain_ExecuteAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CPP/executeassembly.cpp#1)]
 [!code-csharp[AppDomain_ExecuteAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CS/executeassembly.cs#1)]
 [!code-vb[AppDomain_ExecuteAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_ExecuteAssembly/VB/executeassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1436">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1436">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1437">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1437">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1438">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1438">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1439">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1439">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1440">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1440">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1441">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1441">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1442">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1442">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1443">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1443">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1444">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1444">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1445">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1445">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1446">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1446">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1447">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1447">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssembly(string assemblyFile, class System.Security.Policy.Evidence assemblySecurity, string[] args, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String, assemblySecurity As Evidence, args As String(), hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssembly(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ assemblySecurity, cli::array &lt;System::String ^&gt; ^ args, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssembly : string * System.Security.Policy.Evidence * string[] * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; int" Usage="appDomain.ExecuteAssembly (assemblyFile, assemblySecurity, args, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8a822-1448">The name of the file that contains the assembly to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1448">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1449">The supplied evidence for the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1449">The supplied evidence for the assembly.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1450">The arguments to the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1450">The arguments to the entry point of the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="8a822-1451">Represents the value of the computed hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1451">Represents the value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="8a822-1452">Represents the hash algorithm used by the assembly manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1452">Represents the hash algorithm used by the assembly manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1453">Executes the assembly contained in the specified file, using the specified evidence, arguments, hash value, and hash algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1453">Executes the assembly contained in the specified file, using the specified evidence, arguments, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1454">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1454">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1455">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1455">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1456">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1456">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 <span data-ttu-id="8a822-1457">這個方法會載入組件使用<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1457">This method loads assemblies using the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span> <span data-ttu-id="8a822-1458">您也可以執行使用的組件<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法，載入組件使用<xref:System.Reflection.Assembly.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1458">You can also execute assemblies using the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method, which loads assemblies using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1459">︰ 範例示範如何使用其中一個多載的<xref:System.AppDomain.ExecuteAssembly%2A>上兩個不同的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1459">Thefollowing sample demonstrates using one of the overloads of <xref:System.AppDomain.ExecuteAssembly%2A> on two different domains.</span></span>  
  
 [!code-cpp[AppDomain_ExecuteAssembly#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CPP/executeassembly.cpp#1)]
 [!code-csharp[AppDomain_ExecuteAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_ExecuteAssembly/CS/executeassembly.cs#1)]
 [!code-vb[AppDomain_ExecuteAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_ExecuteAssembly/VB/executeassembly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1460">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1460">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1461">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1461">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1462">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1462">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1463">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1463">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1464">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1464">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1465">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1465">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-1466">
            <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1466">
              <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1467">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1467">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1468">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1468">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1469">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1469">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1470">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1470">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1471">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1471">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1472">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1472">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1473">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1473">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1474">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1474">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1475">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1475">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteAssemblyByName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1476">Executes an assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1476">Executes an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteAssemblyByName">
      <MemberSignature Language="C#" Value="public int ExecuteAssemblyByName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssemblyByName(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssemblyByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssemblyByName (assemblyName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssemblyByName(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssemblyByName : string -&gt; int" Usage="appDomain.ExecuteAssemblyByName assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-1477">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1477">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-1478">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1478">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1479">Executes an assembly given its display name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1479">Executes an assembly given its display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1480">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1480">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1481"><xref:System.AppDomain.ExecuteAssemblyByName%2A>方法會提供類似的功能<xref:System.AppDomain.ExecuteAssembly%2A>方法，但指定的組件的顯示名稱或<xref:System.Reflection.AssemblyName>而不是檔案的位置。</span><span class="sxs-lookup"><span data-stu-id="8a822-1481">The <xref:System.AppDomain.ExecuteAssemblyByName%2A> method provides similar functionality to the <xref:System.AppDomain.ExecuteAssembly%2A> method, but specifies the assembly by display name or <xref:System.Reflection.AssemblyName> rather than by file location.</span></span> <span data-ttu-id="8a822-1482">因此，<xref:System.AppDomain.ExecuteAssemblyByName%2A>載入的組件<xref:System.Reflection.Assembly.Load%2A>方法，而非<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1482">Therefore, <xref:System.AppDomain.ExecuteAssemblyByName%2A> loads assemblies with the <xref:System.Reflection.Assembly.Load%2A> method rather than with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1483">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1483">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1484">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1484">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 <span data-ttu-id="8a822-1485">若要建立<xref:System.AppDomain>載入並執行，請使用<xref:System.AppDomain.CreateDomain%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1485">To create the <xref:System.AppDomain> to load and execute, use the <xref:System.AppDomain.CreateDomain%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1486">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1486">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1487">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1487">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1488">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1488">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1489">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1489">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1490">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1490">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1491">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1491">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1492">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1492">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1493">針對從檔案或目錄，權限本身，路徑中的資訊並將顯示名稱重新導向至路徑的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1493">for access to read from a file or directory, for access to the information in the path itself, and for redirecting a display name to a path.</span>
          </span>
          <span data-ttu-id="8a822-1494">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1494">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1495">用於存取網站時的顯示名稱會被重新導向至的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1495">for access to a Web site, when a display name is redirected to a URL.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1496">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1496">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1497">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1497">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssemblyByName">
      <MemberSignature Language="C#" Value="public int ExecuteAssemblyByName (System.Reflection.AssemblyName assemblyName, params string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssemblyByName(class System.Reflection.AssemblyName assemblyName, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssemblyByName(System::Reflection::AssemblyName ^ assemblyName, ... cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssemblyByName : System.Reflection.AssemblyName * string[] -&gt; int" Usage="appDomain.ExecuteAssemblyByName (assemblyName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
        <Parameter Name="args" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-1498">An <see cref="T:System.Reflection.AssemblyName" /> object representing the name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1498">An <see cref="T:System.Reflection.AssemblyName" /> object representing the name of the assembly.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1499">Command-line arguments to pass when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1499">Command-line arguments to pass when starting the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1500">Executes the assembly given an <see cref="T:System.Reflection.AssemblyName" />, using the specified arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1500">Executes the assembly given an <see cref="T:System.Reflection.AssemblyName" />, using the specified arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1501">The value that is returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1501">The value that is returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1502"><xref:System.AppDomain.ExecuteAssemblyByName%2A>方法會提供類似的功能<xref:System.AppDomain.ExecuteAssembly%2A>方法，但指定的組件的顯示名稱或<xref:System.Reflection.AssemblyName>而不是檔案的位置。</span><span class="sxs-lookup"><span data-stu-id="8a822-1502">The <xref:System.AppDomain.ExecuteAssemblyByName%2A> method provides similar functionality to the <xref:System.AppDomain.ExecuteAssembly%2A> method, but specifies the assembly by display name or <xref:System.Reflection.AssemblyName> rather than by file location.</span></span> <span data-ttu-id="8a822-1503">因此，<xref:System.AppDomain.ExecuteAssemblyByName%2A>載入的組件<xref:System.Reflection.Assembly.Load%2A>方法，而非<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1503">Therefore, <xref:System.AppDomain.ExecuteAssemblyByName%2A> loads assemblies with the <xref:System.Reflection.Assembly.Load%2A> method rather than with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1504">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1504">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1505">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1505">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1506">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1506">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1507">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1507">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1508">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1508">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1509">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1509">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1510">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1510">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1511">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1511">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1512">針對從檔案或目錄，權限本身，路徑中的資訊並將顯示名稱重新導向至路徑的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1512">for access to read from a file or directory, for access to the information in the path itself, and for redirecting a display name to a path.</span>
          </span>
          <span data-ttu-id="8a822-1513">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1513">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1514">用於存取網站時的顯示名稱會被重新導向至的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1514">for access to a Web site, when a display name is redirected to a URL.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1515">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1515">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1516">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1516">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssemblyByName">
      <MemberSignature Language="C#" Value="public int ExecuteAssemblyByName (string assemblyName, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssemblyByName(string assemblyName, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssemblyByName (assemblyName As String, assemblySecurity As Evidence) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssemblyByName(System::String ^ assemblyName, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssemblyByName : string * System.Security.Policy.Evidence -&gt; int" Usage="appDomain.ExecuteAssemblyByName (assemblyName, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-1517">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1517">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-1518">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1518">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1519">Evidence for loading the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1519">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1520">Executes an assembly given its display name, using the specified evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1520">Executes an assembly given its display name, using the specified evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1521">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1521">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1522"><xref:System.AppDomain.ExecuteAssemblyByName%2A>方法會提供類似的功能<xref:System.AppDomain.ExecuteAssembly%2A>方法，但指定的組件的顯示名稱或<xref:System.Reflection.AssemblyName>而不是檔案的位置。</span><span class="sxs-lookup"><span data-stu-id="8a822-1522">The <xref:System.AppDomain.ExecuteAssemblyByName%2A> method provides similar functionality to the <xref:System.AppDomain.ExecuteAssembly%2A> method, but specifies the assembly by display name or <xref:System.Reflection.AssemblyName> rather than by file location.</span></span> <span data-ttu-id="8a822-1523">因此，<xref:System.AppDomain.ExecuteAssemblyByName%2A>載入的組件<xref:System.Reflection.Assembly.Load%2A>方法，而非<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1523">Therefore, <xref:System.AppDomain.ExecuteAssemblyByName%2A> loads assemblies with the <xref:System.Reflection.Assembly.Load%2A> method rather than with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1524">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1524">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1525"><xref:System.AppDomain.ExecuteAssemblyByName%2A>方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1525">The <xref:System.AppDomain.ExecuteAssemblyByName%2A> method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1526">當您使用<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法使用<xref:System.Security.Policy.Evidence>參數部分會合併。</span><span class="sxs-lookup"><span data-stu-id="8a822-1526">When you use the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="8a822-1527">做為引數提供的辨識項的片段<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法取代的辨識項載入器所提供的片段。</span><span class="sxs-lookup"><span data-stu-id="8a822-1527">Pieces of evidence supplied as an argument to the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1528">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1528">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1529">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1529">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1530">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1530">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1531">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1531">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1532">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1532">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1533">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1533">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1534">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1534">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1535">針對從檔案或目錄，權限本身，路徑中的資訊並將顯示名稱重新導向至路徑的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1535">for access to read from a file or directory, for access to the information in the path itself, and for redirecting a display name to a path.</span>
          </span>
          <span data-ttu-id="8a822-1536">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1536">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1537">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1537">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1538">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1538">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1539">用於存取網站時的顯示名稱會被重新導向至的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1539">for access to a Web site, when a display name is redirected to a URL.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1540">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1540">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1541">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1541">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssemblyByName">
      <MemberSignature Language="C#" Value="public int ExecuteAssemblyByName (string assemblyName, params string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssemblyByName(string assemblyName, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssemblyByName (assemblyName As String, ParamArray args As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssemblyByName(System::String ^ assemblyName, ... cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssemblyByName : string * string[] -&gt; int" Usage="appDomain.ExecuteAssemblyByName (assemblyName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="args" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-1542">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1542">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-1543">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1543">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1544">Command-line arguments to pass when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1544">Command-line arguments to pass when starting the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1545">Executes the assembly given its display name, using the specified arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1545">Executes the assembly given its display name, using the specified arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1546">The value that is returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1546">The value that is returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1547"><xref:System.AppDomain.ExecuteAssemblyByName%2A>方法會提供類似的功能<xref:System.AppDomain.ExecuteAssembly%2A>方法，但指定的組件的顯示名稱或<xref:System.Reflection.AssemblyName>而不是檔案的位置。</span><span class="sxs-lookup"><span data-stu-id="8a822-1547">The <xref:System.AppDomain.ExecuteAssemblyByName%2A> method provides similar functionality to the <xref:System.AppDomain.ExecuteAssembly%2A> method, but specifies the assembly by display name or <xref:System.Reflection.AssemblyName> rather than by file location.</span></span> <span data-ttu-id="8a822-1548">因此，<xref:System.AppDomain.ExecuteAssemblyByName%2A>載入的組件<xref:System.Reflection.Assembly.Load%2A>方法，而非<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1548">Therefore, <xref:System.AppDomain.ExecuteAssemblyByName%2A> loads assemblies with the <xref:System.Reflection.Assembly.Load%2A> method rather than with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1549">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1549">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1550">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1550">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1551">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1551">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1552">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1552">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1553">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1553">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1554">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1554">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1555">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1555">-or-  <paramref name="assemblyName" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1556">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1556">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1557">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1557">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1558">針對從檔案或目錄，權限本身，路徑中的資訊並將顯示名稱重新導向至路徑的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1558">for access to read from a file or directory, for access to the information in the path itself, and for redirecting a display name to a path.</span>
          </span>
          <span data-ttu-id="8a822-1559">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1559">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1560">用於存取網站時的顯示名稱會被重新導向至的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1560">for access to a Web site, when a display name is redirected to a URL.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1561">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1561">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1562">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1562">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssemblyByName">
      <MemberSignature Language="C#" Value="public int ExecuteAssemblyByName (System.Reflection.AssemblyName assemblyName, System.Security.Policy.Evidence assemblySecurity, params string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssemblyByName(class System.Reflection.AssemblyName assemblyName, class System.Security.Policy.Evidence assemblySecurity, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssemblyByName(System::Reflection::AssemblyName ^ assemblyName, System::Security::Policy::Evidence ^ assemblySecurity, ... cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssemblyByName : System.Reflection.AssemblyName * System.Security.Policy.Evidence * string[] -&gt; int" Usage="appDomain.ExecuteAssemblyByName (assemblyName, assemblySecurity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        <Parameter Name="args" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-1563">An <see cref="T:System.Reflection.AssemblyName" /> object representing the name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1563">An <see cref="T:System.Reflection.AssemblyName" /> object representing the name of the assembly.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1564">Evidence for loading the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1564">Evidence for loading the assembly.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1565">Command-line arguments to pass when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1565">Command-line arguments to pass when starting the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1566">Executes the assembly given an <see cref="T:System.Reflection.AssemblyName" />, using the specified evidence and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1566">Executes the assembly given an <see cref="T:System.Reflection.AssemblyName" />, using the specified evidence and arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1567">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1567">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1568"><xref:System.AppDomain.ExecuteAssemblyByName%2A>方法會提供類似的功能<xref:System.AppDomain.ExecuteAssembly%2A>方法，但指定的組件的顯示名稱或<xref:System.Reflection.AssemblyName>而不是檔案的位置。</span><span class="sxs-lookup"><span data-stu-id="8a822-1568">The <xref:System.AppDomain.ExecuteAssemblyByName%2A> method provides similar functionality to the <xref:System.AppDomain.ExecuteAssembly%2A> method, but specifies the assembly by display name or <xref:System.Reflection.AssemblyName> rather than by file location.</span></span> <span data-ttu-id="8a822-1569">因此，<xref:System.AppDomain.ExecuteAssemblyByName%2A>載入的組件<xref:System.Reflection.Assembly.Load%2A>方法，而非<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1569">Therefore, <xref:System.AppDomain.ExecuteAssemblyByName%2A> loads assemblies with the <xref:System.Reflection.Assembly.Load%2A> method rather than with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1570">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1570">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1571">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1571">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1572">當您使用<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法使用<xref:System.Security.Policy.Evidence>參數部分會合併。</span><span class="sxs-lookup"><span data-stu-id="8a822-1572">When you use the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="8a822-1573">做為引數提供的辨識項的片段<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法取代的辨識項載入器所提供的片段。</span><span class="sxs-lookup"><span data-stu-id="8a822-1573">Pieces of evidence supplied as an argument to the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1574">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1574">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1575">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1575">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1576">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1576">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1577">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1577">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1578">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1578">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-1579">
            <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1579">
              <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1580">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1580">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1581">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1581">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1582">針對從檔案或目錄，權限本身，路徑中的資訊並將顯示名稱重新導向至路徑的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1582">for access to read from a file or directory, for access to the information in the path itself, and for redirecting a display name to a path.</span>
          </span>
          <span data-ttu-id="8a822-1583">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1583">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1584">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1584">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1585">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1585">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1586">用於存取網站時的顯示名稱會被重新導向至的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1586">for access to a Web site, when a display name is redirected to a URL.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1587">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1587">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1588">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1588">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssemblyByName">
      <MemberSignature Language="C#" Value="public int ExecuteAssemblyByName (string assemblyName, System.Security.Policy.Evidence assemblySecurity, params string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAssemblyByName(string assemblyName, class System.Security.Policy.Evidence assemblySecurity, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssemblyByName (assemblyName As String, assemblySecurity As Evidence, ParamArray args As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssemblyByName(System::String ^ assemblyName, System::Security::Policy::Evidence ^ assemblySecurity, ... cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAssemblyByName : string * System.Security.Policy.Evidence * string[] -&gt; int" Usage="appDomain.ExecuteAssemblyByName (assemblyName, assemblySecurity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        <Parameter Name="args" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8a822-1589">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1589">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-1590">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1590">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1591">Evidence for loading the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1591">Evidence for loading the assembly.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8a822-1592">Command-line arguments to pass when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1592">Command-line arguments to pass when starting the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1593">Executes the assembly given its display name, using the specified evidence and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1593">Executes the assembly given its display name, using the specified evidence and arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1594">The value returned by the entry point of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1594">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1595"><xref:System.AppDomain.ExecuteAssemblyByName%2A>方法會提供類似的功能<xref:System.AppDomain.ExecuteAssembly%2A>方法，但指定的組件的顯示名稱或<xref:System.Reflection.AssemblyName>而不是檔案的位置。</span><span class="sxs-lookup"><span data-stu-id="8a822-1595">The <xref:System.AppDomain.ExecuteAssemblyByName%2A> method provides similar functionality to the <xref:System.AppDomain.ExecuteAssembly%2A> method, but specifies the assembly by display name or <xref:System.Reflection.AssemblyName> rather than by file location.</span></span> <span data-ttu-id="8a822-1596">因此，<xref:System.AppDomain.ExecuteAssemblyByName%2A>載入的組件<xref:System.Reflection.Assembly.Load%2A>方法，而非<xref:System.Reflection.Assembly.LoadFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1596">Therefore, <xref:System.AppDomain.ExecuteAssemblyByName%2A> loads assemblies with the <xref:System.Reflection.Assembly.Load%2A> method rather than with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1597">組件會開始執行的.NET Framework 標頭中指定的進入點。</span><span class="sxs-lookup"><span data-stu-id="8a822-1597">The assembly begins executing at the entry point specified in the .NET Framework header.</span></span>  
  
 <span data-ttu-id="8a822-1598">這個方法不會建立新的處理序或應用程式定義域，並不會在新的執行緒上執行的進入點方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1598">This method does not create a new process or application domain, and it does not execute the entry point method on a new thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1599">當您使用<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法使用<xref:System.Security.Policy.Evidence>參數部分會合併。</span><span class="sxs-lookup"><span data-stu-id="8a822-1599">When you use the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="8a822-1600">做為引數提供的辨識項的片段<xref:System.AppDomain.ExecuteAssemblyByName%2A>方法取代的辨識項載入器所提供的片段。</span><span class="sxs-lookup"><span data-stu-id="8a822-1600">Pieces of evidence supplied as an argument to the <xref:System.AppDomain.ExecuteAssemblyByName%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1601">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1601">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1602">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1602">The assembly specified by <paramref name="assemblyName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1603">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1603">The assembly specified by <paramref name="assemblyName" /> was found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1604">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1604">The assembly specified by <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1605">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1605">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1606">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1606">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-1607">
            <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1607">
              <paramref name="assemblySecurity" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1608">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1608">When legacy CAS policy is not enabled, <paramref name="assemblySecurity" /> should be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8a822-1609">The specified assembly has no entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1609">The specified assembly has no entry point.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1610">針對從檔案或目錄，權限本身，路徑中的資訊並將顯示名稱重新導向至路徑的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1610">for access to read from a file or directory, for access to the information in the path itself, and for redirecting a display name to a path.</span>
          </span>
          <span data-ttu-id="8a822-1611">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1611">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1612">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1612">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1613">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1613">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1614">用於存取網站時的顯示名稱會被重新導向至的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1614">for access to a Web site, when a display name is redirected to a URL.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8a822-1615">若要執行主控台應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1615">to execute a console application.</span>
          </span>
          <span data-ttu-id="8a822-1616">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1616">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="FirstChanceException">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt; FirstChanceException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt; FirstChanceException" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.FirstChanceException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FirstChanceException As EventHandler(Of FirstChanceExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Runtime::ExceptionServices::FirstChanceExceptionEventArgs ^&gt; ^ FirstChanceException;" />
      <MemberSignature Language="F#" Value="member this.FirstChanceException : EventHandler&lt;System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt; " Usage="member this.FirstChanceException : System.EventHandler&lt;System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1617">Occurs when an exception is thrown in managed code, before the runtime searches the call stack for an exception handler in the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1617">Occurs when an exception is thrown in managed code, before the runtime searches the call stack for an exception handler in the application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1618">此事件是只有通知。</span><span class="sxs-lookup"><span data-stu-id="8a822-1618">This event is only a notification.</span></span> <span data-ttu-id="8a822-1619">處理這個事件不會處理例外狀況或會影響後續的例外狀況以任何方式處理。</span><span class="sxs-lookup"><span data-stu-id="8a822-1619">Handling this event does not handle the exception or affect subsequent exception handling in any way.</span></span> <span data-ttu-id="8a822-1620">在引發事件，並已叫用事件處理常式之後，common language runtime (CLR) 會開始搜尋例外狀況處理常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-1620">After the event has been raised and event handlers have been invoked, the common language runtime (CLR) begins to search for a handler for the exception.</span></span> <span data-ttu-id="8a822-1621"><xref:System.AppDomain.FirstChanceException> 第一個有機會檢查任何 managed 例外狀況可讓應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1621"><xref:System.AppDomain.FirstChanceException> provides the application domain with a first chance to examine any managed exception.</span></span>  
  
 <span data-ttu-id="8a822-1622">每個應用程式網域，就可以處理事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1622">The event can be handled per application domain.</span></span> <span data-ttu-id="8a822-1623">如果執行緒會透過多個應用程式定義域傳遞執行呼叫時，CLR 可讓您開始搜尋應用程式定義域中相符的例外狀況處理常式之前，已註冊的事件處理常式中，每個應用程式定義域中引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1623">If a thread passes through multiple application domains while executing a call, the event is raised in each application domain that has registered an event handler, before the CLR begins searching for a matching exception handler in that application domain.</span></span> <span data-ttu-id="8a822-1624">在處理事件之後，搜尋會將相符的例外狀況處理常式，該應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1624">After the event has been handled, a search is made for a matching exception handler in that application domain.</span></span> <span data-ttu-id="8a822-1625">如果找不到，就會在下一步 的應用程式定義域引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1625">If none is found, the event is raised in the next application domain.</span></span>  
  
 <span data-ttu-id="8a822-1626">您必須處理所有例外狀況發生在事件處理常式<xref:System.AppDomain.FirstChanceException>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1626">You must handle all exceptions that occur in the event handler for the <xref:System.AppDomain.FirstChanceException> event.</span></span> <span data-ttu-id="8a822-1627">否則，<xref:System.AppDomain.FirstChanceException>是遞迴引發。</span><span class="sxs-lookup"><span data-stu-id="8a822-1627">Otherwise, <xref:System.AppDomain.FirstChanceException> is raised recursively.</span></span> <span data-ttu-id="8a822-1628">這可能會導致堆疊溢位和應用程式終止。</span><span class="sxs-lookup"><span data-stu-id="8a822-1628">This could result in a stack overflow and termination of the application.</span></span> <span data-ttu-id="8a822-1629">我們建議您為限制的執行區域 (Cer)，實作此事件的事件處理常式，以防止基礎結構相關例外狀況，例如記憶體不足或堆疊溢位例外狀況通知時，會影響虛擬機器正在處理中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1629">We recommend that you implement event handlers for this event as constrained execution regions (CERs), to keep infrastructure-related exceptions such as out-of-memory or stack overflow from affecting the virtual machine while the exception notification is being processed.</span></span>  
  
 <span data-ttu-id="8a822-1630">此事件不會引發例外狀況，表示損毀的程序的狀態，例如存取違規，除非事件處理常式上為安全性關鍵，而且有<xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1630">This event is not raised for exceptions that indicate corruption of process state, such as access violations, unless the event handler is security-critical and has the <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> attribute.</span></span>  
  
 <span data-ttu-id="8a822-1631">正在處理此通知事件時，common language runtime 會暫止執行緒中止。</span><span class="sxs-lookup"><span data-stu-id="8a822-1631">The common language runtime suspends thread aborts while this notification event is being handled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1632">下列範例會建立一系列具名的應用程式定義域`AD0`經由`AD3`，使用`Worker`每個應用程式定義域中的物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1632">The following example creates a series of application domains named `AD0` through `AD3`, with a `Worker` object in each application domain.</span></span> <span data-ttu-id="8a822-1633">每個`Worker`物件具有的參考`Worker`物件在下一步 的應用程式網域中，除了`Worker`最後一個應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1633">Each `Worker` object has a reference to the `Worker` object in the next application domain, except for the `Worker` in the last application domain.</span></span> <span data-ttu-id="8a822-1634"><xref:System.AppDomain.FirstChanceException>以外的所有應用程式定義域中處理事件`AD1`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1634">The <xref:System.AppDomain.FirstChanceException> event is handled in all application domains except `AD1`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1635">除了此範例中，示範多個應用程式定義域中的第一個可能的例外狀況通知，您可以找到簡單使用案例[如何： 接收 First-chance 例外狀況通知](~/docs/framework/app-domains/how-to-receive-first-chance-exception-notifications.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1635">In addition to this example, which demonstrates first-chance exception notifications in multiple application domains, you can find simple use cases in [How to: Receive First-Chance Exception Notifications](~/docs/framework/app-domains/how-to-receive-first-chance-exception-notifications.md).</span></span>  
  
 <span data-ttu-id="8a822-1636">預設應用程式定義域時已建立的應用程式定義域，呼叫`TestException`第一個應用程式定義域的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1636">When the application domains have been created, the default application domain calls the `TestException` method for the first application domain.</span></span> <span data-ttu-id="8a822-1637">每個`Worker`物件會呼叫`TestException`方法下, 一步 的應用程式定義域，直到最後一個`Worker`會擲回例外狀況處理或未處理的。</span><span class="sxs-lookup"><span data-stu-id="8a822-1637">Each `Worker` object calls the `TestException` method for the next application domain, until the last `Worker` throws an exception that is either handled or unhandled.</span></span> <span data-ttu-id="8a822-1638">因此，目前的執行緒通過所有的應用程式定義域中，和`TestException`新增到每個應用程式定義域中的堆疊。</span><span class="sxs-lookup"><span data-stu-id="8a822-1638">Thus, the current thread passes through all the application domains, and `TestException` is added to the stack in each application domain.</span></span>  
  
 <span data-ttu-id="8a822-1639">當上次`Worker`物件會處理例外狀況，<xref:System.AppDomain.FirstChanceException>只有在最後一個應用程式定義域引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1639">When the last `Worker` object handles the exception, the <xref:System.AppDomain.FirstChanceException> event is raised only in the last application domain.</span></span> <span data-ttu-id="8a822-1640">其他的應用程式定義域永遠不會有機會處理例外狀況，因此不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1640">The other application domains never get a chance to handle the exception, so the event is not raised.</span></span>  
  
 <span data-ttu-id="8a822-1641">當上次`Worker`物件不會處理例外狀況，<xref:System.AppDomain.FirstChanceException>每個應用程式在網域中，事件處理常式就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1641">When the last `Worker` object does not handle the exception, the <xref:System.AppDomain.FirstChanceException> event is raised in each application domain that has an event handler.</span></span> <span data-ttu-id="8a822-1642">每個事件處理常式已完成之後，堆疊會繼續回溯直到預設應用程式定義域所捕捉的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-1642">After each event handler has finished, the stack continues to unwind until the exception is caught by the default application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1643">若要查看如何堆疊顯示隨著接近引發事件，並使其更接近預設應用程式定義域，變更`e.Exception.Message`要`e.Exception`在`FirstChanceHandler`事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-1643">To see how the stack display grows as the event is raised closer and closer to the default application domain, change `e.Exception.Message` to `e.Exception` in the `FirstChanceHandler` event handlers.</span></span> <span data-ttu-id="8a822-1644">請注意，當`TestException`稱為跨應用程式定義域界限，它會出現兩次： 一次的 proxy，一次虛設常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-1644">Notice that when `TestException` is called across application domain boundaries, it appears twice: once for the proxy and once for the stub.</span></span>  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1645">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1645">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1646">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1646">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
        <altmember cref="E:System.AppDomain.UnhandledException" />
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string" Usage="System.AppDomain.FriendlyName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System._AppDomain.FriendlyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1647">Gets the friendly name of this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1647">Gets the friendly name of this application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1648">這個應用程式定義域的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1648">The friendly name of this application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1649">預設應用程式定義域的易記名稱是可執行檔的程序的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1649">The friendly name of the default application domain is the file name of the process executable.</span></span> <span data-ttu-id="8a822-1650">例如，用來啟動處理程序的可執行檔是否`"c:\MyAppDirectory\MyAssembly.exe"`，預設應用程式定義域的易記名稱是`"MyAssembly.exe"`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1650">For example, if the executable used to start the process is `"c:\MyAppDirectory\MyAssembly.exe"`, the friendly name of the default application domain is `"MyAssembly.exe"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1651">下列程式碼範例使用<xref:System.AppDomain.FriendlyName%2A>屬性來取得目前的應用程式定義域的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1651">The following code example uses the <xref:System.AppDomain.FriendlyName%2A> property to get the friendly name of the current application domain.</span></span> <span data-ttu-id="8a822-1652">預設應用程式定義域的易記名稱會是應用程式的可執行檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1652">For the default application domain, the friendly name is the name of the application's executable file.</span></span> <span data-ttu-id="8a822-1653">在程式碼範例也會顯示應用程式定義域的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-1653">The code example also displays additional information about the application domain.</span></span>  
  
 [!code-cpp[ADApplicationBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADApplicationBase/CPP/adapplicationbase.cpp#1)]
 [!code-csharp[ADApplicationBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADApplicationBase/CS/adapplicationbase.cs#1)]
 [!code-vb[ADApplicationBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADApplicationBase/VB/adapplicationbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1654">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1654">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblies">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly[] GetAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly[] GetAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.GetAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssemblies () As Assembly()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Assembly ^&gt; ^ GetAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetAssemblies : unit -&gt; System.Reflection.Assembly[]&#xA;override this.GetAssemblies : unit -&gt; System.Reflection.Assembly[]" Usage="appDomain.GetAssemblies " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.GetAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1655">Gets the assemblies that have been loaded into the execution context of this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1655">Gets the assemblies that have been loaded into the execution context of this application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1656">An array of assemblies in this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1656">An array of assemblies in this application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a822-1657">下列程式碼範例使用<xref:System.AppDomain.GetAssemblies%2A>方法來取得已載入至應用程式定義域的所有組件清單。</span><span class="sxs-lookup"><span data-stu-id="8a822-1657">The following code example uses the <xref:System.AppDomain.GetAssemblies%2A> method to get a list of all assemblies that have been loaded into the application domain.</span></span> <span data-ttu-id="8a822-1658">組件隨即顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="8a822-1658">The assemblies are then displayed to the console.</span></span>  
  
 <span data-ttu-id="8a822-1659">若要執行此程式碼範例，您需要建立名為組件`CustomLibrary.dll`，或變更組件名稱傳遞給<xref:System.AppDomain.GetAssemblies%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1659">To run this code example, you need to create an assembly named `CustomLibrary.dll`, or change the assembly name that is passed to the <xref:System.AppDomain.GetAssemblies%2A> method.</span></span>  
  
 [!code-cpp[ADGetAssemblies#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADGetAssemblies/CPP/adgetassemblies.cpp#1)]
 [!code-csharp[ADGetAssemblies#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADGetAssemblies/CS/adgetassemblies.cs#1)]
 [!code-vb[ADGetAssemblies#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADGetAssemblies/VB/adgetassemblies.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1660">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1660">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentThreadId">
      <MemberSignature Language="C#" Value="public static int GetCurrentThreadId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCurrentThreadId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.GetCurrentThreadId" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentThreadId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetCurrentThreadId();" />
      <MemberSignature Language="F#" Value="static member GetCurrentThreadId : unit -&gt; int" Usage="System.AppDomain.GetCurrentThreadId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("AppDomain.GetCurrentThreadId has been deprecated because it does not provide a stable Id when managed threads are running on fibers (aka lightweight threads). To get a stable identifier for a managed thread, use the ManagedThreadId property on Thread.'")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1661">Gets the current thread identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1661">Gets the current thread identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1662">A 32-bit signed integer that is the identifier of the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1662">A 32-bit signed integer that is the identifier of the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1663">使用<xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType>屬性，這是穩定甚至當.NET Framework 由裝載環境能支援 fiber （也就是輕量型執行緒）。</span><span class="sxs-lookup"><span data-stu-id="8a822-1663">Use the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property, which is stable even when the .NET Framework is hosted by an environment that supports fibers (that is, lightweight threads).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1664">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1664">to call this method.</span>
          </span>
          <span data-ttu-id="8a822-1665">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1665">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="8a822-1666">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1666">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Int32" />
        <altmember cref="P:System.Threading.Thread.ManagedThreadId" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj&#xA;override this.GetData : string -&gt; obj" Usage="appDomain.GetData name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-1667">The name of a predefined application domain property, or the name of an application domain property you have defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1667">The name of a predefined application domain property, or the name of an application domain property you have defined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1668">Gets the value stored in the current application domain for the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1668">Gets the value stored in the current application domain for the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1669">The value of the <paramref name="name" /> property, or <see langword="null" /> if the property does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1669">The value of the <paramref name="name" /> property, or <see langword="null" /> if the property does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1670">使用這個方法來擷取值的描述屬性的這個執行個體的名稱資料組的內部快取中的項目<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1670">Use this method to retrieve the value of an entry in an internal cache of name-data pairs that describe properties of this instance of <xref:System.AppDomain>.</span></span> <span data-ttu-id="8a822-1671">請注意，比較`name`索引鍵 / 值組的名稱會區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="8a822-1671">Note that the comparison of `name` with the name of key-value pairs is case-sensitive.</span></span>  
  
 <span data-ttu-id="8a822-1672">快取會自動包含預先定義的系統建立應用程式定義域時，會插入的項目。</span><span class="sxs-lookup"><span data-stu-id="8a822-1672">The cache automatically contains predefined system entries that are inserted when the application domain is created.</span></span> <span data-ttu-id="8a822-1673">您可以查看其值與<xref:System.AppDomain.GetData%2A>方法或對等項目<xref:System.AppDomainSetup>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1673">You can inspect their values with the <xref:System.AppDomain.GetData%2A> method, or the equivalent <xref:System.AppDomainSetup> properties.</span></span>  
  
 <span data-ttu-id="8a822-1674">您可以插入或修改您自己的使用者定義名稱資料組，而且<xref:System.AppDomain.SetData%2A>方法，並檢查其值與<xref:System.AppDomain.GetData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1674">You can insert or modify your own user defined name-data pairs with the <xref:System.AppDomain.SetData%2A> method and inspect their values with the <xref:System.AppDomain.GetData%2A> method.</span></span>  
  
 <span data-ttu-id="8a822-1675">下表描述`name`每個預先定義的系統項目和其對應<xref:System.AppDomainSetup>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1675">The following table describes the `name` of each predefined system entry and its corresponding <xref:System.AppDomainSetup> property.</span></span>  
  
|<span data-ttu-id="8a822-1676">'Name' 的值</span><span class="sxs-lookup"><span data-stu-id="8a822-1676">Value of 'name'</span></span>|<span data-ttu-id="8a822-1677">屬性</span><span class="sxs-lookup"><span data-stu-id="8a822-1677">Property</span></span>|  
|---------------------|--------------|  
|<span data-ttu-id="8a822-1678">「 APPBASE"</span><span class="sxs-lookup"><span data-stu-id="8a822-1678">"APPBASE"</span></span>|<xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1679">"APP_CONFIG_FILE"</span><span class="sxs-lookup"><span data-stu-id="8a822-1679">"APP_CONFIG_FILE"</span></span>|<xref:System.AppDomainSetup.ConfigurationFile%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1680">「 APP_LAUNCH_URL"</span><span class="sxs-lookup"><span data-stu-id="8a822-1680">"APP_LAUNCH_URL"</span></span>|<span data-ttu-id="8a822-1681">（沒有內容）</span><span class="sxs-lookup"><span data-stu-id="8a822-1681">(no property)</span></span><br /><br /> <span data-ttu-id="8a822-1682">「 APP_LAUNCH_URL"表示原先要求的使用者之前任何重新導向, 的 URL。</span><span class="sxs-lookup"><span data-stu-id="8a822-1682">"APP_LAUNCH_URL" represents the URL originally requested by the user, before any redirection.</span></span> <span data-ttu-id="8a822-1683">它位於已啟動應用程式，例如 Internet Explorer 的瀏覽器時，才。</span><span class="sxs-lookup"><span data-stu-id="8a822-1683">It is available only when the application has been launched with a browser such as Internet Explorer.</span></span> <span data-ttu-id="8a822-1684">並非所有瀏覽器提供此值。</span><span class="sxs-lookup"><span data-stu-id="8a822-1684">Not all browsers provide this value.</span></span>|  
|<span data-ttu-id="8a822-1685">「 APP_NAME"</span><span class="sxs-lookup"><span data-stu-id="8a822-1685">"APP_NAME"</span></span>|<xref:System.AppDomainSetup.ApplicationName%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1686">「 BINPATH_PROBE_ONLY"</span><span class="sxs-lookup"><span data-stu-id="8a822-1686">"BINPATH_PROBE_ONLY"</span></span>|<xref:System.AppDomainSetup.PrivateBinPathProbe%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1687">「 CACHE_BASE"</span><span class="sxs-lookup"><span data-stu-id="8a822-1687">"CACHE_BASE"</span></span>|<xref:System.AppDomainSetup.CachePath%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1688">「 CODE_DOWNLOAD_DISABLED"</span><span class="sxs-lookup"><span data-stu-id="8a822-1688">"CODE_DOWNLOAD_DISABLED"</span></span>|<xref:System.AppDomainSetup.DisallowCodeDownload%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1689">「 DEV_PATH"</span><span class="sxs-lookup"><span data-stu-id="8a822-1689">"DEV_PATH"</span></span>|<span data-ttu-id="8a822-1690">（沒有內容）</span><span class="sxs-lookup"><span data-stu-id="8a822-1690">(no property)</span></span>|  
|<span data-ttu-id="8a822-1691">「 DISALLOW_APP"</span><span class="sxs-lookup"><span data-stu-id="8a822-1691">"DISALLOW_APP"</span></span>|<xref:System.AppDomainSetup.DisallowPublisherPolicy%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1692">"DISALLOW_APP_BASE_PROBING"</span><span class="sxs-lookup"><span data-stu-id="8a822-1692">"DISALLOW_APP_BASE_PROBING"</span></span>|<xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1693">「 DISALLOW_APP_REDIRECTS"</span><span class="sxs-lookup"><span data-stu-id="8a822-1693">"DISALLOW_APP_REDIRECTS"</span></span>|<xref:System.AppDomainSetup.DisallowBindingRedirects%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1694">"DYNAMIC_BASE"</span><span class="sxs-lookup"><span data-stu-id="8a822-1694">"DYNAMIC_BASE"</span></span>|<xref:System.AppDomainSetup.DynamicBase%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1695">「 FORCE_CACHE_INSTALL"</span><span class="sxs-lookup"><span data-stu-id="8a822-1695">"FORCE_CACHE_INSTALL"</span></span>|<xref:System.AppDomainSetup.ShadowCopyFiles%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1696">「 LICENSE_FILE"或特定應用程式的字串</span><span class="sxs-lookup"><span data-stu-id="8a822-1696">"LICENSE_FILE", or an application-specific string</span></span>|<xref:System.AppDomainSetup.LicenseFile%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1697">「 LOADER_OPTIMIZATION"</span><span class="sxs-lookup"><span data-stu-id="8a822-1697">"LOADER_OPTIMIZATION"</span></span>|<xref:System.AppDomainSetup.LoaderOptimization%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1698">「 LOCATION_URI"</span><span class="sxs-lookup"><span data-stu-id="8a822-1698">"LOCATION_URI"</span></span>|<span data-ttu-id="8a822-1699">（沒有內容）</span><span class="sxs-lookup"><span data-stu-id="8a822-1699">(no property)</span></span>|  
|<span data-ttu-id="8a822-1700">「 PRIVATE_BINPATH"</span><span class="sxs-lookup"><span data-stu-id="8a822-1700">"PRIVATE_BINPATH"</span></span>|<xref:System.AppDomainSetup.PrivateBinPath%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8a822-1701">"REGEX_DEFAULT_MATCH_TIMEOUT"</span><span class="sxs-lookup"><span data-stu-id="8a822-1701">"REGEX_DEFAULT_MATCH_TIMEOUT"</span></span>|<xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="8a822-1702">「 REGEX_DEFAULT_MATCH_TIMEOUT"不是系統項目和它的值可以藉由呼叫設定<xref:System.AppDomain.SetData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1702">"REGEX_DEFAULT_MATCH_TIMEOUT" is not a system entry, and its value can be set by calling the <xref:System.AppDomain.SetData%2A> method.</span></span>|  
|<span data-ttu-id="8a822-1703">"SHADOW_COPY_DIRS"</span><span class="sxs-lookup"><span data-stu-id="8a822-1703">"SHADOW_COPY_DIRS"</span></span>|<xref:System.AppDomainSetup.ShadowCopyDirectories%2A?displayProperty=nameWithType>|  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1704">下列範例會建立新的應用程式定義域、 設定的網域中，系統提供值，並將新的值組的網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1704">The following example creates a new application domain, sets a system-provided value for the domain, and adds a new value pair for the domain.</span></span> <span data-ttu-id="8a822-1705">下列範例示範如何使用<xref:System.AppDomain.GetData%2A>方法來擷取這些值組中的資料，並對主控台顯示它們。</span><span class="sxs-lookup"><span data-stu-id="8a822-1705">The example then demonstrates how to use the <xref:System.AppDomain.GetData%2A> method to retrieve the data from these value pairs and display them to the console.</span></span>  
  
 [!code-cpp[ADGetData#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADGetData/CPP/adgetdata.cpp#1)]
 [!code-csharp[ADGetData#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADGetData/CS/adgetdata.cs#1)]
 [!code-vb[ADGetData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADGetData/VB/adgetdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1706">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1706">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1707">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1707">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1708">存取路徑本身，如果此屬性會套用至路徑中的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1708">for access to the information in the path itself, if the property applies to a path.</span>
          </span>
          <span data-ttu-id="8a822-1709">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1709">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.AppDomain.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="appDomain.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1710">Gets the type of the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1710">Gets the type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1711">The type of the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1711">The type of the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.AppDomain.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1712">Gets an integer that uniquely identifies the application domain within the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1712">Gets an integer that uniquely identifies the application domain within the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1713">可識別應用程式定義域的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1713">An integer that identifies the application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a822-1714">下列程式碼範例會建立第二個應用程式定義域，並顯示相關的預設網域和新的網域資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-1714">The following code example creates a second application domain and displays information about the default domain and the new domain.</span></span>  
  
 [!code-cpp[System.AppDomain.IsDefaultAppDomain#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.AppDomain.IsDefaultAppDomain/CPP/System.AppDomain.IsDefaultAppDomain.cpp#1)]
 [!code-csharp[System.AppDomain.IsDefaultAppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomain.IsDefaultAppDomain/CS/source.cs#1)]
 [!code-vb[System.AppDomain.IsDefaultAppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomain.IsDefaultAppDomain/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="appDomain.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.InitializeLifetimeService</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1715">Gives the <see cref="T:System.AppDomain" /> an infinite lifetime by preventing a lease from being created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1715">Gives the <see cref="T:System.AppDomain" /> an infinite lifetime by preventing a lease from being created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1716">Always <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1716">Always <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1717">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1717">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1718">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1718">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1719">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1719">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsCompatibilitySwitchSet">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsCompatibilitySwitchSet (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; IsCompatibilitySwitchSet(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCompatibilitySwitchSet (value As String) As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; IsCompatibilitySwitchSet(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsCompatibilitySwitchSet : string -&gt; Nullable&lt;bool&gt;" Usage="appDomain.IsCompatibilitySwitchSet value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8a822-1720">The compatibility switch to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1720">The compatibility switch to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1721">Gets a nullable Boolean value that indicates whether any compatibility switches are set, and if so, whether the specified compatibility switch is set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1721">Gets a nullable Boolean value that indicates whether any compatibility switches are set, and if so, whether the specified compatibility switch is set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1722">A null reference (<see langword="Nothing" /> in Visual Basic) if no compatibility switches are set; otherwise, a Boolean value that indicates whether the compatibility switch that is specified by <paramref name="value" /> is set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1722">A null reference (<see langword="Nothing" /> in Visual Basic) if no compatibility switches are set; otherwise, a Boolean value that indicates whether the compatibility switch that is specified by <paramref name="value" /> is set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1723">這個方法會測試是否已指定相容性參數設定為目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1723">This method tests whether the specified compatibility switch has been set for the current application domain.</span></span> <span data-ttu-id="8a822-1724">相容性參數通常還原行為 （例如排序方式字串） 的.NET framework 版本之間已變更。</span><span class="sxs-lookup"><span data-stu-id="8a822-1724">Compatibility switches typically restore a behavior (such as the way strings are sorted) that was changed between versions of the .NET Framework.</span></span>  <span data-ttu-id="8a822-1725">它們由呼叫設定<xref:System.AppDomainSetup.SetCompatibilitySwitches%2A?displayProperty=nameWithType>方法，然後再建立應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1725">They are set by calling the <xref:System.AppDomainSetup.SetCompatibilitySwitches%2A?displayProperty=nameWithType> method before creating an application domain.</span></span>  
  
 <span data-ttu-id="8a822-1726">下表提供可以設定以還原舊版的.NET framework 的行為的相容性參數的範例。</span><span class="sxs-lookup"><span data-stu-id="8a822-1726">The following table provides examples of compatibility switches that can be set to restore the behavior of earlier versions of the .NET Framework.</span></span>  
  
|<span data-ttu-id="8a822-1727">參數</span><span class="sxs-lookup"><span data-stu-id="8a822-1727">Switch</span></span>|<span data-ttu-id="8a822-1728">意義</span><span class="sxs-lookup"><span data-stu-id="8a822-1728">Meaning</span></span>|  
|------------|-------------|  
|<span data-ttu-id="8a822-1729">"NetFx40_LegacySecurityPolicy"</span><span class="sxs-lookup"><span data-stu-id="8a822-1729">"NetFx40_LegacySecurityPolicy"</span></span>|<span data-ttu-id="8a822-1730">程式碼存取安全性 (CAS)[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]啟用此應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1730">Code access security (CAS) for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] is enabled in this application domain.</span></span> <span data-ttu-id="8a822-1731">請參閱[ &lt;NetFx40_LegacySecurityPolicy&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1731">See [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</span></span>|  
|<span data-ttu-id="8a822-1732">"NetFx40_Legacy20SortingBehavior"</span><span class="sxs-lookup"><span data-stu-id="8a822-1732">"NetFx40_Legacy20SortingBehavior"</span></span>|<span data-ttu-id="8a822-1733">排序的預設值的字串[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]這個應用程式定義域中已啟用。</span><span class="sxs-lookup"><span data-stu-id="8a822-1733">String sorting defaults for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] are enabled in this application domain.</span></span> <span data-ttu-id="8a822-1734">它的成功需要 sort00001000.dll 安裝。</span><span class="sxs-lookup"><span data-stu-id="8a822-1734">Its success requires sort00001000.dll to be installed.</span></span> <span data-ttu-id="8a822-1735">請參閱[ &lt;CompatSortNLSVersion&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1735">See [&lt;CompatSortNLSVersion&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md).</span></span>|  
|<span data-ttu-id="8a822-1736">"NetFx40_Legacy40SortingBehavior"</span><span class="sxs-lookup"><span data-stu-id="8a822-1736">"NetFx40_Legacy40SortingBehavior"</span></span>|<span data-ttu-id="8a822-1737">排序的預設值的字串[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]和 Unicode 5.0 會啟用此應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1737">String sorting defaults for the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]and Unicode 5.0 are enabled in this application domain.</span></span> <span data-ttu-id="8a822-1738">它的成功需要 sort00060101.dll 安裝。</span><span class="sxs-lookup"><span data-stu-id="8a822-1738">Its success requires sort00060101.dll to be installed.</span></span>|  
|<span data-ttu-id="8a822-1739">"NetFx40_TimeSpanLegacyFormatMode"</span><span class="sxs-lookup"><span data-stu-id="8a822-1739">"NetFx40_TimeSpanLegacyFormatMode"</span></span>|<span data-ttu-id="8a822-1740"><xref:System.TimeSpan> 格式化行為的[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]啟用此應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1740"><xref:System.TimeSpan> formatting behavior for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] is enabled in this application domain.</span></span>  <span data-ttu-id="8a822-1741">請參閱[ &lt;TimeSpan_LegacyFormatMode&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)和 「 還原舊版 TimeSpan 格式化 」 一節的<xref:System.TimeSpan>主題。</span><span class="sxs-lookup"><span data-stu-id="8a822-1741">See [&lt;TimeSpan_LegacyFormatMode&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md) and the "Restoring Legacy TimeSpan Formatting" section of the <xref:System.TimeSpan> topic.</span></span>|  
|<span data-ttu-id="8a822-1742">"UseRandomizedStringHashAlgorithm"</span><span class="sxs-lookup"><span data-stu-id="8a822-1742">"UseRandomizedStringHashAlgorithm"</span></span>|<span data-ttu-id="8a822-1743">執行階段計算字串的雜湊碼在每個應用程式定義域為基準，而不是使用單一的雜湊演算法可跨應用程式定義域產生一致雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-1743">The runtime calculates hash codes for strings on a per application domain basis instead of using a single hashing algorithm that produces a consistent hash code across application domains.</span></span> <span data-ttu-id="8a822-1744">請參閱[ &lt;UseRandomizedStringHashAlgorithm&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1744">See [&lt;UseRandomizedStringHashAlgorithm&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})" />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAppDomain">
      <MemberSignature Language="C#" Value="public bool IsDefaultAppDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDefaultAppDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.IsDefaultAppDomain" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefaultAppDomain () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefaultAppDomain();" />
      <MemberSignature Language="F#" Value="member this.IsDefaultAppDomain : unit -&gt; bool" Usage="appDomain.IsDefaultAppDomain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1745">Returns a value that indicates whether the application domain is the default application domain for the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1745">Returns a value that indicates whether the application domain is the default application domain for the process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1746">
            <see langword="true" /> if the current <see cref="T:System.AppDomain" /> object represents the default application domain for the process; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1746">
              <see langword="true" /> if the current <see cref="T:System.AppDomain" /> object represents the default application domain for the process; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1747">每個受管理的程序具有預設應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1747">Every managed process has a default application domain.</span></span> <span data-ttu-id="8a822-1748">在 預設網域，開始執行。</span><span class="sxs-lookup"><span data-stu-id="8a822-1748">Execution begins in the default domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1749">下列程式碼範例會建立第二個應用程式定義域，並顯示相關的預設網域和新的網域資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-1749">The following code example creates a second application domain and displays information about the default domain and the new domain.</span></span>  
  
 [!code-cpp[System.AppDomain.IsDefaultAppDomain#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.AppDomain.IsDefaultAppDomain/CPP/System.AppDomain.IsDefaultAppDomain.cpp#1)]
 [!code-csharp[System.AppDomain.IsDefaultAppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomain.IsDefaultAppDomain/CS/source.cs#1)]
 [!code-vb[System.AppDomain.IsDefaultAppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomain.IsDefaultAppDomain/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinalizingForUnload">
      <MemberSignature Language="C#" Value="public bool IsFinalizingForUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFinalizingForUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.IsFinalizingForUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFinalizingForUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFinalizingForUnload();" />
      <MemberSignature Language="F#" Value="member this.IsFinalizingForUnload : unit -&gt; bool" Usage="appDomain.IsFinalizingForUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1750">Indicates whether this application domain is unloading, and the objects it contains are being finalized by the common language runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1750">Indicates whether this application domain is unloading, and the objects it contains are being finalized by the common language runtime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1751">
            <see langword="true" /> if this application domain is unloading and the common language runtime has started invoking finalizers; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1751">
              <see langword="true" /> if this application domain is unloading and the common language runtime has started invoking finalizers; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1752">物件的最終處理方法會提供物件的記憶體回收之前執行任何必要的清除作業的機會。</span><span class="sxs-lookup"><span data-stu-id="8a822-1752">The finalization method for an object provides you an opportunity to perform any necessary cleanup operations before the object is garbage collected.</span></span> <span data-ttu-id="8a822-1753">在最終處理之後, 此物件會為可存取，但處於無效狀態，因此無法使用。</span><span class="sxs-lookup"><span data-stu-id="8a822-1753">After finalization, the object is accessible but in an invalid state and therefore unusable.</span></span> <span data-ttu-id="8a822-1754">最後，記憶體回收完成，並回收物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1754">Eventually, garbage collection completes and reclaims the object.</span></span>  
  
 <span data-ttu-id="8a822-1755">在下列情況的其中一個呼叫物件的完成項方法： 記憶體回收期間，當正在關閉通用語言執行平台，或包含物件的應用程式定義域卸載時。</span><span class="sxs-lookup"><span data-stu-id="8a822-1755">An object's finalization method is called in one of the following situations: during garbage collection, when the common language runtime is shutting down, or when the application domain that contains the object is unloaded.</span></span> <span data-ttu-id="8a822-1756"><xref:System.AppDomain.IsFinalizingForUnload%2A>方法會傳回`true`只有在最後一個案例中; 它不會傳回`true`當最終處理的結果從例行回收或 CLR 關閉。</span><span class="sxs-lookup"><span data-stu-id="8a822-1756">The <xref:System.AppDomain.IsFinalizingForUnload%2A> method returns `true` only in the last case; it does not return `true` if finalization results from routine garbage collection or from CLR shutdown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1757">若要判斷是否因為 CLR 關閉，所以最終處理，請使用<xref:System.Environment.HasShutdownStarted%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1757">To determine whether finalization is due to CLR shutdown, use the <xref:System.Environment.HasShutdownStarted%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8a822-1758">它會傳回`true`最終處理是否因為應用程式定義域正在卸載或 clr 正在關閉。</span><span class="sxs-lookup"><span data-stu-id="8a822-1758">It returns `true` if finalization is due to an application domain being unloaded or to the CLR shutting down.</span></span>  
  
 <span data-ttu-id="8a822-1759">同時在您完成的方法執行期間定義域卸載，您可能想要存取靜態欄位所參考，且具有最終處理方法的另一個物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1759">While executing in your finalization method during domain unloading, you might want to access another object that is referenced by a static field and has a finalization method.</span></span> <span data-ttu-id="8a822-1760">不過，您無法可靠地執行，因為存取的物件可能會有已經結束。</span><span class="sxs-lookup"><span data-stu-id="8a822-1760">However, you cannot reliably do so because the accessed object might already have been finalized.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1761">此規則的例外是<xref:System.Console>類別，其中包含參考資料流物件的靜態欄位，但您可以一律，即使在網域卸載或系統關機期間寫入系統主控台中，因此，特別實作。</span><span class="sxs-lookup"><span data-stu-id="8a822-1761">An exception to this rule is the <xref:System.Console> class, which contains static fields that reference stream objects, but is implemented specially so you can always write to the system console, even during domain unloading or system shutdown.</span></span>  
  
 <span data-ttu-id="8a822-1762">物件的完成項方法中使用這個方法，以判斷是否包含物件的應用程式定義域正在卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1762">Use this method in an object's finalization method to determine whether the application domain that contains the object is unloading.</span></span> <span data-ttu-id="8a822-1763">如果是這樣，您無法可靠地存取具有完成項方法，並且由靜態欄位參考的任何物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1763">If that is the case, you cannot reliably access any object that has a finalization method and is referenced by a static field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Environment.HasShutdownStarted" />
      </Docs>
    </Member>
    <Member MemberName="IsFullyTrusted">
      <MemberSignature Language="C#" Value="public bool IsFullyTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyTrusted" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.IsFullyTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullyTrusted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFullyTrusted : bool" Usage="System.AppDomain.IsFullyTrusted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1764">Gets a value that indicates whether assemblies that are loaded into the current application domain execute with full trust.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1764">Gets a value that indicates whether assemblies that are loaded into the current application domain execute with full trust.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1765">如果載入目前應用程式定義域中的組件在完全信任情況下執行，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1765">
              <see langword="true" /> if assemblies that are loaded into the current application domain execute with full trust; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1766">這個方法永遠傳回`true`桌面上執行的應用程式的預設應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1766">This method always returns `true` for the default application domain of an application that runs on the desktop.</span></span> <span data-ttu-id="8a822-1767">它會傳回`false`，利用所建立的沙箱化應用程式網域<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>方法多載，除非應用程式定義域授與的權限相當於完全信任。</span><span class="sxs-lookup"><span data-stu-id="8a822-1767">It returns `false` for a sandboxed application domain that was created by using the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method overload, unless the permissions that are granted to the application domain are equivalent to full trust.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1768">下列範例示範<xref:System.AppDomain.IsFullyTrusted%2A>屬性和<xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType>與完全信任和部分信任的應用程式定義域的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1768">The following example demonstrates the <xref:System.AppDomain.IsFullyTrusted%2A> property and the <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> property with fully trusted and partially trusted application domains.</span></span> <span data-ttu-id="8a822-1769">應用程式的預設應用程式定義域為完全受信任的應用程式網域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1769">The fully trusted application domain is the default application domain for the application.</span></span> <span data-ttu-id="8a822-1770">部分信任的應用程式定義域由使用<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1770">The partially trusted application domain is created by using the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="8a822-1771">此範例會使用`Worker`類別衍生自<xref:System.MarshalByRefObject>，因此它可以封送處理跨應用程式定義域界限。</span><span class="sxs-lookup"><span data-stu-id="8a822-1771">The example uses a `Worker` class that derives from <xref:System.MarshalByRefObject>, so it can be marshaled across application domain boundaries.</span></span> <span data-ttu-id="8a822-1772">此範例會建立`Worker`預設應用程式定義域中的物件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1772">The example creates a `Worker` object in the default application domain.</span></span> <span data-ttu-id="8a822-1773">然後它會呼叫`TestIsFullyTrusted`方法，以顯示屬性值，應用程式定義域並載入至應用程式定義域的兩個組件： mscorlib，這是.NET Framework 和範例組件的一部分。</span><span class="sxs-lookup"><span data-stu-id="8a822-1773">It then calls the `TestIsFullyTrusted` method to display the property value for the application domain and for two assemblies that are loaded into the application domain: mscorlib, which is part of the .NET Framework, and the example assembly.</span></span> <span data-ttu-id="8a822-1774">這兩個組件是完全受信任，所以完全信任，應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1774">The application domain is fully trusted, so both assemblies are fully trusted.</span></span>  
  
 <span data-ttu-id="8a822-1775">此範例會建立另一個`Worker`物件在沙箱應用程式定義域，然後再次呼叫`TestIsFullyTrusted`方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1775">The example creates another `Worker` object in a sandboxed application domain and again calls the `TestIsFullyTrusted` method.</span></span> <span data-ttu-id="8a822-1776">Mscorlib 永遠是受信任，甚至是在部分信任的應用程式網域中，但是範例組件是以部分信任。</span><span class="sxs-lookup"><span data-stu-id="8a822-1776">Mscorlib is always trusted, even in a partially trusted application domain, but the example assembly is partially trusted.</span></span>  
  
 [!code-csharp[System.AppDomain.IsFullyTrusted#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.isfullytrusted/cs/example.cs#1)]
 [!code-vb[System.AppDomain.IsFullyTrusted#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.isfullytrusted/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHomogenous">
      <MemberSignature Language="C#" Value="public bool IsHomogenous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHomogenous" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.IsHomogenous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHomogenous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHomogenous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHomogenous : bool" Usage="System.AppDomain.IsHomogenous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1777">Gets a value that indicates whether the current application domain has a set of permissions that is granted to all assemblies that are loaded into the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1777">Gets a value that indicates whether the current application domain has a set of permissions that is granted to all assemblies that are loaded into the application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1778">如果目前應用程式定義域具有一組同質性權限，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1778">
              <see langword="true" /> if the current application domain has a homogenous set of permissions; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1779">這個屬性會傳回`true`使用所建立的沙箱化應用程式定義域<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1779">This property returns `true` for sandboxed application domains that were created by using the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="8a822-1780">沙箱應用程式定義域具有一組同質性權限;也就是相同的權限集授與載入應用程式定義域的所有部分信任組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1780">Sandboxed application domains have a homogenous set of permissions; that is, the same set of permissions is granted to all partially trusted assemblies that are loaded into the application domain.</span></span> <span data-ttu-id="8a822-1781">（選擇性） 沙箱應用程式定義域會有免套用此權限集，並改為使用完全信任執行的強式名稱組件清單。</span><span class="sxs-lookup"><span data-stu-id="8a822-1781">A sandboxed application domain optionally has a list of strong-named assemblies that are exempt from this permission set, and instead run with full trust.</span></span>  
  
 <span data-ttu-id="8a822-1782">完全受信任的程式碼可以使用<xref:System.AppDomain.PermissionSet%2A>屬性來判斷沙箱應用程式定義域的同質性的授權集。</span><span class="sxs-lookup"><span data-stu-id="8a822-1782">Fully trusted code can use the <xref:System.AppDomain.PermissionSet%2A> property to determine the homogenous grant set of a sandboxed application domain.</span></span>  
  
 <span data-ttu-id="8a822-1783">這個屬性也會傳回`true`預設應用程式定義域的桌面應用程式，因為該應用程式定義域會完全信任授與所有組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1783">This property also returns `true` for the default application domain of a desktop application, because that application domain grants full trust to all assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomain.PermissionSet" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1784">Loads an <see cref="T:System.Reflection.Assembly" /> into this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1784">Loads an <see cref="T:System.Reflection.Assembly" /> into this application domain.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="abstract member Load : byte[] -&gt; System.Reflection.Assembly&#xA;override this.Load : byte[] -&gt; System.Reflection.Assembly" Usage="appDomain.Load rawAssembly" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Load(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="8a822-1785">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1785">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1786">Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1786">Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1787">The loaded assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1787">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1788">開頭為[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，使用這個方法載入的組件的信任層級是應用程式定義域的信任層級相同。</span><span class="sxs-lookup"><span data-stu-id="8a822-1788">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the trust level of an assembly that is loaded by using this method is the same as the trust level of the application domain.</span></span>  
  
 <span data-ttu-id="8a822-1789">這個方法應只將組件載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1789">This method should be used only to load an assembly into the current application domain.</span></span> <span data-ttu-id="8a822-1790">為了方便起見提供這個方法的互通性的呼叫端無法呼叫靜態<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1790">This method is provided as a convenience for interoperability callers who cannot call the static <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a822-1791">若要將其他應用程式定義域的組件載入，使用方法例如<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1791">To load assemblies into other application domains, use a method such as <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>.</span></span>  
  
 <span data-ttu-id="8a822-1792">通用於所有多載，這個方法的資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1792">For information that is common to all overloads of this method, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1793">下列範例示範如何載入原始的組件的使用。</span><span class="sxs-lookup"><span data-stu-id="8a822-1793">The following sample demonstrates the use of loading a raw assembly.</span></span>  
  
 <span data-ttu-id="8a822-1794">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1794">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1795">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1795">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_LoadRaw#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_LoadRaw/CPP/loadraw.cpp#1)]
 [!code-csharp[AppDomain_LoadRaw#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_LoadRaw/CS/loadraw.cs#1)]
 [!code-vb[AppDomain_LoadRaw#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_LoadRaw/VB/loadraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1796">
            <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1796">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1797">
            <paramref name="rawAssembly" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1797">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1798">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1798">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1799">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1799">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1800">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1800">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1801">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1801">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1802">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1802">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly&#xA;override this.Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="appDomain.Load assemblyRef" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Load(System.Reflection.AssemblyName)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="8a822-1803">An object that describes the assembly to load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1803">An object that describes the assembly to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1804">Loads an <see cref="T:System.Reflection.Assembly" /> given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1804">Loads an <see cref="T:System.Reflection.Assembly" /> given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1805">The loaded assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1805">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1806">這個方法應只將組件載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1806">This method should be used only to load an assembly into the current application domain.</span></span> <span data-ttu-id="8a822-1807">為了方便起見提供這個方法的互通性的呼叫端無法呼叫靜態<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1807">This method is provided as a convenience for interoperability callers who cannot call the static <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a822-1808">若要將其他應用程式定義域的組件載入，使用方法例如<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1808">To load assemblies into other application domains, use a method such as <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>.</span></span>  
  
 <span data-ttu-id="8a822-1809">如果尚未載入要求的組件的版本，這個方法會傳回載入的組件，即使要求不同的版本。</span><span class="sxs-lookup"><span data-stu-id="8a822-1809">If a version of the requested assembly is already loaded, this method returns the loaded assembly, even if a different version is requested.</span></span>  
  
 <span data-ttu-id="8a822-1810">提供的部分組件名稱`assemblyRef`不建議使用。</span><span class="sxs-lookup"><span data-stu-id="8a822-1810">Supplying a partial assembly name for `assemblyRef` is not recommended.</span></span> <span data-ttu-id="8a822-1811">（部分的名稱會省略一或多個文化特性、 版本或公開金鑰語彙基元。</span><span class="sxs-lookup"><span data-stu-id="8a822-1811">(A partial name omits one or more of culture, version, or public key token.</span></span> <span data-ttu-id="8a822-1812">採用而不是字串的多載<xref:System.Reflection.AssemblyName>物件，"MyAssembly，版本 = 1.0.0.0"舉例說明部分的名稱和"MyAssembly，version=1.0.0.0，Culture = neutral，PublicKeyToken = 18ab3442da84b47"是完整名稱的範例。)使用部分的名稱已對效能產生負面影響。</span><span class="sxs-lookup"><span data-stu-id="8a822-1812">For overloads that take a string instead of an <xref:System.Reflection.AssemblyName> object, "MyAssembly, Version=1.0.0.0" is an example of a partial name and "MyAssembly, Version=1.0.0.0, Culture=neutral, PublicKeyToken=18ab3442da84b47" is an example of a full name.) Using partial names has a negative effect on performance.</span></span> <span data-ttu-id="8a822-1813">此外，部分組件名稱可以載入組件從全域組件快取才有的應用程式的基底目錄中的組件的完整複本 (<xref:System.AppDomain.BaseDirectory%2A>或<xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1813">In addition, a partial assembly name can load an assembly from the global assembly cache only if there is an exact copy of the assembly in the application base directory (<xref:System.AppDomain.BaseDirectory%2A> or <xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="8a822-1814">如果目前<xref:System.AppDomain>物件表示應用程式定義域`A`，而<xref:System.AppDomain.Load%2A>方法從應用程式定義域呼叫`B`，組件會載入兩個應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1814">If the current <xref:System.AppDomain> object represents application domain `A`, and the <xref:System.AppDomain.Load%2A> method is called from application domain `B`, the assembly is loaded into both application domains.</span></span> <span data-ttu-id="8a822-1815">例如，下列程式碼載入`MyAssembly`至新的應用程式定義域`ChildDomain`也到應用程式定義域執行的程式碼：</span><span class="sxs-lookup"><span data-stu-id="8a822-1815">For example, the following code loads `MyAssembly` into the new application domain `ChildDomain` and also into the application domain where the code executes:</span></span>  
  
 [!code-cpp[System.AppDomain.Load#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.appdomain.load/cpp/source.cpp#1)]
 [!code-csharp[System.AppDomain.Load#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.load/cs/source.cs#1)]
 [!code-vb[System.AppDomain.Load#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.load/vb/source.vb#1)]  
  
 <span data-ttu-id="8a822-1816">組件載入這兩個網域，因為<xref:System.Reflection.Assembly>不是衍生自<xref:System.MarshalByRefObject>，並因此傳回值的<xref:System.AppDomain.Load%2A>方法無法封送處理。</span><span class="sxs-lookup"><span data-stu-id="8a822-1816">The assembly is loaded into both domains because <xref:System.Reflection.Assembly> does not derive from <xref:System.MarshalByRefObject>, and therefore the return value of the <xref:System.AppDomain.Load%2A> method cannot be marshaled.</span></span> <span data-ttu-id="8a822-1817">相反地，common language runtime 會嘗試載入至呼叫的應用程式定義域的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1817">Instead, the common language runtime tries to load the assembly into the calling application domain.</span></span> <span data-ttu-id="8a822-1818">載入至兩個應用程式定義域的組件可能是不同的兩個應用程式定義域的路徑設定是否不同。</span><span class="sxs-lookup"><span data-stu-id="8a822-1818">The assemblies that are loaded into the two application domains might be different if the path settings for the two application domains are different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1819">如果兩個<xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType>屬性和<xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType>屬性所設定，第一次嘗試載入組件會使用顯示名稱 (包括版本、 文化特性，並依此類推，所傳回<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>屬性)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1819">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="8a822-1820">如果找不到檔案，<xref:System.Reflection.AssemblyName.CodeBase%2A>屬性用來搜尋該組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1820">If the file is not found, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to search for the assembly.</span></span> <span data-ttu-id="8a822-1821">如果使用找到的組件<xref:System.Reflection.AssemblyName.CodeBase%2A>，顯示名稱比對組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1821">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="8a822-1822">如果比對失敗，<xref:System.IO.FileLoadException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1822">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1823">
            <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1823">
              <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1824">
            <paramref name="assemblyRef" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1824">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1825">
            <paramref name="assemblyRef" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1825">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1826">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1826">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1827">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1827">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1828">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1828">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1829">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1829">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1830">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1830">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="abstract member Load : string -&gt; System.Reflection.Assembly&#xA;override this.Load : string -&gt; System.Reflection.Assembly" Usage="appDomain.Load assemblyString" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Load(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="8a822-1831">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1831">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-1832">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1832">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1833">Loads an <see cref="T:System.Reflection.Assembly" /> given its display name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1833">Loads an <see cref="T:System.Reflection.Assembly" /> given its display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1834">The loaded assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1834">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1835">這個方法應只將組件載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1835">This method should be used only to load an assembly into the current application domain.</span></span> <span data-ttu-id="8a822-1836">為了方便起見提供這個方法的互通性的呼叫端無法呼叫靜態<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1836">This method is provided as a convenience for interoperability callers who cannot call the static <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a822-1837">若要將其他應用程式定義域的組件載入，使用方法例如<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1837">To load assemblies into other application domains, use a method such as <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>.</span></span>  
  
 <span data-ttu-id="8a822-1838">通用於所有多載，這個方法的資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1838">For information that is common to all overloads of this method, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1839">
            <paramref name="assemblyString" /> is <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1839">
              <paramref name="assemblyString" /> is <see langword="null" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1840">
            <paramref name="assemblyString" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1840">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1841">
            <paramref name="assemblyString" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1841">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1842">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1842">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1843">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1843">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1844">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1844">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1845">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1845">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1846">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1846">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1847">提供存取組件的位置，如果組件不是本機的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1847">for the ability to access the location of the assembly if the assembly is not local.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member Load : byte[] * byte[] -&gt; System.Reflection.Assembly&#xA;override this.Load : byte[] * byte[] -&gt; System.Reflection.Assembly" Usage="appDomain.Load (rawAssembly, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Load(System.Byte[],System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="8a822-1848">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1848">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="8a822-1849">An array of type <see langword="byte" /> containing the raw bytes representing the symbols for the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1849">An array of type <see langword="byte" /> containing the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1850">Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1850">Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
          <span data-ttu-id="8a822-1851">The raw bytes representing the symbols for the <see cref="T:System.Reflection.Assembly" /> are also loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1851">The raw bytes representing the symbols for the <see cref="T:System.Reflection.Assembly" /> are also loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1852">The loaded assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1852">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1853">開頭為[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，使用這個方法載入的組件的信任層級是應用程式定義域的信任層級相同。</span><span class="sxs-lookup"><span data-stu-id="8a822-1853">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the trust level of an assembly that is loaded by using this method is the same as the trust level of the application domain.</span></span>  
  
 <span data-ttu-id="8a822-1854">這個方法應只將組件載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1854">This method should be used only to load an assembly into the current application domain.</span></span> <span data-ttu-id="8a822-1855">為了方便起見提供這個方法的互通性的呼叫端無法呼叫靜態<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1855">This method is provided as a convenience for interoperability callers who cannot call the static <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a822-1856">若要將其他應用程式定義域的組件載入，使用方法例如<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1856">To load assemblies into other application domains, use a method such as <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>.</span></span>  
  
 <span data-ttu-id="8a822-1857">通用於所有多載，這個方法的資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1857">For information that is common to all overloads of this method, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1858">下列範例示範如何載入原始的組件的使用。</span><span class="sxs-lookup"><span data-stu-id="8a822-1858">The following sample demonstrates the use of loading a raw assembly.</span></span>  
  
 <span data-ttu-id="8a822-1859">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1859">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1860">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1860">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_LoadRaw#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_LoadRaw/CPP/loadraw.cpp#1)]
 [!code-csharp[AppDomain_LoadRaw#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_LoadRaw/CS/loadraw.cs#1)]
 [!code-vb[AppDomain_LoadRaw#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_LoadRaw/VB/loadraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1861">
            <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1861">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1862">
            <paramref name="rawAssembly" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1862">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1863">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1863">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1864">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1864">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1865">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1865">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1866">用於讀取不是以"file:// 開頭的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1866">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1867">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1867">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1868">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1868">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Reflection.AssemblyName * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly&#xA;override this.Load : System.Reflection.AssemblyName * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="appDomain.Load (assemblyRef, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="8a822-1869">An object that describes the assembly to load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1869">An object that describes the assembly to load.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1870">Evidence for loading the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1870">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1871">Loads an <see cref="T:System.Reflection.Assembly" /> given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1871">Loads an <see cref="T:System.Reflection.Assembly" /> given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1872">The loaded assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1872">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1873">這個方法應只將組件載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1873">This method should be used only to load an assembly into the current application domain.</span></span> <span data-ttu-id="8a822-1874">為了方便起見提供這個方法的互通性的呼叫端無法呼叫靜態<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1874">This method is provided as a convenience for interoperability callers who cannot call the static <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a822-1875">若要將其他應用程式定義域的組件載入，使用方法例如<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1875">To load assemblies into other application domains, use a method such as <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>.</span></span>  
  
 <span data-ttu-id="8a822-1876">通用於所有多載，這個方法的資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1876">For information that is common to all overloads of this method, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1877">
            <paramref name="assemblyRef" /> is <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1877">
              <paramref name="assemblyRef" /> is <see langword="null" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1878">
            <paramref name="assemblyRef" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1878">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1879">
            <paramref name="assemblyRef" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1879">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1880">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1880">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1881">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1881">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1882">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1882">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1883">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1883">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1884">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1884">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1885">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1885">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1886">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1886">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1887">用於讀取的路徑，不是格式"file:// 或"\\\UNC\dir\\"或"c:\\"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1887">for reading a path that is not in the form "file://" or "\\\UNC\dir\\" or "c:\\".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="abstract member Load : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly&#xA;override this.Load : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="appDomain.Load (assemblyString, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Load(System.String,System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="8a822-1888">The display name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1888">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="8a822-1889">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1889">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="8a822-1890">Evidence for loading the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1890">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1891">Loads an <see cref="T:System.Reflection.Assembly" /> given its display name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1891">Loads an <see cref="T:System.Reflection.Assembly" /> given its display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1892">The loaded assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1892">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1893">這個方法應只將組件載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1893">This method should be used only to load an assembly into the current application domain.</span></span> <span data-ttu-id="8a822-1894">為了方便起見提供這個方法的互通性的呼叫端無法呼叫靜態<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1894">This method is provided as a convenience for interoperability callers who cannot call the static <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a822-1895">若要將其他應用程式定義域的組件載入，使用方法例如<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1895">To load assemblies into other application domains, use a method such as <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>.</span></span>  
  
 <span data-ttu-id="8a822-1896">通用於所有多載，這個方法的資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1896">For information that is common to all overloads of this method, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1897">
            <paramref name="assemblyString" /> is <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1897">
              <paramref name="assemblyString" /> is <see langword="null" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a822-1898">
            <paramref name="assemblyString" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1898">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1899">
            <paramref name="assemblyString" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1899">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1900">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1900">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1901">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1901">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1902">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1902">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1903">與辨識項載入組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1903">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="8a822-1904">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1904">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1905">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1905">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1906">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1906">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1907">用於讀取的路徑，不是格式"file:// 或"\\\UNC\dir\\"或"c:\\"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1907">for reading a path that is not in the form "file://" or "\\\UNC\dir\\" or "c:\\".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="abstract member Load : byte[] * byte[] * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly&#xA;override this.Load : byte[] * byte[] * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="appDomain.Load (rawAssembly, rawSymbolStore, securityEvidence)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use an overload that does not take an Evidence parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="8a822-1908">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1908">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="8a822-1909">An array of type <see langword="byte" /> containing the raw bytes representing the symbols for the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1909">An array of type <see langword="byte" /> containing the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="8a822-1910">Evidence for loading the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1910">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-1911">Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1911">Loads the <see cref="T:System.Reflection.Assembly" /> with a common object file format (COFF) based image containing an emitted <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
          <span data-ttu-id="8a822-1912">The raw bytes representing the symbols for the <see cref="T:System.Reflection.Assembly" /> are also loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1912">The raw bytes representing the symbols for the <see cref="T:System.Reflection.Assembly" /> are also loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-1913">The loaded assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1913">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1914">開頭為[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，使用這個方法載入的組件的信任層級是應用程式定義域的信任層級相同。</span><span class="sxs-lookup"><span data-stu-id="8a822-1914">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the trust level of an assembly that is loaded by using this method is the same as the trust level of the application domain.</span></span>  
  
 <span data-ttu-id="8a822-1915">這個方法應只將組件載入目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1915">This method should be used only to load an assembly into the current application domain.</span></span> <span data-ttu-id="8a822-1916">為了方便起見提供這個方法的互通性的呼叫端無法呼叫靜態<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1916">This method is provided as a convenience for interoperability callers who cannot call the static <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8a822-1917">若要將其他應用程式定義域的組件載入，使用方法例如<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-1917">To load assemblies into other application domains, use a method such as <xref:System.AppDomain.CreateInstanceAndUnwrap%2A>.</span></span>  
  
 <span data-ttu-id="8a822-1918">通用於所有多載，這個方法的資訊，請參閱<xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="8a822-1918">For information that is common to all overloads of this method, see the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-1919">下列範例示範如何載入原始的組件的使用。</span><span class="sxs-lookup"><span data-stu-id="8a822-1919">The following sample demonstrates the use of loading a raw assembly.</span></span>  
  
 <span data-ttu-id="8a822-1920">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-1920">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-1921">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1921">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_LoadRaw#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_LoadRaw/CPP/loadraw.cpp#1)]
 [!code-csharp[AppDomain_LoadRaw#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_LoadRaw/CS/loadraw.cs#1)]
 [!code-vb[AppDomain_LoadRaw#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_LoadRaw/VB/loadraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-1922">
            <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1922">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8a822-1923">
            <paramref name="rawAssembly" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1923">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="8a822-1924">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1924">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-1925">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1925">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8a822-1926">An assembly or module was loaded twice with two different evidences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1926">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a822-1927">
            <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1927">
              <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8a822-1928">When legacy CAS policy is not enabled, <paramref name="securityEvidence" /> should be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1928">When legacy CAS policy is not enabled, <paramref name="securityEvidence" /> should be <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-1929">若要提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1929">to provide evidence.</span>
          </span>
          <span data-ttu-id="8a822-1930">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1930">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
          <span data-ttu-id="8a822-1931">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1931">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-1932">針對從檔案或目錄，以及在本身的路徑資訊的存取權的讀取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1932">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="8a822-1933">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1933">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="8a822-1934">用於讀取的路徑，不是格式"file:// 或"\\\UNC\dir\\"或"c:\\"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1934">for reading a path that is not in the form "file://" or "\\\UNC\dir\\" or "c:\\".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MonitoringIsEnabled">
      <MemberSignature Language="C#" Value="public static bool MonitoringIsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MonitoringIsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.MonitoringIsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MonitoringIsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool MonitoringIsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MonitoringIsEnabled : bool with get, set" Usage="System.AppDomain.MonitoringIsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1935">Gets or sets a value that indicates whether CPU and memory monitoring of application domains is enabled for the current process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1935">Gets or sets a value that indicates whether CPU and memory monitoring of application domains is enabled for the current process.</span>
          </span>
          <span data-ttu-id="8a822-1936">Once monitoring is enabled for a process, it cannot be disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1936">Once monitoring is enabled for a process, it cannot be disabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1937">如果啟用監視，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1937">
              <see langword="true" /> if monitoring is enabled; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1938">這`static`屬性 (`Shared`屬性在 Visual Basic) 控制 CPU 和記憶體監視的程序中的所有應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1938">This `static` property (`Shared` property in Visual Basic) controls CPU and memory monitoring of all the application domains in the process.</span></span>  
  
 <span data-ttu-id="8a822-1939">如果您嘗試將此屬性設定為`false`，則<xref:System.ArgumentException>會擲回例外狀況，即使目前屬性的值是`false`。</span><span class="sxs-lookup"><span data-stu-id="8a822-1939">If you attempt to set this property to `false`, a <xref:System.ArgumentException> exception is thrown, even if the current value of the property is `false`.</span></span>  
  
 <span data-ttu-id="8a822-1940">一旦啟用監視，您可以使用<xref:System.AppDomain.MonitoringSurvivedMemorySize%2A>， <xref:System.AppDomain.MonitoringSurvivedProcessMemorySize%2A>， <xref:System.AppDomain.MonitoringTotalAllocatedMemorySize%2A>，和<xref:System.AppDomain.MonitoringTotalProcessorTime%2A>執行個體來監視個別的應用程式定義域的 CPU 和記憶體使用的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1940">Once monitoring is enabled, you can use the <xref:System.AppDomain.MonitoringSurvivedMemorySize%2A>, <xref:System.AppDomain.MonitoringSurvivedProcessMemorySize%2A>, <xref:System.AppDomain.MonitoringTotalAllocatedMemorySize%2A>, and <xref:System.AppDomain.MonitoringTotalProcessorTime%2A> instance properties to monitor CPU and memory use of individual application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a822-1941">The current process attempted to assign the value <see langword="false" /> to this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1941">The current process attempted to assign the value <see langword="false" /> to this property.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1942">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1942">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1943">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1943">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MonitoringSurvivedMemorySize">
      <MemberSignature Language="C#" Value="public long MonitoringSurvivedMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MonitoringSurvivedMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.MonitoringSurvivedMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MonitoringSurvivedMemorySize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MonitoringSurvivedMemorySize { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MonitoringSurvivedMemorySize : int64" Usage="System.AppDomain.MonitoringSurvivedMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1944">Gets the number of bytes that survived the last collection and that are known to be referenced by the current application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1944">Gets the number of bytes that survived the last collection and that are known to be referenced by the current application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1945">存留的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1945">The number of surviving bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1946">每次記憶體回收會更新統計資料。</span><span class="sxs-lookup"><span data-stu-id="8a822-1946">The statistics are updated with each garbage collection.</span></span> <span data-ttu-id="8a822-1947">不過，它們會保證完整、 阻斷式收集; 之後，才是正確的也就是的集合，其中包含所有層代和，以停止應用程式，這時集合就會發生。</span><span class="sxs-lookup"><span data-stu-id="8a822-1947">However, they are guaranteed to be accurate only after a full, blocking collection; that is, a collection that includes all generations and that stops the application while collection occurs.</span></span> <span data-ttu-id="8a822-1948">比方說，<xref:System.GC.Collect?displayProperty=nameWithType>方法多載會執行完整、 阻斷式收集。</span><span class="sxs-lookup"><span data-stu-id="8a822-1948">For example, the <xref:System.GC.Collect?displayProperty=nameWithType> method overload performs a full, blocking collection.</span></span> <span data-ttu-id="8a822-1949">（並行集合會在背景進行的而且不會封鎖應用程式）。</span><span class="sxs-lookup"><span data-stu-id="8a822-1949">(Concurrent collection occurs in the background and does not block the application.)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a822-1950">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1950">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1951">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1951">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1952">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1952">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MonitoringSurvivedProcessMemorySize">
      <MemberSignature Language="C#" Value="public static long MonitoringSurvivedProcessMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 MonitoringSurvivedProcessMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.MonitoringSurvivedProcessMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MonitoringSurvivedProcessMemorySize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long MonitoringSurvivedProcessMemorySize { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MonitoringSurvivedProcessMemorySize : int64" Usage="System.AppDomain.MonitoringSurvivedProcessMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1953">Gets the total bytes that survived from the last collection for all application domains in the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1953">Gets the total bytes that survived from the last collection for all application domains in the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1954">處理程序的存留位元組總數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1954">The total number of surviving bytes for the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1955">完整、 阻斷式收集之後, 的位元組數目目前保留位於此數字代表 managed 堆積。</span><span class="sxs-lookup"><span data-stu-id="8a822-1955">After a full, blocking collection, this number represents the number of bytes currently held live on managed heaps.</span></span> <span data-ttu-id="8a822-1956">它應該接近所報告的數字<xref:System.GC.GetTotalMemory%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-1956">It should be close to the number reported by the <xref:System.GC.GetTotalMemory%2A> method.</span></span> <span data-ttu-id="8a822-1957">暫時的集合之後, 此數字代表位元組數目目前保留要即時暫時層代中。</span><span class="sxs-lookup"><span data-stu-id="8a822-1957">After an ephemeral collection, this number represents the number of bytes currently held live in ephemeral generations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a822-1958">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1958">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1959">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1959">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1960">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1960">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MonitoringTotalAllocatedMemorySize">
      <MemberSignature Language="C#" Value="public long MonitoringTotalAllocatedMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MonitoringTotalAllocatedMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.MonitoringTotalAllocatedMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MonitoringTotalAllocatedMemorySize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MonitoringTotalAllocatedMemorySize { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MonitoringTotalAllocatedMemorySize : int64" Usage="System.AppDomain.MonitoringTotalAllocatedMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1961">Gets the total size, in bytes, of all memory allocations that have been made by the application domain since it was created, without subtracting memory that has been collected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1961">Gets the total size, in bytes, of all memory allocations that have been made by the application domain since it was created, without subtracting memory that has been collected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1962">所有記憶體配置的總大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1962">The total size of all memory allocations.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a822-1963">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1963">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1964">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1964">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1965">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1965">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MonitoringTotalProcessorTime">
      <MemberSignature Language="C#" Value="public TimeSpan MonitoringTotalProcessorTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MonitoringTotalProcessorTime" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.MonitoringTotalProcessorTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MonitoringTotalProcessorTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MonitoringTotalProcessorTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MonitoringTotalProcessorTime : TimeSpan" Usage="System.AppDomain.MonitoringTotalProcessorTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1966">Gets the total processor time that has been used by all threads while executing in the current application domain, since the process started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1966">Gets the total processor time that has been used by all threads while executing in the current application domain, since the process started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1967">目前應用程式定義域的處理器時間總計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1967">Total processor time for the current application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1968">總時間所報告的應用程式定義域包含應用程式定義域中執行的處理序中的每個執行緒所花費的時間。</span><span class="sxs-lookup"><span data-stu-id="8a822-1968">The total time that is reported for an application domain includes the time each thread in the process spent executing in that application domain.</span></span>  
  
 <span data-ttu-id="8a822-1969">呼叫 unmanaged 程式碼的執行緒仍會關聯應用程式定義域，並執行 unmanaged 程式碼會報告應用程式定義域進行呼叫所花費的處理器時間。</span><span class="sxs-lookup"><span data-stu-id="8a822-1969">A thread that calls into unmanaged code is still associated with an application domain, and the processor time spent executing the unmanaged code is reported for the application domain where the call was made.</span></span>  
  
 <span data-ttu-id="8a822-1970">當執行緒遭到封鎖或睡眠中，它不會佔用處理器時間。</span><span class="sxs-lookup"><span data-stu-id="8a822-1970">When a thread is blocked or sleeping, it does not consume processor time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a822-1971">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1971">The <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1972">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1972">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1973">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1973">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSet : System.Security.PermissionSet" Usage="System.AppDomain.PermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1974">Gets the permission set of a sandboxed application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1974">Gets the permission set of a sandboxed application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-1975">沙箱應用程式定義域的權限集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1975">The permission set of the sandboxed application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1976">使用所建立的沙箱應用程式定義域<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>方法多載有一組同質性權限，也就是相同的權限集授與所有部分信任的組件載入應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-1976">Sandboxed application domains that were created by using the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method overload have a homogenous set of permissions; that is, the same set of permissions is granted to all partially trusted assemblies that are loaded into the application domain.</span></span> <span data-ttu-id="8a822-1977">（選擇性） 沙箱應用程式定義域會有免套用此權限集，並改為使用完全信任執行的強式名稱組件清單。</span><span class="sxs-lookup"><span data-stu-id="8a822-1977">A sandboxed application domain optionally has a list of strong-named assemblies that are exempt from this permission set, and instead run with full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-1978">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1978">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-1979">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1979">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomain.IsHomogenous" />
      </Docs>
    </Member>
    <Member MemberName="ProcessExit">
      <MemberSignature Language="C#" Value="public event EventHandler ProcessExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ProcessExit" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.ProcessExit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProcessExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ProcessExit;" />
      <MemberSignature Language="F#" Value="member this.ProcessExit : EventHandler " Usage="member this.ProcessExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System._AppDomain.ProcessExit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1980">Occurs when the default application domain's parent process exits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1980">Occurs when the default application domain's parent process exits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1981"><xref:System.EventHandler>針對此事件可以執行終止活動，例如關閉檔案，釋出儲存體，在處理序結束之前。</span><span class="sxs-lookup"><span data-stu-id="8a822-1981">The <xref:System.EventHandler> for this event can perform termination activities, such as closing files, releasing storage and so on, before the process ends.</span></span>  
  
 <span data-ttu-id="8a822-1982">從.NET Framework 2.0 版開始，每個註冊的事件處理常式的應用程式定義域會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1982">Beginning with the .NET Framework version 2.0, this event is raised in each application domain that registers an event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-1983">總執行時間的所有<xref:System.AppDomain.ProcessExit>事件處理常式是受到限制，就如同所有的完成項執行時間總計會限制在關閉處理序。</span><span class="sxs-lookup"><span data-stu-id="8a822-1983">The total execution time of all <xref:System.AppDomain.ProcessExit> event handlers is limited, just as the total execution time of all finalizers is limited at process shutdown.</span></span> <span data-ttu-id="8a822-1984">預設值為兩秒。</span><span class="sxs-lookup"><span data-stu-id="8a822-1984">The default is two seconds.</span></span> <span data-ttu-id="8a822-1985">受管理的主機可以呼叫來變更此執行階段[iclrpolicymanager:: Settimeout](~/docs/framework/unmanaged-api/hosting/iclrpolicymanager-settimeout-method.md)方法[OPR_ProcessExit](~/docs/framework/unmanaged-api/hosting/eclroperation-enumeration.md)列舉值。</span><span class="sxs-lookup"><span data-stu-id="8a822-1985">An unmanaged host can change this execution time by calling the [ICLRPolicyManager::SetTimeout](~/docs/framework/unmanaged-api/hosting/iclrpolicymanager-settimeout-method.md) method with the [OPR_ProcessExit](~/docs/framework/unmanaged-api/hosting/eclroperation-enumeration.md) enumeration value.</span></span>  
  
 <span data-ttu-id="8a822-1986">在.NET framework 1.0 和 1.1 版中，此事件是引發只在預設應用程式網域中，並且只有在預設應用程式定義域中註冊事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-1986">In the .NET Framework versions 1.0 and 1.1, this event is raised only in the default application domain, and only if an event handler is registered in the default application domain.</span></span>  
  
 <span data-ttu-id="8a822-1987">若要註冊此事件的事件處理常式，您必須擁有必要的權限，或<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-1987">To register an event handler for this event, you must have the required permissions, or a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="8a822-1988">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1988">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyAssemblyResolve">
      <MemberSignature Language="C#" Value="public event ResolveEventHandler ReflectionOnlyAssemblyResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ResolveEventHandler ReflectionOnlyAssemblyResolve" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReflectionOnlyAssemblyResolve As ResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event ResolveEventHandler ^ ReflectionOnlyAssemblyResolve;" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnlyAssemblyResolve : ResolveEventHandler " Usage="member this.ReflectionOnlyAssemblyResolve : System.ResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-1989">Occurs when the resolution of an assembly fails in the reflection-only context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-1989">Occurs when the resolution of an assembly fails in the reflection-only context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-1990">在僅限反映的內容中，會不會自動解析相依性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1990">In the reflection-only context, dependencies are not resolved automatically.</span></span> <span data-ttu-id="8a822-1991">它們必須預先載入或傳回由這個事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-1991">They must be preloaded or returned by the handler for this event.</span></span> <span data-ttu-id="8a822-1992">當組件具有尚未載入至僅限反映內容的相依性時，會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1992">This event is raised when an assembly has a dependency that is not already loaded into the reflection-only context.</span></span> <span data-ttu-id="8a822-1993">遺失的相依性由<xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-1993">The missing dependency is specified by the <xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8a822-1994"><xref:System.ResolveEventHandler>本項目中必須傳回符合相依性的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1994">The <xref:System.ResolveEventHandler> for this event must return an assembly that satisfies the dependency.</span></span> <span data-ttu-id="8a822-1995">傳回組件必須載入僅限反映的內容。</span><span class="sxs-lookup"><span data-stu-id="8a822-1995">The assembly that is returned must be loaded into the reflection-only context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-1996">僅針對遺失的相依性的組件載入僅限反映的內容會引發這個事件 (例如，藉由使用<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType>方法)。</span><span class="sxs-lookup"><span data-stu-id="8a822-1996">This event is raised only for missing dependencies of the assembly that you are loading into the reflection-only context (for example, by using the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> method).</span></span> <span data-ttu-id="8a822-1997">如果找不到要載入的組件時，它不會引發。</span><span class="sxs-lookup"><span data-stu-id="8a822-1997">It is not raised if the assembly that you are loading cannot be found.</span></span>  
  
 <span data-ttu-id="8a822-1998">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，則<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>屬性會傳回要求無法解析組件載入的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-1998">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType> property returns the assembly that requested the assembly load that could not be resolved.</span></span> <span data-ttu-id="8a822-1999">了解要求的組件的識別可能會有助於識別正確版本的相依性，如果一個以上的版本。</span><span class="sxs-lookup"><span data-stu-id="8a822-1999">Knowing the identity of the requesting assembly might be useful in identifying the correct version of the dependency, if more than one version is available.</span></span> <span data-ttu-id="8a822-2000">如需詳細資訊，請參閱<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2000">For more information, see <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a822-2001">對於此事件，<xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType>套用原則之前，屬性會傳回組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-2001">For this event, the <xref:System.ResolveEventArgs.Name%2A?displayProperty=nameWithType> property returns the assembly name before policy is applied.</span></span>  
  
 <span data-ttu-id="8a822-2002">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2002">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2003">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2003">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2004">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2004">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.ResolveEventArgs.RequestingAssembly" />
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyGetAssemblies">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly[] ReflectionOnlyGetAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Assembly[] ReflectionOnlyGetAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ReflectionOnlyGetAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Function ReflectionOnlyGetAssemblies () As Assembly()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Assembly ^&gt; ^ ReflectionOnlyGetAssemblies();" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnlyGetAssemblies : unit -&gt; System.Reflection.Assembly[]" Usage="appDomain.ReflectionOnlyGetAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2005">Returns the assemblies that have been loaded into the reflection-only context of the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2005">Returns the assemblies that have been loaded into the reflection-only context of the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-2006">An array of <see cref="T:System.Reflection.Assembly" /> objects that represent the assemblies loaded into the reflection-only context of the application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2006">An array of <see cref="T:System.Reflection.Assembly" /> objects that represent the assemblies loaded into the reflection-only context of the application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2007">這個方法會傳回已載入至僅限反映內容的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2007">This method returns the assemblies that have been loaded into the reflection-only context.</span></span> <span data-ttu-id="8a822-2008">若要取得已載入的組件的執行，請使用<xref:System.AppDomain.GetAssemblies%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2008">To get the assemblies that have been loaded for execution, use the <xref:System.AppDomain.GetAssemblies%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2009">下列程式碼範例會載入 System.dll 組件，到執行內容，然後放入僅限反映的內容。</span><span class="sxs-lookup"><span data-stu-id="8a822-2009">The following code example loads the System.dll assembly into the execution context and then into the reflection-only context.</span></span> <span data-ttu-id="8a822-2010"><xref:System.AppDomain.GetAssemblies%2A>和<xref:System.AppDomain.ReflectionOnlyGetAssemblies%2A>方法用來顯示每個內容所載入的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2010">The <xref:System.AppDomain.GetAssemblies%2A> and <xref:System.AppDomain.ReflectionOnlyGetAssemblies%2A> methods are used to display the assemblies loaded into each context.</span></span>  
  
 [!code-cpp[AppDomain.ReflectionOnlyGetAssemblies#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain.ReflectionOnlyGetAssemblies/CPP/reflectiononly.cpp#1)]
 [!code-csharp[AppDomain.ReflectionOnlyGetAssemblies#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain.ReflectionOnlyGetAssemblies/CS/reflectiononly.cs#1)]
 [!code-vb[AppDomain.ReflectionOnlyGetAssemblies#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain.ReflectionOnlyGetAssemblies/VB/reflectiononly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2011">An operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2011">An operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <altmember cref="M:System.AppDomain.GetAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="RelativeSearchPath">
      <MemberSignature Language="C#" Value="public string RelativeSearchPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelativeSearchPath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.RelativeSearchPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelativeSearchPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelativeSearchPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSearchPath : string" Usage="System.AppDomain.RelativeSearchPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System._AppDomain.RelativeSearchPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2012">Gets the path under the base directory where the assembly resolver should probe for private assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2012">Gets the path under the base directory where the assembly resolver should probe for private assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-2013">組件解析程式應該在其中探查私用組件的路徑，此路徑位於基底目錄下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2013">The path under the base directory where the assembly resolver should probe for private assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2014">私用組件會部署在相同的目錄結構與應用程式。</span><span class="sxs-lookup"><span data-stu-id="8a822-2014">Private assemblies are deployed in the same directory structure as the application.</span></span> <span data-ttu-id="8a822-2015">如果所指定的路徑<xref:System.AppDomain.RelativeSearchPath%2A>屬性不是下方<xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType>，則會忽略它。</span><span class="sxs-lookup"><span data-stu-id="8a822-2015">If the path specified by the <xref:System.AppDomain.RelativeSearchPath%2A> property is not under <xref:System.AppDomainSetup.ApplicationBase%2A?displayProperty=nameWithType>, it is ignored.</span></span>  
  
 <span data-ttu-id="8a822-2016">這個屬性會傳回設定使用的值<xref:System.AppDomainSetup.PrivateBinPath%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2016">This property returns the value set using <xref:System.AppDomainSetup.PrivateBinPath%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2017">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2017">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8a822-2018">用於存取的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2018">for access to the path information.</span>
          </span>
          <span data-ttu-id="8a822-2019">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2019">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomainSetup.PrivateBinPath" />
      </Docs>
    </Member>
    <Member MemberName="ResourceResolve">
      <MemberSignature Language="C#" Value="public event ResolveEventHandler ResourceResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ResolveEventHandler ResourceResolve" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.ResourceResolve" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResourceResolve As ResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event ResolveEventHandler ^ ResourceResolve;" />
      <MemberSignature Language="F#" Value="member this.ResourceResolve : ResolveEventHandler " Usage="member this.ResourceResolve : System.ResolveEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System._AppDomain.ResourceResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2020">Occurs when the resolution of a resource fails because the resource is not a valid linked or embedded resource in the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2020">Occurs when the resolution of a resource fails because the resource is not a valid linked or embedded resource in the assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2021"><xref:System.ResolveEventHandler>針對此事件可嘗試找出包含資源的組件，並將它傳回。</span><span class="sxs-lookup"><span data-stu-id="8a822-2021">The <xref:System.ResolveEventHandler> for this event can attempt to locate the assembly containing the resource and return it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a822-2022">如果解析失敗，因為針對有效的連結資源找不到檔案，不會引發此事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2022">This event is not raised if resolution fails because no file can be found for a valid linked resource.</span></span> <span data-ttu-id="8a822-2023">如果找不到的資訊清單資源資料流，但如果找不到個別的資源索引鍵，則不會引發它，就會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2023">It is raised if a manifest resource stream cannot be found, but it is not raised if an individual resource key cannot be found.</span></span>  
  
 <span data-ttu-id="8a822-2024">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，則<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>屬性包含要求之資源的組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2024">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType> property contains the assembly that requested the resource.</span></span> <span data-ttu-id="8a822-2025">如需詳細資訊，請參閱<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2025">For more information, see <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a822-2026">若要註冊此事件的事件處理常式，您必須擁有必要的權限，或<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-2026">To register an event handler for this event, you must have the required permissions, or a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="8a822-2027">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2027">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2028">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2028">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2029">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2029">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.ResolveEventArgs.RequestingAssembly" />
      </Docs>
    </Member>
    <Member MemberName="SetAppDomainPolicy">
      <MemberSignature Language="C#" Value="public void SetAppDomainPolicy (System.Security.Policy.PolicyLevel domainPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAppDomainPolicy(class System.Security.Policy.PolicyLevel domainPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAppDomainPolicy (domainPolicy As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAppDomainPolicy(System::Security::Policy::PolicyLevel ^ domainPolicy);" />
      <MemberSignature Language="F#" Value="member this.SetAppDomainPolicy : System.Security.Policy.PolicyLevel -&gt; unit" Usage="appDomain.SetAppDomainPolicy domainPolicy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("AppDomain policy levels are obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainPolicy" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="domainPolicy">
          <span data-ttu-id="8a822-2030">The security policy level.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2030">The security policy level.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2031">Establishes the security policy level for this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2031">Establishes the security policy level for this application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2032">載入組件之前呼叫這個方法<xref:System.AppDomain>為了讓安全性原則，以產生的影響。</span><span class="sxs-lookup"><span data-stu-id="8a822-2032">Call this method before an assembly is loaded into the <xref:System.AppDomain> in order for the security policy to have effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2033">下列範例示範如何使用<xref:System.AppDomain.SetAppDomainPolicy%2A>方法來設定應用程式定義域的安全性原則層級。</span><span class="sxs-lookup"><span data-stu-id="8a822-2033">The following example demonstrates how to use the <xref:System.AppDomain.SetAppDomainPolicy%2A> method to set the security policy level of an application domain.</span></span>  
  
 [!code-cpp[ADSetAppDomainPolicy#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADSetAppDomainPolicy/CPP/adsetappdomainpolicy.cpp#1)]
 [!code-csharp[ADSetAppDomainPolicy#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADSetAppDomainPolicy/CS/adsetappdomainpolicy.cs#1)]
 [!code-vb[ADSetAppDomainPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADSetAppDomainPolicy/VB/adsetappdomainpolicy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-2034">
            <paramref name="domainPolicy" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2034">
              <paramref name="domainPolicy" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Policy.PolicyException">
          <span data-ttu-id="8a822-2035">The security policy level has already been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2035">The security policy level has already been set.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2036">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2036">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2037">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2037">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2038">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2038">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCachePath">
      <MemberSignature Language="C#" Value="public void SetCachePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCachePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetCachePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCachePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCachePath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member SetCachePath : string -&gt; unit&#xA;override this.SetCachePath : string -&gt; unit" Usage="appDomain.SetCachePath path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.SetCachePath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AppDomainSetup.SetCachePath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="8a822-2039">The fully qualified path to the shadow copy location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2039">The fully qualified path to the shadow copy location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2040">Establishes the specified directory path as the location where assemblies are shadow copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2040">Establishes the specified directory path as the location where assemblies are shadow copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2041">如果，則會忽略快取路徑<xref:System.AppDomainSetup.ApplicationName%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="8a822-2041">The cache path is ignored if the <xref:System.AppDomainSetup.ApplicationName%2A> property is not set.</span></span> <span data-ttu-id="8a822-2042">請參閱 <xref:System.AppDomainSetup.CachePath%2A?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-2042">See the <xref:System.AppDomainSetup.CachePath%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8a822-2043">如需陰影複製的詳細資訊請參閱 <<c0> [ 陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2043">For more information on shadow copying see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2044">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2044">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2045">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2045">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2046">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2046">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2047">Assigns a value to an application domain property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2047">Assigns a value to an application domain property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string name, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string name, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (name As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ name, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit&#xA;override this.SetData : string * obj -&gt; unit" Usage="appDomain.SetData (name, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-2048">The name of a user-defined application domain property to create or change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2048">The name of a user-defined application domain property to create or change.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="8a822-2049">The value of the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2049">The value of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2050">Assigns the specified value to the specified application domain property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2050">Assigns the specified value to the specified application domain property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2051">使用此方法中插入項目，或修改的值描述屬性的這個執行個體的名稱資料組的內部快取中的項目<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2051">Use this method to insert an entry, or modify the value of an entry in an internal cache of name-data pairs that describe properties of this instance of <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="8a822-2052">快取會自動包含預先定義的系統建立應用程式定義域時，會插入的項目。</span><span class="sxs-lookup"><span data-stu-id="8a822-2052">The cache automatically contains predefined system entries that are inserted when the application domain is created.</span></span> <span data-ttu-id="8a822-2053">您無法插入或修改系統項目使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2053">You cannot insert or modify system entries with this method.</span></span> <span data-ttu-id="8a822-2054">嘗試修改系統項目方法呼叫沒有任何作用中;此方法不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2054">A method call that attempts to modify a system entry has no effect; the method does not throw an exception.</span></span> <span data-ttu-id="8a822-2055">您可以查看使用的系統項目的值<xref:System.AppDomain.GetData%2A>方法或對等項目<xref:System.AppDomainSetup>屬性中所述<xref:System.AppDomain.GetData%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2055">You can inspect the values of system entries with the <xref:System.AppDomain.GetData%2A> method, or the equivalent <xref:System.AppDomainSetup> properties described in <xref:System.AppDomain.GetData%2A>.</span></span>  
  
 <span data-ttu-id="8a822-2056">您可以呼叫這個方法，以評估供應"REGEX_DEFAULT_MATCH_TIMEOUT 」 的規則運算式模式的預設逾時間隔的值設定的值`name`引數和<xref:System.TimeSpan>值，表示在逾時值與間隔`data`引數。</span><span class="sxs-lookup"><span data-stu-id="8a822-2056">You can call this method to set the value of the default timeout interval for evaluating regular expression patterns by supply "REGEX_DEFAULT_MATCH_TIMEOUT" as the value of the `name` argument and a <xref:System.TimeSpan> value that represents the timeout interval as the value of the `data` argument.</span></span> <span data-ttu-id="8a822-2057">您可以也插入或修改您自己的使用者定義名稱資料組使用這個方法並檢查其值與<xref:System.AppDomain.GetData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2057">You can also insert or modify your own user defined name-data pairs with this method and inspect their values with the <xref:System.AppDomain.GetData%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2058">下列範例示範如何使用<xref:System.AppDomain.SetData%28System.String%2CSystem.Object%29>方法用來建立新的值組。</span><span class="sxs-lookup"><span data-stu-id="8a822-2058">The following example demonstrates how to use the <xref:System.AppDomain.SetData%28System.String%2CSystem.Object%29> method to create a new value pair.</span></span> <span data-ttu-id="8a822-2059">然後此範例使用<xref:System.AppDomain.GetData%2A>方法來擷取值，並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="8a822-2059">The example then uses the <xref:System.AppDomain.GetData%2A> method to retrieve the value, and displays it to the console.</span></span>  
  
 [!code-cpp[ADGetData#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADGetData/CPP/adgetdata.cpp#1)]
 [!code-csharp[ADGetData#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADGetData/CS/adgetdata.cs#1)]
 [!code-vb[ADGetData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADGetData/VB/adgetdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2060">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2060">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2061">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2061">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2062">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2062">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.AppDomain.GetData(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string name, object data, System.Security.IPermission permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetData(string name, object data, class System.Security.IPermission permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetData(System.String,System.Object,System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (name As String, data As Object, permission As IPermission)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ name, System::Object ^ data, System::Security::IPermission ^ permission);" />
      <MemberSignature Language="F#" Value="member this.SetData : string * obj * System.Security.IPermission -&gt; unit" Usage="appDomain.SetData (name, data, permission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="permission" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a822-2063">The name of a user-defined application domain property to create or change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2063">The name of a user-defined application domain property to create or change.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="8a822-2064">The value of the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2064">The value of the property.</span>
          </span>
        </param>
        <param name="permission">
          <span data-ttu-id="8a822-2065">The permission to demand of the caller when the property is retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2065">The permission to demand of the caller when the property is retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2066">Assigns the specified value to the specified application domain property, with a specified permission to demand of the caller when the property is retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2066">Assigns the specified value to the specified application domain property, with a specified permission to demand of the caller when the property is retrieved.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2067">使用此方法來插入或修改您的使用者定義的項目，在內部快取的名稱/資料組，可描述應用程式定義域的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-2067">Use this method to insert or modify your own user-defined entries in an internal cache of name/data pairs that describe properties of the application domain.</span></span> <span data-ttu-id="8a822-2068">當您將項目時，您可以指定的權限要求，以強制在擷取的項目時。颾魤 ㄛ 您可以呼叫這個方法，以評估供應"REGEX_DEFAULT_MATCH_TIMEOUT 」 的規則運算式模式的預設逾時間隔的值設定的值`name`引數和<xref:System.TimeSpan>值，表示做為值的逾時間隔`data`引數。</span><span class="sxs-lookup"><span data-stu-id="8a822-2068">When you insert an entry, you can specify a permission demand to enforce when the entry is retrieved.In addition, you can call this method to set the value of the default timeout interval for evaluating regular expression patterns by supply "REGEX_DEFAULT_MATCH_TIMEOUT" as the value of the `name` argument and a <xref:System.TimeSpan> value that represents the timeout interval as the value of the `data` argument.</span></span>  
  
 <span data-ttu-id="8a822-2069">您無法使用這個方法，將安全性需求的系統定義的屬性字串。</span><span class="sxs-lookup"><span data-stu-id="8a822-2069">You cannot use this method to assign a security demand to a system-defined property string.</span></span>  
  
 <span data-ttu-id="8a822-2070">快取會自動包含預先定義的系統建立應用程式定義域時，會插入的項目。</span><span class="sxs-lookup"><span data-stu-id="8a822-2070">The cache automatically contains predefined system entries that are inserted when the application domain is created.</span></span> <span data-ttu-id="8a822-2071">您無法插入或修改系統項目使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2071">You cannot insert or modify system entries with this method.</span></span> <span data-ttu-id="8a822-2072">嘗試修改系統項目方法呼叫沒有任何作用中;此方法不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2072">A method call that attempts to modify a system entry has no effect; the method does not throw an exception.</span></span> <span data-ttu-id="8a822-2073">您可以查看使用的系統項目的值<xref:System.AppDomain.GetData%2A>方法或對等項目<xref:System.AppDomainSetup>屬性，如 < 備註 > 一節所述<xref:System.AppDomain.GetData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2073">You can inspect the values of system entries with the <xref:System.AppDomain.GetData%2A> method or the equivalent <xref:System.AppDomainSetup> properties described in the Remarks section for the <xref:System.AppDomain.GetData%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-2074">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2074">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a822-2075">
            <paramref name="name" /> specifies a system-defined property string and <paramref name="permission" /> is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2075">
              <paramref name="name" /> specifies a system-defined property string and <paramref name="permission" /> is not <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2076">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2076">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2077">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2077">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetDynamicBase">
      <MemberSignature Language="C#" Value="public void SetDynamicBase (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDynamicBase(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetDynamicBase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDynamicBase (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDynamicBase(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetDynamicBase : string -&gt; unit" Usage="appDomain.SetDynamicBase path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AppDomainSetup.DynamicBase")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="8a822-2078">The fully qualified path that is the base directory for subdirectories where dynamic assemblies are stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2078">The fully qualified path that is the base directory for subdirectories where dynamic assemblies are stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2079">Establishes the specified directory path as the base directory for subdirectories where dynamically generated files are stored and accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2079">Establishes the specified directory path as the base directory for subdirectories where dynamically generated files are stored and accessed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2080">這個方法會設定<xref:System.AppDomainSetup.DynamicBase%2A>屬性內部的<xref:System.AppDomainSetup>與這個執行個體相關聯。</span><span class="sxs-lookup"><span data-stu-id="8a822-2080">This method sets the <xref:System.AppDomainSetup.DynamicBase%2A> property of the internal <xref:System.AppDomainSetup> associated with this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2081">此方法現已淘汰，並不應該用於新的開發。</span><span class="sxs-lookup"><span data-stu-id="8a822-2081">This method is now obsolete, and should not be used for new development.</span></span> <span data-ttu-id="8a822-2082">下列範例示範如何使用非過時的替代方式，<xref:System.AppDomainSetup.DynamicBase%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-2082">The following example shows how to use the non-obsolete alternative, the <xref:System.AppDomainSetup.DynamicBase%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8a822-2083">如需此範例的說明，請參閱 <<c0> <xref:System.AppDomainSetup.DynamicBase%2A?displayProperty=nameWithType> 屬性或<xref:System.AppDomain.DynamicDirectory%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-2083">For an explanation of this example, see the <xref:System.AppDomainSetup.DynamicBase%2A?displayProperty=nameWithType> property or the <xref:System.AppDomain.DynamicDirectory%2A> property.</span></span>  
  
 [!code-cpp[ADDynamicBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDynamicBase/CPP/addynamicbase.cpp#1)]
 [!code-csharp[ADDynamicBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDynamicBase/CS/addynamicbase.cs#1)]
 [!code-vb[ADDynamicBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDynamicBase/VB/addynamicbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2084">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2084">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2085">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2085">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2086">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2086">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.AppDomainSetup.DynamicBase" />
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalPolicy">
      <MemberSignature Language="C#" Value="public void SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalPolicy(valuetype System.Security.Principal.PrincipalPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalPolicy (policy As PrincipalPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalPolicy(System::Security::Principal::PrincipalPolicy policy);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalPolicy : System.Security.Principal.PrincipalPolicy -&gt; unit" Usage="appDomain.SetPrincipalPolicy policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Principal.PrincipalPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="8a822-2087">One of the <see cref="T:System.Security.Principal.PrincipalPolicy" /> values that specifies the type of the principal object to attach to threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2087">One of the <see cref="T:System.Security.Principal.PrincipalPolicy" /> values that specifies the type of the principal object to attach to threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2088">Specifies how principal and identity objects should be attached to a thread if the thread attempts to bind to a principal while executing in this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2088">Specifies how principal and identity objects should be attached to a thread if the thread attempts to bind to a principal while executing in this application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2089">設定此值才會生效，如果您將使用之前<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-2089">Setting this value will only be effective if you set it before using the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8a822-2090">例如，如果您設定<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>到指定的主體 （例如，泛型主體），然後使用<xref:System.AppDomain.SetPrincipalPolicy%2A>方法來設定<xref:System.Security.Principal.PrincipalPolicy>到<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>，目前的主體會保留泛用的主體。</span><span class="sxs-lookup"><span data-stu-id="8a822-2090">For example, if you set <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> to a given principal (for example, a generic principal) and then use the <xref:System.AppDomain.SetPrincipalPolicy%2A> method to set the <xref:System.Security.Principal.PrincipalPolicy> to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, the current principal will remain the generic principal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2091">下列範例示範使用的執行緒上作用<xref:System.AppDomain.SetPrincipalPolicy%2A>方法，以變更應用程式定義域的主體的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-2091">The following example shows the effect on threads of using the <xref:System.AppDomain.SetPrincipalPolicy%2A> method to change the principal policy of the application domain.</span></span> <span data-ttu-id="8a822-2092">它也會示範使用的效果<xref:System.AppDomain.SetThreadPrincipal%2A>變更適用於附加至應用程式定義域中的執行緒之主體的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2092">It also shows the effect of using the <xref:System.AppDomain.SetThreadPrincipal%2A> method to change the principal that is available for attaching to threads in the application domain.</span></span>  
  
 [!code-cpp[ADPrincipal#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADPrincipal/CPP/adprincipal.cpp#1)]
 [!code-csharp[ADPrincipal#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADPrincipal/CS/adprincipal.cs#1)]
 [!code-vb[ADPrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADPrincipal/VB/adprincipal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2093">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2093">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-2094">操作主體物件的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2094">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="8a822-2095">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2095">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
          <span data-ttu-id="8a822-2096">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2096">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetShadowCopyFiles">
      <MemberSignature Language="C#" Value="public void SetShadowCopyFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShadowCopyFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetShadowCopyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShadowCopyFiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShadowCopyFiles();" />
      <MemberSignature Language="F#" Value="member this.SetShadowCopyFiles : unit -&gt; unit" Usage="appDomain.SetShadowCopyFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AppDomainSetup.ShadowCopyFiles")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2097">Turns on shadow copying.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2097">Turns on shadow copying.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2098">如需有關陰影複製的詳細資訊，請參閱[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2098">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2099">此方法現已淘汰，並不應該用於新的開發。</span><span class="sxs-lookup"><span data-stu-id="8a822-2099">This method is now obsolete, and should not be used for new development.</span></span>  
  
 [!code-cpp[adproperties#1](~/samples/snippets/cpp/VS_Snippets_CLR/adproperties/CPP/adproperties.cpp#1)]
 [!code-csharp[adproperties#1](~/samples/snippets/csharp/VS_Snippets_CLR/adproperties/CS/adproperties.cs#1)]
 [!code-vb[adproperties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/adproperties/VB/adproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2100">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2100">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2101">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2101">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2102">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2102">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetShadowCopyPath">
      <MemberSignature Language="C#" Value="public void SetShadowCopyPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowCopyPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetShadowCopyPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShadowCopyPath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetShadowCopyPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member SetShadowCopyPath : string -&gt; unit&#xA;override this.SetShadowCopyPath : string -&gt; unit" Usage="appDomain.SetShadowCopyPath path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.SetShadowCopyPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AppDomainSetup.ShadowCopyDirectories")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="8a822-2103">A list of directory names, where each name is separated by a semicolon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2103">A list of directory names, where each name is separated by a semicolon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2104">Establishes the specified directory path as the location of assemblies to be shadow copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2104">Establishes the specified directory path as the location of assemblies to be shadow copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2105">根據預設，陰影複製會包含經由探查所找到的所有組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2105">By default, a shadow copy includes all assemblies found through probing.</span></span> <span data-ttu-id="8a822-2106"><xref:System.AppDomain.SetShadowCopyPath%2A>方法會將陰影複製限制為所指定的目錄中的組件`path`。</span><span class="sxs-lookup"><span data-stu-id="8a822-2106">The <xref:System.AppDomain.SetShadowCopyPath%2A> method restricts the shadow copy to the assemblies in the directories specified by `path`.</span></span>  
  
 <span data-ttu-id="8a822-2107"><xref:System.AppDomain.SetShadowCopyPath%2A>方法不會指定要搜尋的組件的其他目錄。</span><span class="sxs-lookup"><span data-stu-id="8a822-2107">The <xref:System.AppDomain.SetShadowCopyPath%2A> method does not specify additional directories to be searched for assemblies.</span></span> <span data-ttu-id="8a822-2108">要陰影複製組件必須已經位於搜尋路徑中，例如下<xref:System.AppDomain.BaseDirectory%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2108">Assemblies to be shadow-copied must already be located in the search path, for example under <xref:System.AppDomain.BaseDirectory%2A>.</span></span> <span data-ttu-id="8a822-2109"><xref:System.AppDomain.SetShadowCopyPath%2A>方法可讓您指定的搜尋路徑適合將陰影複製。</span><span class="sxs-lookup"><span data-stu-id="8a822-2109">The <xref:System.AppDomain.SetShadowCopyPath%2A> method specifies which search paths are eligible to be shadow-copied.</span></span>  
  
 <span data-ttu-id="8a822-2110">這個方法會設定<xref:System.AppDomainSetup.ShadowCopyDirectories%2A>屬性內部的<xref:System.AppDomainSetup>與這個執行個體相關聯。</span><span class="sxs-lookup"><span data-stu-id="8a822-2110">This method sets the <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> property of the internal <xref:System.AppDomainSetup> associated with this instance.</span></span>  
  
 <span data-ttu-id="8a822-2111">如需有關陰影複製的詳細資訊，請參閱[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2111">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2112">此方法現已淘汰，並不應該用於新的開發。</span><span class="sxs-lookup"><span data-stu-id="8a822-2112">This method is now obsolete, and should not be used for new development.</span></span>  
  
 [!code-cpp[ADShadowCopy#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADShadowCopy/CPP/adshadowcopy.cpp#1)]
 [!code-csharp[ADShadowCopy#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADShadowCopy/CS/adshadowcopy.cs#1)]
 [!code-vb[ADShadowCopy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADShadowCopy/VB/adshadowcopy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2113">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2113">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2114">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2114">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2115">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2115">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetThreadPrincipal">
      <MemberSignature Language="C#" Value="public void SetThreadPrincipal (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreadPrincipal(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreadPrincipal (principal As IPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreadPrincipal(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="member this.SetThreadPrincipal : System.Security.Principal.IPrincipal -&gt; unit" Usage="appDomain.SetThreadPrincipal principal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="8a822-2116">The principal object to attach to threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2116">The principal object to attach to threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2117">Sets the default principal object to be attached to threads if they attempt to bind to a principal while executing in this application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2117">Sets the default principal object to be attached to threads if they attempt to bind to a principal while executing in this application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a822-2118">下列範例示範使用的效果<xref:System.AppDomain.SetThreadPrincipal%2A>變更適用於附加至應用程式定義域中執行的執行緒之主體的方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2118">The following example shows the effect of using the <xref:System.AppDomain.SetThreadPrincipal%2A> method to change the principal that is available for attaching to threads that are executing in the application domain.</span></span> <span data-ttu-id="8a822-2119">它也會顯示在使用的執行緒上作用<xref:System.AppDomain.SetPrincipalPolicy%2A>方法，以變更應用程式定義域的主體的原則。</span><span class="sxs-lookup"><span data-stu-id="8a822-2119">It also shows the effect on threads of using the <xref:System.AppDomain.SetPrincipalPolicy%2A> method to change the principal policy of the application domain.</span></span>  
  
 [!code-cpp[ADPrincipal#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADPrincipal/CPP/adprincipal.cpp#1)]
 [!code-csharp[ADPrincipal#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADPrincipal/CS/adprincipal.cs#1)]
 [!code-vb[ADPrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADPrincipal/VB/adprincipal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-2120">
            <paramref name="principal" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2120">
              <paramref name="principal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Policy.PolicyException">
          <span data-ttu-id="8a822-2121">The thread principal has already been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2121">The thread principal has already been set.</span>
          </span>
        </exception>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2122">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2122">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-2123">操作主體物件的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2123">for ability to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="8a822-2124">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
          <span data-ttu-id="8a822-2125">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2125">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetupInformation">
      <MemberSignature Language="C#" Value="public AppDomainSetup SetupInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomainSetup SetupInformation" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.SetupInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetupInformation As AppDomainSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainSetup ^ SetupInformation { AppDomainSetup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetupInformation : AppDomainSetup" Usage="System.AppDomain.SetupInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2126">Gets the application domain configuration information for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2126">Gets the application domain configuration information for this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-2127">應用程式定義域初始化資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2127">The application domain initialization information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2128">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2128">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyFiles">
      <MemberSignature Language="C#" Value="public bool ShadowCopyFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShadowCopyFiles" />
      <MemberSignature Language="DocId" Value="P:System.AppDomain.ShadowCopyFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShadowCopyFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShadowCopyFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyFiles : bool" Usage="System.AppDomain.ShadowCopyFiles" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System._AppDomain.ShadowCopyFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2129">Gets an indication whether the application domain is configured to shadow copy files.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2129">Gets an indication whether the application domain is configured to shadow copy files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a822-2130">如果已設定應用程式定義域以進行檔案陰影複製，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2130">
              <see langword="true" /> if the application domain is configured to shadow copy files; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2131">如需詳細資訊，請參閱 <<c0> <xref:System.AppDomainSetup.ShadowCopyFiles%2A?displayProperty=nameWithType> 並[陰影複製組件](~/docs/framework/app-domains/shadow-copy-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2131">For more information, see <xref:System.AppDomainSetup.ShadowCopyFiles%2A?displayProperty=nameWithType> and [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2132">The operation is attempted on an unloaded application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2132">The operation is attempted on an unloaded application domain.</span>
          </span>
        </exception>
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
      </Docs>
    </Member>
    <Member MemberName="System._AppDomain.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AppDomain.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System._AppDomain.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.System#_AppDomain#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AppDomain.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System._AppDomain.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = _AppDomain::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="8a822-2133">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2133">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8a822-2134">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2134">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="8a822-2135">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2135">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="8a822-2136">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2136">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8a822-2137">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2137">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="8a822-2138">Caller-allocated array which receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2138">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2139">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2139">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2140">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-2140">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8a822-2141">如需詳細資訊`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="8a822-2141">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8a822-2142">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2142">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System._AppDomain.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AppDomain.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System._AppDomain.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.System#_AppDomain#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AppDomain.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System._AppDomain.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = _AppDomain::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="8a822-2143">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2143">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8a822-2144">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2144">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="8a822-2145">Receives a pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2145">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2146">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2146">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2147">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-2147">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8a822-2148">如需詳細資訊`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="8a822-2148">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8a822-2149">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2149">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System._AppDomain.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AppDomain.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System._AppDomain.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.System#_AppDomain#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AppDomain.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System._AppDomain.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = _AppDomain::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="8a822-2150">Points to a location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2150">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2151">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2151">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2152">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-2152">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8a822-2153">如需詳細資訊`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="8a822-2153">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8a822-2154">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2154">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System._AppDomain.Invoke">
      <MemberSignature Language="C#" Value="void _AppDomain.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System._AppDomain.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.System#_AppDomain#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AppDomain.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System._AppDomain.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = _AppDomain::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="8a822-2155">Identifies the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2155">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="8a822-2156">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2156">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8a822-2157">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2157">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8a822-2158">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2158">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="8a822-2159">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2159">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="8a822-2160">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2160">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="8a822-2161">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2161">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="8a822-2162">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2162">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="8a822-2163">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2163">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2164">Provides access to properties and methods exposed by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2164">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2165">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="8a822-2165">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8a822-2166">如需詳細資訊`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="8a822-2166">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8a822-2167">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2167">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="appDomain.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System._AppDomain.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2168">Obtains a string representation that includes the friendly name of the application domain and any context policies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2168">Obtains a string representation that includes the friendly name of the application domain and any context policies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a822-2169">A string formed by concatenating the literal string "Name:", the friendly name of the application domain, and either string representations of the context policies or the string "There are no context policies."</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2169">A string formed by concatenating the literal string "Name:", the friendly name of the application domain, and either string representations of the context policies or the string "There are no context policies."</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a822-2170">下列程式碼範例顯示的傳回值<xref:System.AppDomain.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8a822-2170">The following code example displays the return value of the <xref:System.AppDomain.ToString%2A> method.</span></span>  
  
 [!code-cpp[ADToString#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADToString/CPP/adtostring.cpp#1)]
 [!code-csharp[ADToString#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADToString/CS/adtostring.cs#1)]
 [!code-vb[ADToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADToString/VB/adtostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">
          <span data-ttu-id="8a822-2171">The application domain represented by the current <see cref="T:System.AppDomain" /> has been unloaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2171">The application domain represented by the current <see cref="T:System.AppDomain" /> has been unloaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeResolve">
      <MemberSignature Language="C#" Value="public event ResolveEventHandler TypeResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ResolveEventHandler TypeResolve" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.TypeResolve" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TypeResolve As ResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event ResolveEventHandler ^ TypeResolve;" />
      <MemberSignature Language="F#" Value="member this.TypeResolve : ResolveEventHandler " Usage="member this.TypeResolve : System.ResolveEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System._AppDomain.TypeResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2172">Occurs when the resolution of a type fails.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2172">Occurs when the resolution of a type fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2173"><xref:System.AppDomain.TypeResolve> Common language runtime 無法判斷組件可以建立要求的型別時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2173">The <xref:System.AppDomain.TypeResolve> event occurs when the common language runtime is unable to determine the assembly that can create the requested type.</span></span> <span data-ttu-id="8a822-2174">如果類型定義中的動態組件，或動態組件中未定義類型，但執行階段不知道哪個組件中定義型別，也可能會發生。</span><span class="sxs-lookup"><span data-stu-id="8a822-2174">This can occur if the type is defined in a dynamic assembly, or the type is not defined in a dynamic assembly but the runtime does not know which assembly the type is defined in.</span></span> <span data-ttu-id="8a822-2175">後者的情況可能會發生時<xref:System.Type.GetType%2A?displayProperty=nameWithType>呼叫組件名稱未限定的型別名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-2175">The latter situation can occur when <xref:System.Type.GetType%2A?displayProperty=nameWithType> is called with a type name that is not qualified with the assembly name.</span></span>  
  
 <span data-ttu-id="8a822-2176"><xref:System.ResolveEventHandler>針對此事件可以嘗試找出並建立類型。</span><span class="sxs-lookup"><span data-stu-id="8a822-2176">The <xref:System.ResolveEventHandler> for this event can attempt to locate and create the type.</span></span>  
  
 <span data-ttu-id="8a822-2177">不過，<xref:System.AppDomain.TypeResolve>事件不會發生執行階段可讓您知道不可能以尋找特定組件中的類型。</span><span class="sxs-lookup"><span data-stu-id="8a822-2177">However, the <xref:System.AppDomain.TypeResolve> event does not occur if the runtime knows it is not possible to find a type in certain assemblies.</span></span> <span data-ttu-id="8a822-2178">比方說，不會不會發生此事件的型別找不到靜態組件中因為執行階段知道類型無法以動態方式新增至靜態組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2178">For example, this event does not occur if the type is not found in a static assembly because the runtime knows types cannot be added dynamically to static assemblies.</span></span>  
  
 <span data-ttu-id="8a822-2179">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，則<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>屬性包含要求的型別之組件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2179">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType> property contains the assembly that requested the type.</span></span> <span data-ttu-id="8a822-2180">如需詳細資訊，請參閱<xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2180">For more information, see <xref:System.ResolveEventArgs.RequestingAssembly%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a822-2181">若要註冊此事件的事件處理常式，您必須擁有必要的權限，或<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-2181">To register an event handler for this event, you must have the required permissions, or a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="8a822-2182">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2182">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2183">下列範例會示範<xref:System.AppDomain.TypeResolve>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2183">The following sample demonstrates the <xref:System.AppDomain.TypeResolve> event.</span></span>  
  
 <span data-ttu-id="8a822-2184">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8a822-2184">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8a822-2185">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2185">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[AppDomain_TypeResolve#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_TypeResolve/CPP/typeresolve.cpp#1)]
 [!code-csharp[AppDomain_TypeResolve#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_TypeResolve/CS/typeresolve.cs#1)]
 [!code-vb[AppDomain_TypeResolve#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_TypeResolve/VB/typeresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2186">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2186">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2187">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2187">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.ResolveEventArgs.RequestingAssembly" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event UnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.UnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.AppDomain.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledException As UnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event UnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : UnhandledExceptionEventHandler " Usage="member this.UnhandledException : System.UnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System._AppDomain.UnhandledException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a822-2188">Occurs when an exception is not caught.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2188">Occurs when an exception is not caught.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2189">此事件會通知無法攔截的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2189">This event provides notification of uncaught exceptions.</span></span> <span data-ttu-id="8a822-2190">它可讓應用程式之前的系統預設處理常式回報給使用者的例外狀況，並終止應用程式記錄例外狀況的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8a822-2190">It allows the application to log information about the exception before the system default handler reports the exception to the user and terminates the application.</span></span> <span data-ttu-id="8a822-2191">如果應用程式的狀態相關的足夠資訊可用，則可能會採取其他動作，例如儲存供稍後復原計畫資料。</span><span class="sxs-lookup"><span data-stu-id="8a822-2191">If sufficient information about the state of the application is available, other actions may be undertaken — such as saving program data for later recovery.</span></span> <span data-ttu-id="8a822-2192">請謹慎，因為未處理例外狀況時，會損毀程式資料。</span><span class="sxs-lookup"><span data-stu-id="8a822-2192">Caution is advised, because program data can become corrupted when exceptions are not handled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-2193">在.NET framework 1.0 和 1.1 版中，應用程式終止偵錯選項報告和使用者會引發這個事件之前，而不是在後。</span><span class="sxs-lookup"><span data-stu-id="8a822-2193">In the .NET Framework versions 1.0 and 1.1, application termination and debugging options are reported to the user before this event is raised, rather than after.</span></span>  
  
 <span data-ttu-id="8a822-2194">可以在任何應用程式定義域中處理這個事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2194">This event can be handled in any application domain.</span></span> <span data-ttu-id="8a822-2195">不過，事件不一定會引發例外狀況的發生位置的應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-2195">However, the event is not necessarily raised in the application domain where the exception occurred.</span></span> <span data-ttu-id="8a822-2196">只有當執行緒在整個堆疊已回溯而未找到適用的例外狀況處理常式，因此可以引發事件的第一個位置是在執行緒的起源的應用程式定義域，是未處理例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2196">An exception is unhandled only if the entire stack for the thread has been unwound without finding an applicable exception handler, so the first place the event can be raised is in the application domain where the thread originated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-2197">在.NET framework 1.0 和 1.1 版中，只會針對應用程式啟動時，會將由系統建立預設應用程式定義域發生此事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2197">In the .NET Framework versions 1.0 and 1.1, this event occurs only for the default application domain that is created by the system when an application is started.</span></span> <span data-ttu-id="8a822-2198">如果應用程式建立其他應用程式定義域，指定此事件的委派，這些應用程式網域中沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="8a822-2198">If an application creates additional application domains, specifying a delegate for this event in those applications domains has no effect.</span></span>  
  
 <span data-ttu-id="8a822-2199">如果<xref:System.AppDomain.UnhandledException>預設應用程式定義域中處理事件，會引發這個事件發生的任何未處理例外狀況，在任何執行緒中，無論何種應用程式定義域中啟動的執行緒。</span><span class="sxs-lookup"><span data-stu-id="8a822-2199">If the <xref:System.AppDomain.UnhandledException> event is handled in the default application domain, it is raised there for any unhandled exception in any thread, no matter what application domain the thread started in.</span></span> <span data-ttu-id="8a822-2200">如果有事件處理常式的應用程式定義域中啟動執行緒<xref:System.AppDomain.UnhandledException>，應用程式定義域中引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2200">If the thread started in an application domain that has an event handler for <xref:System.AppDomain.UnhandledException>, the event is raised in that application domain.</span></span> <span data-ttu-id="8a822-2201">如果該應用程式定義域不是預設的應用程式定義域，而且也沒有事件處理常式預設應用程式定義域中，會引發事件，這兩個應用程式定義域中。</span><span class="sxs-lookup"><span data-stu-id="8a822-2201">If that application domain is not the default application domain, and there is also an event handler in the default application domain, the event is raised in both application domains.</span></span>  
  
 <span data-ttu-id="8a822-2202">比方說，假設啟動執行緒應用程式定義域 」 AD1"，"AD2，"的應用程式定義域中呼叫的方法，並從中呼叫應用程式定義域 」 AD3 」，方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2202">For example, suppose a thread starts in application domain "AD1", calls a method in application domain "AD2", and from there calls a method in application domain "AD3", where it throws an exception.</span></span> <span data-ttu-id="8a822-2203">第一個應用程式定義域，<xref:System.AppDomain.UnhandledException>可以引發事件是 「 AD1"。</span><span class="sxs-lookup"><span data-stu-id="8a822-2203">The first application domain in which the <xref:System.AppDomain.UnhandledException> event can be raised is "AD1".</span></span> <span data-ttu-id="8a822-2204">如果該應用程式定義域不是預設應用程式定義域，也是預設應用程式定義域中引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2204">If that application domain is not the default application domain, the event can also be raised in the default application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-2205">Common language runtime 會暫止的執行緒中止時的事件處理常式<xref:System.AppDomain.UnhandledException>執行事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2205">The common language runtime suspends thread aborts while event handlers for the <xref:System.AppDomain.UnhandledException> event are executing.</span></span>  
  
 <span data-ttu-id="8a822-2206">如果事件處理常式<xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute>屬性與適當的旗標，事件處理常式會被視為限制的執行區域。</span><span class="sxs-lookup"><span data-stu-id="8a822-2206">If the event handler has a <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attribute with the appropriate flags, the event handler is treated as a constrained execution region.</span></span>  
  
 <span data-ttu-id="8a822-2207">開頭[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，此事件不會引發例外狀況的損毀的程序的狀態，例如堆疊溢位，或存取違規，除非事件處理常式上為安全性關鍵，而且有<xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-2207">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this event is not raised for exceptions that corrupt the state of the process, such as stack overflows or access violations, unless the event handler is security-critical and has the <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> attribute.</span></span>  
  
 <span data-ttu-id="8a822-2208">在.NET framework 1.0 和 1.1 版中，主應用程式執行緒以外的執行緒中發生未處理例外狀況會由執行階段會攔截，並因此不會造成應用程式終止。</span><span class="sxs-lookup"><span data-stu-id="8a822-2208">In the .NET Framework versions 1.0 and 1.1, an unhandled exception that occurs in a thread other than the main application thread is caught by the runtime and therefore does not cause the application to terminate.</span></span> <span data-ttu-id="8a822-2209">因此，就可能<xref:System.AppDomain.UnhandledException>而不終止應用程式會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2209">Thus, it is possible for the <xref:System.AppDomain.UnhandledException> event to be raised without the application terminating.</span></span> <span data-ttu-id="8a822-2210">從.NET Framework 2.0 版開始，這個子執行緒中的未處理例外狀況的支援已移除，因為這類的無訊息失敗的累積效果包含效能降低、 損毀的資料和鎖定，且很難偵錯。</span><span class="sxs-lookup"><span data-stu-id="8a822-2210">Starting with the .NET Framework version 2.0, this backstop for unhandled exceptions in child threads was removed, because the cumulative effect of such silent failures included performance degradation, corrupted data, and lockups, all of which were difficult to debug.</span></span> <span data-ttu-id="8a822-2211">如需詳細資訊，包括一份案例中，執行階段不會終止，請參閱[受控執行緒中的例外狀況](~/docs/standard/threading/exceptions-in-managed-threads.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2211">For more information, including a list of cases in which the runtime does not terminate, see [Exceptions in Managed Threads](~/docs/standard/threading/exceptions-in-managed-threads.md).</span></span>  
  
 <span data-ttu-id="8a822-2212">若要註冊此事件的事件處理常式，您必須擁有必要的權限，或<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8a822-2212">To register an event handler for this event, you must have the required permissions, or a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="8a822-2213">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8a822-2213">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
## <a name="other-events-for-unhandled-exceptions"></a><span data-ttu-id="8a822-2214">未處理例外狀況的其他事件</span><span class="sxs-lookup"><span data-stu-id="8a822-2214">Other Events for Unhandled Exceptions</span></span>  
 <span data-ttu-id="8a822-2215">針對特定應用程式模型，<xref:System.AppDomain.UnhandledException>事件可以清空的其他事件，如果主應用程式執行緒中發生未處理的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2215">For certain application models, the <xref:System.AppDomain.UnhandledException> event can be preempted by other events if the unhandled exception occurs in the main application thread.</span></span>  
  
 <span data-ttu-id="8a822-2216">使用 Windows Forms 應用程式，在未處理的例外狀況中的主應用程式執行緒的原因<xref:System.Windows.Forms.Application.ThreadException?displayProperty=nameWithType>會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2216">In applications that use Windows Forms, unhandled exceptions in the main application thread cause the <xref:System.Windows.Forms.Application.ThreadException?displayProperty=nameWithType> event to be raised.</span></span> <span data-ttu-id="8a822-2217">如果處理此事件，預設行為是未處理的例外狀況不會終止應用程式，雖然應用程式處於未知狀態。</span><span class="sxs-lookup"><span data-stu-id="8a822-2217">If this event is handled, the default behavior is that the unhandled exception does not terminate the application, although the application is left in an unknown state.</span></span> <span data-ttu-id="8a822-2218">在此情況下，<xref:System.AppDomain.UnhandledException>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2218">In that case, the <xref:System.AppDomain.UnhandledException> event is not raised.</span></span> <span data-ttu-id="8a822-2219">可以變更此行為，藉由使用應用程式組態檔，或是利用<xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A?displayProperty=nameWithType>方法，以將模式變更為<xref:System.Windows.Forms.UnhandledExceptionMode.ThrowException?displayProperty=nameWithType>之前<xref:System.Windows.Forms.Application.ThreadException>連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-2219">This behavior can be changed by using the application configuration file, or by using the <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A?displayProperty=nameWithType> method to change the mode to <xref:System.Windows.Forms.UnhandledExceptionMode.ThrowException?displayProperty=nameWithType> before the <xref:System.Windows.Forms.Application.ThreadException> event handler is hooked up.</span></span> <span data-ttu-id="8a822-2220">只適用於主應用程式執行緒。</span><span class="sxs-lookup"><span data-stu-id="8a822-2220">This applies only to the main application thread.</span></span> <span data-ttu-id="8a822-2221"><xref:System.AppDomain.UnhandledException>其他執行緒中擲回未處理的例外狀況都會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2221">The <xref:System.AppDomain.UnhandledException> event is raised for unhandled exceptions thrown in other threads.</span></span>  
  
 <span data-ttu-id="8a822-2222">從 Microsoft Visual Studio 2005 開始，Visual Basic 應用程式架構可以提供另一個事件在主應用程式執行緒的未處理例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2222">Starting with Microsoft Visual Studio 2005, the Visual Basic application framework provides another event for unhandled exceptions in the main application thread.</span></span> <span data-ttu-id="8a822-2223">請參閱<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2223">See the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8a822-2224">此事件具有與所使用的事件引數物件的名稱相同的事件引數物件<xref:System.AppDomain.UnhandledException?displayProperty=nameWithType>，但具有不同的屬性。</span><span class="sxs-lookup"><span data-stu-id="8a822-2224">This event has an event arguments object with the same name as the event arguments object used by <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType>, but with different properties.</span></span> <span data-ttu-id="8a822-2225">這個事件引數物件的有特別的是，<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>屬性，可讓應用程式繼續執行，而忽略未處理的例外狀況 （並讓應用程式處於未知狀態）。</span><span class="sxs-lookup"><span data-stu-id="8a822-2225">In particular, this event arguments object has an <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property that allows the application to continue running, ignoring the unhandled exception (and leaving the application in an unknown state).</span></span> <span data-ttu-id="8a822-2226">在此情況下，<xref:System.AppDomain.UnhandledException?displayProperty=nameWithType>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2226">In that case, the <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> event is not raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2227">如以下範例將示範<xref:System.AppDomain.UnhandledException>事件。</span><span class="sxs-lookup"><span data-stu-id="8a822-2227">The followingexample demonstrates the <xref:System.AppDomain.UnhandledException> event.</span></span> <span data-ttu-id="8a822-2228">它會定義事件處理常式， `MyHandler`，叫用時的預設應用程式定義域中擲回未處理的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2228">It defines an event handler, `MyHandler`, that is invoked whenever an unhandled exception is thrown in the default application domain.</span></span> <span data-ttu-id="8a822-2229">然後，會擲回兩個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2229">It then throws two exceptions.</span></span> <span data-ttu-id="8a822-2230">第一個由**try/catch**區塊。</span><span class="sxs-lookup"><span data-stu-id="8a822-2230">The first is handled by a **try/catch** block.</span></span> <span data-ttu-id="8a822-2231">第二個是未處理，並叫用`MyHandle`應用程式終止之前的常式。</span><span class="sxs-lookup"><span data-stu-id="8a822-2231">The second is unhandled and invokes the `MyHandle` routine before the application terminates.</span></span>  
  
 [!code-cpp[AppDomain_UnhandledException#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_UnhandledException/CPP/unhandledexception.cpp#1)]
 [!code-csharp[AppDomain_UnhandledException#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_UnhandledException/CS/unhandledexception.cs#1)]
 [!code-vb[AppDomain_UnhandledException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_UnhandledException/VB/unhandledexception.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8a822-2232">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2232">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a822-2233">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2233">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public static void Unload (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unload(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomain.Unload(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unload (domain As AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unload(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member Unload : AppDomain -&gt; unit" Usage="System.AppDomain.Unload domain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="8a822-2234">An application domain to unload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2234">An application domain to unload.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a822-2235">Unloads the specified application domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2235">Unloads the specified application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a822-2236">.NET Framework 2.0 版中已有執行緒專門用來卸載應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-2236">In the .NET Framework version 2.0 there is a thread dedicated to unloading application domains.</span></span> <span data-ttu-id="8a822-2237">這可改善可靠性，尤其是當裝載.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="8a822-2237">This improves reliability, especially when the .NET Framework is hosted.</span></span> <span data-ttu-id="8a822-2238">當執行緒呼叫<xref:System.AppDomain.Unload%2A>，目標網域已標示為卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-2238">When a thread calls <xref:System.AppDomain.Unload%2A>, the target domain is marked for unloading.</span></span> <span data-ttu-id="8a822-2239">專用的執行緒嘗試卸載定義域，並在網域中的所有執行緒都被都中止。</span><span class="sxs-lookup"><span data-stu-id="8a822-2239">The dedicated thread attempts to unload the domain, and all threads in the domain are aborted.</span></span> <span data-ttu-id="8a822-2240">如果執行緒不會中止，例如因為它正在執行 unmanaged 程式碼，或因為它執行`finally`區塊，然後在一段時間後的<xref:System.CannotUnloadAppDomainException>初次呼叫的執行緒中擲回<xref:System.AppDomain.Unload%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2240">If a thread does not abort, for example because it is executing unmanaged code, or because it is executing a `finally` block, then after a period of time a <xref:System.CannotUnloadAppDomainException> is thrown in the thread that originally called <xref:System.AppDomain.Unload%2A>.</span></span> <span data-ttu-id="8a822-2241">如果無法最終中止的執行緒結束時，目標網域不卸載。</span><span class="sxs-lookup"><span data-stu-id="8a822-2241">If the thread that could not be aborted eventually ends, the target domain is not unloaded.</span></span> <span data-ttu-id="8a822-2242">因此，在.NET Framework 2.0 版`domain`不保證會卸除，因為它可能無法終止正在執行的執行緒。</span><span class="sxs-lookup"><span data-stu-id="8a822-2242">Thus, in the .NET Framework version 2.0 `domain` is not guaranteed to unload, because it might not be possible to terminate executing threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a822-2243">在某些情況下，呼叫<xref:System.AppDomain.Unload%2A>會導致立即<xref:System.CannotUnloadAppDomainException>，例如在完成項呼叫。</span><span class="sxs-lookup"><span data-stu-id="8a822-2243">In some cases, calling <xref:System.AppDomain.Unload%2A> causes an immediate <xref:System.CannotUnloadAppDomainException>, for example if it is called in a finalizer.</span></span>  
  
 <span data-ttu-id="8a822-2244">中的執行緒`domain`使用終止<xref:System.Threading.Thread.Abort%2A>方法，就會擲回<xref:System.Threading.ThreadAbortException>執行緒中。</span><span class="sxs-lookup"><span data-stu-id="8a822-2244">The threads in `domain` are terminated using the <xref:System.Threading.Thread.Abort%2A> method, which throws a <xref:System.Threading.ThreadAbortException> in the thread.</span></span> <span data-ttu-id="8a822-2245">不過，應該立即終止執行緒，它會繼續執行無法預期的一段時間中`finally`子句。</span><span class="sxs-lookup"><span data-stu-id="8a822-2245">Although the thread should terminate promptly, it can continue executing for an unpredictable amount of time in a `finally` clause.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="8a822-2246">版本相容性</span><span class="sxs-lookup"><span data-stu-id="8a822-2246">Version Compatibility</span></span>  
 <span data-ttu-id="8a822-2247">在.NET Framework 1.0 和 1.1，如果呼叫執行緒<xref:System.AppDomain.Unload%2A>正在執行`domain`，另一個執行緒已啟動執行卸載作業。</span><span class="sxs-lookup"><span data-stu-id="8a822-2247">In the .NET Framework version 1.0 and 1.1 if the thread that calls <xref:System.AppDomain.Unload%2A> is running in `domain`, another thread is started to perform the unload operation.</span></span> <span data-ttu-id="8a822-2248">如果`domain`不能卸載<xref:System.CannotUnloadAppDomainException>該執行緒不在原始呼叫的執行緒中擲回<xref:System.AppDomain.Unload%2A>。</span><span class="sxs-lookup"><span data-stu-id="8a822-2248">If `domain` cannot be unloaded, a <xref:System.CannotUnloadAppDomainException> is thrown in that thread, not in the original thread that called <xref:System.AppDomain.Unload%2A>.</span></span> <span data-ttu-id="8a822-2249">不過，如果執行緒呼叫<xref:System.AppDomain.Unload%2A>外部執行`domain`，執行緒會收到例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8a822-2249">However, if the thread that calls <xref:System.AppDomain.Unload%2A> is running outside `domain`, that thread receives the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a822-2250">下列程式碼範例示範如何卸載應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="8a822-2250">The following code example shows how to unload an application domain.</span></span>  
  
 [!code-cpp[ADUnload#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADUnload/CPP/adunload.cpp#1)]
 [!code-csharp[ADUnload#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADUnload/CS/adunload.cs#1)]
 [!code-vb[ADUnload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADUnload/VB/adunload.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a822-2251">
            <paramref name="domain" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2251">
              <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.CannotUnloadAppDomainException">
          <span data-ttu-id="8a822-2252">
            <paramref name="domain" /> could not be unloaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2252">
              <paramref name="domain" /> could not be unloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8a822-2253">An error occurred during the unload process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2253">An error occurred during the unload process.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8a822-2254">若要加入此事件的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2254">to add an event handler for this event.</span>
          </span>
          <span data-ttu-id="8a822-2255">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2255">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</span>
          </span>
          <span data-ttu-id="8a822-2256">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a822-2256">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>