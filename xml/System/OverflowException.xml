<Type Name="OverflowException" FullName="System.OverflowException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d3815d427564051d208f408f71c56c1856b74a5" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48715964" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OverflowException : ArithmeticException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit OverflowException extends System.ArithmeticException" />
  <TypeSignature Language="DocId" Value="T:System.OverflowException" />
  <TypeSignature Language="VB.NET" Value="Public Class OverflowException&#xA;Inherits ArithmeticException" />
  <TypeSignature Language="C++ CLI" Value="public ref class OverflowException : ArithmeticException" />
  <TypeSignature Language="F#" Value="type OverflowException = class&#xA;    inherit ArithmeticException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArithmeticException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3f895-101">當檢查內容中的算術、轉型或轉換作業造成溢位時，所擲回的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f895-101">The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f895-102"><xref:System.OverflowException>會在下列情況下的執行階段擲回：</span><span class="sxs-lookup"><span data-stu-id="3f895-102">An <xref:System.OverflowException> is thrown at run time under the following conditions:</span></span>  
  
-   <span data-ttu-id="3f895-103">算術運算會產生作業所傳回的資料類型的範圍之外的結果。</span><span class="sxs-lookup"><span data-stu-id="3f895-103">An arithmetic operation produces a result that is outside the range of the data type returned by the operation.</span></span> <span data-ttu-id="3f895-104">下列範例說明<xref:System.OverflowException>超出範圍的乘法運算所擲回<xref:System.Int32>型別。</span><span class="sxs-lookup"><span data-stu-id="3f895-104">The following example illustrates the <xref:System.OverflowException> that is thrown by a multiplication operation that overflows the bounds of the <xref:System.Int32> type.</span></span>  
  
     [!code-csharp[System.OverflowException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#1)]
     [!code-vb[System.OverflowException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#1)]  
  
-   <span data-ttu-id="3f895-105">轉型或轉換作業嘗試執行縮小轉換，以及來源資料類型的值超出目標資料類型的範圍。</span><span class="sxs-lookup"><span data-stu-id="3f895-105">A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type.</span></span> <span data-ttu-id="3f895-106">下列範例說明<xref:System.OverflowException>所擲回的嘗試將大型的不帶正負號的位元組值轉換成帶正負號的位元組值。</span><span class="sxs-lookup"><span data-stu-id="3f895-106">The following example illustrates the <xref:System.OverflowException> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.</span></span>  
  
     [!code-csharp[System.OverflowException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#2)]
     [!code-vb[System.OverflowException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#2)]  
  
 <span data-ttu-id="3f895-107">在每個案例中，運算的結果會是值小於`MinValue`屬性或大於`MaxValue`作業所產生的資料類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="3f895-107">In each case, the result of the operation is a value that is less than the `MinValue` property or greater than the `MaxValue` property of the data type that results from the operation.</span></span>  
  
 <span data-ttu-id="3f895-108">算術、 轉型或轉換作業會擲回<xref:System.OverflowException>，作業必須發生在檢查的內容。</span><span class="sxs-lookup"><span data-stu-id="3f895-108">For the arithmetic, casting, or conversion operation to throw an <xref:System.OverflowException>, the operation must occur in a checked context.</span></span> <span data-ttu-id="3f895-109">根據預設，會檢查的算術運算和 Visual Basic 中的溢位;在 C# 中，它們不是。</span><span class="sxs-lookup"><span data-stu-id="3f895-109">By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not.</span></span> <span data-ttu-id="3f895-110">如果在作業發生在 unchecked 內容中，結果會截斷所捨棄的目的型別不符合任何高序位位元。</span><span class="sxs-lookup"><span data-stu-id="3f895-110">If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type.</span></span> <span data-ttu-id="3f895-111">下列範例說明這類未檢查的轉換在 C#。</span><span class="sxs-lookup"><span data-stu-id="3f895-111">The following example illustrates such an unchecked conversion in C#.</span></span> <span data-ttu-id="3f895-112">它會重複上一個範例在 unchecked 內容中。</span><span class="sxs-lookup"><span data-stu-id="3f895-112">It repeats the previous example in an unchecked context.</span></span>  
  
 [!code-csharp[System.OverflowException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#3)]  
  
 <span data-ttu-id="3f895-113">下列的 Microsoft intermediate language (MSIL) 指令會擲回<xref:System.OverflowException>:</span><span class="sxs-lookup"><span data-stu-id="3f895-113">The following Microsoft intermediate language (MSIL) instructions throw an <xref:System.OverflowException>:</span></span>  
  
-   <span data-ttu-id="3f895-114">`add.ovf.` *\<帶正負號 >*</span><span class="sxs-lookup"><span data-stu-id="3f895-114">`add.ovf.` *\<signed>*</span></span>  
  
-   <span data-ttu-id="3f895-115">`conv.ovf.` *\<為類型 >*</span><span class="sxs-lookup"><span data-stu-id="3f895-115">`conv.ovf.` *\<to type>*</span></span>  
  
-   <span data-ttu-id="3f895-116">`conv.ovf.` *\<為類型 >* `.un`</span><span class="sxs-lookup"><span data-stu-id="3f895-116">`conv.ovf.` *\<to type>* `.un`</span></span>  
  
-   <span data-ttu-id="3f895-117">`mul.ovf.` *\<type>*</span><span class="sxs-lookup"><span data-stu-id="3f895-117">`mul.ovf.` *\<type>*</span></span>  
  
-   <span data-ttu-id="3f895-118">`sub.ovf.` *\<type>*</span><span class="sxs-lookup"><span data-stu-id="3f895-118">`sub.ovf.` *\<type>*</span></span>  
  
-   `newarr`  
  
 <span data-ttu-id="3f895-119"><xref:System.OverflowException> 會使用 HRESULT COR_E_OVERFLOW，其值 0x80131516。</span><span class="sxs-lookup"><span data-stu-id="3f895-119"><xref:System.OverflowException> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.</span></span>  
  
 <span data-ttu-id="3f895-120">如需執行個體的初始屬性值的清單<xref:System.OverflowException>，請參閱<xref:System.OverflowException.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="3f895-120">For a list of initial property values for an instance of <xref:System.OverflowException>, see the <xref:System.OverflowException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">
      <span data-ttu-id="3f895-121">處理和擲回例外狀況</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f895-121">Handling and Throwing Exceptions</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3f895-122">初始化 <see cref="T:System.OverflowException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-122">Initializes a new instance of the <see cref="T:System.OverflowException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OverflowException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OverflowException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OverflowException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f895-123">初始化 <see cref="T:System.OverflowException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-123">Initializes a new instance of the <see cref="T:System.OverflowException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f895-124">下表顯示 <xref:System.OverflowException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="3f895-124">The following table shows the initial property values for an instance of <xref:System.OverflowException>.</span></span>  
  
|<span data-ttu-id="3f895-125">屬性</span><span class="sxs-lookup"><span data-stu-id="3f895-125">Property</span></span>|<span data-ttu-id="3f895-126">值</span><span class="sxs-lookup"><span data-stu-id="3f895-126">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3f895-127">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="3f895-127">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="3f895-128">當地語系化的錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="3f895-128">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OverflowException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OverflowException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OverflowException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new OverflowException : string -&gt; OverflowException" Usage="new System.OverflowException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3f895-129">描述錯誤的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-129">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f895-130">使用指定的錯誤訊息，初始化 <see cref="T:System.OverflowException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-130">Initializes a new instance of the <see cref="T:System.OverflowException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f895-131">內容`message`應該了解使用者。</span><span class="sxs-lookup"><span data-stu-id="3f895-131">The content of the `message` should be understandable to the user.</span></span> <span data-ttu-id="3f895-132">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</span><span class="sxs-lookup"><span data-stu-id="3f895-132">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="3f895-133">下表顯示 <xref:System.OverflowException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="3f895-133">The following table shows the initial property values for an instance of <xref:System.OverflowException>.</span></span>  
  
|<span data-ttu-id="3f895-134">屬性</span><span class="sxs-lookup"><span data-stu-id="3f895-134">Property</span></span>|<span data-ttu-id="3f895-135">值</span><span class="sxs-lookup"><span data-stu-id="3f895-135">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3f895-136">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="3f895-136">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="3f895-137">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="3f895-137">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OverflowException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OverflowException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new OverflowException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; OverflowException" Usage="new System.OverflowException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="3f895-138">存放序列物件資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-138">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3f895-139">關於來源或目的端的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-139">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f895-140">使用序列化資料，初始化 <see cref="T:System.OverflowException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-140">Initializes a new instance of the <see cref="T:System.OverflowException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f895-141">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="3f895-141">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OverflowException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OverflowException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OverflowException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new OverflowException : string * Exception -&gt; OverflowException" Usage="new System.OverflowException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3f895-142">解釋例外狀況原因的錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-142">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="3f895-143">做為目前例外狀況發生原因的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-143">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="3f895-144">如果 <c>innerException</c> 參數不是 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，則會在處理內部例外狀況的 <see langword="catch" /> 區塊中引發目前的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-144">If the <c>innerException</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f895-145">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.OverflowException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-145">Initializes a new instance of the <see cref="T:System.OverflowException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f895-146">直接因為前一個例外狀況而擲回的例外狀況可能包含對 <xref:System.Exception.InnerException%2A> 屬性中前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="3f895-146">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="3f895-147"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `Nothing` 屬性不提供內部例外值給建構函式，則傳回 null 參考 (在 Visual Basic 中為 <xref:System.Exception.InnerException%2A>)。</span><span class="sxs-lookup"><span data-stu-id="3f895-147">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="3f895-148">下表顯示 <xref:System.OverflowException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="3f895-148">The following table shows the initial property values for an instance of <xref:System.OverflowException>.</span></span>  
  
|<span data-ttu-id="3f895-149">屬性</span><span class="sxs-lookup"><span data-stu-id="3f895-149">Property</span></span>|<span data-ttu-id="3f895-150">值</span><span class="sxs-lookup"><span data-stu-id="3f895-150">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3f895-151">內部例外狀況參考。</span><span class="sxs-lookup"><span data-stu-id="3f895-151">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="3f895-152">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="3f895-152">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">
          <span data-ttu-id="3f895-153">處理和擲回例外狀況</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f895-153">Handling and Throwing Exceptions</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>