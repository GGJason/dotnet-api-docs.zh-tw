<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AppDomainUnloadedException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bd11553089e034ffc94389fed29dcbcdd9da860c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd11553089e034ffc94389fed29dcbcdd9da860c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AppDomainUnloadedException">
          <source>The exception that is thrown when an attempt is made to access an unloaded application domain.</source>
          <target state="translated">嘗試存取已卸載應用程式定義域時所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>In the .NET Framework version 2.0, an <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> that is not handled in user code has the following effect:</source>
          <target state="translated">在.NET Framework 2.0 版中，<ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>也就是在未處理的使用者程式碼具有下列結果：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>If a thread was started in managed code, it is terminated.</source>
          <target state="translated">如果執行緒已開始在 managed 程式碼，它會終止。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The unhandled exception is not allowed to terminate the application.</source>
          <target state="translated">不允許未處理的例外狀況是終止該應用程式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>If a task is executing on a <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread, it is terminated and the thread is returned to the thread pool.</source>
          <target state="translated">如果正在執行中工作<ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>執行緒，它就會終止和執行緒返回執行緒集區。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The unhandled exception is not allowed to terminate the application.</source>
          <target state="translated">不允許未處理的例外狀況是終止該應用程式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>If a thread started in unmanaged code, such as the main application thread, it is terminated.</source>
          <target state="translated">如果在 unmanaged 程式碼，例如，在主應用程式執行緒的執行緒啟動它就會終止。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The unhandled exception is allowed to proceed, and the operating system terminates the application.</source>
          <target state="translated">若要繼續，允許處理的例外狀況，且作業系統會結束應用程式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source><ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> uses the HRESULT COR_E_APPDOMAINUNLOADED, which has the value 0x80131014.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> 會使用 HRESULT COR_E_APPDOMAINUNLOADED，0x80131014 的值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.AppDomainUnloadedException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">如需執行個體的初始屬性值的清單<ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>，請參閱<ph id="ph2">&lt;xref:System.AppDomainUnloadedException.%23ctor%2A&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>This section contains two code examples.</source>
          <target state="translated">本節包含兩個程式碼範例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The first example demonstrates the effects of an <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> on various threads, and the second shows elementary application domain unloading.</source>
          <target state="translated">第一個範例示範的效果<ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>上不同的執行緒，與第二個顯示基本的應用程式網域卸載。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>Example 1</source>
          <target state="translated">範例 1</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The following code example defines a <ph id="ph1">`TestClass`</ph> class that can be marshaled across application domain boundaries and an <ph id="ph2">`Example`</ph> class containing a <ph id="ph3">`static`</ph> (<ph id="ph4">`Shared`</ph> in Visual Basic) <ph id="ph5">`ThreadProc`</ph> method.</source>
          <target state="translated">下列程式碼範例會定義<ph id="ph1">`TestClass`</ph>可以跨應用程式定義域界限封送處理的類別和<ph id="ph2">`Example`</ph>類別包含<ph id="ph3">`static`</ph>(<ph id="ph4">`Shared`</ph>在 Visual Basic 中)<ph id="ph5">`ThreadProc`</ph>方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The <ph id="ph1">`ThreadProc`</ph> method creates an application domain, creates a <ph id="ph2">`TestClass`</ph> object in the domain, and calls a method of <ph id="ph3">`TestClass`</ph> that unloads the executing domain, causing an <ph id="ph4">&lt;xref:System.AppDomainUnloadedException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ThreadProc`</ph>方法產生應用程式定義域時，建立<ph id="ph2">`TestClass`</ph>物件在網域中，呼叫的方法和<ph id="ph3">`TestClass`</ph>的卸載執行的網域，導致<ph id="ph4">&lt;xref:System.AppDomainUnloadedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The <ph id="ph1">`TestClass`</ph> method is executed without exception handling from a <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread and from an ordinary thread, demonstrating that the unhandled exception terminates the task or thread but not the application.</source>
          <target state="translated"><ph id="ph1">`TestClass`</ph>方法例外狀況處理而執行<ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph>執行緒和一般的執行緒，示範未處理的例外狀況終止工作或執行緒，但不是應用程式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>It is then executed with and without exception handling from the main application thread, demonstrating that it terminates the application if not handled.</source>
          <target state="translated">然後，執行時與不處理從主應用程式的執行緒，示範它終止應用程式時，如果未處理的例外狀況。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>Example 2</source>
          <target state="translated">範例 2</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainUnloadedException">
          <source>The following code example creates and unloads an application domain, and demonstrates that an <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> is thrown on a subsequent attempt to access the unloaded domain.</source>
          <target state="translated">下列程式碼範例會建立和卸載應用程式定義域，並示範<ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>後續嘗試存取已卸載的網域擲回。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.AppDomainUnloadedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The target application domain has been unloaded."</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>屬性的新執行個體的系統提供的訊息描述錯誤，例如 「 目標應用程式定義域已經卸載。 」</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此訊息會考量目前的系統文化特性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">當地語系化的錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">使用指定的錯誤訊息，初始化 <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 參數的內容必須能讓人了解。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">存放序列物件資料的物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">關於來源或目的端的內容資訊。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>XML 和 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The message that describes the error.</source>
          <target state="translated">描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference, the current exception is raised in a <ph id="ph1">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 參數不是 Null 參考，目前的例外狀況會在處理內部例外的 <ph id="ph1">&lt;see langword="catch" /&gt;</ph> 區塊中引發。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.AppDomainUnloadedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 參數的內容必須能讓人了解。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中包含對前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference if the <ph id="ph2">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>屬性會傳回相同的值如果傳遞到建構函式，則為 null 參考<ph id="ph2">&lt;xref:System.Exception.InnerException%2A&gt;</ph>屬性沒有提供內部例外值給建構函式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.AppDomainUnloadedException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">內部例外狀況參考。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>