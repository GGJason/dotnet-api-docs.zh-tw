<Type Name="Math" FullName="System.Math">
  <TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b7074-101">提供三角函數、對數函數和其他一般數學函數的常數和靜態方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-102">下列範例會使用數個數學和三角函數函式，從<xref:System.Math>類別計算 trapezoid 內部角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-103">傳回指定數字的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-104">大於或等於 <see cref="F:System.Decimal.MinValue" />但小於或等於 <see cref="F:System.Decimal.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="b7074-105">傳回 <see cref="T:System.Decimal" /> 數字的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="b7074-106">十進位數字 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-107">數值的絕對值<xref:System.Decimal>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="b7074-108">例如，1.2 和字-1.2 的絕對值是 1.2。</span><span class="sxs-lookup"><span data-stu-id="b7074-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-109">下列範例會使用<xref:System.Math.Abs%28System.Decimal%29>方法來取得的數字的絕對值<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-110">大於或等於 <see cref="F:System.Double.MinValue" />但小於或等於 <see cref="F:System.Double.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="b7074-111">傳回雙精確度浮點數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b7074-112">雙精確度浮點數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-113">數值的絕對值<xref:System.Double>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="b7074-114">例如，同時 1.2e03 和-1.2e03 絕對值是 1.2e03。</span><span class="sxs-lookup"><span data-stu-id="b7074-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="b7074-115">如果`value`等於<xref:System.Double.NegativeInfinity>或<xref:System.Double.PositiveInfinity>，則傳回值是<xref:System.Double.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="b7074-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="b7074-116">如果`value`等於<xref:System.Double.NaN>，則傳回值是<xref:System.Double.NaN>。</span><span class="sxs-lookup"><span data-stu-id="b7074-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-117">下列範例會使用<xref:System.Math.Abs%28System.Double%29>方法來取得的數字的絕對值<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-118">大於 <see cref="F:System.Int16.MinValue" />但小於或等於 <see cref="F:System.Int16.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="b7074-119">傳回 16 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-120">16 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-121">數值的絕對值<xref:System.Int16>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="b7074-122">例如，123 和-123 的絕對值是 123。</span><span class="sxs-lookup"><span data-stu-id="b7074-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-123">下列範例會使用<xref:System.Math.Abs%28System.Int16%29>方法來取得的數字的絕對值<xref:System.Int16>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b7074-124"><paramref name="value" />等於 <see cref="F:System.Int16.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-125">大於 <see cref="F:System.Int32.MinValue" />但小於或等於 <see cref="F:System.Int32.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="b7074-126">傳回 32 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-127">32 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-128">數值的絕對值<xref:System.Int32>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="b7074-129">例如，123 和-123 的絕對值是 123。</span><span class="sxs-lookup"><span data-stu-id="b7074-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-130">下列範例會使用<xref:System.Math.Abs%28System.Int32%29>方法來取得的數字的絕對值<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b7074-131"><paramref name="value" />等於 <see cref="F:System.Int32.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-132">大於 <see cref="F:System.Int64.MinValue" />但小於或等於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="b7074-133">傳回 64 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-134">64 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-135">數值的絕對值<xref:System.Int64>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="b7074-136">例如，123 和-123 的絕對值是 123。</span><span class="sxs-lookup"><span data-stu-id="b7074-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-137">下列範例會使用<xref:System.Math.Abs%28System.Int64%29>方法來取得的數字的絕對值<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b7074-138"><paramref name="value" />等於 <see cref="F:System.Int64.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-139">大於 <see cref="F:System.SByte.MinValue" />但小於或等於 <see cref="F:System.SByte.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="b7074-140">傳回 8 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-141">8 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-142">將帶正負號位元組的絕對值是沒有正負號的數字值。</span><span class="sxs-lookup"><span data-stu-id="b7074-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="b7074-143">例如，12 和-12 的絕對值是 12。</span><span class="sxs-lookup"><span data-stu-id="b7074-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-144">下列範例會使用<xref:System.Math.Abs%28System.SByte%29>方法來取得的數字的絕對值<xref:System.SByte>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b7074-145"><paramref name="value" />等於 <see cref="F:System.SByte.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-146">大於或等於 <see cref="F:System.Single.MinValue" />但小於或等於 <see cref="F:System.Single.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="b7074-147">傳回單精確度浮點數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="b7074-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b7074-148">單精確度浮點數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-149">數值的絕對值<xref:System.Single>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="b7074-150">例如，數值的絕對值這兩個為 1.2 e-03 和 1.2e03 是 1.2e03。</span><span class="sxs-lookup"><span data-stu-id="b7074-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="b7074-151">如果`value`等於<xref:System.Single.NegativeInfinity>或<xref:System.Single.PositiveInfinity>，則傳回值是<xref:System.Single.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="b7074-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="b7074-152">如果`value`等於<xref:System.Single.NaN>，則傳回值是<xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="b7074-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-153">下列範例會使用<xref:System.Math.Abs%28System.Single%29>方法來取得的數字的絕對值<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-154">代表餘弦函數的數字，其中 <c>d</c> 必須大於或等於 -1 但小於或等於 1。</span><span class="sxs-lookup"><span data-stu-id="b7074-154">A number representing a cosine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="b7074-155">傳回餘弦函數 (Cosine) 是指定數字的角。</span><span class="sxs-lookup"><span data-stu-id="b7074-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="b7074-156">以弧度為單位的角度 θ，其滿足下列條件 0 ≤θ≤π</span><span class="sxs-lookup"><span data-stu-id="b7074-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span>  
  
 <span data-ttu-id="b7074-157">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-157">-or-</span></span>  
  
 <span data-ttu-id="b7074-158">如果 <paramref name="d" /> &lt; -1 或 <paramref name="d" /> &gt; 1 或 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />，則為 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-159">傳回的值乘以 180 /<xref:System.Math.PI?displayProperty=nameWithType>從弧度轉換為度。</span><span class="sxs-lookup"><span data-stu-id="b7074-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-160">下列範例會使用<xref:System.Math.Acos%2A>方法，以協助指定 trapezoid 內部角度的計算。</span><span class="sxs-lookup"><span data-stu-id="b7074-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-161">代表正弦函數的數字，其中 <c>d</c> 必須大於或等於 -1，但小於或等於 1。</span><span class="sxs-lookup"><span data-stu-id="b7074-161">A number representing a sine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="b7074-162">傳回正弦函數 (Sine) 是指定數字的角。</span><span class="sxs-lookup"><span data-stu-id="b7074-162">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="b7074-163">以弧度為單位的角度 θ，其滿足下列條件 -π/2 ≤θ≤π/2</span><span class="sxs-lookup"><span data-stu-id="b7074-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span>  
  
 <span data-ttu-id="b7074-164">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-164">-or-</span></span>  
  
 <span data-ttu-id="b7074-165">如果 <paramref name="d" /> &lt; -1 或 <paramref name="d" /> &gt; 1 或 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />，則為 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-166">傳回正值代表以逆時針算起的角度從 x 軸。傳回負值代表順時針旋轉的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="b7074-167">傳回的值乘以 180 /<xref:System.Math.PI?displayProperty=nameWithType>從弧度轉換為度。</span><span class="sxs-lookup"><span data-stu-id="b7074-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-168">下列範例會使用<xref:System.Math.Asin%2A>協助給定 trapezoid 內部角度的計算。</span><span class="sxs-lookup"><span data-stu-id="b7074-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-169">代表正切的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-169">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="b7074-170">傳回正切函數 (Tangent) 是指定數字的角。</span><span class="sxs-lookup"><span data-stu-id="b7074-170">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="b7074-171">以弧度為單位的角度 θ，其滿足下列條件 -π/2 ≤θ≤π/2。</span><span class="sxs-lookup"><span data-stu-id="b7074-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
 <span data-ttu-id="b7074-172">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-172">-or-</span></span>  
  
 <span data-ttu-id="b7074-173">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />，則為 <see cref="F:System.Double.NaN" />；如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NegativeInfinity" />，則為 -π/2，四捨五入為雙精度 (-1.5707963267949)；如果 <paramref name="d" /> 等於 <see cref="F:System.Double.PositiveInfinity" />，則為 π/2，四捨五入為雙精度 (1.5707963267949)。</span><span class="sxs-lookup"><span data-stu-id="b7074-173"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-174">傳回正值代表以逆時針算起的角度從 x 軸。傳回負值代表順時針旋轉的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="b7074-175">傳回的值乘以 180 /<xref:System.Math.PI?displayProperty=nameWithType>從弧度轉換為度。</span><span class="sxs-lookup"><span data-stu-id="b7074-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-176">下列範例會示範如何計算的反正切值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="b7074-177">某個點的 Y 座標。</span><span class="sxs-lookup"><span data-stu-id="b7074-177">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="b7074-178">某個點的 X 座標。</span><span class="sxs-lookup"><span data-stu-id="b7074-178">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="b7074-179">傳回正切函數是兩個指定數字之商數的角。</span><span class="sxs-lookup"><span data-stu-id="b7074-179">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-180">以弧度為單位的角度 θ，其滿足下列條件 -π≤θ≤π，且 tan(θ) = <paramref name="y" /> / <paramref name="x" />，其中 (<paramref name="x" />, <paramref name="y" />) 是笛卡兒平面上的點。</span><span class="sxs-lookup"><span data-stu-id="b7074-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="b7074-181">注意下列各項：</span><span class="sxs-lookup"><span data-stu-id="b7074-181">Observe the following:</span></span>  
  
-   <span data-ttu-id="b7074-182">如果 (<paramref name="x" />, <paramref name="y" />) 在第 1 象限，則 0 &lt; θ &lt; π/2。</span><span class="sxs-lookup"><span data-stu-id="b7074-182">For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
-   <span data-ttu-id="b7074-183">如果 (<paramref name="x" />, <paramref name="y" />) 在第 2 象限，則 π/2 &lt; θ≤π。</span><span class="sxs-lookup"><span data-stu-id="b7074-183">For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
-   <span data-ttu-id="b7074-184">如果 (<paramref name="x" />, <paramref name="y" />) 在第 3 象限，則 -π &lt; θ &lt; -π/2。</span><span class="sxs-lookup"><span data-stu-id="b7074-184">For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
-   <span data-ttu-id="b7074-185">如果 (<paramref name="x" />, <paramref name="y" />) 在第 4 象限，則 -π/2 &lt; θ &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="b7074-185">For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
 <span data-ttu-id="b7074-186">如果是位在象限界限上的點，則傳回值如下：</span><span class="sxs-lookup"><span data-stu-id="b7074-186">For points on the boundaries of the quadrants, the return value is the following:</span></span>  
  
-   <span data-ttu-id="b7074-187">如果 y 是 0，且 x 不是負值，則 θ = 0。</span><span class="sxs-lookup"><span data-stu-id="b7074-187">If y is 0 and x is not negative, θ = 0.</span></span>  
  
-   <span data-ttu-id="b7074-188">如果 y 是 0，且 x 是負值，則 θ = π。</span><span class="sxs-lookup"><span data-stu-id="b7074-188">If y is 0 and x is negative, θ = π.</span></span>  
  
-   <span data-ttu-id="b7074-189">如果 y 是正值，且 x 是 0，則 θ = π/2。</span><span class="sxs-lookup"><span data-stu-id="b7074-189">If y is positive and x is 0, θ = π/2.</span></span>  
  
-   <span data-ttu-id="b7074-190">如果 y 是負值，而 x 是 0，則 θ = -π/2。</span><span class="sxs-lookup"><span data-stu-id="b7074-190">If y is negative and x is 0, θ = -π/2.</span></span>  
  
-   <span data-ttu-id="b7074-191">如果 y 是 0 且 x 是 0，則 θ = 0。</span><span class="sxs-lookup"><span data-stu-id="b7074-191">If y is 0 and x is 0, θ = 0.</span></span>  
  
 <span data-ttu-id="b7074-192">如果 <paramref name="x" /> 或 <paramref name="y" /> 為 <see cref="F:System.Double.NaN" />，或者 <paramref name="x" /> 和 <paramref name="y" /> 為 <see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />，這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-193">傳回值是由 x 軸和向量從原點 (0，0) 開始和結束點、 （x，y） 組成的笛卡兒平面中的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-194">下列範例會示範如何計算反正切值的角度和向量。</span><span class="sxs-lookup"><span data-stu-id="b7074-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="b7074-195">產生的值會顯示在主控台中。</span><span class="sxs-lookup"><span data-stu-id="b7074-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-196">要相乘的第一個數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-196">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="b7074-197">要相乘的第二個數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-197">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="b7074-198">產生兩個 32 位元數字的完整產品。</span><span class="sxs-lookup"><span data-stu-id="b7074-198">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-199">包含指定數字之乘積的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-199">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-200">下列範例示範如何使用<xref:System.Math.BigMul%2A>方法來計算兩個整數值的乘積。</span><span class="sxs-lookup"><span data-stu-id="b7074-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-201">傳回大於或等於指定數字的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-201">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-202">這個方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="b7074-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b7074-203">這種捨入有時稱為捨入朝向正無限大。</span><span class="sxs-lookup"><span data-stu-id="b7074-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-204">十進位數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-204">A decimal number.</span></span></param>
        <summary><span data-ttu-id="b7074-205">傳回大於或等於指定之十進位數字的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="b7074-206">大於或等於 <paramref name="d" /> 的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="b7074-207">請注意，這個方法會傳回 <see cref="T:System.Decimal" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="b7074-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-208">這個方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="b7074-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b7074-209">這種捨入有時稱為捨入朝向正無限大。</span><span class="sxs-lookup"><span data-stu-id="b7074-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="b7074-210">換句話說，如果`d`是正數，是否存在任何小數部分原因`d`捨入至下一個最大整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="b7074-211">如果`d`是負數，捨入作業會導致任何小數部分`d`遭到捨棄。</span><span class="sxs-lookup"><span data-stu-id="b7074-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="b7074-212">這個方法的作業不同於<xref:System.Math.Floor%28System.Decimal%29>方法，支援往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="b7074-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-213">下列範例說明<xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType>方法並對照與<xref:System.Math.Floor%28System.Decimal%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-214">雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="b7074-214">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="b7074-215">傳回大於或等於指定之雙精確度浮點數的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b7074-216">大於或等於 <paramref name="a" /> 的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="b7074-217">如果 <paramref name="a" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則會傳回該值。</span><span class="sxs-lookup"><span data-stu-id="b7074-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="b7074-218">請注意，這個方法會傳回 <see cref="T:System.Double" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="b7074-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-219">這個方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="b7074-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b7074-220">這種捨入有時稱為捨入朝向正無限大。</span><span class="sxs-lookup"><span data-stu-id="b7074-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="b7074-221">換句話說，如果`a`是正數，是否存在任何小數部分原因`a`捨入至下一個最大整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="b7074-222">如果`a`是負數，捨入作業會導致任何小數部分`a`遭到捨棄。</span><span class="sxs-lookup"><span data-stu-id="b7074-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="b7074-223">這個方法的作業不同於<xref:System.Math.Floor%28System.Double%29>方法，支援往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="b7074-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-224">下列範例說明<xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType>方法並對照與<xref:System.Math.Floor%28System.Double%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-224">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-225">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-225">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="b7074-226">傳回指定角的餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-226">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="b7074-227"><paramref name="d" /> 的餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-227">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="b7074-228">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-228">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-229">旋轉的角度， `d`，必須是弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-229">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="b7074-230">Multiply 由 <xref:System.Math.PI?displayProperty=nameWithType> /180 度轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-230">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="b7074-231">可接受值的`d`到大約 9223372036854775295 大約-9223372036854775295 的範圍內。</span><span class="sxs-lookup"><span data-stu-id="b7074-231">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="b7074-232">此範圍以外的值<xref:System.Math.Cos%2A>方法會傳回`d`不變，而不是擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b7074-232">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-233">下列範例會使用<xref:System.Math.Cos%2A>評估某些選取的角度的三角身分識別。</span><span class="sxs-lookup"><span data-stu-id="b7074-233">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-234">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-234">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="b7074-235">傳回指定角的雙曲線餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-235">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="b7074-236"><paramref name="value" />的雙曲線餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-236">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="b7074-237">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則會傳回 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-237">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="b7074-238">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NaN" />，則會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-238">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-239">旋轉的角度， `value`，必須是弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-239">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="b7074-240">Multiply 由 <xref:System.Math.PI?displayProperty=nameWithType> /180 度轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-240">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-241">下列範例會使用<xref:System.Math.Cosh%2A>評估所選值的某些雙曲線身分識別。</span><span class="sxs-lookup"><span data-stu-id="b7074-241">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-242">計算兩個數字的商數，並傳回餘數做為輸出參數。</span><span class="sxs-lookup"><span data-stu-id="b7074-242">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-243">被除數。</span><span class="sxs-lookup"><span data-stu-id="b7074-243">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="b7074-244">除數。</span><span class="sxs-lookup"><span data-stu-id="b7074-244">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="b7074-245">餘數。</span><span class="sxs-lookup"><span data-stu-id="b7074-245">The remainder.</span></span></param>
        <summary><span data-ttu-id="b7074-246">計算兩個 32 位元帶正負號的整數商數，並傳回餘數做為輸出參數。</span><span class="sxs-lookup"><span data-stu-id="b7074-246">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="b7074-247">指定之數值的商數。</span><span class="sxs-lookup"><span data-stu-id="b7074-247">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-248">使用模數作業所計算的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="b7074-248">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-249">下列範例會示範<xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-249">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="b7074-250"><paramref name="b" /> 為零。</span><span class="sxs-lookup"><span data-stu-id="b7074-250"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-251">被除數。</span><span class="sxs-lookup"><span data-stu-id="b7074-251">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="b7074-252">除數。</span><span class="sxs-lookup"><span data-stu-id="b7074-252">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="b7074-253">餘數。</span><span class="sxs-lookup"><span data-stu-id="b7074-253">The remainder.</span></span></param>
        <summary><span data-ttu-id="b7074-254">計算兩個 64 位元帶正負號的整數商數，並傳回餘數做為輸出參數。</span><span class="sxs-lookup"><span data-stu-id="b7074-254">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="b7074-255">指定之數值的商數。</span><span class="sxs-lookup"><span data-stu-id="b7074-255">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-256">使用模數作業所計算的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="b7074-256">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-257">下列範例會示範<xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-257">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="b7074-258"><paramref name="b" /> 為零。</span><span class="sxs-lookup"><span data-stu-id="b7074-258"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b7074-259">代表自然對數底數，由常數 <see langword="e" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="b7074-259">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-260">這個欄位的值是 2.7182818284590452354。</span><span class="sxs-lookup"><span data-stu-id="b7074-260">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-261">下列範例會比較<xref:System.Math.E>從級數計算的值。</span><span class="sxs-lookup"><span data-stu-id="b7074-261">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-262">指定乘冪數的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-262">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="b7074-263">傳回具有指定乘冪數的 <see langword="e" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-263">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="b7074-264">數字 <see langword="e" /> 的 <paramref name="d" /> 次方。</span><span class="sxs-lookup"><span data-stu-id="b7074-264">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="b7074-265">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則傳回該值。</span><span class="sxs-lookup"><span data-stu-id="b7074-265">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="b7074-266">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NegativeInfinity" />，則傳回 0。</span><span class="sxs-lookup"><span data-stu-id="b7074-266">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-267">`e` 是數學常數，其值是大約 2.71828。</span><span class="sxs-lookup"><span data-stu-id="b7074-267">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="b7074-268">使用<xref:System.Math.Pow%2A>計算其他基數的方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-268">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="b7074-269"><xref:System.Math.Exp%2A> 是的反向<xref:System.Math.Log%2A>。</span><span class="sxs-lookup"><span data-stu-id="b7074-269"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-270">下列範例會使用<xref:System.Math.Exp%2A>評估特定指數和對數的身分識別選取的值。</span><span class="sxs-lookup"><span data-stu-id="b7074-270">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-271">傳回小於或等於指定數字的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-271">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-272">這個方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="b7074-272">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b7074-273">這種捨入有時稱為往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="b7074-273">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-274">十進位數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-274">A decimal number.</span></span></param>
        <summary><span data-ttu-id="b7074-275">傳回小於或等於指定十進位數字的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-275">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="b7074-276">小於或等於 <paramref name="d" /> 的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-276">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="b7074-277">請注意，方法會傳回 <see cref="T:System.Decimal" /> 類型的整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-277">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-278">這個方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="b7074-278">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b7074-279">這種捨入有時稱為往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="b7074-279">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="b7074-280">換句話說，如果`d`是正數，任何小數會截斷。</span><span class="sxs-lookup"><span data-stu-id="b7074-280">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="b7074-281">如果`d`是負數，任何小數的存在可讓它四捨五入到最小的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-281">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="b7074-282">這個方法的作業不同於<xref:System.Math.Ceiling%2A>方法，支援捨入朝向正無限大。</span><span class="sxs-lookup"><span data-stu-id="b7074-282">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-283">下列範例說明<xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType>方法並對照與<xref:System.Math.Ceiling%28System.Decimal%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-283">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-284">雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="b7074-284">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="b7074-285">傳回小於或等於指定雙精確度浮點數的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-285">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b7074-286">小於或等於 <paramref name="d" /> 的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-286">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="b7074-287">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則會傳回該值。</span><span class="sxs-lookup"><span data-stu-id="b7074-287">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-288">這個方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="b7074-288">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b7074-289">這種捨入有時稱為往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="b7074-289">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="b7074-290">換句話說，如果`d`是正數，任何小數會截斷。</span><span class="sxs-lookup"><span data-stu-id="b7074-290">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="b7074-291">如果`d`是負數，任何小數的存在可讓它四捨五入到最小的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-291">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="b7074-292">這個方法的作業不同於<xref:System.Math.Ceiling%2A>方法，支援捨入朝向正無限大。</span><span class="sxs-lookup"><span data-stu-id="b7074-292">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-293">下列範例說明<xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType>方法並對照與<xref:System.Math.Ceiling%28System.Double%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-293">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b7074-294">被除數。</span><span class="sxs-lookup"><span data-stu-id="b7074-294">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="b7074-295">除數。</span><span class="sxs-lookup"><span data-stu-id="b7074-295">A divisor.</span></span></param>
        <summary><span data-ttu-id="b7074-296">傳回指定數字除以另一個指定數字所得的餘數。</span><span class="sxs-lookup"><span data-stu-id="b7074-296">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="b7074-297">等於 <paramref name="x" /> - ( <paramref name="y" /> Q) 的數字，其中 Q 是捨入至最接近整數的 <paramref name="x" /> / <paramref name="y" /> 商數 (如果 <paramref name="x" /> / <paramref name="y" /> 是兩個整數的中間數，則會傳回偶數整數)。</span><span class="sxs-lookup"><span data-stu-id="b7074-297">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
 <span data-ttu-id="b7074-298">如果 <paramref name="x" /> - ( <paramref name="y" /> Q) 為零，則在 <paramref name="x" /> 為正時傳回值 +0，或在 <paramref name="x" /> 為負時傳回 -0。</span><span class="sxs-lookup"><span data-stu-id="b7074-298">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
 <span data-ttu-id="b7074-299">如果 <paramref name="y" /> = 0，則傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-299">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-300">這項作業符合定義區段 5.1 的 ANSI/IEEE Std 754-1985; 中的其餘部分作業IEEE 標準二進位浮點算術運算。美國電機暨電子工程師學會，Inc;1985。</span><span class="sxs-lookup"><span data-stu-id="b7074-300">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="b7074-301"><xref:System.Math.IEEERemainder%2A>方法不是與 模數運算子相同。</span><span class="sxs-lookup"><span data-stu-id="b7074-301">The <xref:System.Math.IEEERemainder%2A> method is not the same as the modulus operator.</span></span> <span data-ttu-id="b7074-302">雖然兩者都傳回餘數相除之後，他們使用的公式會不同。</span><span class="sxs-lookup"><span data-stu-id="b7074-302">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="b7074-303">公式<xref:System.Math.IEEERemainder%2A>方法是：</span><span class="sxs-lookup"><span data-stu-id="b7074-303">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="b7074-304">相反地，模數運算子公式為：</span><span class="sxs-lookup"><span data-stu-id="b7074-304">In contrast, the formula for the modulus operator is:</span></span>  
  
```  
Modulus = (Math.Abs(dividend) - (Math.Abs(divisor) *   
          (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
          Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="b7074-305">下列範例會對照所傳回的其餘部分<xref:System.Math.IEEERemainder%2A>模數除法運算子所傳回的其餘部分的方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-305">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the modulus division operator.</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-306">傳回指定數字的對數。</span><span class="sxs-lookup"><span data-stu-id="b7074-306">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-307">要找出其對數的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-307">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="b7074-308">傳回指定數字的自然 (底數為 <see langword="e" />) 對數。</span><span class="sxs-lookup"><span data-stu-id="b7074-308">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="b7074-309">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="b7074-309">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="b7074-310"><list type="table"><listheader><term><paramref name="d" /> 參數</span><span class="sxs-lookup"><span data-stu-id="b7074-310"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="b7074-311"></term><description> 傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-311"></term><description> Return value</span></span>  
  
 <span data-ttu-id="b7074-312"></description></listheader><item><term> 正</span><span class="sxs-lookup"><span data-stu-id="b7074-312"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="b7074-313"></term><description><paramref name="d" /> 的自然對數，也就是 ln <paramref name="d" /> 或 log e <paramref name="d" /></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="b7074-313"></term><description> The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="b7074-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> 負</span><span class="sxs-lookup"><span data-stu-id="b7074-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="b7074-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> 等於 <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> 等於 <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="b7074-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-316">參數`d`指定為基底 10 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-316">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-317">下列範例說明<xref:System.Math.Log%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-317">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-318">要找出其對數的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-318">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="b7074-319">對數的底數。</span><span class="sxs-lookup"><span data-stu-id="b7074-319">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="b7074-320">傳回指定底數中指定數字的對數。</span><span class="sxs-lookup"><span data-stu-id="b7074-320">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="b7074-321">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="b7074-321">One of the values in the following table.</span></span> <span data-ttu-id="b7074-322">(+Infinity 代表 <see cref="F:System.Double.PositiveInfinity" />、-Infinity 代表 <see cref="F:System.Double.NegativeInfinity" />，NaN 則代表 <see cref="F:System.Double.NaN" />。)</span><span class="sxs-lookup"><span data-stu-id="b7074-322">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span>  
  
 <span data-ttu-id="b7074-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> 傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> Return value</span></span>  
  
 <span data-ttu-id="b7074-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="b7074-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span></span>  
  
 <span data-ttu-id="b7074-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) -或-(<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="b7074-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span>  
  
 <span data-ttu-id="b7074-326"></description><description> lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="b7074-326"></description><description> lognewBase(a)</span></span>  
  
 <span data-ttu-id="b7074-327"></description></item><item><term><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="b7074-327"></description></item><item><term><paramref name="a" />&lt; 0</span></span>  
  
 <span data-ttu-id="b7074-328"></term><description> (任何值)</span><span class="sxs-lookup"><span data-stu-id="b7074-328"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="b7074-329"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-329"></description><description> NaN</span></span>  
  
 <span data-ttu-id="b7074-330"></description></item><item><term> (任何值)</span><span class="sxs-lookup"><span data-stu-id="b7074-330"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="b7074-331"></term><description><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="b7074-331"></term><description><paramref name="newBase" />&lt; 0</span></span>  
  
 <span data-ttu-id="b7074-332"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-332"></description><description> NaN</span></span>  
  
 <span data-ttu-id="b7074-333"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="b7074-333"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="b7074-334"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="b7074-334"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="b7074-335"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-335"></description><description> NaN</span></span>  
  
 <span data-ttu-id="b7074-336"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="b7074-336"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="b7074-337"></term><description><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-337"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="b7074-338"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-338"></description><description> NaN</span></span>  
  
 <span data-ttu-id="b7074-339"></description></item><item><term><paramref name="a" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-339"></description></item><item><term><paramref name="a" /> = NaN</span></span>  
  
 <span data-ttu-id="b7074-340"></term><description> (任何值)</span><span class="sxs-lookup"><span data-stu-id="b7074-340"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="b7074-341"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-341"></description><description> NaN</span></span>  
  
 <span data-ttu-id="b7074-342"></description></item><item><term> (任何值)</span><span class="sxs-lookup"><span data-stu-id="b7074-342"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="b7074-343"></term><description><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-343"></term><description><paramref name="newBase" /> = NaN</span></span>  
  
 <span data-ttu-id="b7074-344"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-344"></description><description> NaN</span></span>  
  
 <span data-ttu-id="b7074-345"></description></item><item><term> (任何值)</span><span class="sxs-lookup"><span data-stu-id="b7074-345"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="b7074-346"></term><description><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="b7074-346"></term><description><paramref name="newBase" /> = 1</span></span>  
  
 <span data-ttu-id="b7074-347"></description><description> NaN</span><span class="sxs-lookup"><span data-stu-id="b7074-347"></description><description> NaN</span></span>  
  
 <span data-ttu-id="b7074-348"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="b7074-348"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="b7074-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="b7074-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="b7074-350"></description><description> +Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-350"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="b7074-351"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="b7074-351"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="b7074-352"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="b7074-352"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="b7074-353"></description><description> -Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-353"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="b7074-354"></description></item><item><term><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-354"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="b7074-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="b7074-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="b7074-356"></description><description> -Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-356"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="b7074-357"></description></item><item><term><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-357"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="b7074-358"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="b7074-358"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="b7074-359"></description><description> +Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-359"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="b7074-360"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="b7074-360"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="b7074-361"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="b7074-361"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="b7074-362"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-362"></description><description> 0</span></span>  
  
 <span data-ttu-id="b7074-363"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="b7074-363"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="b7074-364"></term><description><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="b7074-364"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="b7074-365"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-365"></description><description> 0</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-366">下列範例會使用<xref:System.Math.Log%2A>評估所選值的某些對數身分識別。</span><span class="sxs-lookup"><span data-stu-id="b7074-366">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-367">要找出其對數的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-367">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="b7074-368">傳回指定數字的以 10 為底數的對數。</span><span class="sxs-lookup"><span data-stu-id="b7074-368">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="b7074-369">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="b7074-369">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="b7074-370"><list type="table"><listheader><term><paramref name="d" /> 參數</span><span class="sxs-lookup"><span data-stu-id="b7074-370"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="b7074-371"></term><description> 傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-371"></term><description> Return value</span></span>  
  
 <span data-ttu-id="b7074-372"></description></listheader><item><term> 正</span><span class="sxs-lookup"><span data-stu-id="b7074-372"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="b7074-373"></term><description><paramref name="d" /> 的底數為 10 的對數，也就是 log 10<paramref name="d" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-373"></term><description> The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 <span data-ttu-id="b7074-374"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="b7074-374"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="b7074-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> 負</span><span class="sxs-lookup"><span data-stu-id="b7074-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="b7074-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> 等於 <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> 等於 <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="b7074-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-377">參數`d`指定為基底 10 的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-377">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-378">下列範例會使用<xref:System.Math.Log10%2A>方法以傳回所選值的基底 10 對數。</span><span class="sxs-lookup"><span data-stu-id="b7074-378">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-379">傳回兩個指定數字中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-379">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-380">要比較的兩個 8 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-380">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-381">要比較的兩個 8 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-381">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-382">傳回兩個 8 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-382">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-383">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-383">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-384">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-384">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-385">要比較的兩個十進位數字的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-385">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-386">要比較的兩個十進位數字中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-386">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-387">傳回兩個十進位數字中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-387">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-388">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-388">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-389">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-389">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-390">要比較的兩個雙精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-390">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-391">要比較的兩個雙精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-391">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-392">傳回兩個雙精確度浮點數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-392">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-393">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-393">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="b7074-394">如果 <paramref name="val1" />、<paramref name="val2" /> 或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Double.NaN" />，則會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-394">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-395">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-395">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-396">要比較的兩個 16 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-396">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-397">要比較的兩個 16 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-397">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-398">傳回兩個 16 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-398">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-399">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-399">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-400">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-400">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-401">要比較的兩個 32 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-401">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-402">要比較的兩個 32 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-402">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-403">傳回兩個 32 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-403">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-404">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-404">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-405">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-405">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-406">要比較的兩個 64 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-406">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-407">要比較的兩個 64 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-407">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-408">傳回兩個 64 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-408">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-409">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-409">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-410">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-410">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-411">要比較的兩個 8 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-411">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-412">要比較的兩個 8 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-412">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-413">傳回兩個 8 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-413">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-414">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-414">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-415">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-415">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-416">要比較的兩個單精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-416">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-417">要比較的兩個單精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-417">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-418">傳回兩個單精確度浮點數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-418">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-419">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-419">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="b7074-420">如果 <paramref name="val1" /> 或 <paramref name="val2" />，或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Single.NaN" />，則會傳回 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-420">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-421">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-421">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-422">要比較的兩個 16 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-422">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-423">要比較的兩個 16 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-423">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-424">傳回兩個 16 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-424">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-425">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-425">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-426">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-426">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-427">要比較的兩個 32 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-427">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-428">要比較的兩個 32 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-428">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-429">傳回兩個 32 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-429">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-430">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-430">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-431">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-431">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-432">要比較的兩個 64 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-432">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-433">要比較的兩個 64 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-433">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-434">傳回兩個 64 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-434">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-435">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-435">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-436">下列範例示範如何使用<xref:System.Math.Max%2A>方法來傳回並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-436">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-437">傳回兩個數字中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-437">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-438">要比較的兩個 8 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-438">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-439">要比較的兩個 8 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-439">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-440">傳回兩個 8 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-440">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-441">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-441">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-442">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-442">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-443">要比較的兩個十進位數字的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-443">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-444">要比較的兩個十進位數字中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-444">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-445">傳回兩個十進位數字中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-445">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-446">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-446">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-447">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-447">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-448">要比較的兩個雙精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-448">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-449">要比較的兩個雙精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-449">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-450">傳回兩個雙精確度浮點數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-450">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-451">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-451">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="b7074-452">如果 <paramref name="val1" />、<paramref name="val2" /> 或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Double.NaN" />，則會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-452">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-453">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-453">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-454">要比較的兩個 16 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-454">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-455">要比較的兩個 16 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-455">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-456">傳回兩個 16 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-456">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-457">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-457">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-458">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-458">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-459">要比較的兩個 32 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-459">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-460">要比較的兩個 32 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-460">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-461">傳回兩個 32 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-461">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-462">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-462">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-463">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-463">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-464">要比較的兩個 64 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-464">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-465">要比較的兩個 64 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-465">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-466">傳回兩個 64 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-466">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-467">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-467">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-468">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-468">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-469">要比較的兩個 8 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-469">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-470">要比較的兩個 8 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-470">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-471">傳回兩個 8 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-471">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-472">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-472">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-473">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-473">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-474">要比較的兩個單精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-474">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-475">要比較的兩個單精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-475">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-476">傳回兩個單精確度浮點數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-476">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-477">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-477">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="b7074-478">如果 <paramref name="val1" />、<paramref name="val2" /> 或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Single.NaN" />，則會傳回 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-478">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-479">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-479">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-480">要比較的兩個 16 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-480">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-481">要比較的兩個 16 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-481">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-482">傳回兩個 16 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-482">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-483">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-483">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-484">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-484">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-485">要比較的兩個 32 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-485">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-486">要比較的兩個 32 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-486">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-487">傳回兩個 32 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-487">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-488">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-488">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-489">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-489">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="b7074-490">要比較的兩個 64 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-490">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="b7074-491">要比較的兩個 64 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="b7074-491">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="b7074-492">傳回兩個 64 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="b7074-492">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="b7074-493">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="b7074-493">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-494">下列範例示範如何使用<xref:System.Math.Min%2A>方法來傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-494">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b7074-495">代表圓周率，由常數 π 指定。</span><span class="sxs-lookup"><span data-stu-id="b7074-495">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-496">這個欄位的值是 3.14159265358979323846。</span><span class="sxs-lookup"><span data-stu-id="b7074-496">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-497">下列範例會使用<xref:System.Math.PI>協助給定 trapezoid 內部角度的計算。</span><span class="sxs-lookup"><span data-stu-id="b7074-497">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b7074-498">雙精確度浮點數，做為乘冪數。</span><span class="sxs-lookup"><span data-stu-id="b7074-498">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="b7074-499">雙精確度浮點數，用來指定乘冪數。</span><span class="sxs-lookup"><span data-stu-id="b7074-499">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="b7074-500">傳回具有指定乘冪數的指定數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-500">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="b7074-501">數字 <paramref name="x" /> 的 <paramref name="y" /> 次方。</span><span class="sxs-lookup"><span data-stu-id="b7074-501">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-502">下表指出傳回的值，指定不同的值的範圍時`x`和`y`參數。</span><span class="sxs-lookup"><span data-stu-id="b7074-502">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="b7074-503">如需詳細資訊，請參閱<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>、<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>和<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b7074-503">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="b7074-504">參數</span><span class="sxs-lookup"><span data-stu-id="b7074-504">Parameters</span></span>|<span data-ttu-id="b7074-505">傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-505">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="b7074-506">`x` 或`y`  =  `NaN`。</span><span class="sxs-lookup"><span data-stu-id="b7074-506">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="b7074-507">`x` = 以外的任何值`NaN`;`y` = 0。</span><span class="sxs-lookup"><span data-stu-id="b7074-507">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="b7074-508">1</span><span class="sxs-lookup"><span data-stu-id="b7074-508">1</span></span>|  
|<span data-ttu-id="b7074-509">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="b7074-509">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="b7074-510">0</span><span class="sxs-lookup"><span data-stu-id="b7074-510">0</span></span>|  
|<span data-ttu-id="b7074-511">`x` = `NegativeInfinity`;`y`奇數的正整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-511">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="b7074-512">`x` = `NegativeInfinity`;`y`是正數，但不是奇數整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-512">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="b7074-513">`x` < 0，但不是`NegativeInfinity`;`y`不是整數， `NegativeInfinity`，或`PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="b7074-513">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="b7074-514">`x` =-1;`y`  =  `NegativeInfinity`或`PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="b7074-514">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="b7074-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="b7074-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="b7074-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="b7074-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="b7074-517">0</span><span class="sxs-lookup"><span data-stu-id="b7074-517">0</span></span>|  
|<span data-ttu-id="b7074-518">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="b7074-518">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="b7074-519">0</span><span class="sxs-lookup"><span data-stu-id="b7074-519">0</span></span>|  
|<span data-ttu-id="b7074-520">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="b7074-520">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="b7074-521">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="b7074-521">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="b7074-522">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="b7074-522">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="b7074-523">0</span><span class="sxs-lookup"><span data-stu-id="b7074-523">0</span></span>|  
|<span data-ttu-id="b7074-524">`x` = 1。`y`是以外的任何值`NaN`。</span><span class="sxs-lookup"><span data-stu-id="b7074-524">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="b7074-525">1</span><span class="sxs-lookup"><span data-stu-id="b7074-525">1</span></span>|  
|<span data-ttu-id="b7074-526">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="b7074-526">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="b7074-527">0</span><span class="sxs-lookup"><span data-stu-id="b7074-527">0</span></span>|  
|<span data-ttu-id="b7074-528">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="b7074-528">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="b7074-529">下列範例會使用<xref:System.Math.Pow%2A>方法來計算所產生的引發 2 乘冪，範圍從 0 到 32 的值。</span><span class="sxs-lookup"><span data-stu-id="b7074-529">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-530">將值四捨五入為最接近的整數或是指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-530">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-531">本節內容：</span><span class="sxs-lookup"><span data-stu-id="b7074-531">In this section:</span></span>  
  
 <span data-ttu-id="b7074-532">[多載的方法的語法](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="b7074-532">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="b7074-533">[參數](#Params) </span><span class="sxs-lookup"><span data-stu-id="b7074-533">[Parameters](#Params) </span></span>  
 <span data-ttu-id="b7074-534">[傳回值](#Returns) </span><span class="sxs-lookup"><span data-stu-id="b7074-534">[Return value](#Returns) </span></span>  
 <span data-ttu-id="b7074-535">[例外狀況](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="b7074-535">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="b7074-536">[沒有呼叫的方法？](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="b7074-536">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="b7074-537">[中間值和捨入慣例](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="b7074-537">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="b7074-538">[捨入和有效位數](#Precision) </span><span class="sxs-lookup"><span data-stu-id="b7074-538">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="b7074-539">[四捨五入和單精確度浮點值](#Single) </span><span class="sxs-lookup"><span data-stu-id="b7074-539">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="b7074-540">例如：</span><span class="sxs-lookup"><span data-stu-id="b7074-540">Examples:</span></span>   
 [<span data-ttu-id="b7074-541">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="b7074-541">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="b7074-542">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="b7074-542">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="b7074-543">Math.Round(Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="b7074-543">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="b7074-544">Math.Round(Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="b7074-544">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="b7074-545">Math.Round(Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="b7074-545">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="b7074-546">Math.Round(Double, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="b7074-546">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 [<span data-ttu-id="b7074-547">Math.Round(Decimal, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="b7074-547">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
 [<span data-ttu-id="b7074-548">Math.Round(Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="b7074-548">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="b7074-549">版本資訊</span><span class="sxs-lookup"><span data-stu-id="b7074-549">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="b7074-550">多載的方法的語法</span><span class="sxs-lookup"><span data-stu-id="b7074-550">Overloaded method syntax</span></span>  
 <span data-ttu-id="b7074-551">如需有關選擇最多載的其他指引，請參閱[沒有呼叫的方法？](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="b7074-551">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="b7074-552">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-552">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="b7074-553">十進位將值四捨五入為最接近的整數，並會四捨五入至最接近的偶數的中點值 ([範例](#Round1_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-553">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="b7074-554">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-554">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="b7074-555">雙精確度浮點數捨入為最接近的整數，並會四捨五入至最接近的偶數的中點值 ([範例](#Round2_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-555">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="b7074-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="b7074-557">將指定的數字的小數數字，十進位值四捨五入，並會四捨五入至最接近的偶數的中點值 ([範例](#Round3_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-557">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="b7074-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="b7074-559">雙精確度浮點數捨入為指定的數字的小數數字，並會四捨五入至最接近的偶數的中點值 ([範例](#Round4_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-559">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="b7074-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="b7074-561">會四捨五入為最接近的整數，十進位值，並使用指定的捨入慣例的中點值 ([範例](#Round5_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-561">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="b7074-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="b7074-563">雙精確度浮點數捨入為最接近的整數，並使用指定的捨入慣例的中點值 ([範例](#Round6_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-563">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="b7074-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="b7074-565">將指定的數字的小數數字，十進位值四捨五入，並使用指定的捨入慣例的中點值 ([範例](#Round7_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-565">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="b7074-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="b7074-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="b7074-567">雙精確度浮點數捨入為指定的數字的小數數字，並使用指定的捨入慣例的中點值 ([範例](#Round8_Example))。</span><span class="sxs-lookup"><span data-stu-id="b7074-567">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="b7074-568">參數</span><span class="sxs-lookup"><span data-stu-id="b7074-568">Parameters</span></span>  
 <span data-ttu-id="b7074-569">這是完整的參數清單<xref:System.Math.Round%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-569">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="b7074-570">每個多載所使用的參數，請參閱上述的多載語法。</span><span class="sxs-lookup"><span data-stu-id="b7074-570">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="b7074-571">參數</span><span class="sxs-lookup"><span data-stu-id="b7074-571">Parameter</span></span>|<span data-ttu-id="b7074-572">類型</span><span class="sxs-lookup"><span data-stu-id="b7074-572">Type</span></span>|<span data-ttu-id="b7074-573">描述</span><span class="sxs-lookup"><span data-stu-id="b7074-573">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="b7074-574">要四捨五入的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-574">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="b7074-575">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-575">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="b7074-576">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="b7074-576">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="b7074-577">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-577">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="b7074-578">傳回值中小數點後數字的數目。</span><span class="sxs-lookup"><span data-stu-id="b7074-578">The number of fractional digits in the return value.</span></span> <span data-ttu-id="b7074-579">如<xref:System.Decimal>值，它的範圍從 0 至 28。</span><span class="sxs-lookup"><span data-stu-id="b7074-579">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="b7074-580">如<xref:System.Double>值，它的範圍從 0 到 15。</span><span class="sxs-lookup"><span data-stu-id="b7074-580">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="b7074-581">請注意，15 整數和小數的數字所支援的最大數目<xref:System.Double>型別。</span><span class="sxs-lookup"><span data-stu-id="b7074-581">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="b7074-582">預設值： 0，這會四捨五入到整數</span><span class="sxs-lookup"><span data-stu-id="b7074-582">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="b7074-583">旗標，指定要用於中間值捨入的慣例。</span><span class="sxs-lookup"><span data-stu-id="b7074-583">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="b7074-584">請參閱[中間值和捨入慣例](#Midpoint)。</span><span class="sxs-lookup"><span data-stu-id="b7074-584">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="b7074-585">預設值： <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b7074-585">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="b7074-586">傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-586">Return value</span></span>  
 <span data-ttu-id="b7074-587">類型：<xref:System.Decimal>或<xref:System.Double>，取決於要捨入值的型別。</span><span class="sxs-lookup"><span data-stu-id="b7074-587">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="b7074-588">數值為相同型別的`d`， `a`，或`value`，但捨入為整數或十進位數字的指定數目。</span><span class="sxs-lookup"><span data-stu-id="b7074-588">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="b7074-589">請參閱[中間值和捨入慣例](#Midpoint)的中點值的數字四捨五入的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="b7074-589">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="b7074-590">捨入中間點的值，當此捨入的演算法會執行等號比較測試。</span><span class="sxs-lookup"><span data-stu-id="b7074-590">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="b7074-591">二進位表示法和浮點格式的有效位數的問題，因為方法所傳回的值可以是未預期的。</span><span class="sxs-lookup"><span data-stu-id="b7074-591">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="b7074-592">如需詳細資訊，請參閱[數字捨入和精確度](#Precision)。</span><span class="sxs-lookup"><span data-stu-id="b7074-592">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="b7074-593">如果使用多載<xref:System.Double>參數以呼叫<xref:System.Double.NaN?displayProperty=nameWithType>，方法會傳回<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b7074-593">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b7074-594">如果使用呼叫<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>或<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>，方法會傳回<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>或<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>分別。</span><span class="sxs-lookup"><span data-stu-id="b7074-594">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="b7074-595">例外狀況</span><span class="sxs-lookup"><span data-stu-id="b7074-595">Exceptions</span></span>  
  
|<span data-ttu-id="b7074-596">例外</span><span class="sxs-lookup"><span data-stu-id="b7074-596">Exception</span></span>|<span data-ttu-id="b7074-597">條件</span><span class="sxs-lookup"><span data-stu-id="b7074-597">Condition</span></span>|<span data-ttu-id="b7074-598">所擲回</span><span class="sxs-lookup"><span data-stu-id="b7074-598">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="b7074-599">結果超出範圍<xref:System.Decimal>型別。</span><span class="sxs-lookup"><span data-stu-id="b7074-599">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="b7074-600">`decimals` 小於 0 或大於 28。</span><span class="sxs-lookup"><span data-stu-id="b7074-600">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="b7074-601">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-601">-or-</span></span><br /><br /> <span data-ttu-id="b7074-602">`digits` 小於 0 或大於 15。</span><span class="sxs-lookup"><span data-stu-id="b7074-602">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="b7074-603">`mode` 不是 <xref:System.MidpointRounding> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="b7074-603">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="b7074-604">沒有呼叫的方法？</span><span class="sxs-lookup"><span data-stu-id="b7074-604">Which method do I call?</span></span>  
  
|<span data-ttu-id="b7074-605">以</span><span class="sxs-lookup"><span data-stu-id="b7074-605">To</span></span>|<span data-ttu-id="b7074-606">Call</span><span class="sxs-lookup"><span data-stu-id="b7074-606">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="b7074-607">使用四捨五入為最接近的慣例四捨五入成整數的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-607">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="b7074-608">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-608">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="b7074-609">透過使用指定為整數的數字無條件捨入慣例。</span><span class="sxs-lookup"><span data-stu-id="b7074-609">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="b7074-610">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-610">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="b7074-611">使用四捨五入為最接近的慣例四捨五入到指定的小數位數的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-611">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="b7074-612">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-612">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="b7074-613">指定的數目，透過使用指定的小數位數的數字無條件捨入慣例。</span><span class="sxs-lookup"><span data-stu-id="b7074-613">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="b7074-614">-或-</span><span class="sxs-lookup"><span data-stu-id="b7074-614">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="b7074-615">Round<xref:System.Single>值到指定的數字，藉由指定捨入慣例和最小化遺失有效位數的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-615">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="b7074-616">轉換<xref:System.Single>至<xref:System.Decimal>呼叫<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>。</span><span class="sxs-lookup"><span data-stu-id="b7074-616">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="b7074-617">將數值四捨五入到指定的小數位數降至最低的中點數值四捨五入的精確度的問題。</span><span class="sxs-lookup"><span data-stu-id="b7074-617">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="b7074-618">呼叫實作 「 大於或大約等於"比較的捨入方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-618">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="b7074-619">請參閱[數字捨入和精確度](#Precision)。</span><span class="sxs-lookup"><span data-stu-id="b7074-619">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="b7074-620">四捨五入成整數的小數值大於小數的值。</span><span class="sxs-lookup"><span data-stu-id="b7074-620">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="b7074-621">例如，四捨五入至 4 3.1。</span><span class="sxs-lookup"><span data-stu-id="b7074-621">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="b7074-622">Round 小數的值為整數，小於小數的值。</span><span class="sxs-lookup"><span data-stu-id="b7074-622">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="b7074-623">例如，四捨五入 3.9 到 3。</span><span class="sxs-lookup"><span data-stu-id="b7074-623">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="b7074-624">中間值和捨入慣例</span><span class="sxs-lookup"><span data-stu-id="b7074-624">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="b7074-625">捨入牽涉到將具有指定的有效位數的數值轉換成最接近的值較少精確度。</span><span class="sxs-lookup"><span data-stu-id="b7074-625">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="b7074-626">例如，您可以使用<xref:System.Math.Round%28System.Double%29>要捨入到 3.0 3.4 值的方法和<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>要捨入至 3.58 3.579 值的方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-626">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="b7074-627">在的中點值，結果中的最小顯著性數字後的值會是精確之間的一半兩個數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-627">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="b7074-628">例如，3.47500 是中間值，如果要進位的兩個小數位數，而且 7.500 是中間值，如果是要四捨五入成整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-628">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="b7074-629">在這些情況下，最接近的值無法輕鬆地識別沒有捨入的慣例。</span><span class="sxs-lookup"><span data-stu-id="b7074-629">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="b7074-630"><xref:System.Math.Round%2A>方法支援兩種捨入慣例來處理中點值：</span><span class="sxs-lookup"><span data-stu-id="b7074-630">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="b7074-631">**背離零四捨五入**</span><span class="sxs-lookup"><span data-stu-id="b7074-631">**Rounding away from zero**</span></span>  
 <span data-ttu-id="b7074-632">中間點的值會捨去遠離零的下一個編號。</span><span class="sxs-lookup"><span data-stu-id="b7074-632">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="b7074-633">比方說，3.75 捨入至 3.8 3.85 四捨五入到 3.9，-3.75 捨入至-3.8，和-3.85 捨入至-3.9。</span><span class="sxs-lookup"><span data-stu-id="b7074-633">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="b7074-634">這種形式的捨入由<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列舉成員。</span><span class="sxs-lookup"><span data-stu-id="b7074-634">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b7074-635">背離零四捨五入是最廣泛已知的形式的捨入。</span><span class="sxs-lookup"><span data-stu-id="b7074-635">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="b7074-636">**四捨五入為最接近，或成雙**</span><span class="sxs-lookup"><span data-stu-id="b7074-636">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="b7074-637">中間值會四捨五入至最接近的偶數。</span><span class="sxs-lookup"><span data-stu-id="b7074-637">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="b7074-638">例如，3.75 和 3.85 四捨五入 3.8 與-3.75 和-3.85 捨入-3.8。</span><span class="sxs-lookup"><span data-stu-id="b7074-638">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="b7074-639">這種形式的捨入由<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列舉成員。</span><span class="sxs-lookup"><span data-stu-id="b7074-639">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b7074-640">四捨五入為最接近是捨入財務和統計作業中使用的標準形式。</span><span class="sxs-lookup"><span data-stu-id="b7074-640">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="b7074-641">其符合標準 ieee-754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="b7074-641">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b7074-642">多個的捨入運算中使用時，它會減少因一致四捨五入單向中的點值捨入錯誤。</span><span class="sxs-lookup"><span data-stu-id="b7074-642">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="b7074-643">在某些情況下，此捨入錯誤可能十分顯著。</span><span class="sxs-lookup"><span data-stu-id="b7074-643">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="b7074-644">下列範例說明可能的結果一致四捨五入單向中的點值的偏差。</span><span class="sxs-lookup"><span data-stu-id="b7074-644">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="b7074-645">此範例會計算的陣列，則為 true 平均值<xref:System.Decimal>值，然後再計算平均數，當陣列中的值會捨入所使用的兩個慣例。</span><span class="sxs-lookup"><span data-stu-id="b7074-645">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="b7074-646">在此範例中，則為 true 的平均差和捨入為最接近時，所造成的平均值都相同。</span><span class="sxs-lookup"><span data-stu-id="b7074-646">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="b7074-647">不過，背離零四捨五入時結果的平均值不同.05 （或 3.6%），則為 true 的平均值。</span><span class="sxs-lookup"><span data-stu-id="b7074-647">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="b7074-648">根據預設，<xref:System.Math.Round%2A>方法會使用四捨五入為最接近的慣例。</span><span class="sxs-lookup"><span data-stu-id="b7074-648">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="b7074-649">下表列出的多載<xref:System.Math.Round%2A>方法和捨入慣例都是使用。</span><span class="sxs-lookup"><span data-stu-id="b7074-649">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="b7074-650">多載</span><span class="sxs-lookup"><span data-stu-id="b7074-650">Overload</span></span>|<span data-ttu-id="b7074-651">捨入慣例</span><span class="sxs-lookup"><span data-stu-id="b7074-651">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="b7074-652">由`mode`參數。</span><span class="sxs-lookup"><span data-stu-id="b7074-652">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="b7074-653">由`mode`參數</span><span class="sxs-lookup"><span data-stu-id="b7074-653">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="b7074-654">由`mode`參數</span><span class="sxs-lookup"><span data-stu-id="b7074-654">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="b7074-655">由`mode`參數</span><span class="sxs-lookup"><span data-stu-id="b7074-655">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="b7074-656">捨入和有效位數</span><span class="sxs-lookup"><span data-stu-id="b7074-656">Rounding and precision</span></span>  
 <span data-ttu-id="b7074-657">若要判斷是否捨入運算牽涉到中點值，<xref:System.Math.Round%2A>方法乘以 10 捨入的原始值<sup>n</sup>，其中*n*是需要的毫秒數在傳回的值中的數字，然後決定剩餘的小數部分的值是否大於或等於.5。</span><span class="sxs-lookup"><span data-stu-id="b7074-657">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="b7074-658">這是稍有不同的 「 為等號比較測試 」 區段中的測試是否相等，以及討論<xref:System.Double>因為浮點格式的問題與二進位參考主題，具有浮點值是否相等的測試會有問題表示和有效位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-658">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="b7074-659">這表示不能在向上四捨五入為略小於.5 （因為遺失有效位數） 的數字的小數部分。</span><span class="sxs-lookup"><span data-stu-id="b7074-659">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="b7074-660">下面範例會說明此問題。</span><span class="sxs-lookup"><span data-stu-id="b7074-660">The following example illustrates the problem.</span></span> <span data-ttu-id="b7074-661">重複，它會新增至 11.0.1 並四捨五入到最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-661">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="b7074-662">捨入的慣例，不論 11.5 應該捨入 12。</span><span class="sxs-lookup"><span data-stu-id="b7074-662">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="b7074-663">不過，此範例將示範的輸出，則沒有。</span><span class="sxs-lookup"><span data-stu-id="b7074-663">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="b7074-664">此範例會使用"R"[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)顯示浮點值的完整有效位數，並顯示来四捨五入的值已遺失有效位數，期間重複新增項目，和其值實際上是11.499999999999998。</span><span class="sxs-lookup"><span data-stu-id="b7074-664">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="b7074-665">因為.499999999999998 小於.5，值不會四捨五入至下一個最大整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-665">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="b7074-666">此範例也示範，因為這個問題不會發生在我們只會指派到的常數值 11.5<xref:System.Double>變數。</span><span class="sxs-lookup"><span data-stu-id="b7074-666">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="b7074-667">問題中捨入中間值的有效位數最有可能會發生下列情況：</span><span class="sxs-lookup"><span data-stu-id="b7074-667">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="b7074-668">當小數的值無法精確的浮點類型的二進位格式來表示。</span><span class="sxs-lookup"><span data-stu-id="b7074-668">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="b7074-669">當要四捨五入的值會計算從一個或多個浮點運算。</span><span class="sxs-lookup"><span data-stu-id="b7074-669">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="b7074-670">要四捨五入的值時<xref:System.Single>而<xref:System.Double>或<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="b7074-670">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="b7074-671">如需詳細資訊，請參閱下節中，[數字捨入和單一單精確度浮點值](#Single)。</span><span class="sxs-lookup"><span data-stu-id="b7074-671">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="b7074-672">您可以在其中缺少中捨入作業的有效位數是有問題的情況下，執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="b7074-672">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="b7074-673">如果捨入運算呼叫多載，捨入<xref:System.Double>值，您可以變更<xref:System.Double>至<xref:System.Decimal>值，並呼叫多載，捨入<xref:System.Decimal>值改為。</span><span class="sxs-lookup"><span data-stu-id="b7074-673">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="b7074-674">雖然<xref:System.Decimal>資料型別也有表示法的問題和遺失有效位數，這些問題會遠較不常見。</span><span class="sxs-lookup"><span data-stu-id="b7074-674">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="b7074-675">定義自訂的捨入演算法會執行 「 幾乎等於 」 的測試，以判斷是否要四捨五入的值為下面接近中間值。</span><span class="sxs-lookup"><span data-stu-id="b7074-675">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="b7074-676">下列範例會定義`RoundApproximate`檢查小數值是否夠靠近是受制於捨入的中點中間值的方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-676">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="b7074-677">範例輸出所示，它便可以更正捨入前一範例所示的問題。</span><span class="sxs-lookup"><span data-stu-id="b7074-677">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="b7074-678">四捨五入和單精確度浮點值</span><span class="sxs-lookup"><span data-stu-id="b7074-678">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="b7074-679"><xref:System.Math.Round%2A>方法包含接受類型引數的多載<xref:System.Decimal>和<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="b7074-679">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="b7074-680">捨入值的型別沒有方法<xref:System.Single>。</span><span class="sxs-lookup"><span data-stu-id="b7074-680">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="b7074-681">如果您要傳入<xref:System.Single>值設為其中的多載<xref:System.Math.Round%2A>方法，它是轉型 （C# 中），或 （在 Visual Basic) 轉換成<xref:System.Double>，而且對應<xref:System.Math.Round%2A>多載<xref:System.Double>參數呼叫。</span><span class="sxs-lookup"><span data-stu-id="b7074-681">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="b7074-682">雖然這是進行擴展轉換，但它通常會涉及失去有效位數，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-682">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="b7074-683">當<xref:System.Single>16.325 的值會傳遞至<xref:System.Math.Round%2A>方法四捨五入為兩個小數位數，使用四捨五入為最接近的慣例，會在結果的 16.32 16.33 和未預期的結果。</span><span class="sxs-lookup"><span data-stu-id="b7074-683">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="b7074-684">這個非預期的結果是因為遺失有效位數的轉換<xref:System.Single>值設定為<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="b7074-684">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="b7074-685">因為所產生的<xref:System.Double>16.325000762939453 的值不是中間值大於 16.325，一律向上四捨五入。</span><span class="sxs-lookup"><span data-stu-id="b7074-685">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="b7074-686">在許多情況下，如範例所示，遺失有效位數可以最小化或轉型或轉換以消除<xref:System.Single>值設定為<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="b7074-686">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="b7074-687">請注意，這是縮小轉換，因為它需要使用轉換運算子，或呼叫轉換方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-687">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="b7074-688">Math.Round(Decimal) 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-688">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="b7074-689">下列範例會示範<xref:System.Math.Round%28System.Decimal%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b7074-689">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="b7074-690">請注意， <xref:System.Decimal> 4.5 的值會捨入為 4，而不是 5，因為這個多載會使用預設<xref:System.MidpointRounding.ToEven>慣例。</span><span class="sxs-lookup"><span data-stu-id="b7074-690">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="b7074-691">Math.Round(Double) 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-691">Math.Round(Double) example</span></span>  
 <span data-ttu-id="b7074-692">下列範例將示範四捨五入到最接近的整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-692">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="b7074-693">Math.Round （Decimal、 Int32） 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-693">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="b7074-694">下列範例會將兩個位數小數都有單一的小數數字的值的十進位值。</span><span class="sxs-lookup"><span data-stu-id="b7074-694">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="b7074-695">Math.Round (Double，Int32) 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-695">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="b7074-696">下列範例會將兩個位數小數都有單一的小數位數的雙精度浮點數的雙精度浮點數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-696">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="b7074-697">Math.Round （Decimal，MidpointRounding） 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-697">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="b7074-698">下列範例顯示傳回的值<xref:System.Math.Round%28System.Decimal%29>方法，<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法`mode`引數的<xref:System.MidpointRounding.ToEven>，而<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法`mode`引數的<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="b7074-698">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="b7074-699">Math.Round (Double，MidpointRounding) 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-699">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="b7074-700">下列範例顯示傳回的值<xref:System.Math.Round%28System.Double%29>方法，<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>方法`mode`引數的<xref:System.MidpointRounding.ToEven>，而<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>方法`mode`引數的<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="b7074-700">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="b7074-701">Math.Round (Int32、 Decimal MidpointRounding) 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-701">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="b7074-702">下列範例示範如何使用<xref:System.Math.Round%2A>方法<xref:System.MidpointRounding>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="b7074-702">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="b7074-703">Math.Round (Int32、 Double MidpointRounding) 範例</span><span class="sxs-lookup"><span data-stu-id="b7074-703">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="b7074-704">下列範例示範如何使用<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>方法<xref:System.MidpointRounding>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="b7074-704">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="b7074-705">版本資訊</span><span class="sxs-lookup"><span data-stu-id="b7074-705">Version information</span></span>  
 <span data-ttu-id="b7074-706">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b7074-706">.NET Framework</span></span>  
 <span data-ttu-id="b7074-707">多載，而不<xref:System.MidpointRounding>支援參數： 4.5、 4、 3.5、 3.0、 2.0、 1.1、 1.0</span><span class="sxs-lookup"><span data-stu-id="b7074-707">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="b7074-708">多載與<xref:System.MidpointRounding>支援參數： 4.5、 4、 3.5、 3.0、 2.0</span><span class="sxs-lookup"><span data-stu-id="b7074-708">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="b7074-709">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="b7074-709">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="b7074-710">所有多載支援： 4、 3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="b7074-710">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="b7074-711">可攜式類別庫</span><span class="sxs-lookup"><span data-stu-id="b7074-711">Portable Class Library</span></span>  
 <span data-ttu-id="b7074-712">所有多載支援</span><span class="sxs-lookup"><span data-stu-id="b7074-712">All overloads are supported</span></span>  
  
 <span data-ttu-id="b7074-713">適用於 Windows 市集應用程式的 .NET</span><span class="sxs-lookup"><span data-stu-id="b7074-713">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="b7074-714">所有多載支援： Windows 8</span><span class="sxs-lookup"><span data-stu-id="b7074-714">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-715">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-715">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="b7074-716">將十進位的值四捨五入為最接近的整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-716">Rounds a decimal value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="b7074-717">最接近參數 <paramref name="d" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-717">The integer nearest parameter <paramref name="d" />.</span></span> <span data-ttu-id="b7074-718">如果 <paramref name="d" /> 的小數部分正好為兩個整數的中間數 (一個為偶數，另一個為奇數)，則會傳回偶數。</span><span class="sxs-lookup"><span data-stu-id="b7074-718">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="b7074-719">請注意，這個方法會傳回 <see cref="T:System.Decimal" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="b7074-719">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-720">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-720">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b7074-721">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="b7074-721">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-722">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="b7074-722">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="b7074-723">將雙精確度浮點數四捨五入為最接近的整數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-723">Rounds a double-precision floating-point value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="b7074-724">最接近 <paramref name="a" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-724">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="b7074-725">如果 <paramref name="a" /> 的小數部分正好為兩個整數的中間數 (一個為偶數，另一個為奇數)，則會傳回偶數。</span><span class="sxs-lookup"><span data-stu-id="b7074-725">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="b7074-726">請注意，這個方法會傳回 <see cref="T:System.Double" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="b7074-726">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-727">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-727">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="b7074-728">因為可能會造成無法表示為浮點數的數字的十進位值，或在某些情況下執行浮點數值、 算術運算的有效位數遺失<see cref="M:System.Math.Round(System.Double)" />方法可能不會出現要捨入到中點值接近的偶數整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-728">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="b7074-729">在下列範例中，因為浮點值.1 有沒有有限的二進位表示法，第一次呼叫<see cref="M:System.Math.Round(System.Double)" />11.5 值的方法會傳回 11，而不是 12。</span><span class="sxs-lookup"><span data-stu-id="b7074-729">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)]
 [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-730">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-730">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="b7074-731">傳回值中的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-731">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="b7074-732">將十進位值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-732">Rounds a decimal value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="b7074-733">最接近 <paramref name="d" /> 的數字，其中包含等於 <paramref name="decimals" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-733">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-734">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-734">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b7074-735"><paramref name="decimals" /> 小於 0 或大於 28。</span><span class="sxs-lookup"><span data-stu-id="b7074-735"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b7074-736">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="b7074-736">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-737">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-737">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="b7074-738">指定如果 <c>d</c> 介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="b7074-738">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="b7074-739">將十進位值四捨五入為最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-739">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="b7074-740">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="b7074-740">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-741">最接近 <paramref name="d" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-741">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="b7074-742">如果 <paramref name="d" /> 正好為兩個數字的中間數 (一個為偶數，另一個為奇數)，則 <paramref name="mode" /> 會判斷要傳回哪個數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-742">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-743">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-743">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b7074-744"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="b7074-744"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b7074-745">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="b7074-745">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-746">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="b7074-746">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="b7074-747">傳回值中小數點後數字的數目。</span><span class="sxs-lookup"><span data-stu-id="b7074-747">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="b7074-748">將雙精確度浮點值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-748">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="b7074-749">最接近 <paramref name="value" /> 的數字，其中包含等於 <paramref name="digits" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-749">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-750">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-750">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b7074-751"><paramref name="digits" /> 小於 0 或大於 15。</span><span class="sxs-lookup"><span data-stu-id="b7074-751"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="b7074-752">因為可能會造成無法表示為浮點數的數字的十進位值，或在某些情況下執行浮點數值、 算術運算的有效位數遺失<see cref="M:System.Math.Round(System.Double,System.Int32)" />方法可能不會出現要捨入到中點值最接近的偶數值<paramref name="digits" />小數點的位置。</span><span class="sxs-lookup"><span data-stu-id="b7074-752">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="b7074-753">下列範例中，其中 2.135 會捨入到而不是 2.14 2.13 所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-753">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="b7074-754">這是因為內部方法乘以<paramref name="value" />10<sup>位數</sup>，和乘法運算在此情況下會受到遺失有效位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-754">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)]
 [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-755">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="b7074-755">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="b7074-756">指定如果「值」<c></c>介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="b7074-756">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="b7074-757">將雙精確度浮點數四捨五入為最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-757">Rounds a double-precision floating-point value to the nearest integer.</span></span> <span data-ttu-id="b7074-758">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="b7074-758">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-759">最接近 <paramref name="value" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-759">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="b7074-760">如果 <paramref name="value" /> 正好為兩個整數的中間數 (一個為偶數，另一個為奇數)，則 <paramref name="mode" /> 會判斷要傳回哪個整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-760">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-761">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-761">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b7074-762"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="b7074-762"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="b7074-763">因為可能會造成無法表示為浮點數的數字的十進位值，或在某些情況下執行浮點數值、 算術運算的有效位數遺失<see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" />方法可能不會出現要捨入到中點值接近的偶數整數。</span><span class="sxs-lookup"><span data-stu-id="b7074-763">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="b7074-764">在下列範例中，因為浮點值.1 有沒有有限的二進位表示法，第一次呼叫<see cref="M:System.Math.Round(System.Double)" />11.5 值的方法會傳回 11，而不是 12。</span><span class="sxs-lookup"><span data-stu-id="b7074-764">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)]
 [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-765">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-765">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="b7074-766">傳回值中的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-766">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="b7074-767">指定如果 <c>d</c> 介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="b7074-767">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="b7074-768">將十進位值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-768">Rounds a decimal value to a specified number of fractional digits.</span></span> <span data-ttu-id="b7074-769">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="b7074-769">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-770">最接近 <paramref name="d" /> 的數字，其中包含等於 <paramref name="decimals" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-770">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="b7074-771">如果 <paramref name="d" /> 的小數位數少於 <paramref name="decimals" />，<paramref name="d" /> 傳回時不會變更。</span><span class="sxs-lookup"><span data-stu-id="b7074-771">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-772">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-772">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b7074-773"><paramref name="decimals" /> 小於 0 或大於 28。</span><span class="sxs-lookup"><span data-stu-id="b7074-773"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b7074-774"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="b7074-774"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b7074-775">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="b7074-775">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-776">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="b7074-776">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="b7074-777">傳回值中小數點後數字的數目。</span><span class="sxs-lookup"><span data-stu-id="b7074-777">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="b7074-778">指定如果「值」<c></c>介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="b7074-778">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="b7074-779">將雙精確度浮點值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-779">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span> <span data-ttu-id="b7074-780">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="b7074-780">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="b7074-781">最接近 <paramref name="value" /> 的數字，其中包含等於 <paramref name="digits" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-781">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="b7074-782">如果 <paramref name="value" /> 的小數位數少於 <paramref name="digits" />，<paramref name="value" /> 傳回時不會變更。</span><span class="sxs-lookup"><span data-stu-id="b7074-782">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7074-783">如範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="b7074-783">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b7074-784"><paramref name="digits" /> 小於 0 或大於 15。</span><span class="sxs-lookup"><span data-stu-id="b7074-784"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b7074-785"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="b7074-785"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="b7074-786">因為可能會造成無法表示為浮點數的數字的十進位值，或在某些情況下執行浮點數值、 算術運算的有效位數遺失<see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />方法可能不會出現要捨入為指定的中間值由<paramref name="mode" />參數。</span><span class="sxs-lookup"><span data-stu-id="b7074-786">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="b7074-787">下列範例中，其中 2.135 會捨入到而不是 2.14 2.13 所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-787">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="b7074-788">這是因為內部方法乘以<paramref name="value" />10<sup>位數</sup>，和乘法運算在此情況下會受到遺失有效位數。</span><span class="sxs-lookup"><span data-stu-id="b7074-788">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)]
 [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-789">傳回整數，表示數字的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-789">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-790">帶正負號的十進位數值。</span><span class="sxs-lookup"><span data-stu-id="b7074-790">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="b7074-791">傳回整數，這個整數表示十進位數字的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-791">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="b7074-792">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-792">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="b7074-793"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-793"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="b7074-794"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="b7074-794"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="b7074-795"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="b7074-795"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="b7074-796"></term><description><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-796"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="b7074-797"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-797"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="b7074-798"></term><description><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-798"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="b7074-799"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="b7074-799"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="b7074-800"></term><description><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-800"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-801">下列範例示範如何使用<xref:System.Math.Sign%28System.Decimal%29>方法，以判斷的正負號<xref:System.Decimal>值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-801">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-802">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-802">A signed number.</span></span></param>
        <summary><span data-ttu-id="b7074-803">傳回整數，表示雙精確度浮點數的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-803">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b7074-804">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-804">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="b7074-805"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-805"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="b7074-806"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="b7074-806"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="b7074-807"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="b7074-807"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="b7074-808"></term><description><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-808"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="b7074-809"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-809"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="b7074-810"></term><description><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-810"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="b7074-811"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="b7074-811"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="b7074-812"></term><description><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-812"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-813">下列範例示範如何使用<xref:System.Math.Sign%28System.Double%29>方法，以判斷的正負號<xref:System.Double>值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-813">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="b7074-814"><paramref name="value" /> 等於 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-814"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-815">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-815">A signed number.</span></span></param>
        <summary><span data-ttu-id="b7074-816">傳回整數，這個整數表示 16 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-816">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-817">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-817">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="b7074-818"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-818"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="b7074-819"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="b7074-819"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="b7074-820"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="b7074-820"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="b7074-821"></term><description><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-821"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="b7074-822"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-822"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="b7074-823"></term><description><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-823"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="b7074-824"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="b7074-824"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="b7074-825"></term><description><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-825"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-826">下列範例示範如何使用<xref:System.Math.Sign%28System.Int16%29>方法，以判斷的正負號<xref:System.Int16>值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-826">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-827">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-827">A signed number.</span></span></param>
        <summary><span data-ttu-id="b7074-828">傳回整數，這個整數表示 32 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-828">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-829">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-829">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="b7074-830"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-830"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="b7074-831"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="b7074-831"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="b7074-832"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="b7074-832"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="b7074-833"></term><description><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-833"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="b7074-834"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-834"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="b7074-835"></term><description><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-835"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="b7074-836"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="b7074-836"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="b7074-837"></term><description><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-837"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-838">下列範例示範如何使用<xref:System.Math.Sign%28System.Int32%29>方法，以判斷的正負號<xref:System.Int32>值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-838">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-839">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-839">A signed number.</span></span></param>
        <summary><span data-ttu-id="b7074-840">傳回整數，表示 64 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-840">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-841">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-841">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="b7074-842"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-842"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="b7074-843"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="b7074-843"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="b7074-844"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="b7074-844"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="b7074-845"></term><description><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-845"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="b7074-846"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-846"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="b7074-847"></term><description><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-847"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="b7074-848"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="b7074-848"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="b7074-849"></term><description><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-849"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-850">下列範例示範如何使用<xref:System.Math.Sign%28System.Int64%29>方法，以判斷的正負號<xref:System.Int64>值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-850">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-851">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-851">A signed number.</span></span></param>
        <summary><span data-ttu-id="b7074-852">傳回整數，表示 8 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-852">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b7074-853">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-853">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="b7074-854"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-854"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="b7074-855"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="b7074-855"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="b7074-856"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="b7074-856"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="b7074-857"></term><description><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-857"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="b7074-858"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-858"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="b7074-859"></term><description><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-859"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="b7074-860"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="b7074-860"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="b7074-861"></term><description><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-861"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-862">下列範例示範如何使用<xref:System.Math.Sign%28System.SByte%29>方法，以判斷的正負號<xref:System.SByte>值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-862">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-863">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-863">A signed number.</span></span></param>
        <summary><span data-ttu-id="b7074-864">傳回整數，表示單精確度浮點數的正負號。</span><span class="sxs-lookup"><span data-stu-id="b7074-864">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b7074-865">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="b7074-865">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="b7074-866"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-866"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="b7074-867"></term><description> 意義</span><span class="sxs-lookup"><span data-stu-id="b7074-867"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="b7074-868"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="b7074-868"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="b7074-869"></term><description><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-869"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="b7074-870"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="b7074-870"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="b7074-871"></term><description><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-871"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="b7074-872"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="b7074-872"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="b7074-873"></term><description><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="b7074-873"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-874">下列範例示範如何使用<xref:System.Math.Sign%28System.Single%29>方法，以判斷的正負號<xref:System.Single>值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-874">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="b7074-875"><paramref name="value" /> 等於 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-875"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-876">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-876">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="b7074-877">傳回指定角的正弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-877">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="b7074-878"><paramref name="a" />的正弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-878">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="b7074-879">如果 <paramref name="a" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-879">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-880">旋轉的角度， `a`，必須是弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-880">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="b7074-881">Multiply 由 <xref:System.Math.PI?displayProperty=nameWithType> /180 度轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-881">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="b7074-882">可接受值的`a`到大約 9223372036854775295 大約-9223372036854775295 的範圍內。</span><span class="sxs-lookup"><span data-stu-id="b7074-882">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="b7074-883">值超出此範圍，<xref:System.Math.Sin%2A>方法會傳回`a`不變，而不是擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b7074-883">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-884">下列範例會使用<xref:System.Math.Sin%2A>評估某些選取的角度的三角身分識別。</span><span class="sxs-lookup"><span data-stu-id="b7074-884">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-885">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-885">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="b7074-886">傳回指定角的雙曲線正弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-886">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="b7074-887"><paramref name="value" />的雙曲線正弦函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-887">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="b7074-888">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NaN" />，則這個方法會傳回等於 <paramref name="value" /> 的 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-888">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-889">旋轉的角度， `value`，必須是弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-889">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="b7074-890">Multiply 由 <xref:System.Math.PI?displayProperty=nameWithType> /180 度轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-890">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-891">下列範例會使用<xref:System.Math.Sinh%2A>評估所選值的某些雙曲線身分識別。</span><span class="sxs-lookup"><span data-stu-id="b7074-891">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-892">要找出其平方根的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-892">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="b7074-893">傳回指定數字的平方根。</span><span class="sxs-lookup"><span data-stu-id="b7074-893">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="b7074-894">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="b7074-894">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="b7074-895"><list type="table"><listheader><term><paramref name="d" /> 參數</span><span class="sxs-lookup"><span data-stu-id="b7074-895"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="b7074-896"></term><description> 傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-896"></term><description> Return value</span></span>  
  
 <span data-ttu-id="b7074-897"></description></listheader><item><term> 零或正數</span><span class="sxs-lookup"><span data-stu-id="b7074-897"></description></listheader><item><term> Zero or positive</span></span>  
  
 <span data-ttu-id="b7074-898"></term><description><paramref name="d" /> 的正平方根。</span><span class="sxs-lookup"><span data-stu-id="b7074-898"></term><description> The positive square root of <paramref name="d" />.</span></span>  
  
 <span data-ttu-id="b7074-899"></description></item><item><term> 負</span><span class="sxs-lookup"><span data-stu-id="b7074-899"></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="b7074-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> 等於 <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> 等於 <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="b7074-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7074-901">方格區域的平方根表示的長度平方的任一邊。</span><span class="sxs-lookup"><span data-stu-id="b7074-901">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="b7074-902">下列範例的部分城市的區域顯示在美國境內，並提供每個城市大小的印象，如果它已由正方形。</span><span class="sxs-lookup"><span data-stu-id="b7074-902">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="b7074-903">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-903">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="b7074-904">傳回指定角的正切函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-904">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="b7074-905">的正切函數<paramref name="a" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-905">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="b7074-906">如果 <paramref name="a" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-906">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-907">旋轉的角度， `a`，必須是弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-907">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="b7074-908">Multiply 由 <xref:System.Math.PI?displayProperty=nameWithType> /180 度轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-908">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-909">下列範例會示範如何計算角度的正切函數，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="b7074-909">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7074-910">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="b7074-910">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="b7074-911">傳回指定角的雙曲線正切函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-911">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="b7074-912"><paramref name="value" />的雙曲線正切函數。</span><span class="sxs-lookup"><span data-stu-id="b7074-912">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="b7074-913">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NegativeInfinity" />，則這個方法會傳回 -1。</span><span class="sxs-lookup"><span data-stu-id="b7074-913">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="b7074-914">如果值等於 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 1。</span><span class="sxs-lookup"><span data-stu-id="b7074-914">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="b7074-915">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NaN" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="b7074-915">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-916">旋轉的角度， `value`，必須是弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-916">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="b7074-917">Multiply 由 <xref:System.Math.PI?displayProperty=nameWithType> /180 度轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="b7074-917">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-918">下列範例會使用<xref:System.Math.Tanh%2A>評估所選值某些雙曲線正切函數身分識別。</span><span class="sxs-lookup"><span data-stu-id="b7074-918">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7074-919">計算數字的整數部分。</span><span class="sxs-lookup"><span data-stu-id="b7074-919">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-920">數字會四捨五入為最接近的整數推向零。</span><span class="sxs-lookup"><span data-stu-id="b7074-920">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-921">要截斷的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-921">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="b7074-922">計算指定的十進位數字的整數部分。</span><span class="sxs-lookup"><span data-stu-id="b7074-922">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="b7074-923"><paramref name="d" /> 的整數部分；換言之，捨棄所有小數點後的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-923">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-924"><xref:System.Math.Truncate%2A> 捨入`d`為最接近的整數推向零。</span><span class="sxs-lookup"><span data-stu-id="b7074-924"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-925">下列範例會呼叫<xref:System.Math.Truncate%28System.Decimal%29>截斷正數或負數方法<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-925">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b7074-926">要截斷的數字。</span><span class="sxs-lookup"><span data-stu-id="b7074-926">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="b7074-927">計算指定的雙精確度浮點數的整數部分。</span><span class="sxs-lookup"><span data-stu-id="b7074-927">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b7074-928"><paramref name="d" /> 的整數部分；換言之，捨棄所有小數點後的數字，或是下表中列出的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="b7074-928">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <span data-ttu-id="b7074-929"><list type="table"><listheader><term><paramref name="d" /></term><description> 傳回值</span><span class="sxs-lookup"><span data-stu-id="b7074-929"><list type="table"><listheader><term><paramref name="d" /></term><description> Return value</span></span>  
  
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7074-930"><xref:System.Math.Truncate%2A> 捨入`d`為最接近的整數推向零。</span><span class="sxs-lookup"><span data-stu-id="b7074-930"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7074-931">下列範例會呼叫<xref:System.Math.Truncate%28System.Double%29>截斷正數或負數方法<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="b7074-931">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>