<Type Name="Math" FullName="System.Math">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a65abb2d011ed017c4b44637bd58cd80c56744be" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52365253" /></Metadata><TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f0e7e-101">提供三角函數、對數函數和其他一般數學函數的常數和靜態方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-102">下列範例會使用數個數學和三角函數函式，從<xref:System.Math>類別以計算 trapezoid 內部角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-103">傳回指定數字的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-104">大於或等於 <see cref="F:System.Decimal.MinValue" />但小於或等於 <see cref="F:System.Decimal.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f0e7e-105">傳回 <see cref="T:System.Decimal" /> 數字的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-106">十進位數字 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-107">數值的絕對值<xref:System.Decimal>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="f0e7e-108">例如，1.2 和-1.2 絕對值是 1.2。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-109">下列範例會使用<xref:System.Math.Abs%28System.Decimal%29>方法來取得的數字的絕對值<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-110">大於或等於 <see cref="F:System.Double.MinValue" />但小於或等於 <see cref="F:System.Double.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f0e7e-111">傳回雙精確度浮點數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-112">雙精確度浮點數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-113">數值的絕對值<xref:System.Double>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="f0e7e-114">比方說，1.2e03 和-1.2e03 絕對值是 1.2e03。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="f0e7e-115">如果`value`等於<xref:System.Double.NegativeInfinity>或是<xref:System.Double.PositiveInfinity>，則傳回值是<xref:System.Double.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="f0e7e-116">如果`value`等於<xref:System.Double.NaN>，則傳回值是<xref:System.Double.NaN>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-117">下列範例會使用<xref:System.Math.Abs%28System.Double%29>方法來取得的數字的絕對值<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-118">大於 <see cref="F:System.Int16.MinValue" />但小於或等於 <see cref="F:System.Int16.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f0e7e-119">傳回 16 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-120">16 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-121">數值的絕對值<xref:System.Int16>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="f0e7e-122">比方說，123 和-123 的絕對值是 123。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-123">下列範例會使用<xref:System.Math.Abs%28System.Int16%29>方法來取得的數字的絕對值<xref:System.Int16>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-124"><paramref name="value" />等於 <see cref="F:System.Int16.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-125">大於 <see cref="F:System.Int32.MinValue" />但小於或等於 <see cref="F:System.Int32.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f0e7e-126">傳回 32 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-127">32 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-128">數值的絕對值<xref:System.Int32>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="f0e7e-129">比方說，123 和-123 的絕對值是 123。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-130">下列範例會使用<xref:System.Math.Abs%28System.Int32%29>方法來取得的數字的絕對值<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-131"><paramref name="value" />等於 <see cref="F:System.Int32.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-132">大於 <see cref="F:System.Int64.MinValue" />但小於或等於 <see cref="F:System.Int64.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f0e7e-133">傳回 64 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-134">64 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-135">數值的絕對值<xref:System.Int64>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="f0e7e-136">比方說，123 和-123 的絕對值是 123。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-137">下列範例會使用<xref:System.Math.Abs%28System.Int64%29>方法來取得的數字的絕對值<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-138"><paramref name="value" />等於 <see cref="F:System.Int64.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-139">大於 <see cref="F:System.SByte.MinValue" />但小於或等於 <see cref="F:System.SByte.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f0e7e-140">傳回 8 位元帶正負號整數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-141">8 位元帶正負號整數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-142">帶正負號位元組的絕對值是沒有正負號的數字值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="f0e7e-143">例如，12 和節省-12 的絕對值會是 12。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-144">下列範例會使用<xref:System.Math.Abs%28System.SByte%29>方法來取得的數字的絕對值<xref:System.SByte>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-145"><paramref name="value" />等於 <see cref="F:System.SByte.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-146">大於或等於 <see cref="F:System.Single.MinValue" />但小於或等於 <see cref="F:System.Single.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f0e7e-147">傳回單精確度浮點數的絕對值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-148">單精確度浮點數 x，其滿足下列條件 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-149">數值的絕對值<xref:System.Single>是沒有正負號的數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="f0e7e-150">例如，數值的絕對值這兩個如 1.2e-03 與 1.2e03 是 1.2e03。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="f0e7e-151">如果`value`等於<xref:System.Single.NegativeInfinity>或是<xref:System.Single.PositiveInfinity>，則傳回值是<xref:System.Single.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="f0e7e-152">如果`value`等於<xref:System.Single.NaN>，則傳回值是<xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-153">下列範例會使用<xref:System.Math.Abs%28System.Single%29>方法來取得的數字的絕對值<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-154">代表餘弦函數的數字，其中 <paramref name="d" /> 必須大於或等於 -1 但小於或等於 1。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-154">A number representing a cosine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="f0e7e-155">傳回餘弦函數 (Cosine) 是指定數字的角。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-156">以弧度為單位的角度 θ，其滿足下列條件 0 ≤θ≤π</span><span class="sxs-lookup"><span data-stu-id="f0e7e-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span> 
<span data-ttu-id="f0e7e-157">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-157">-or-</span></span> 
 <span data-ttu-id="f0e7e-158">如果 <paramref name="d" /> &lt; -1 或 <paramref name="d" /> &gt; 1 或 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />，則為 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-159">傳回的值乘以 180 /<xref:System.Math.PI?displayProperty=nameWithType>要從弧度轉換為度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-160">下列範例會使用<xref:System.Math.Acos%2A>方法，以協助指定 trapezoid 內部角度的計算。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-161">代表正弦函數的數字，其中 <paramref name="d" /> 必須大於或等於 -1，但小於或等於 1。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-161">A number representing a sine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="f0e7e-162">傳回正弦函數 (Sine) 是指定數字的角。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-162">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-163">以弧度為單位的角度 θ，其滿足下列條件 -π/2 ≤θ≤π/2</span><span class="sxs-lookup"><span data-stu-id="f0e7e-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span> 
<span data-ttu-id="f0e7e-164">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-164">-or-</span></span> 
 <span data-ttu-id="f0e7e-165">如果 <paramref name="d" /> &lt; -1 或 <paramref name="d" /> &gt; 1 或 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />，則為 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-166">傳回正值表示 x 軸; 逆時針旋轉的角度傳回負值表示順時針旋轉的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="f0e7e-167">傳回的值乘以 180 /<xref:System.Math.PI?displayProperty=nameWithType>要從弧度轉換為度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-168">下列範例會使用<xref:System.Math.Asin%2A>協助指定 trapezoid 內部角度的計算。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-169">代表正切的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-169">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="f0e7e-170">傳回正切函數 (Tangent) 是指定數字的角。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-170">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-171">以弧度為單位的角度 θ，其滿足下列條件 -π/2 ≤θ≤π/2。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
<span data-ttu-id="f0e7e-172">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-172">-or-</span></span> 
 <span data-ttu-id="f0e7e-173">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />，則為 <see cref="F:System.Double.NaN" />；如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NegativeInfinity" />，則為 -π/2，四捨五入為雙精度 (-1.5707963267949)；如果 <paramref name="d" /> 等於 <see cref="F:System.Double.PositiveInfinity" />，則為 π/2，四捨五入為雙精度 (1.5707963267949)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-173"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-174">傳回正值表示 x 軸; 逆時針旋轉的角度傳回負值表示順時針旋轉的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="f0e7e-175">傳回的值乘以 180 /<xref:System.Math.PI?displayProperty=nameWithType>要從弧度轉換為度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-176">下列範例示範如何計算的反正切值，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="f0e7e-177">某個點的 Y 座標。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-177">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="f0e7e-178">某個點的 X 座標。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-178">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="f0e7e-179">傳回正切函數是兩個指定數字之商數的角。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-179">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-180">以弧度為單位的角度 θ，其滿足下列條件 -π≤θ≤π，且 tan(θ) = <paramref name="y" /> / <paramref name="x" />，其中 (<paramref name="x" />, <paramref name="y" />) 是笛卡兒平面上的點。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="f0e7e-181">注意下列各項：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-181">Observe the following:</span></span> 
<span data-ttu-id="f0e7e-182">-   如果 (<paramref name="x" />, <paramref name="y" />) 在第 1 象限，則0 &lt; θ &lt; π/2。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-182">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
<span data-ttu-id="f0e7e-183">-   如果 (<paramref name="x" />, <paramref name="y" />) 在第 2 象限，則 π/2 &lt; θ≤π。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-183">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
<span data-ttu-id="f0e7e-184">-   如果 (<paramref name="x" />, <paramref name="y" />) 在第 3 象限，則 -π &lt; θ &lt; -π/2。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-184">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
<span data-ttu-id="f0e7e-185">-   如果 (<paramref name="x" />, <paramref name="y" />) 在第 4 象限，則 -π/2 &lt; θ &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-185">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
<span data-ttu-id="f0e7e-186">如果是位在象限界限上的點，則傳回值如下：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-186">For points on the boundaries of the quadrants, the return value is the following:</span></span> 
<span data-ttu-id="f0e7e-187">-   如果 y 是 0，且 x 不是負值，則 θ = 0。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-187">-   If y is 0 and x is not negative, θ = 0.</span></span>  
  
<span data-ttu-id="f0e7e-188">-   如果 y 是 0，且 x 是負值，則 θ = π。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-188">-   If y is 0 and x is negative, θ = π.</span></span>  
  
<span data-ttu-id="f0e7e-189">-   如果 y 是正值，且 x 是 0，則 θ = π/2。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-189">-   If y is positive and x is 0, θ = π/2.</span></span>  
  
<span data-ttu-id="f0e7e-190">-   如果 y 是負值，而 x 是 0，則 θ = -π/2。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-190">-   If y is negative and x is 0, θ = -π/2.</span></span>  
  
<span data-ttu-id="f0e7e-191">-   如果 y 是 0 且 x 是 0，則 θ = 0。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-191">-   If y is 0 and x is 0, θ = 0.</span></span>  
  
<span data-ttu-id="f0e7e-192">如果 <paramref name="x" /> 或 <paramref name="y" /> 為 <see cref="F:System.Double.NaN" />，或者 <paramref name="x" /> 和 <paramref name="y" /> 為 <see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />，這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-193">傳回值是笛卡兒平面的 x 軸和向量從原點 (0，0) 開始和結束點、 （x，y） 所形成的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-194">下列範例示範如何計算向量角度的反正切值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="f0e7e-195">產生的值會顯示在主控台中。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-196">要相乘的第一個數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-196">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="f0e7e-197">要相乘的第二個數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-197">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="f0e7e-198">產生兩個 32 位元數字的完整產品。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-198">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-199">包含指定數字之乘積的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-199">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-200">下列範例示範如何使用<xref:System.Math.BigMul%2A>方法來計算兩個整數值的乘積。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-201">傳回大於或等於指定數字的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-201">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-202">此方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f0e7e-203">這種捨入有時稱為朝向正無限大捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-204">十進位數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-204">A decimal number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-205">傳回大於或等於指定之十進位數字的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-206">大於或等於 <paramref name="d" /> 的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="f0e7e-207">請注意，這個方法會傳回 <see cref="T:System.Decimal" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-208">此方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f0e7e-209">這種捨入有時稱為朝向正無限大捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="f0e7e-210">換句話說，如果`d`為正數，是否存在的任何小數部分原因`d`捨入至下一步 的最大整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="f0e7e-211">如果`d`是負數，捨入作業會導致任何小數部分`d`遭到捨棄。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="f0e7e-212">此方法的作業不同於<xref:System.Math.Floor%28System.Decimal%29>方法，以支援往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-213">下列範例說明<xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType>方法並對照它與<xref:System.Math.Floor%28System.Decimal%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-214">雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-214">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-215">傳回大於或等於指定之雙精確度浮點數的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-216">大於或等於 <paramref name="a" /> 的最小整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="f0e7e-217">如果 <paramref name="a" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則會傳回該值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="f0e7e-218">請注意，這個方法會傳回 <see cref="T:System.Double" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-219">此方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f0e7e-220">這種捨入有時稱為朝向正無限大捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="f0e7e-221">換句話說，如果`a`為正數，是否存在的任何小數部分原因`a`捨入至下一步 的最大整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="f0e7e-222">如果`a`是負數，捨入作業會導致任何小數部分`a`遭到捨棄。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="f0e7e-223">此方法的作業不同於<xref:System.Math.Floor%28System.Double%29>方法，以支援往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
<span data-ttu-id="f0e7e-224">從 Visual Basic 15.8，雙精度浮點數到整數的轉換的效能最佳化如果您傳遞所傳回的值`Ceiling`方法的任何[整數類資料的轉換函式](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者如果雙精度浮點數值所傳回`Ceiling`會自動轉換為整數[Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md)設為 Off。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-224">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Ceiling` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Ceiling` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f0e7e-225">此最佳化可讓程式碼執行速度，最多兩次轉換為整數類型的一大堆程式碼的速度一樣。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-225">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f0e7e-226">下列範例說明這類最佳化的轉換：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-226">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7969
```   

## Examples  
 <span data-ttu-id="f0e7e-227">下列範例說明<xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType>方法並對照它與<xref:System.Math.Floor%28System.Double%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-227">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-228">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-228">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f0e7e-229">傳回指定角的餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-229">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-230"><paramref name="d" /> 的餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-230">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="f0e7e-231">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-231">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-232">角度`d`，必須是以弧度為單位。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-232">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="f0e7e-233">乘以 <xref:System.Math.PI?displayProperty=nameWithType> /180，將度數轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-233">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="f0e7e-234">可接受的值的`d`到大約 9223372036854775295 大約-9223372036854775295 的範圍內。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-234">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="f0e7e-235">此範圍以外的值<xref:System.Math.Cos%2A>方法會傳回`d`不變，而不是擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-235">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-236">下列範例會使用<xref:System.Math.Cos%2A>評估某些選取的角度的三角身分識別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-236">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-237">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-237">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f0e7e-238">傳回指定角的雙曲線餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-238">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-239"><paramref name="value" />的雙曲線餘弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-239">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="f0e7e-240">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則會傳回 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-240">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="f0e7e-241">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NaN" />，則會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-241">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-242">角度`value`，必須是以弧度為單位。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-242">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="f0e7e-243">乘以 <xref:System.Math.PI?displayProperty=nameWithType> /180，將度數轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-243">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-244">下列範例會使用<xref:System.Math.Cosh%2A>評估某些雙曲的身分識別選取值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-244">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-245">計算兩個數字的商數，並傳回餘數做為輸出參數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-245">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int *  -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-246">被除數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-246">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="f0e7e-247">除數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-247">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="f0e7e-248">餘數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-248">The remainder.</span></span></param>
        <summary><span data-ttu-id="f0e7e-249">計算兩個 32 位元帶正負號的整數商數，並傳回餘數做為輸出參數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-249">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-250">指定之數值的商數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-250">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-251">餘數值等於結果[餘數運算子](~/docs/csharp/language-reference/operators/remainder-operator.md)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-251">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
   
## Examples  
 <span data-ttu-id="f0e7e-252">下列範例示範<xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-252">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="f0e7e-253"><paramref name="b" /> 為零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-253"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 *  -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-254">被除數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-254">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="f0e7e-255">除數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-255">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="f0e7e-256">餘數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-256">The remainder.</span></span></param>
        <summary><span data-ttu-id="f0e7e-257">計算兩個 64 位元帶正負號的整數商數，並傳回餘數做為輸出參數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-257">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-258">指定之數值的商數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-258">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-259">餘數值等於結果[餘數運算子](~/docs/csharp/language-reference/operators/remainder-operator.md)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-259">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-260">下列範例示範<xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-260">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="f0e7e-261"><paramref name="b" /> 為零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-261"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f0e7e-262">代表自然對數底數，由常數 <see langword="e" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-262">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-263">這個欄位的值是 2.7182818284590452354。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-263">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-264">下列範例會比較<xref:System.Math.E>從級數計算的值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-264">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-265">指定乘冪數的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-265">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="f0e7e-266">傳回具有指定乘冪數的 <see langword="e" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-266">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-267">數字 <see langword="e" /> 的 <paramref name="d" /> 次方。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-267">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="f0e7e-268">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則傳回該值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-268">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="f0e7e-269">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NegativeInfinity" />，則傳回 0。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-269">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-270">`e` 是其值為大約 2.71828 數學常數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-270">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="f0e7e-271">使用<xref:System.Math.Pow%2A>計算其他基數的方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-271">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="f0e7e-272"><xref:System.Math.Exp%2A> 是的反向<xref:System.Math.Log%2A>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-272"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-273">下列範例會使用<xref:System.Math.Exp%2A>來評估特定指數和對數的身分識別選取的值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-273">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-274">傳回小於或等於指定數字的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-274">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-275">此方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-275">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f0e7e-276">這種捨入有時稱為往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-276">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-277">十進位數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-277">A decimal number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-278">傳回小於或等於指定十進位數字的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-278">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-279">小於或等於 <paramref name="d" /> 的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-279">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="f0e7e-280">請注意，方法會傳回 <see cref="T:System.Decimal" /> 類型的整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-280">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-281">此方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-281">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f0e7e-282">這種捨入有時稱為往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-282">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="f0e7e-283">換句話說，如果`d`是正數，任何小數部分會被截斷。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-283">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="f0e7e-284">如果`d`是負數，則出現任何小數部分都會使它四捨五入到最小的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-284">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="f0e7e-285">此方法的作業不同於<xref:System.Math.Ceiling%2A>方法，以支援朝向正無限大捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-285">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-286">下列範例說明<xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType>方法並對照它與<xref:System.Math.Ceiling%28System.Decimal%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-286">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-287">雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-287">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-288">傳回小於或等於指定雙精確度浮點數的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-288">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-289">小於或等於 <paramref name="d" /> 的最大整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-289">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="f0e7e-290">如果 <paramref name="d" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則會傳回該值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-290">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-291">此方法的行為遵循 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-291">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f0e7e-292">這種捨入有時稱為往負無限大方向捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-292">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="f0e7e-293">換句話說，如果`d`是正數，任何小數部分會被截斷。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-293">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="f0e7e-294">如果`d`是負數，則出現任何小數部分都會使它四捨五入到最小的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-294">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="f0e7e-295">此方法的作業不同於<xref:System.Math.Ceiling%2A>方法，以支援朝向正無限大捨入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-295">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

<span data-ttu-id="f0e7e-296">從 Visual Basic 15.8，雙精度浮點數到整數的轉換的效能最佳化如果您傳遞所傳回的值`Floor`方法的任何[整數類資料的轉換函式](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者如果雙精度浮點數值所傳回`Floor`會自動轉換為整數[Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md)設為 Off。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-296">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Floor` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Floor` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f0e7e-297">此最佳化可讓程式碼執行速度，最多兩次轉換為整數類型的一大堆程式碼的速度一樣。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-297">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f0e7e-298">下列範例說明這類最佳化的轉換：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-298">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1043

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

## Examples  
 <span data-ttu-id="f0e7e-299">下列範例說明<xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType>方法並對照它與<xref:System.Math.Ceiling%28System.Double%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-299">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f0e7e-300">被除數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-300">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="f0e7e-301">除數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-301">A divisor.</span></span></param>
        <summary><span data-ttu-id="f0e7e-302">傳回指定數字除以另一個指定數字所得的餘數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-302">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-303">等於 <paramref name="x" /> - ( <paramref name="y" /> Q) 的數字，其中 Q 是捨入至最接近整數的 <paramref name="x" /> / <paramref name="y" /> 商數 (如果 <paramref name="x" /> / <paramref name="y" /> 是兩個整數的中間數，則會傳回偶數整數)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-303">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
<span data-ttu-id="f0e7e-304">如果 <paramref name="x" /> - ( <paramref name="y" /> Q) 為零，則在 <paramref name="x" /> 為正時傳回值 +0，或在 <paramref name="x" /> 為負時傳回 -0。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-304">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
<span data-ttu-id="f0e7e-305">如果 <paramref name="y" /> = 0，則傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-305">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-306">這項作業符合定義的 ANSI/IEEE Std 754-1985; 第 5.1 節中的其餘部分作業IEEE Standard for 二進位浮點運算;美國電機暨電子工程師，Inc;1985。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-306">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="f0e7e-307"><xref:System.Math.IEEERemainder%2A>方法不是相同[餘數運算子](~/docs/csharp/language-reference/operators/remainder-operator.md)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-307">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="f0e7e-308">雖然兩者都傳回除法之後的其餘部分，但是它們使用的公式將會不同。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-308">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="f0e7e-309">公式<xref:System.Math.IEEERemainder%2A>方法是：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-309">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="f0e7e-310">相反地，餘數運算子的公式是：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-310">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-311">下列範例會對照傳回餘數<xref:System.Math.IEEERemainder%2A>方法所傳回的其餘[餘數運算子](~/docs/csharp/language-reference/operators/remainder-operator.md)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-311">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-312">傳回指定數字的對數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-312">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-313">要找出其對數的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-313">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="f0e7e-314">傳回指定數字的自然 (底數為 <see langword="e" />) 對數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-314">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-315">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-315">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f0e7e-316"><paramref name="d" /> 參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-316"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f0e7e-317">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-317">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-318">正</span><span class="sxs-lookup"><span data-stu-id="f0e7e-318">Positive</span></span> 
 </term><description> <span data-ttu-id="f0e7e-319"><paramref name="d" /> 的自然對數，亦即 <paramref name="d" /> log e <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="f0e7e-319">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span></span></description></item><item><term> <span data-ttu-id="f0e7e-320">零</span><span class="sxs-lookup"><span data-stu-id="f0e7e-320">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="f0e7e-321">負</span><span class="sxs-lookup"><span data-stu-id="f0e7e-321">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f0e7e-322">等於 <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="f0e7e-322">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f0e7e-323">等於 <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f0e7e-323">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-324">參數`d`指定為基底 10 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-324">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-325">下列範例說明<xref:System.Math.Log%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-325">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-326">要找出其對數的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-326">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="f0e7e-327">對數的底數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-327">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="f0e7e-328">傳回指定底數中指定數字的對數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-328">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-329">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-329">One of the values in the following table.</span></span> <span data-ttu-id="f0e7e-330">(+Infinity 代表 <see cref="F:System.Double.PositiveInfinity" />、-Infinity 代表 <see cref="F:System.Double.NegativeInfinity" />，NaN 則代表 <see cref="F:System.Double.NaN" />。)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-330">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span> 
 <list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> <span data-ttu-id="f0e7e-331">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-331">Return value</span></span> 
 </description></listheader><item><term><span data-ttu-id="f0e7e-332"><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-332"><paramref name="a" />&gt; 0</span></span> 
 </term><description> <span data-ttu-id="f0e7e-333">(0 &lt;<paramref name="newBase" />&lt; 1) -或-(<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-333">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span> 
 </description><description> <span data-ttu-id="f0e7e-334">lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-334">lognewBase(a)</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-335"><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-335"><paramref name="a" />&lt; 0</span></span> 
 </term><description> <span data-ttu-id="f0e7e-336">(任意值)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-336">(any value)</span></span> 
 </description><description> <span data-ttu-id="f0e7e-337">NaN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-337">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="f0e7e-338">(任意值)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-338">(any value)</span></span> 
 </term><description><span data-ttu-id="f0e7e-339"><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-339"><paramref name="newBase" />&lt; 0</span></span> 
 </description><description> <span data-ttu-id="f0e7e-340">NaN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-340">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-341"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-341"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="f0e7e-342"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-342"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="f0e7e-343">NaN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-343">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-344"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-344"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="f0e7e-345"><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-345"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="f0e7e-346">NaN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-346">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-347"><paramref name="a" /> = NAN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-347"><paramref name="a" /> = NaN</span></span> 
 </term><description> <span data-ttu-id="f0e7e-348">(任意值)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-348">(any value)</span></span> 
 </description><description> <span data-ttu-id="f0e7e-349">NaN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-349">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="f0e7e-350">(任意值)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-350">(any value)</span></span> 
 </term><description><span data-ttu-id="f0e7e-351"><paramref name="newBase" /> = NAN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-351"><paramref name="newBase" /> = NaN</span></span> 
 </description><description> <span data-ttu-id="f0e7e-352">NaN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-352">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="f0e7e-353">(任意值)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-353">(any value)</span></span> 
 </term><description><span data-ttu-id="f0e7e-354"><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-354"><paramref name="newBase" /> = 1</span></span> 
 </description><description> <span data-ttu-id="f0e7e-355">NaN</span><span class="sxs-lookup"><span data-stu-id="f0e7e-355">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-356"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-356"><paramref name="a" /> = 0</span></span> 
 </term><description> <span data-ttu-id="f0e7e-357">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-357">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="f0e7e-358">+Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-358">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-359"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-359"><paramref name="a" /> = 0</span></span> 
 </term><description><span data-ttu-id="f0e7e-360"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-360"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="f0e7e-361">-Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-361">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-362"><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-362"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description> <span data-ttu-id="f0e7e-363">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-363">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="f0e7e-364">-Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-364">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-365"><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-365"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description><span data-ttu-id="f0e7e-366"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-366"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="f0e7e-367">+Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-367">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-368"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-368"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="f0e7e-369"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-369"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="f0e7e-370">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-370">0</span></span> 
 </description></item><item><term><span data-ttu-id="f0e7e-371"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-371"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="f0e7e-372"><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="f0e7e-372"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="f0e7e-373">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-373">0</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-374">下列範例會使用<xref:System.Math.Log%2A>評估某些對數的身分識別選取值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-374">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-375">要找出其對數的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-375">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="f0e7e-376">傳回指定數字的以 10 為底數的對數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-376">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-377">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-377">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f0e7e-378"><paramref name="d" /> 參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-378"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f0e7e-379">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-379">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-380">正</span><span class="sxs-lookup"><span data-stu-id="f0e7e-380">Positive</span></span> 
 </term><description> <span data-ttu-id="f0e7e-381"><paramref name="d" /> 的底數為 10 的對數，亦即 log 10<paramref name="d" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-381">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-382">零</span><span class="sxs-lookup"><span data-stu-id="f0e7e-382">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="f0e7e-383">負</span><span class="sxs-lookup"><span data-stu-id="f0e7e-383">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f0e7e-384">等於 <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="f0e7e-384">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f0e7e-385">等於 <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f0e7e-385">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-386">參數`d`指定為基底 10 的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-386">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-387">下列範例會使用<xref:System.Math.Log10%2A>方法來傳回所選值的基底 10 對數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-387">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-388">傳回兩個指定數字中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-388">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-389">要比較的兩個 8 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-389">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-390">要比較的兩個 8 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-390">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-391">傳回兩個 8 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-391">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-392">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-392">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-393">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-393">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-394">要比較的兩個十進位數字的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-394">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-395">要比較的兩個十進位數字中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-395">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-396">傳回兩個十進位數字中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-396">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-397">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-397">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-398">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-398">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-399">要比較的兩個雙精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-399">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-400">要比較的兩個雙精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-400">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-401">傳回兩個雙精確度浮點數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-401">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-402">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-402">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="f0e7e-403">如果 <paramref name="val1" />、<paramref name="val2" /> 或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Double.NaN" />，則會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-403">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-404">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-404">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-405">要比較的兩個 16 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-405">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-406">要比較的兩個 16 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-406">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-407">傳回兩個 16 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-407">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-408">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-408">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-409">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-409">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-410">要比較的兩個 32 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-410">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-411">要比較的兩個 32 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-411">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-412">傳回兩個 32 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-412">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-413">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-413">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-414">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-414">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-415">要比較的兩個 64 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-415">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-416">要比較的兩個 64 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-416">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-417">傳回兩個 64 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-417">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-418">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-418">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-419">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-419">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-420">要比較的兩個 8 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-420">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-421">要比較的兩個 8 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-421">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-422">傳回兩個 8 位元帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-422">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-423">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-423">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-424">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-424">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-425">要比較的兩個單精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-425">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-426">要比較的兩個單精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-426">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-427">傳回兩個單精確度浮點數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-427">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-428">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-428">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="f0e7e-429">如果 <paramref name="val1" /> 或 <paramref name="val2" />，或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Single.NaN" />，則會傳回 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-429">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-430">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-430">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-431">要比較的兩個 16 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-431">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-432">要比較的兩個 16 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-432">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-433">傳回兩個 16 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-433">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-434">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-434">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-435">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-435">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-436">要比較的兩個 32 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-436">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-437">要比較的兩個 32 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-437">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-438">傳回兩個 32 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-438">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-439">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-439">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-440">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-440">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-441">要比較的兩個 64 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-441">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-442">要比較的兩個 64 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-442">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-443">傳回兩個 64 位元不帶正負號整數中較大的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-443">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-444">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較大者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-444">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-445">下列範例示範如何使用<xref:System.Math.Max%2A>方法傳回，並顯示較大的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-445">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-446">傳回兩個數字中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-446">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-447">要比較的兩個 8 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-447">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-448">要比較的兩個 8 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-448">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-449">傳回兩個 8 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-449">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-450">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-450">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-451">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-451">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-452">要比較的兩個十進位數字的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-452">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-453">要比較的兩個十進位數字中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-453">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-454">傳回兩個十進位數字中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-454">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-455">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-455">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-456">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-456">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-457">要比較的兩個雙精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-457">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-458">要比較的兩個雙精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-458">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-459">傳回兩個雙精確度浮點數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-459">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-460">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-460">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="f0e7e-461">如果 <paramref name="val1" />、<paramref name="val2" /> 或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Double.NaN" />，則會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-461">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-462">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-462">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-463">要比較的兩個 16 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-463">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-464">要比較的兩個 16 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-464">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-465">傳回兩個 16 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-465">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-466">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-466">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-467">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-467">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-468">要比較的兩個 32 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-468">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-469">要比較的兩個 32 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-469">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-470">傳回兩個 32 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-470">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-471">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-471">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-472">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-472">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-473">要比較的兩個 64 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-473">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-474">要比較的兩個 64 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-474">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-475">傳回兩個 64 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-475">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-476">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-476">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-477">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-477">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-478">要比較的兩個 8 位元帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-478">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-479">要比較的兩個 8 位元帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-479">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-480">傳回兩個 8 位元帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-480">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-481">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-481">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-482">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-482">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-483">要比較的兩個單精確度浮點數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-483">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-484">要比較的兩個單精確度浮點數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-484">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-485">傳回兩個單精確度浮點數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-485">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-486">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-486">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="f0e7e-487">如果 <paramref name="val1" />、<paramref name="val2" /> 或 <paramref name="val1" /> 和 <paramref name="val2" /> 都等於 <see cref="F:System.Single.NaN" />，則會傳回 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-487">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-488">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-488">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-489">要比較的兩個 16 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-489">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-490">要比較的兩個 16 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-490">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-491">傳回兩個 16 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-491">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-492">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-492">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-493">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-493">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-494">要比較的兩個 32 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-494">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-495">要比較的兩個 32 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-495">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-496">傳回兩個 32 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-496">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-497">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-497">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-498">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-498">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f0e7e-499">要比較的兩個 64 位元不帶正負號整數中的第一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-499">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f0e7e-500">要比較的兩個 64 位元不帶正負號整數中的第二個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-500">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f0e7e-501">傳回兩個 64 位元不帶正負號整數中較小的一個。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-501">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-502">參數 <paramref name="val1" /> 或 <paramref name="val2" /> (取其較小者)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-502">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-503">下列範例示範如何使用<xref:System.Math.Min%2A>方法来傳回並顯示較小的兩個變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-503">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f0e7e-504">代表圓周率，由常數 π 指定。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-504">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-505">這個欄位的值是 3.14159265358979323846。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-505">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-506">下列範例會使用<xref:System.Math.PI>協助指定 trapezoid 內部角度的計算。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-506">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f0e7e-507">雙精確度浮點數，做為乘冪數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-507">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="f0e7e-508">雙精確度浮點數，用來指定乘冪數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-508">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="f0e7e-509">傳回具有指定乘冪數的指定數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-509">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-510">數字 <paramref name="x" /> 的 <paramref name="y" /> 次方。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-510">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-511">下表指出傳回的值，指定不同的值的範圍時`x`和`y`參數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-511">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="f0e7e-512">如需詳細資訊，請參閱<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>、<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>和<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-512">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="f0e7e-513">參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-513">Parameters</span></span>|<span data-ttu-id="f0e7e-514">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-514">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="f0e7e-515">`x` 或是`y`  =  `NaN`。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-515">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="f0e7e-516">`x` = 以外的任何值`NaN`;`y` = 0。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-516">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="f0e7e-517">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-517">1</span></span>|  
|<span data-ttu-id="f0e7e-518">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-518">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="f0e7e-519">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-519">0</span></span>|  
|<span data-ttu-id="f0e7e-520">`x` = `NegativeInfinity`;`y`奇數的正整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-520">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="f0e7e-521">`x` = `NegativeInfinity`;`y`是正數，但不是奇數整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-521">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f0e7e-522">`x` < 0，但不是`NegativeInfinity`;`y`不是整數， `NegativeInfinity`，或`PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-522">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="f0e7e-523">`x` =-1;`y`  =  `NegativeInfinity`或`PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-523">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="f0e7e-524">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-524">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f0e7e-525">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-525">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="f0e7e-526">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-526">0</span></span>|  
|<span data-ttu-id="f0e7e-527">`x` <-1 或`x`> 1。`y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-527">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="f0e7e-528">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-528">0</span></span>|  
|<span data-ttu-id="f0e7e-529">`x` <-1 或`x`> 1。`y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-529">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f0e7e-530">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-530">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f0e7e-531">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-531">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="f0e7e-532">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-532">0</span></span>|  
|<span data-ttu-id="f0e7e-533">`x` = 1;`y`以外的任何值`NaN`。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-533">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="f0e7e-534">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-534">1</span></span>|  
|<span data-ttu-id="f0e7e-535">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-535">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="f0e7e-536">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-536">0</span></span>|  
|<span data-ttu-id="f0e7e-537">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="f0e7e-537">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-538">下列範例會使用<xref:System.Math.Pow%2A>方法，以計算所產生的引發 2 乘冪，範圍從 0 到 32 的值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-538">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-539">將值四捨五入為最接近的整數或是指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-539">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-540">本節內容：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-540">In this section:</span></span>  
  
 <span data-ttu-id="f0e7e-541">[多載的方法語法](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-541">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="f0e7e-542">[參數](#Params) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-542">[Parameters](#Params) </span></span>  
 <span data-ttu-id="f0e7e-543">[傳回值](#Returns) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-543">[Return value](#Returns) </span></span>  
 <span data-ttu-id="f0e7e-544">[例外狀況](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-544">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="f0e7e-545">[我呼叫的方法？](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-545">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="f0e7e-546">[中間值和捨入的慣例](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-546">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="f0e7e-547">[捨入和有效位數](#Precision) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-547">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="f0e7e-548">[四捨五入和單精確度浮點值](#Single) </span><span class="sxs-lookup"><span data-stu-id="f0e7e-548">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="f0e7e-549">例如：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-549">Examples:</span></span>   
 [<span data-ttu-id="f0e7e-550">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-550">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="f0e7e-551">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-551">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="f0e7e-552">Math.Round （十進位，Int32）</span><span class="sxs-lookup"><span data-stu-id="f0e7e-552">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="f0e7e-553">Math.Round （小、 MidpointRounding）</span><span class="sxs-lookup"><span data-stu-id="f0e7e-553">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="f0e7e-554">Math.Round （雙精度浮點數，Int32）</span><span class="sxs-lookup"><span data-stu-id="f0e7e-554">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="f0e7e-555">Math.Round(Double, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-555">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 <span data-ttu-id="f0e7e-556">[Math.Round ([十進位]，Int32，MidpointRounding)](#Round7_Example)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-556">[Math.Round(Decimal, Int32, MidpointRounding)](#Round7_Example)</span></span>  
 [<span data-ttu-id="f0e7e-557">Math.Round (雙精度浮點數，Int32，MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-557">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="f0e7e-558">版本資訊</span><span class="sxs-lookup"><span data-stu-id="f0e7e-558">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="f0e7e-559">多載的方法語法</span><span class="sxs-lookup"><span data-stu-id="f0e7e-559">Overloaded method syntax</span></span>  
 <span data-ttu-id="f0e7e-560">如需其他指引選擇多載的詳細資訊，請參閱[執行呼叫的方法？](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="f0e7e-560">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="f0e7e-561">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-561">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="f0e7e-562">會四捨五入為最接近的整數、 十進位值，並會四捨五入至最接近的偶數的中點值 ([範例](#Round1_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-562">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="f0e7e-563">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-563">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="f0e7e-564">雙精確度浮點數捨入為最接近的整數，並會四捨五入至最接近的偶數的中點值 ([範例](#Round2_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-564">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="f0e7e-565">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-565">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="f0e7e-566">將指定的數字的小數數字，十進位值四捨五入，並會四捨五入至最接近的偶數的中點值 ([範例](#Round3_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-566">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="f0e7e-567">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-567">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="f0e7e-568">雙精確度浮點數捨入為指定的數個小數位數，並會四捨五入至最接近的偶數的中點值 ([範例](#Round4_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-568">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="f0e7e-569">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-569">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="f0e7e-570">會四捨五入為最接近的整數、 十進位值，並使用指定的捨入慣例中點值 ([範例](#Round5_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-570">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="f0e7e-571">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-571">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="f0e7e-572">雙精確度浮點數捨入為最接近的整數，並使用指定的捨入慣例的中點值 ([範例](#Round6_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-572">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="f0e7e-573">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-573">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="f0e7e-574">將指定的數字的小數數字，十進位值四捨五入，並使用指定的捨入慣例中點值 ([範例](#Round7_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-574">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="f0e7e-575">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="f0e7e-575">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="f0e7e-576">將指定小數位數，雙精確度浮點值四捨五入，並使用指定的捨入慣例中點值 ([範例](#Round8_Example))。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-576">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="f0e7e-577">參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-577">Parameters</span></span>  
 <span data-ttu-id="f0e7e-578">這是完整的參數清單<xref:System.Math.Round%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-578">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="f0e7e-579">每個多載所使用的參數，請參閱上述的多載語法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-579">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="f0e7e-580">參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-580">Parameter</span></span>|<span data-ttu-id="f0e7e-581">類型</span><span class="sxs-lookup"><span data-stu-id="f0e7e-581">Type</span></span>|<span data-ttu-id="f0e7e-582">描述</span><span class="sxs-lookup"><span data-stu-id="f0e7e-582">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="f0e7e-583">要四捨五入的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-583">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="f0e7e-584">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-584">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="f0e7e-585">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-585">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="f0e7e-586">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-586">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="f0e7e-587">傳回值中小數點後數字的數目。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-587">The number of fractional digits in the return value.</span></span> <span data-ttu-id="f0e7e-588">針對<xref:System.Decimal>值，它的範圍從 0 到 28。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-588">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="f0e7e-589">針對<xref:System.Double>值，它的範圍從 0 到 15。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-589">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="f0e7e-590">請注意，15 整數和小數的數字所支援的最大數目<xref:System.Double>型別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-590">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="f0e7e-591">預設值： 0，會捨入為整數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-591">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="f0e7e-592">旗標，指定要用於中間值捨入的慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-592">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="f0e7e-593">請參閱[中間點的值和捨入慣例](#Midpoint)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-593">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="f0e7e-594">預設值： <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> </span><span class="sxs-lookup"><span data-stu-id="f0e7e-594">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="f0e7e-595">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-595">Return value</span></span>  
 <span data-ttu-id="f0e7e-596">類型：<xref:System.Decimal>或<xref:System.Double>，取決於要捨入值的型別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-596">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="f0e7e-597">數值為相同型別的`d`， `a`，或`value`，但捨入為整數或十進位數字指定的數目。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-597">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="f0e7e-598">請參閱[中間點的值和捨入慣例](#Midpoint)的中點值的數字四捨五入的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-598">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f0e7e-599">當中間點值捨入，捨入的演算法會執行等號比較測試。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-599">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="f0e7e-600">二進位表示法和浮點格式的有效位數的問題，因為方法所傳回的值可以是未預期的。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-600">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="f0e7e-601">如需詳細資訊，請參閱 <<c0> [ 捨入和有效位數](#Precision)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-601">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="f0e7e-602">如果使用多載<xref:System.Double>參數呼叫<xref:System.Double.NaN?displayProperty=nameWithType>，則方法會傳回<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-602">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f0e7e-603">如果呼叫具有<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>或是<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>，則方法會傳回<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>或<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>分別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-603">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="f0e7e-604">例外狀況</span><span class="sxs-lookup"><span data-stu-id="f0e7e-604">Exceptions</span></span>  
  
|<span data-ttu-id="f0e7e-605">例外</span><span class="sxs-lookup"><span data-stu-id="f0e7e-605">Exception</span></span>|<span data-ttu-id="f0e7e-606">條件</span><span class="sxs-lookup"><span data-stu-id="f0e7e-606">Condition</span></span>|<span data-ttu-id="f0e7e-607">藉由擲回</span><span class="sxs-lookup"><span data-stu-id="f0e7e-607">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="f0e7e-608">結果超出範圍<xref:System.Decimal>型別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-608">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="f0e7e-609">`decimals` 小於 0 或大於 28。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-609">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="f0e7e-610">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-610">-or-</span></span><br /><br /> <span data-ttu-id="f0e7e-611">`digits` 小於 0 或大於 15。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-611">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="f0e7e-612">`mode` 不是有效的 <xref:System.MidpointRounding> 值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-612">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="f0e7e-613">我呼叫的方法？</span><span class="sxs-lookup"><span data-stu-id="f0e7e-613">Which method do I call?</span></span>  
  
|<span data-ttu-id="f0e7e-614">以</span><span class="sxs-lookup"><span data-stu-id="f0e7e-614">To</span></span>|<span data-ttu-id="f0e7e-615">Call</span><span class="sxs-lookup"><span data-stu-id="f0e7e-615">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="f0e7e-616">將數值四捨五入到整數使用四捨五入至最接近的慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-616">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="f0e7e-617">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-617">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="f0e7e-618">使用指定的整數的數字四捨五入進位慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-618">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="f0e7e-619">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-619">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="f0e7e-620">將指定的小數位數的數字四捨五入使用四捨五入至最接近的慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-620">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="f0e7e-621">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-621">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="f0e7e-622">使用指定的小數位數的指定數目的數字四捨五入進位慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-622">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="f0e7e-623">-或-</span><span class="sxs-lookup"><span data-stu-id="f0e7e-623">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="f0e7e-624">Round<xref:System.Single>藉由指定捨入慣例和最小化遺失有效位數的小數位數的指定數目的值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-624">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="f0e7e-625">轉換<xref:System.Single>要<xref:System.Decimal>，並呼叫<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-625">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="f0e7e-626">將數值四捨五入到指定的小數位數降至最低的中點值捨入的有效位數的問題。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-626">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="f0e7e-627">呼叫會實作 「 大於或大約等於 」 比較的捨入方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-627">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="f0e7e-628">請參閱[捨入和有效位數](#Precision)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-628">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="f0e7e-629">四捨五入為整數的小數值大於小數的值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-629">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="f0e7e-630">比方說，圓形 3.1 到 4。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-630">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="f0e7e-631">四捨五入為整數的小數值低於小數的值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-631">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="f0e7e-632">比方說，圓形 3.9 到 3。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-632">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="f0e7e-633">中間值和捨入的慣例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-633">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="f0e7e-634">捨入牽涉到將指定的有效位數的數字值轉換成最接近的值較少精確度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-634">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="f0e7e-635">例如，您可以使用<xref:System.Math.Round%28System.Double%29>要捨入到 3.0 3.4 值的方法和<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>要捨入到 3.58 3.579 值的方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-635">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="f0e7e-636">在中間值，結果中的最小顯著性數字後的值會是精確的一半兩個數字之間。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-636">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="f0e7e-637">比方說，3.47500 是中間值，如果要進位的兩個小數位數，而且 7.500 是中間值，如果要捨入到整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-637">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="f0e7e-638">在這些情況下，最接近的值無法輕鬆地識別不捨入的慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-638">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="f0e7e-639"><xref:System.Math.Round%2A>方法支援兩種捨入的慣例來處理中點值：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-639">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="f0e7e-640">**遠離零四捨五入**</span><span class="sxs-lookup"><span data-stu-id="f0e7e-640">**Rounding away from zero**</span></span>  
 <span data-ttu-id="f0e7e-641">中間值會捨入為下一步 的數字背離零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-641">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="f0e7e-642">比方說，3.75 捨入為 3.8，3.85 的會四捨五入為 3.9，-3.75 捨入為-3.8，和-3.85 會捨入為-3.9。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-642">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="f0e7e-643">這種形式的捨入由<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列舉成員。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-643">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="f0e7e-644">遠離零四捨五入為最廣泛的已知的形式的四捨五入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-644">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="f0e7e-645">**四捨五入為最接近，或成雙**</span><span class="sxs-lookup"><span data-stu-id="f0e7e-645">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="f0e7e-646">中間值會四捨五入至最接近的偶數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-646">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="f0e7e-647">比方說，3.75 和 3.85 捨入到 3.8，，和-3.75 和-3.85 捨入-3.8。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-647">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="f0e7e-648">這種形式的捨入由<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列舉成員。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-648">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="f0e7e-649">四捨五入為最接近是標準形式的捨入財務和統計作業中使用。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-649">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="f0e7e-650">它符合 IEEE 標準 754，第 4 節。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-650">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f0e7e-651">多個的捨入運算中使用時，它會減少因一致四捨五入單向中的點值捨入錯誤。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-651">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="f0e7e-652">在某些情況下，這種捨入錯誤很可觀。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-652">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="f0e7e-653">下列範例說明可能會造成一致四捨五入單向中的點值的偏差。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-653">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="f0e7e-654">範例會計算陣列的真正平均值<xref:System.Decimal>值，然後再計算平均值，當陣列中的值會捨入所使用的兩個的慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-654">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="f0e7e-655">在此範例中，則為 true 的平均和結果時捨入為最接近的平均值都相同。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-655">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="f0e7e-656">不過，遠離零四捨五入時結果的平均值與不同.05 （或 3.6%） 的真正平均值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-656">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="f0e7e-657">根據預設，<xref:System.Math.Round%2A>方法會使用四捨五入至最接近的慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-657">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="f0e7e-658">下表列出的多載<xref:System.Math.Round%2A>方法，並捨入的慣例，每個使用。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-658">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="f0e7e-659">多載</span><span class="sxs-lookup"><span data-stu-id="f0e7e-659">Overload</span></span>|<span data-ttu-id="f0e7e-660">捨入慣例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-660">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="f0e7e-661">取決於`mode`參數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-661">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="f0e7e-662">取決於`mode`參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-662">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="f0e7e-663">取決於`mode`參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-663">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="f0e7e-664">取決於`mode`參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-664">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="f0e7e-665">捨入和有效位數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-665">Rounding and precision</span></span>  
 <span data-ttu-id="f0e7e-666">若要判斷是否捨入運算牽涉到中點值，<xref:System.Math.Round%2A>方法將原始值捨入 10<sup>n</sup>，其中*n*是所需的小數位數數字中的傳回值，然後判斷其餘的小數部分的值是否大於或等於.5。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-666">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="f0e7e-667">這是稍有不同的 「 的相等測試 」 一節中的測試是否相等，並如所述<xref:System.Double>參考主題中，具有浮點值是否相等的測試有問題，因為二進位浮點格式的問題表示和有效位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-667">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="f0e7e-668">這表示不會在向上四捨五入為略小於.5 （因為遺失有效位數） 數字的任何小數部分。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-668">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="f0e7e-669">下面範例會說明此問題。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-669">The following example illustrates the problem.</span></span> <span data-ttu-id="f0e7e-670">重複，它會新增至 11.0.1，四捨五入到最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-670">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="f0e7e-671">捨入的慣例，不論 11.5 應該捨入到 12。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-671">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="f0e7e-672">不過，範例所示的輸出，則沒有。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-672">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="f0e7e-673">此範例會使用"R"[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)顯示浮點值的完整有效位數和顯示數值捨入已遺失有效位數，期間重複的新增項目，和其值實際上是11.499999999999998。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-673">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="f0e7e-674">由於.499999999999998 小於.5，值不會四捨五入至下一步 的最大整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-674">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="f0e7e-675">此範例也示範，因為這個問題不會發生我們只需指派常數值 11.5<xref:System.Double>變數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-675">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="f0e7e-676">中點值捨入的有效位數的問題最有可能發生下列情況：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-676">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="f0e7e-677">當小數的值無法以精確的浮點類型的二進位格式。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-677">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="f0e7e-678">當要四捨五入的值會計算從一個或多個浮點運算。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-678">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="f0e7e-679">數值捨入何時<xref:System.Single>而非<xref:System.Double>或<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-679">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="f0e7e-680">如需詳細資訊，請參閱下一步 區段中，[捨入和單精確度浮點值](#Single)。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-680">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="f0e7e-681">您可以在其中缺少中捨入作業的有效位數是有問題的情況下，執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-681">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="f0e7e-682">如果四捨五入運算呼叫多載會無條件<xref:System.Double>值，您可以變更<xref:System.Double>要<xref:System.Decimal>值，並呼叫將捨入的多載<xref:System.Decimal>值改為。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-682">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="f0e7e-683">雖然<xref:System.Decimal>資料型別也有表示法的問題和遺失有效位數，這些問題不遠較不常見。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-683">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="f0e7e-684">定義自訂的捨入演算法會執行 「 幾乎等於"的測試，以判斷要四捨五入的值是否接受接近中間值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-684">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="f0e7e-685">下列範例會定義`RoundApproximate`檢查小數值是否為夠靠近受制於捨入中間點的中點值的方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-685">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="f0e7e-686">如範例輸出所示，它會修正前一範例所示的捨入問題。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-686">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="f0e7e-687">四捨五入和單精確度浮點值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-687">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="f0e7e-688"><xref:System.Math.Round%2A>方法包含接受類型引數的多載<xref:System.Decimal>和<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-688">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="f0e7e-689">捨入值的型別沒有方法<xref:System.Single>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-689">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="f0e7e-690">如果您傳遞<xref:System.Single>值設為其中的多載<xref:System.Math.Round%2A>方法，它是轉型 （在 C# 中)，或 （在 Visual Basic) 轉換成<xref:System.Double>，和對應<xref:System.Math.Round%2A>多載<xref:System.Double>參數稱為。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-690">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="f0e7e-691">雖然這是擴展轉換，但它通常牽涉到遺失有效位數，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-691">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="f0e7e-692">當<xref:System.Single>16.325 的值會傳遞至<xref:System.Math.Round%2A>方法和捨入成兩個小數位數，使用四捨五入至最接近的慣例，結果是 16.32 16.33 和未預期結果。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-692">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="f0e7e-693">這個未預期的結果是因為遺失的轉換中的有效位數<xref:System.Single>值<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-693">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="f0e7e-694">因為產生<xref:System.Double>、 16.325000762939453 的值不是一個中間點值，且大於 16.325 一律向上四捨五入。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-694">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="f0e7e-695">在許多情況下，如範例所示，遺失有效位數可以最小化或轉型或轉換以消除<xref:System.Single>值<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-695">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="f0e7e-696">請注意，這是縮小轉換，因為它需要使用轉換運算子或呼叫轉換方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-696">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="f0e7e-697">Math.Round(Decimal) 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-697">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="f0e7e-698">下列範例示範<xref:System.Math.Round%28System.Decimal%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-698">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="f0e7e-699">請注意， <xref:System.Decimal> 4.5 的值會捨入為 4，而不是 5，因為這個多載會使用預設<xref:System.MidpointRounding.ToEven>慣例。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-699">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="f0e7e-700">Math.Round(Double) 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-700">Math.Round(Double) example</span></span>  
 <span data-ttu-id="f0e7e-701">下列範例會示範捨入為最接近的整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-701">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="f0e7e-702">Math.Round （十進位，Int32） 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-702">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="f0e7e-703">下列範例會將與具有單一的小數位數的值的兩個小數位數的十進位值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-703">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="f0e7e-704">Math.Round （雙精度浮點數，Int32） 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-704">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="f0e7e-705">下列範例會將具有以雙精度浮點數中有單一的小數位數的兩個小數位數的雙精度浮點數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-705">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="f0e7e-706">Math.Round （小、 MidpointRounding） 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-706">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="f0e7e-707">下列範例會顯示所傳回的值<xref:System.Math.Round%28System.Decimal%29>方法中，<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法`mode`引數<xref:System.MidpointRounding.ToEven>，而<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法`mode`引數<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-707">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="f0e7e-708">Math.Round （雙精度浮點數，MidpointRounding） 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-708">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="f0e7e-709">下列範例會顯示所傳回的值<xref:System.Math.Round%28System.Double%29>方法中，<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>方法`mode`引數<xref:System.MidpointRounding.ToEven>，而<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>方法`mode`引數<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-709">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="f0e7e-710">Math.Round ([十進位]，Int32，MidpointRounding) 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-710">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="f0e7e-711">下列範例示範如何使用<xref:System.Math.Round%2A>方法使用<xref:System.MidpointRounding>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-711">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="f0e7e-712">Math.Round (雙精度浮點數，Int32，MidpointRounding) 範例</span><span class="sxs-lookup"><span data-stu-id="f0e7e-712">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="f0e7e-713">下列範例示範如何使用<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>方法使用<xref:System.MidpointRounding>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-713">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="f0e7e-714">版本資訊</span><span class="sxs-lookup"><span data-stu-id="f0e7e-714">Version information</span></span>  
 <span data-ttu-id="f0e7e-715">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="f0e7e-715">.NET Framework</span></span>  
 <span data-ttu-id="f0e7e-716">而不會多載<xref:System.MidpointRounding>中支援參數： 4.5、 4、 3.5、 3.0、 2.0、 1.1 和 1.0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-716">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="f0e7e-717">使用多載<xref:System.MidpointRounding>中支援參數： 4.5、 4、 3.5、 3.0、 2.0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-717">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="f0e7e-718">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="f0e7e-718">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="f0e7e-719">所有多載支援： 4、 3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-719">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="f0e7e-720">可攜式類別庫</span><span class="sxs-lookup"><span data-stu-id="f0e7e-720">Portable Class Library</span></span>  
 <span data-ttu-id="f0e7e-721">支援所有的多載</span><span class="sxs-lookup"><span data-stu-id="f0e7e-721">All overloads are supported</span></span>  
  
 <span data-ttu-id="f0e7e-722">適用於 Windows 市集應用程式的 .NET</span><span class="sxs-lookup"><span data-stu-id="f0e7e-722">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="f0e7e-723">所有多載支援： Windows 8</span><span class="sxs-lookup"><span data-stu-id="f0e7e-723">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-724">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-724">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="f0e7e-725">將十進位的值四捨五入為最接近的整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-725">Rounds a decimal value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-726">最接近參數 <paramref name="d" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-726">The integer nearest parameter <paramref name="d" />.</span></span> <span data-ttu-id="f0e7e-727">如果 <paramref name="d" /> 的小數部分正好為兩個整數的中間數 (一個為偶數，另一個為奇數)，則會傳回偶數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-727">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="f0e7e-728">請注意，這個方法會傳回 <see cref="T:System.Decimal" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-728">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-729">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-729">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-730">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-730">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-731">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-731">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="f0e7e-732">將雙精確度浮點數四捨五入為最接近的整數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-732">Rounds a double-precision floating-point value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-733">最接近 <paramref name="a" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-733">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="f0e7e-734">如果 <paramref name="a" /> 的小數部分正好為兩個整數的中間數 (一個為偶數，另一個為奇數)，則會傳回偶數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-734">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="f0e7e-735">請注意，這個方法會傳回 <see cref="T:System.Double" />，而不是整數類型。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-735">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-736">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-736">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  

<span data-ttu-id="f0e7e-737">從 Visual Basic 15.8，雙精度浮點數到整數的轉換的效能最佳化如果您傳遞所傳回的值`Round`方法的任何[整數類資料的轉換函式](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者如果雙精度浮點數值所傳回`Round`會自動轉換為整數[Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md)設為 Off。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-737">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Round` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Round` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f0e7e-738">此最佳化可讓程式碼執行速度，最多兩次轉換為整數類型的一大堆程式碼的速度一樣。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-738">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f0e7e-739">下列範例說明這類最佳化的轉換：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-739">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="f0e7e-740">因為可能會造成無法表示為浮點數的數字的十進位值，或執行在某些情況下的浮點值的算術運算的有效位數遺失而<see cref="M:System.Math.Round(System.Double)" />方法可能不會出現要捨入到中點值最接近的偶數整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-740">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="f0e7e-741">在下列範例中，因為浮點值.1 有沒有有限的二進位表示法，第一次呼叫<see cref="M:System.Math.Round(System.Double)" />11.5 值的方法會傳回 11，而不是 12。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-741">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="f0e7e-742">[！ 的程式碼 csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [！ 的程式碼 vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="f0e7e-742">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-743">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-743">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="f0e7e-744">傳回值中的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-744">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="f0e7e-745">將十進位值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-745">Rounds a decimal value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-746">最接近 <paramref name="d" /> 的數字，其中包含等於 <paramref name="decimals" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-746">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-747">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-747">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f0e7e-748"><paramref name="decimals" /> 小於 0 或大於 28。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-748"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-749">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-749">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-750">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-750">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="f0e7e-751">指定如果 <paramref name="d" /> 介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-751">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f0e7e-752">將十進位值四捨五入為最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-752">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="f0e7e-753">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-753">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-754">最接近 <paramref name="d" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-754">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="f0e7e-755">如果 <paramref name="d" /> 正好為兩個數字的中間數 (一個為偶數，另一個為奇數)，則 <paramref name="mode" /> 會判斷要傳回哪個數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-755">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-756">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-756">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0e7e-757"><paramref name="mode" /> 不是有效的 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-757"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-758">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-758">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-759">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-759">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="f0e7e-760">傳回值中小數點後數字的數目。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-760">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="f0e7e-761">將雙精確度浮點值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-761">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-762">最接近 <paramref name="value" /> 的數字，其中包含等於 <paramref name="digits" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-762">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-763">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-763">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f0e7e-764"><paramref name="digits" /> 小於 0 或大於 15。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-764"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="f0e7e-765">因為可能會造成無法表示為浮點數的數字的十進位值，或執行在某些情況下的浮點值的算術運算的有效位數遺失而<see cref="M:System.Math.Round(System.Double,System.Int32)" />方法可能不會出現要捨入到中點值最接近的偶數值<paramref name="digits" />小數點位置。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-765">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="f0e7e-766">下列範例中，其中 2.135 會捨入到 2.13 而不是 2.14 所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-766">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="f0e7e-767">這是因為方法在內部乘以<paramref name="value" />10<sup>數字</sup>，並在此情況下經歷遺失有效位數乘法運算。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-767">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="f0e7e-768">[！ 的程式碼 csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [！ 的程式碼 vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="f0e7e-768">[!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-769">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-769">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="f0e7e-770">指定如果 <paramref name="value" /> 介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-770">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f0e7e-771">將雙精確度浮點數四捨五入為最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-771">Rounds a double-precision floating-point value to the nearest integer.</span></span> <span data-ttu-id="f0e7e-772">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-772">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-773">最接近 <paramref name="value" /> 的整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-773">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="f0e7e-774">如果 <paramref name="value" /> 正好為兩個整數的中間數 (一個為偶數，另一個為奇數)，則 <paramref name="mode" /> 會判斷要傳回哪個整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-774">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-775">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-775">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0e7e-776"><paramref name="mode" /> 不是有效的 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-776"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="f0e7e-777">因為可能會造成無法表示為浮點數的數字的十進位值，或執行在某些情況下的浮點值的算術運算的有效位數遺失而<see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" />方法可能不會出現要捨入到中點值最接近的偶數整數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-777">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="f0e7e-778">在下列範例中，因為浮點值.1 有沒有有限的二進位表示法，第一次呼叫<see cref="M:System.Math.Round(System.Double)" />11.5 值的方法會傳回 11，而不是 12。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-778">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="f0e7e-779">[！ 的程式碼 csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [！ 的程式碼 vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="f0e7e-779">[!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-780">要四捨五入的十進位數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-780">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="f0e7e-781">傳回值中的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-781">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="f0e7e-782">指定如果 <paramref name="d" /> 介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-782">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f0e7e-783">將十進位值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-783">Rounds a decimal value to a specified number of fractional digits.</span></span> <span data-ttu-id="f0e7e-784">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-784">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-785">最接近 <paramref name="d" /> 的數字，其中包含等於 <paramref name="decimals" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-785">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="f0e7e-786">如果 <paramref name="d" /> 的小數位數少於 <paramref name="decimals" />，<paramref name="d" /> 傳回時不會變更。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-786">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-787">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-787">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f0e7e-788"><paramref name="decimals" /> 小於 0 或大於 28。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-788"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0e7e-789"><paramref name="mode" /> 不是有效的 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-789"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f0e7e-790">結果位於 <see cref="T:System.Decimal" /> 的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-790">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-791">要四捨五入的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-791">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="f0e7e-792">傳回值中小數點後數字的數目。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-792">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="f0e7e-793">指定如果 <paramref name="value" /> 介於另外兩個數字中間的四捨五入法。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-793">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f0e7e-794">將雙精確度浮點值四捨五入為指定的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-794">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span> <span data-ttu-id="f0e7e-795">如果值介於兩個數字之間，參數會指定如何四捨五入該值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-795">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-796">最接近 <paramref name="value" /> 的數字，其中包含等於 <paramref name="digits" /> 的小數位數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-796">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="f0e7e-797">如果 <paramref name="value" /> 的小數位數少於 <paramref name="digits" />，<paramref name="value" /> 傳回時不會變更。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-797">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f0e7e-798">如需範例和完整的使用方式資訊有關這個主題以及其他多載`Round`方法，請參閱<xref:System.Math.Round%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-798">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f0e7e-799"><paramref name="digits" /> 小於 0 或大於 15。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-799"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0e7e-800"><paramref name="mode" /> 不是有效的 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-800"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="f0e7e-801">因為可能會造成無法表示為浮點數的數字的十進位值，或執行在某些情況下的浮點值的算術運算的有效位數遺失而<see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />方法可能不會出現要捨入為指定的中點值藉由<paramref name="mode" />參數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-801">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="f0e7e-802">下列範例中，其中 2.135 會捨入到 2.13 而不是 2.14 所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-802">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="f0e7e-803">這是因為方法在內部乘以<paramref name="value" />10<sup>數字</sup>，並在此情況下經歷遺失有效位數乘法運算。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-803">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="f0e7e-804">[！ 的程式碼 csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [！ 的程式碼 vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="f0e7e-804">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-805">傳回整數，表示數字的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-805">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-806">帶正負號的十進位數值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-806">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-807">傳回整數，這個整數表示十進位數字的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-807">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-808">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-808">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f0e7e-809">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-809">Return value</span></span> 
 </term><description> <span data-ttu-id="f0e7e-810">意義</span><span class="sxs-lookup"><span data-stu-id="f0e7e-810">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-811">-1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-811">-1</span></span> 
 </term><description><span data-ttu-id="f0e7e-812"><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-812"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-813">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-813">0</span></span> 
 </term><description><span data-ttu-id="f0e7e-814"><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-814"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-815">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-815">1</span></span> 
 </term><description><span data-ttu-id="f0e7e-816"><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-816"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-817">下列範例示範如何使用<xref:System.Math.Sign%28System.Decimal%29>方法，以判斷的正負號<xref:System.Decimal>值並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-817">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-818">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-818">A signed number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-819">傳回整數，表示雙精確度浮點數的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-819">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-820">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-820">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f0e7e-821">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-821">Return value</span></span> 
 </term><description> <span data-ttu-id="f0e7e-822">意義</span><span class="sxs-lookup"><span data-stu-id="f0e7e-822">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-823">-1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-823">-1</span></span> 
 </term><description><span data-ttu-id="f0e7e-824"><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-824"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-825">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-825">0</span></span> 
 </term><description><span data-ttu-id="f0e7e-826"><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-826"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-827">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-827">1</span></span> 
 </term><description><span data-ttu-id="f0e7e-828"><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-828"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-829">下列範例示範如何使用<xref:System.Math.Sign%28System.Double%29>方法，以判斷的正負號<xref:System.Double>值並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-829">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="f0e7e-830"><paramref name="value" /> 等於 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-830"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-831">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-831">A signed number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-832">傳回整數，這個整數表示 16 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-832">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-833">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-833">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f0e7e-834">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-834">Return value</span></span> 
 </term><description> <span data-ttu-id="f0e7e-835">意義</span><span class="sxs-lookup"><span data-stu-id="f0e7e-835">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-836">-1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-836">-1</span></span> 
 </term><description><span data-ttu-id="f0e7e-837"><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-837"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-838">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-838">0</span></span> 
 </term><description><span data-ttu-id="f0e7e-839"><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-839"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-840">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-840">1</span></span> 
 </term><description><span data-ttu-id="f0e7e-841"><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-841"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-842">下列範例示範如何使用<xref:System.Math.Sign%28System.Int16%29>方法，以判斷的正負號<xref:System.Int16>值並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-842">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-843">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-843">A signed number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-844">傳回整數，這個整數表示 32 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-844">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-845">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-845">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f0e7e-846">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-846">Return value</span></span> 
 </term><description> <span data-ttu-id="f0e7e-847">意義</span><span class="sxs-lookup"><span data-stu-id="f0e7e-847">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-848">-1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-848">-1</span></span> 
 </term><description><span data-ttu-id="f0e7e-849"><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-849"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-850">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-850">0</span></span> 
 </term><description><span data-ttu-id="f0e7e-851"><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-851"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-852">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-852">1</span></span> 
 </term><description><span data-ttu-id="f0e7e-853"><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-853"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-854">下列範例示範如何使用<xref:System.Math.Sign%28System.Int32%29>方法，以判斷的正負號<xref:System.Int32>值並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-854">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-855">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-855">A signed number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-856">傳回整數，表示 64 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-856">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-857">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-857">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f0e7e-858">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-858">Return value</span></span> 
 </term><description> <span data-ttu-id="f0e7e-859">意義</span><span class="sxs-lookup"><span data-stu-id="f0e7e-859">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-860">-1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-860">-1</span></span> 
 </term><description><span data-ttu-id="f0e7e-861"><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-861"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-862">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-862">0</span></span> 
 </term><description><span data-ttu-id="f0e7e-863"><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-863"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-864">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-864">1</span></span> 
 </term><description><span data-ttu-id="f0e7e-865"><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-865"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-866">下列範例示範如何使用<xref:System.Math.Sign%28System.Int64%29>方法，以判斷的正負號<xref:System.Int64>值並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-866">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-867">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-867">A signed number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-868">傳回整數，表示 8 位元帶正負號整數的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-868">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-869">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-869">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f0e7e-870">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-870">Return value</span></span> 
 </term><description> <span data-ttu-id="f0e7e-871">意義</span><span class="sxs-lookup"><span data-stu-id="f0e7e-871">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-872">-1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-872">-1</span></span> 
 </term><description><span data-ttu-id="f0e7e-873"><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-873"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-874">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-874">0</span></span> 
 </term><description><span data-ttu-id="f0e7e-875"><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-875"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-876">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-876">1</span></span> 
 </term><description><span data-ttu-id="f0e7e-877"><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-877"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-878">下列範例示範如何使用<xref:System.Math.Sign%28System.SByte%29>方法，以判斷的正負號<xref:System.SByte>值並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-878">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-879">帶正負號的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-879">A signed number.</span></span></param>
        <summary><span data-ttu-id="f0e7e-880">傳回整數，表示單精確度浮點數的正負號。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-880">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-881">表示 <paramref name="value" /> 正負符號的數字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-881">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f0e7e-882">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-882">Return value</span></span> 
 </term><description> <span data-ttu-id="f0e7e-883">意義</span><span class="sxs-lookup"><span data-stu-id="f0e7e-883">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-884">-1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-884">-1</span></span> 
 </term><description><span data-ttu-id="f0e7e-885"><paramref name="value" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-885"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-886">0</span><span class="sxs-lookup"><span data-stu-id="f0e7e-886">0</span></span> 
 </term><description><span data-ttu-id="f0e7e-887"><paramref name="value" /> 等於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-887"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-888">1</span><span class="sxs-lookup"><span data-stu-id="f0e7e-888">1</span></span> 
 </term><description><span data-ttu-id="f0e7e-889"><paramref name="value" /> 大於零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-889"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-890">下列範例示範如何使用<xref:System.Math.Sign%28System.Single%29>方法，以判斷的正負號<xref:System.Single>值並將它顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-890">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="f0e7e-891"><paramref name="value" /> 等於 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-891"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-892">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-892">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f0e7e-893">傳回指定角的正弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-893">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-894"><paramref name="a" />的正弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-894">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="f0e7e-895">如果 <paramref name="a" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-895">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-896">角度`a`，必須是以弧度為單位。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-896">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="f0e7e-897">乘以 <xref:System.Math.PI?displayProperty=nameWithType> /180，將度數轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-897">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="f0e7e-898">可接受的值的`a`到大約 9223372036854775295 大約-9223372036854775295 的範圍內。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-898">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="f0e7e-899">值超出此範圍中，<xref:System.Math.Sin%2A>方法會傳回`a`不變，而不是擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-899">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-900">下列範例會使用<xref:System.Math.Sin%2A>評估某些選取的角度的三角身分識別。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-900">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-901">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-901">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f0e7e-902">傳回指定角的雙曲線正弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-902">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-903"><paramref name="value" />的雙曲線正弦函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-903">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="f0e7e-904">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NaN" />，則這個方法會傳回等於 <paramref name="value" /> 的 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-904">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-905">角度`value`，必須是以弧度為單位。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-905">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="f0e7e-906">乘以 <xref:System.Math.PI?displayProperty=nameWithType> /180，將度數轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-906">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-907">下列範例會使用<xref:System.Math.Sinh%2A>評估某些雙曲的身分識別選取值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-907">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-908">要找出其平方根的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-908">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="f0e7e-909">傳回指定數字的平方根。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-909">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-910">下表的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-910">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f0e7e-911"><paramref name="d" /> 參數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-911"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f0e7e-912">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-912">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f0e7e-913">零或正數</span><span class="sxs-lookup"><span data-stu-id="f0e7e-913">Zero or positive</span></span> 
 </term><description> <span data-ttu-id="f0e7e-914"><paramref name="d" /> 的正平方根。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-914">The positive square root of <paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f0e7e-915">負</span><span class="sxs-lookup"><span data-stu-id="f0e7e-915">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f0e7e-916">等於 <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="f0e7e-916">Equals <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f0e7e-917">等於 <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f0e7e-917">Equals <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0e7e-918">正方形的面積平方根表示的長度平方的任何一側。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-918">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="f0e7e-919">下列範例會部分城市的區域顯示在美國，並提供每個城市的大小的印象，如果它已由正方形。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-919">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f0e7e-920">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-920">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f0e7e-921">傳回指定角的正切函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-921">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-922">的正切函數<paramref name="a" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-922">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="f0e7e-923">如果 <paramref name="a" /> 等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-923">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-924">角度`a`，必須是以弧度為單位。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-924">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="f0e7e-925">乘以 <xref:System.Math.PI?displayProperty=nameWithType> /180，將度數轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-925">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-926">下列範例示範如何計算角度的正切函數，並顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-926">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f0e7e-927">以弧度為單位的角度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-927">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f0e7e-928">傳回指定角的雙曲線正切函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-928">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-929"><paramref name="value" />的雙曲線正切函數。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-929">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="f0e7e-930">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NegativeInfinity" />，則這個方法會傳回 -1。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-930">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="f0e7e-931">如果值等於 <see cref="F:System.Double.PositiveInfinity" />，則這個方法會傳回 1。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-931">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="f0e7e-932">如果 <paramref name="value" /> 等於 <see cref="F:System.Double.NaN" />，則這個方法會傳回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-932">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-933">角度`value`，必須是以弧度為單位。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-933">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="f0e7e-934">乘以 <xref:System.Math.PI?displayProperty=nameWithType> /180，將度數轉換為弧度。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-934">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-935">下列範例會使用<xref:System.Math.Tanh%2A>評估某些雙曲線正切函數身分識別選取值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-935">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e7e-936">計算數字的整數部分。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-936">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-937">數字四捨五入至最接近的整數，推向零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-937">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-938">要截斷的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-938">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="f0e7e-939">計算指定的十進位數字的整數部分。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-939">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-940"><paramref name="d" /> 的整數部分；換言之，捨棄所有小數點後的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-940">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e7e-941"><xref:System.Math.Truncate%2A> 將捨入`d`為最接近的整數，推向零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-941"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e7e-942">下列範例會呼叫<xref:System.Math.Truncate%28System.Decimal%29>方法來截斷正和負<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-942">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f0e7e-943">要截斷的數字。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-943">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="f0e7e-944">計算指定的雙精確度浮點數的整數部分。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-944">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f0e7e-945"><paramref name="d" /> 的整數部分；換言之，捨棄所有小數點後的數字，或是下表中列出的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-945">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <list type="table"><listheader><term><paramref name="d" /></term><description> <span data-ttu-id="f0e7e-946">傳回值</span><span class="sxs-lookup"><span data-stu-id="f0e7e-946">Return value</span></span> 
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f0e7e-947"><xref:System.Math.Truncate%2A> 將捨入`d`為最接近的整數，推向零。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-947"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
<span data-ttu-id="f0e7e-948">從 Visual Basic 15.8，雙精度浮點數到整數的轉換的效能最佳化如果您傳遞所傳回的值`Truncate`方法的任何[整數類資料的轉換函式](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者如果雙精度浮點數值所傳回`Truncate`會自動轉換為整數[Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md)設為 Off。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-948">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Truncate` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Truncate` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f0e7e-949">此最佳化可讓程式碼執行速度，最多兩次轉換為整數類型的一大堆程式碼的速度一樣。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-949">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f0e7e-950">下列範例說明這種最佳化的轉換：</span><span class="sxs-lookup"><span data-stu-id="f0e7e-950">The following example illustrates such an optimized conversion:</span></span>
   
```vb
Dim d As Double = 164.7194
Dim i As Integer = CInt(Math.Truncate(d))     ' Result: 164
```

## Examples  
 <span data-ttu-id="f0e7e-951">下列範例會呼叫<xref:System.Math.Truncate%28System.Double%29>方法來截斷正和負<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="f0e7e-951">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>