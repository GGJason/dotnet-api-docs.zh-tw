<Type Name="Array" FullName="System.Array">
  <TypeSignature Language="C#" Value="public abstract class Array : ICloneable, System.Collections.IList, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Array extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Array" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Array&#xA;Implements ICloneable, IList, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Array abstract : ICloneable, System::Collections::IList, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="925c9-101">提供建立、管理、搜尋和排序陣列的方法，可在 Common Language Runtime 時做為所有陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="925c9-101">Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-102"><xref:System.Array>類別不是屬於<xref:System.Collections>命名空間。</span><span class="sxs-lookup"><span data-stu-id="925c9-102">The <xref:System.Array> class is not part of the <xref:System.Collections> namespaces.</span></span> <span data-ttu-id="925c9-103">不過，它仍然是集合因為它根據<xref:System.Collections.IList>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-103">However, it is still considered a collection because it is based on the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="925c9-104"><xref:System.Array>類別是支援陣列的語言實作的基底類別。</span><span class="sxs-lookup"><span data-stu-id="925c9-104">The <xref:System.Array> class is the base class for language implementations that support arrays.</span></span> <span data-ttu-id="925c9-105">不過，只有系統和編譯器可以明確地從衍生<xref:System.Array>類別。</span><span class="sxs-lookup"><span data-stu-id="925c9-105">However, only the system and compilers can derive explicitly from the <xref:System.Array> class.</span></span> <span data-ttu-id="925c9-106">使用者應該使用的語言所提供的陣列建構。</span><span class="sxs-lookup"><span data-stu-id="925c9-106">Users should employ the array constructs provided by the language.</span></span>  
  
 <span data-ttu-id="925c9-107">項目是中的值<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-107">An element is a value in an <xref:System.Array>.</span></span> <span data-ttu-id="925c9-108">長度<xref:System.Array>是它可以包含的元素總數。</span><span class="sxs-lookup"><span data-stu-id="925c9-108">The length of an <xref:System.Array> is the total number of elements it can contain.</span></span> <span data-ttu-id="925c9-109">下限為<xref:System.Array>是其第一個元素的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-109">The lower bound of an <xref:System.Array> is the index of its first element.</span></span> <span data-ttu-id="925c9-110"><xref:System.Array>可以有任何下限，但其下限為零的預設值。</span><span class="sxs-lookup"><span data-stu-id="925c9-110">An <xref:System.Array> can have any lower bound, but it has a lower bound of zero by default.</span></span> <span data-ttu-id="925c9-111">建立的執行個體時，就可以定義其他下限<xref:System.Array>類別使用<xref:System.Array.CreateInstance%2A>。多維度<xref:System.Array>可以有不同的繫結，每個維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-111">A different lower bound can be defined when creating an instance of the <xref:System.Array> class using <xref:System.Array.CreateInstance%2A>.A multidimensional <xref:System.Array> can have different bounds for each dimension.</span></span> <span data-ttu-id="925c9-112">陣列可以有 32 個維度的最大值。</span><span class="sxs-lookup"><span data-stu-id="925c9-112">An array can have a maximum of 32 dimensions.</span></span>  
  
 <span data-ttu-id="925c9-113">不同於在類別<xref:System.Collections>命名空間，<xref:System.Array>具有固定的容量。</span><span class="sxs-lookup"><span data-stu-id="925c9-113">Unlike the classes in the <xref:System.Collections> namespaces, <xref:System.Array> has a fixed capacity.</span></span> <span data-ttu-id="925c9-114">若要增加容量，您必須建立新<xref:System.Array>物件具有所需容量，請複製項目從舊<xref:System.Array>物件到新的專案，並刪除舊<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-114">To increase the capacity, you must create a new <xref:System.Array> object with the required capacity, copy the elements from the old <xref:System.Array> object to the new one, and delete the old <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-115">根據預設，最大<xref:System.Array>為 2 gb (GB)。</span><span class="sxs-lookup"><span data-stu-id="925c9-115">By default, the maximum size of an <xref:System.Array> is 2 gigabytes (GB).</span></span> <span data-ttu-id="925c9-116">在 64 位元環境中，您可以避免大小限制，藉由設定`enabled`屬性[gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md)組態項目`true`在執行階段環境中。</span><span class="sxs-lookup"><span data-stu-id="925c9-116">In a 64-bit environment, you can avoid the size restriction by setting the `enabled` attribute of the [gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span> <span data-ttu-id="925c9-117">不過，陣列仍會限制為 4 10 億個項目的總計和 0X7FEFFFFF 中任何指定的維度 (0X7FFFFFC7 位元組陣列和陣列的單一位元組結構) 的最大索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-117">However, the array will still be limited to a total of 4 billion elements, and to a maximum index of 0X7FEFFFFF in any given dimension (0X7FFFFFC7 for byte arrays and arrays of single-byte structures).</span></span>  
  
 <span data-ttu-id="925c9-118">一維陣列實作<xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>， <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>， <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>，<xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType>和<xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType>泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-118">Single-dimensional arrays implement the <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> and <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> generic interfaces.</span></span> <span data-ttu-id="925c9-119">陣列中提供實作在執行階段，以及泛型介面如此一來，未出現在宣告語法<xref:System.Array>類別。</span><span class="sxs-lookup"><span data-stu-id="925c9-119">The implementations are provided to arrays at run time, and as a result, the generic interfaces do not appear in the declaration syntax for the <xref:System.Array> class.</span></span> <span data-ttu-id="925c9-120">此外，還有介面的成員可存取只能透過將轉型為泛型介面型別 （明確介面實作） 的陣列沒有參考主題。</span><span class="sxs-lookup"><span data-stu-id="925c9-120">In addition,  there are no reference topics for interface members that are accessible only by casting an array to the generic interface type (explicit interface implementations).</span></span> <span data-ttu-id="925c9-121">留意這些介面的其中一個陣列的轉換時的重點是成員的加入，請插入或移除項目 throw <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-121">The key thing to be aware of when you cast an array to one of these interfaces is that members which add, insert, or remove elements throw <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="925c9-122"><xref:System.Type> 物件會提供資訊的陣列型別宣告。</span><span class="sxs-lookup"><span data-stu-id="925c9-122"><xref:System.Type> objects provide information about array type declarations.</span></span> <span data-ttu-id="925c9-123"><xref:System.Array> 具有相同的陣列型別的物件共用相同<xref:System.Type>物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-123"><xref:System.Array> objects with the same array type share the same <xref:System.Type> object.</span></span>  
  
 <span data-ttu-id="925c9-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> 和<xref:System.Type.GetElementType%2A?displayProperty=nameWithType>可能不會傳回預期的結果與<xref:System.Array>因為如果陣列轉換成類型<xref:System.Array>，結果是一個物件，而非陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> and <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> might not return the expected results with <xref:System.Array> because if an array is cast to the type <xref:System.Array>, the result is an object, not an array.</span></span> <span data-ttu-id="925c9-125">也就是說，`typeof(System.Array).IsArray`傳回`false`，和`typeof(System.Array).GetElementType`傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-125">That is, `typeof(System.Array).IsArray` returns `false`, and `typeof(System.Array).GetElementType` returns `null`.</span></span>  
  
 <span data-ttu-id="925c9-126"><xref:System.Array.Copy%2A?displayProperty=nameWithType>方法會複製項目相同的類型陣列之間的不只但不同類型的標準陣列之間; 它會處理類型會自動轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-126">The <xref:System.Array.Copy%2A?displayProperty=nameWithType> method copies elements not only between arrays of the same type but also between standard arrays of different types; it handles type casting automatically.</span></span>  
  
 <span data-ttu-id="925c9-127">某些方法，例如<xref:System.Array.CreateInstance%2A>， <xref:System.Array.Copy%2A>， <xref:System.Array.CopyTo%2A>， <xref:System.Array.GetValue%2A>，和<xref:System.Array.SetValue%2A>，提供多載，可接受參數，以容納陣列大容量為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-127">Some methods, such as <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, and <xref:System.Array.SetValue%2A>, provide overloads that accept 64-bit integers as parameters to accommodate large capacity arrays.</span></span> <span data-ttu-id="925c9-128"><xref:System.Array.LongLength%2A> 和<xref:System.Array.GetLongLength%2A>傳回 64 位元整數，指出陣列的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-128"><xref:System.Array.LongLength%2A> and <xref:System.Array.GetLongLength%2A> return 64-bit integers indicating the length of the array.</span></span>  
  
 <span data-ttu-id="925c9-129"><xref:System.Array>不保證排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-129">The <xref:System.Array> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="925c9-130">必須排序<xref:System.Array>之前執行的作業 (例如<xref:System.Array.BinarySearch%2A>) 需要的<xref:System.Array>來排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-130">You must sort the <xref:System.Array> prior to performing operations (such as <xref:System.Array.BinarySearch%2A>) that require the <xref:System.Array> to be sorted.</span></span>  
  
 <span data-ttu-id="925c9-131">使用<xref:System.Array>的原生程式碼中的指標物件不支援，將會擲回<xref:System.NotSupportedException>數個方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-131">Using an <xref:System.Array> object of pointers in native code is not supported and will throw a <xref:System.NotSupportedException> for several methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-132">下列程式碼範例示範如何<xref:System.Array.Copy%2A?displayProperty=nameWithType>項目型別整數的陣列型別的陣列之間複製<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="925c9-132">The following code example shows how <xref:System.Array.Copy%2A?displayProperty=nameWithType> copies elements between an array of type integer and an array of type <xref:System.Object>.</span></span>  
  
 [!code-cpp[Classic Array Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source.cs#1)]
 [!code-vb[Classic Array Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source.vb#1)]  
  
 <span data-ttu-id="925c9-133">下列程式碼範例會建立並初始化<xref:System.Array>，並顯示其屬性和其項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-133">The following code example creates and initializes an <xref:System.Array> and displays its properties and its elements.</span></span>  
  
 [!code-cpp[Classic Array Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source3.cpp#2)]
 [!code-csharp[Classic Array Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source3.cs#2)]
 [!code-vb[Classic Array Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source3.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="925c9-134">公用靜態 (<see langword="Shared" />在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="925c9-134">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="925c9-135">不保證任何執行個體成員是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="925c9-135">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="925c9-136">此實作不會提供同步處理 （安全執行緒） 包裝函式<see cref="T:System.Array" />; 不過，.NET Framework 類別根據<see cref="T:System.Array" />提供自己的集合的同步化的版本<see cref="P:System.Array.SyncRoot" />屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-136">This implementation does not provide a synchronized (thread safe) wrapper for an <see cref="T:System.Array" />; however, .NET Framework classes based on <see cref="T:System.Array" /> provide their own synchronized version of the collection using the <see cref="P:System.Array.SyncRoot" /> property.</span></span>  
  
 <span data-ttu-id="925c9-137">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="925c9-137">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="925c9-138">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-138">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="925c9-139">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-139">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="AsReadOnly&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; AsReadOnly&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.AsReadOnly``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsReadOnly(Of T) (array As T()) As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-140">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-140">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-141">要在唯讀 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 包裝函式中包裝的以零為起始的一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-141">The one-dimensional, zero-based array to wrap in a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper.</span></span></param>
        <summary><span data-ttu-id="925c9-142">傳回指定之陣列的唯讀包裝函式。</span><span class="sxs-lookup"><span data-stu-id="925c9-142">Returns a read-only wrapper for the specified array.</span></span></summary>
        <returns><span data-ttu-id="925c9-143">指定之陣列的唯讀 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 包裝函式。</span><span class="sxs-lookup"><span data-stu-id="925c9-143">A read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the specified array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-144">若要避免陣列的任何修改，公開的陣列，只能透過這個包裝函式。</span><span class="sxs-lookup"><span data-stu-id="925c9-144">To prevent any modifications to the array, expose the array only through this wrapper.</span></span>  
  
 <span data-ttu-id="925c9-145">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="925c9-145">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="925c9-146">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-146">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-147">下列範例中的唯讀包裝陣列<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-147">The following example wraps an array in a read-only <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 [!code-cpp[System.Array.AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CPP/arrayasreadonly.cpp#1)]
 [!code-csharp[System.Array.AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CS/arrayasreadonly.cs#1)]
 [!code-vb[System.Array.AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.AsReadOnly/VB/arrayasreadonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-148"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-148"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-149">使用二進位搜尋演算法，在一維且已排序的 <see cref="T:System.Array" /> 中搜尋值。</span><span class="sxs-lookup"><span data-stu-id="925c9-149">Searches a one-dimensional sorted <see cref="T:System.Array" /> for a value, using a binary search algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-150">要搜尋之已排序的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-150">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-151">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-151">The object to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-152">使用陣列每個項目和指定物件所實作的 <see cref="T:System.IComparable" /> 介面，在整個一維已排序的陣列中搜尋特定的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-152">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified object.</span></span></summary>
        <returns><span data-ttu-id="925c9-153">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-153">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-154">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-154">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-155">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-155">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-156">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-156">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-157">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-157">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-158">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-158">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-159">如果<xref:System.Array>不包含指定的值，此方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-159">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-160">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-160">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="925c9-161">此索引大於陣列的上限是否有任何元素大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-161">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-162">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-162">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-163">可能是`value`或每個項目`array`必須實作<xref:System.IComparable>介面，用於比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-163">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="925c9-164">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-164">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-165">如果`value`未實作<xref:System.IComparable>介面的項目`array`不需要測試的<xref:System.IComparable>之前開始搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-165">If`value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="925c9-166">如果搜尋遇到未實作的項目，會擲回例外狀況<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="925c9-166">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="925c9-167">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-167">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-168">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-168">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-169">`null` 一定要與其他任何參考類型; 比較因此，比較`null`並不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-169">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-170">每個項目測試，`value`傳遞至適當<xref:System.IComparable>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-170">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-171">也就是說，<xref:System.IComparable>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-171">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-172">這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-172">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-173">下列程式碼範例示範如何使用<xref:System.Array.BinarySearch%2A>找不到中的特定物件<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-173">The following code example shows how to use <xref:System.Array.BinarySearch%2A> to locate a specific object in an <xref:System.Array>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-174">建立陣列的元素以遞增排序次序。</span><span class="sxs-lookup"><span data-stu-id="925c9-174">The array is created with its elements in ascending sort order.</span></span> <span data-ttu-id="925c9-175"><xref:System.Array.BinarySearch%2A>方法必須要以遞增順序排序的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-175">The <xref:System.Array.BinarySearch%2A> method requires the array to be sorted in ascending order.</span></span>  
  
 [!code-cpp[Classic Array.BinarySearch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.BinarySearch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CS/source.cs#1)]
 [!code-vb[Classic Array.BinarySearch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-176"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-176"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-177"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-177"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-178"><paramref name="value" /> 的類型與 <paramref name="array" /> 項目不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-178"><paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-179"><paramref name="value" /> 不會實作 <see cref="T:System.IComparable" /> 介面，且搜尋時遇到未實作 <see cref="T:System.IComparable" /> 介面的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-179"><paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-180">要搜尋之已排序的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-180">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-181">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-181">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-182">比較項目時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-182">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-183">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-183">-or-</span></span>  
  
 <span data-ttu-id="925c9-184"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-184"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-185">使用指定的 <see cref="T:System.Collections.IComparer" /> 介面，在整個一維已排序的陣列中搜尋值。</span><span class="sxs-lookup"><span data-stu-id="925c9-185">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <returns><span data-ttu-id="925c9-186">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-186">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-187">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-187">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-188">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-188">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-189">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-189">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-190">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-190">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-191">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-191">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-192">如果<xref:System.Array>不包含指定的值，此方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-192">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-193">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-193">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="925c9-194">此索引大於陣列的上限是否有任何元素大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-194">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-195">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-195">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-196">比較子自訂元素的比較方式。</span><span class="sxs-lookup"><span data-stu-id="925c9-196">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="925c9-197">例如，您可以使用<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>為要執行不區分大小寫的字串搜尋的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-197">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="925c9-198">如果`comparer`不`null`的項目`array`指定使用指定的值比較<xref:System.Collections.IComparer>實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-198">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="925c9-199">項目`array`已必須以遞增的值，根據所定義的排序次序排序`comparer`; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-199">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="925c9-200">如果`comparer`是`null`，進行比較使用<xref:System.IComparable>實作所提供項目本身，或指定的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-200">If`comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="925c9-201">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-201">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-202">如果`comparer`是`null`和`value`未實作<xref:System.IComparable>介面的項目`array`不需要測試的<xref:System.IComparable>之前開始搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-202">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="925c9-203">如果搜尋遇到未實作的項目，會擲回例外狀況<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="925c9-203">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="925c9-204">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-204">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-205">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-205">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-206">`null` 一定要與其他任何參考類型; 比較因此，比較`null`並不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-206">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-207">每個項目測試，`value`傳遞至適當<xref:System.IComparable>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-207">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-208">也就是說，<xref:System.IComparable>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-208">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-209">這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-209">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-210"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-210"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-211"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-211"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-212"><paramref name="comparer" /> 是 <see langword="null" />，且 <paramref name="value" /> 的類型與 <paramref name="array" /> 項目不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-212"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-213"><paramref name="comparer" /> 是 <see langword="null" />，<paramref name="value" /> 不會實作 <see cref="T:System.IComparable" /> 介面，且搜尋時遇到未實作 <see cref="T:System.IComparable" /> 介面的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-213"><paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-214">要搜尋之已排序的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-214">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-215">要搜尋範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-215">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-216">搜尋範圍的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-216">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-217">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-217">The object to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-218">使用陣列的每個項目和指定之值所實作的 <see cref="T:System.IComparable" /> 介面，在已排序的一維陣列內某個範圍的項目中搜尋值。</span><span class="sxs-lookup"><span data-stu-id="925c9-218">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified value.</span></span></summary>
        <returns><span data-ttu-id="925c9-219">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-219">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-220">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-220">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-221">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-221">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-222">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-222">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-223">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-223">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-224">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-224">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-225">如果<xref:System.Array>不包含指定的值，此方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-225">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-226">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-226">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="925c9-227">此索引大於陣列的上限是否有任何元素大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-227">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-228">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-228">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-229">可能是`value`或每個項目`array`必須實作<xref:System.IComparable>介面，用於比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-229">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="925c9-230">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-230">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-231">如果`value`未實作<xref:System.IComparable>介面的項目`array`不需要測試的<xref:System.IComparable>之前開始搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-231">If `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="925c9-232">如果搜尋遇到未實作的項目，會擲回例外狀況<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="925c9-232">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="925c9-233">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-233">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-234">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-234">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-235">`null` 一定要與其他任何參考類型; 比較因此，比較`null`並不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-235">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-236">每個項目測試，`value`傳遞至適當<xref:System.IComparable>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-236">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-237">也就是說，<xref:System.IComparable>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-237">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-238">這個方法是 O (記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-238">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-239"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-239"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-240"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-240"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-241"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-241"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-242">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-242">-or-</span></span>  
  
 <span data-ttu-id="925c9-243"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-243"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-244"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-244"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-245">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-245">-or-</span></span>  
  
 <span data-ttu-id="925c9-246"><paramref name="value" /> 的類型與 <paramref name="array" /> 項目不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-246"><paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-247"><paramref name="value" /> 不會實作 <see cref="T:System.IComparable" /> 介面，且搜尋時遇到未實作 <see cref="T:System.IComparable" /> 介面的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-247"><paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-248">要搜尋之已排序的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-248">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-249">要搜尋範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-249">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-250">搜尋範圍的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-250">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-251">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-251">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-252">比較項目時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-252">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-253">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-253">-or-</span></span>  
  
 <span data-ttu-id="925c9-254"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-254"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-255">使用指定的 <see cref="T:System.Collections.IComparer" /> 介面，在已排序的一維陣列內某範圍的項目中搜尋值。</span><span class="sxs-lookup"><span data-stu-id="925c9-255">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <returns><span data-ttu-id="925c9-256">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-256">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-257">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-257">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-258">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-258">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-259">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-259">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-260">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-260">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-261">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-261">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-262">如果<xref:System.Array>不包含指定的值，此方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-262">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-263">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-263">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="925c9-264">此索引大於陣列的上限是否有任何元素大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-264">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-265">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-265">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-266">比較子自訂元素的比較方式。</span><span class="sxs-lookup"><span data-stu-id="925c9-266">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="925c9-267">例如，您可以使用<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>為要執行不區分大小寫的字串搜尋的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-267">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="925c9-268">如果`comparer`不`null`的項目`array`指定使用指定的值比較<xref:System.Collections.IComparer>實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-268">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="925c9-269">項目`array`已必須以遞增的值，根據所定義的排序次序排序`comparer`; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-269">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="925c9-270">如果`comparer`是`null`，進行比較使用<xref:System.IComparable>實作所提供項目本身，或指定的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-270">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="925c9-271">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-271">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-272">如果`comparer`是`null`和`value`未實作<xref:System.IComparable>介面的項目`array`不需要測試的<xref:System.IComparable>之前開始搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-272">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="925c9-273">如果搜尋遇到未實作的項目，會擲回例外狀況<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="925c9-273">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="925c9-274">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-274">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-275">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-275">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-276">`null` 一定要與其他任何參考類型; 比較因此，比較`null`不會產生例外狀況時使用<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="925c9-276">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-277">每個項目測試，`value`傳遞至適當<xref:System.IComparable>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-277">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-278">也就是說，<xref:System.IComparable>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-278">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-279">這個方法是 O (記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-279">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-280"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-280"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-281"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-281"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-282"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-282"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-283">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-283">-or-</span></span>  
  
 <span data-ttu-id="925c9-284"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-284"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-285"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-285"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-286">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-286">-or-</span></span>  
  
 <span data-ttu-id="925c9-287"><paramref name="comparer" /> 是 <see langword="null" />，且 <paramref name="value" /> 的類型與 <paramref name="array" /> 項目不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-287"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-288"><paramref name="comparer" /> 是 <see langword="null" />，<paramref name="value" /> 不會實作 <see cref="T:System.IComparable" /> 介面，且搜尋時遇到未實作 <see cref="T:System.IComparable" /> 介面的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-288"><paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-289">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-289">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-290">要搜尋的一維 <see cref="T:System.Array" /> (其以零為起始且已排序)。</span><span class="sxs-lookup"><span data-stu-id="925c9-290">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-291">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-291">The object to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-292">使用 <see cref="T:System.Array" /> 的每個項目和指定之物件所實作的 <see cref="T:System.IComparable`1" /> 泛型介面，在整個已排序的一維陣列中搜尋特定的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-292">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</span></span></summary>
        <returns><span data-ttu-id="925c9-293">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-293">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-294">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-294">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-295">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-295">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-296">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-296">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-297">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-297">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-298">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-298">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-299">如果`array`不包含指定的值，此方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-299">If `array` does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-300">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-300">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="925c9-301">這個索引等於陣列的大小，如果有任何項目大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-301">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-302">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-302">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-303">`T` 必須實作<xref:System.IComparable%601>泛型介面，用於比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-303">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="925c9-304">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable%601>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-304">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="925c9-305">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-305">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-306">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-306">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-307">`null` 一定要與其他任何參考類型; 比較因此，比較`null`並不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-307">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-308">每個項目測試，`value`傳遞至適當<xref:System.IComparable%601>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-308">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-309">也就是說，<xref:System.IComparable%601>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-309">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-310">這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-310">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-311">下列程式碼範例示範<xref:System.Array.Sort%60%601%28%60%600%5B%5D%29>泛型方法的多載而<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>泛型方法的多載。</span><span class="sxs-lookup"><span data-stu-id="925c9-311">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="925c9-312">建立字串陣列，不依特定順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-312">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="925c9-313">陣列會顯示、 已排序，並且會再次顯示。</span><span class="sxs-lookup"><span data-stu-id="925c9-313">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="925c9-314">必須排序陣列，才能使用<xref:System.Array.BinarySearch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-314">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-315">若要呼叫<xref:System.Array.Sort%2A>和<xref:System.Array.BinarySearch%2A>泛型方法看起來不任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的第一個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-315">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="925c9-316">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-316">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="925c9-317"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>泛型方法的多載然後來搜尋兩個字串，而非在陣列與其中一個，為。</span><span class="sxs-lookup"><span data-stu-id="925c9-317">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="925c9-318">陣列和傳回值<xref:System.Array.BinarySearch%2A>方法會傳遞至`ShowWhere`泛型的方法，如果找到字串，否則項目搜尋字串會介於陣列中時顯示的索引值。</span><span class="sxs-lookup"><span data-stu-id="925c9-318">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="925c9-319">索引是負值，如果字串不是陣列，所以`ShowWhere`方法會採用的位元補數 (~ 運算子，在 C# 和 Visual c + +，`Xor`在 Visual Basic 中的為-1) 取得第一個元素大於搜尋清單中的索引 str正執行。</span><span class="sxs-lookup"><span data-stu-id="925c9-319">The index is negative if the string is not in the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor`-1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-320"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-320"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-321"><paramref name="T" /> 不實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-321"><paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-322">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-322">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-323">要搜尋的一維 <see cref="T:System.Array" /> (其以零為起始且已排序)。</span><span class="sxs-lookup"><span data-stu-id="925c9-323">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-324">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-324">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-325">比較項目時所要使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-325">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-326">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-326">-or-</span></span>  
  
 <span data-ttu-id="925c9-327"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable`1" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-327"><see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-328">使用指定的 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型介面，在整個已排序的一維陣列中搜尋值。</span><span class="sxs-lookup"><span data-stu-id="925c9-328">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <returns><span data-ttu-id="925c9-329">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-329">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-330">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-330">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-331">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-331">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-332">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-332">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-333">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-333">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-334">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-334">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-335">如果<xref:System.Array>不包含指定的值，此方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-335">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-336">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-336">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="925c9-337">這個索引等於陣列的大小，如果有任何項目大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-337">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-338">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-338">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-339">比較子自訂元素的比較方式。</span><span class="sxs-lookup"><span data-stu-id="925c9-339">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="925c9-340">例如，您可以使用<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>為要執行不區分大小寫的字串搜尋的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-340">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="925c9-341">如果`comparer`不`null`的項目`array`指定使用指定的值比較<xref:System.Collections.Generic.IComparer%601>泛型介面實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-341">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="925c9-342">項目`array`已必須以遞增的值，根據所定義的排序次序排序`comparer`; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-342">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="925c9-343">如果`comparer`是`null`，進行比較使用<xref:System.IComparable%601>所提供的泛型介面實作`T`。</span><span class="sxs-lookup"><span data-stu-id="925c9-343">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided by `T`.</span></span> <span data-ttu-id="925c9-344">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable%601>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-344">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-345">如果`comparer`是`null`和`value`未實作<xref:System.IComparable%601>泛型介面的項目`array`不需要測試的<xref:System.IComparable%601>之前開始搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-345">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable%601> generic interface, the elements of `array` are not tested for <xref:System.IComparable%601> before the search begins.</span></span> <span data-ttu-id="925c9-346">如果搜尋遇到未實作的項目，會擲回例外狀況<xref:System.IComparable%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-346">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable%601>.</span></span>  
  
 <span data-ttu-id="925c9-347">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-347">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-348">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-348">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-349">`null` 一定要與其他任何參考類型; 比較因此，比較`null`並不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-349">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-350">每個項目測試，`value`傳遞至適當<xref:System.IComparable%601>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-350">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-351">也就是說，<xref:System.IComparable%601>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-351">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-352">這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-352">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-353">下列範例會示範<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載而<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載。</span><span class="sxs-lookup"><span data-stu-id="925c9-353">The following example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="925c9-354">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-354">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-355">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-355">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-356">陣列會顯示、 已排序，並且會再次顯示。</span><span class="sxs-lookup"><span data-stu-id="925c9-356">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="925c9-357">必須排序陣列，才能使用<xref:System.Array.BinarySearch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-357">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-358">若要呼叫<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>和<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法看起來不任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的第一個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-358">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="925c9-359">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-359">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="925c9-360"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載然後來搜尋兩個字串，而非在陣列與其中一個，為。</span><span class="sxs-lookup"><span data-stu-id="925c9-360">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="925c9-361">陣列和傳回值<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>方法會傳遞至`ShowWhere`泛型的方法，如果找到字串，否則項目搜尋字串會介於陣列中時顯示的索引值。</span><span class="sxs-lookup"><span data-stu-id="925c9-361">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="925c9-362">索引是負值，如果字串不是 n 陣列，所以`ShowWhere`方法會採用的位元補數 (~ 運算子，在 C# 和 Visual c + +，`Xor`在 Visual Basic 中的為-1) 取得第一個元素大於搜尋 stri 清單中的索引ng。</span><span class="sxs-lookup"><span data-stu-id="925c9-362">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-363"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-363"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-364"><paramref name="comparer" /> 為 <see langword="null" />，且 <paramref name="value" /> 的類型與 <paramref name="array" /> 的項目不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-364"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-365"><paramref name="comparer" /> 為 <see langword="null" />，且 <paramref name="T" /> 未實作 <see cref="T:System.IComparable`1" /> 泛型介面</span><span class="sxs-lookup"><span data-stu-id="925c9-365"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-366">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-366">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-367">要搜尋的已排序且為一維之以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-367">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-368">要搜尋範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-368">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-369">搜尋範圍的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-369">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-370">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-370">The object to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-371">使用 <see cref="T:System.Array" /> 的每個項目和指定值所實作的 <see cref="T:System.IComparable`1" /> 泛型介面，在一維已排序的陣列內某個範圍的項目中搜尋值。</span><span class="sxs-lookup"><span data-stu-id="925c9-371">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</span></span></summary>
        <returns><span data-ttu-id="925c9-372">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-372">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-373">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-373">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-374">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-374">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-375">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-375">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-376">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-376">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-377">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-377">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-378">如果陣列未包含指定的值，則方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-378">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-379">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-379">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="925c9-380">這個索引等於陣列的大小，如果有任何項目大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-380">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-381">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-381">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-382">`T` 必須實作<xref:System.IComparable%601>泛型介面，用於比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-382">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="925c9-383">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable%601>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-383">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="925c9-384">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-384">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-385">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-385">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-386">`null` 一定要與其他任何參考類型; 比較因此，比較`null`並不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-386">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-387">每個項目測試，`value`傳遞至適當<xref:System.IComparable%601>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-387">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-388">也就是說，<xref:System.IComparable%601>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-388">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-389">這個方法是 O (記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-389">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-390"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-390"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-391"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-391"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-392">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-392">-or-</span></span>  
  
 <span data-ttu-id="925c9-393"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-393"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-394"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-394"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-395">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-395">-or-</span></span>  
  
 <span data-ttu-id="925c9-396"><paramref name="value" /> 的類型與 <paramref name="array" /> 項目不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-396"><paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-397"><paramref name="T" /> 不實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-397"><paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-398">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-398">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-399">要搜尋的已排序且為一維之以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-399">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-400">要搜尋範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-400">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-401">搜尋範圍的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-401">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-402">要搜尋的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-402">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-403">比較項目時所要使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-403">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-404">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-404">-or-</span></span>  
  
 <span data-ttu-id="925c9-405"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable`1" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-405"><see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-406">使用指定的 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型介面，在已排序的一維陣列內某範圍的項目中搜尋值。</span><span class="sxs-lookup"><span data-stu-id="925c9-406">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <returns><span data-ttu-id="925c9-407">如果找到 <paramref name="value" />，則為指定的 <paramref name="array" /> 中指定的 <paramref name="value" /> 索引；否則為負數。</span><span class="sxs-lookup"><span data-stu-id="925c9-407">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="925c9-408">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 小於 <paramref name="array" /> 的一或多個項目，傳回的負數是大於 <paramref name="value" /> 的第一個項目索引的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-408">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="925c9-409">如果找不到 <paramref name="value" /> 且 <paramref name="value" /> 大於 <paramref name="array" /> 的所有項目，傳回的負數是 (最後一個項目索引加 1) 的位元補數。</span><span class="sxs-lookup"><span data-stu-id="925c9-409">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="925c9-410">如果以未排序的 <paramref name="array" /> 來呼叫這個方法，傳回值會不正確且可能傳回負數，即使 <paramref name="value" /> 出現在 <paramref name="array" /> 中也一樣。</span><span class="sxs-lookup"><span data-stu-id="925c9-410">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-411">這個方法不支援搜尋的陣列，其中包含負值的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-411">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="925c9-412">`array` 呼叫這個方法之前，必須先排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-412">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="925c9-413">如果陣列未包含指定的值，則方法會傳回負整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-413">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="925c9-414">您可以將套用的位元補數 」 運算子 (~ 在 C# 中，`Not`在 Visual Basic 中) 設為負數的結果來產生索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-414">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="925c9-415">這個索引等於陣列的大小，如果有任何項目大於`value`陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-415">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="925c9-416">否則，它是第一個元素大於索引`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-416">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="925c9-417">比較子自訂元素的比較方式。</span><span class="sxs-lookup"><span data-stu-id="925c9-417">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="925c9-418">例如，您可以使用<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>為要執行不區分大小寫的字串搜尋的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-418">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="925c9-419">如果`comparer`不`null`的項目`array`指定使用指定的值比較<xref:System.Collections.Generic.IComparer%601>泛型介面實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-419">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="925c9-420">項目`array`已必須以遞增的值，根據所定義的排序次序排序`comparer`; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-420">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="925c9-421">如果`comparer`是`null`，進行比較使用<xref:System.IComparable%601>類型提供的泛型介面實作`T`。</span><span class="sxs-lookup"><span data-stu-id="925c9-421">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided for type `T`.</span></span> <span data-ttu-id="925c9-422">項目`array`已必須以遞增的值，根據所定義的排序次序排序<xref:System.IComparable%601>實作; 否則結果可能不正確。</span><span class="sxs-lookup"><span data-stu-id="925c9-422">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="925c9-423">允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-423">Duplicate elements are allowed.</span></span> <span data-ttu-id="925c9-424">如果<xref:System.Array>包含多個元素等於`value`，方法會傳回的其中一個相符項目，並不一定是第一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-424">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="925c9-425">`null` 一定要與其他任何參考類型; 比較因此，比較`null`不會產生例外狀況時使用<xref:System.IComparable%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-425">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable%601>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-426">每個項目測試，`value`傳遞至適當<xref:System.IComparable%601>實作，即使`value`是`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-426">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="925c9-427">也就是說，<xref:System.IComparable%601>實作可讓您決定如何為指定項目與比較`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-427">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="925c9-428">這個方法是 O (記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-428">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-429"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-429"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-430"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-430"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-431">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-431">-or-</span></span>  
  
 <span data-ttu-id="925c9-432"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-432"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-433"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-433"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-434">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-434">-or-</span></span>  
  
 <span data-ttu-id="925c9-435"><paramref name="comparer" /> 是 <see langword="null" />，且 <paramref name="value" /> 的類型與 <paramref name="array" /> 的項目不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-435"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-436"><paramref name="comparer" /> 為 <see langword="null" />，且 <paramref name="T" /> 未實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-436"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clear(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-437">項目需要加以清除的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-437">The array whose elements need to be cleared.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-438">要清除之項目範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-438">The starting index of the range of elements to clear.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-439">要清除的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-439">The number of elements to clear.</span></span></param>
        <summary><span data-ttu-id="925c9-440">將陣列中的項目範圍設定為每個項目類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="925c9-440">Sets a range of elements in an array to the default value of each element type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-441">這個方法重設項目類型的預設值為陣列中的每個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-441">This method resets each element in an array to the element type's default value.</span></span> <span data-ttu-id="925c9-442">它會設定參考類型的項目 (包括<xref:System.String>項目) 來`null`，並將實值類型的項目設定為下表中所顯示的預設值。</span><span class="sxs-lookup"><span data-stu-id="925c9-442">It sets elements of reference types (including <xref:System.String> elements) to `null`, and sets elements of value types to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="925c9-443">類型</span><span class="sxs-lookup"><span data-stu-id="925c9-443">Type</span></span>|<span data-ttu-id="925c9-444">值</span><span class="sxs-lookup"><span data-stu-id="925c9-444">Value</span></span>|  
|----------|-----------|  
|<xref:System.Boolean>|`false`|  
|<span data-ttu-id="925c9-445">所有整數和浮點數值類型</span><span class="sxs-lookup"><span data-stu-id="925c9-445">All integral and floating point numeric types</span></span>|<span data-ttu-id="925c9-446">0 （零）</span><span class="sxs-lookup"><span data-stu-id="925c9-446">0 (zero)</span></span>|  
|<xref:System.DateTime>|<xref:System.DateTime.MinValue?displayProperty=nameWithType>|  
|<span data-ttu-id="925c9-447">其他實值類型</span><span class="sxs-lookup"><span data-stu-id="925c9-447">Other value types</span></span>|<span data-ttu-id="925c9-448">預設值是類型的欄位</span><span class="sxs-lookup"><span data-stu-id="925c9-448">Default value of the type's fields</span></span>|  
  
 <span data-ttu-id="925c9-449">範圍清除項目自動換行逐列多維陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-449">The range of cleared elements wrap from row to row in a multi-dimensional array.</span></span>  
  
 <span data-ttu-id="925c9-450">這個方法只會清除的項目; 的值它不會刪除項目本身。</span><span class="sxs-lookup"><span data-stu-id="925c9-450">This method only clears the values of the elements; it does not delete the elements themselves.</span></span> <span data-ttu-id="925c9-451">陣列有固定的大小。因此，無法加入或移除項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-451">An array has a fixed size; therefore, elements cannot be added or removed.</span></span>  
  
 <span data-ttu-id="925c9-452">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-452">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-453">下列範例會使用<xref:System.Array.Clear%2A>方法來重設一維、 二維和三維陣列中的整數值。</span><span class="sxs-lookup"><span data-stu-id="925c9-453">The following example uses the <xref:System.Array.Clear%2A> method to reset integer values in a one-dimensional, two-dimensional, and three-dimensional array.</span></span>  
  
 [!code-csharp[System.Array.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/example.cs#1)]
 [!code-vb[System.Array.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/example.vb#1)]  
  
 <span data-ttu-id="925c9-454">下列範例會定義`TimeZoneTime`結構，其中包含<xref:System.TimeZoneInfo>欄位和<xref:System.DateTimeOffset>欄位。</span><span class="sxs-lookup"><span data-stu-id="925c9-454">The following example defines a `TimeZoneTime` structure that includes a <xref:System.TimeZoneInfo> field and a <xref:System.DateTimeOffset> field.</span></span> <span data-ttu-id="925c9-455">然後它會呼叫<xref:System.Array.Clear%2A>方法，以清除一個項目中的兩個元素陣列`TimeZoneTime`值。</span><span class="sxs-lookup"><span data-stu-id="925c9-455">It then calls the <xref:System.Array.Clear%2A> method to clear one element in a two-element array of `TimeZoneTime` values.</span></span> <span data-ttu-id="925c9-456">方法會將已清除項目的值設定的預設值<xref:System.TimeZoneInfo>物件，它是`null`的預設值和<xref:System.DateTimeOffset>物件，它是<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="925c9-456">The method sets the value of the cleared element to the default value of a <xref:System.TimeZoneInfo> object, which is `null`, and the default value of a <xref:System.DateTimeOffset> object, which is <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Array.Clear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/clearstruct1.cs#2)]
 [!code-vb[System.Array.Clear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/clearstruct1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-457"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-457"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-458"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-458"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-459">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-459">-or-</span></span>  
  
 <span data-ttu-id="925c9-460"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-460"><paramref name="length" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-461">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-461">-or-</span></span>  
  
 <span data-ttu-id="925c9-462"><paramref name="index" /> 和 <paramref name="length" /> 的總和大於 <paramref name="array" /> 的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-462">The sum of <paramref name="index" /> and <paramref name="length" /> is greater than the size of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="925c9-463">建立 <see cref="T:System.Array" /> 的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-463">Creates a shallow copy of the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-464"><see cref="T:System.Array" /> 的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-464">A shallow copy of the <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-465">淺層複本<xref:System.Array>的元素複製<xref:System.Array>，不論它們是參考類型或實值類型，但是不會複製參考所參考的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-465">A shallow copy of an <xref:System.Array> copies only the elements of the <xref:System.Array>, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="925c9-466">在新的參考<xref:System.Array>指向相同物件中原始的參考<xref:System.Array>指向。</span><span class="sxs-lookup"><span data-stu-id="925c9-466">The references in the new <xref:System.Array> point to the same objects that the references in the original <xref:System.Array> point to.</span></span>  
  
 <span data-ttu-id="925c9-467">相反地，深層複製的<xref:System.Array>複製項目，並直接或間接參考之元素的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-467">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="925c9-468">複製是相同<xref:System.Type>與原始<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-468">The clone is of the same <xref:System.Type> as the original <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-469">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>。</span><span class="sxs-lookup"><span data-stu-id="925c9-469">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-470">下列程式碼範例複製品<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>陣列，並示範的淺層複本的行為。</span><span class="sxs-lookup"><span data-stu-id="925c9-470">The following code example clones a <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> array and demonstrates the behavior of a shallow copy.</span></span>  
  
 [!code-cpp[System.Array.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Clone/CPP/arrayclone.cpp#1)]
 [!code-csharp[System.Array.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clone/CS/arrayclone.cs#1)]
 [!code-vb[System.Array.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clone/VB/arrayclone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ConstrainedCopy">
      <MemberSignature Language="C#" Value="public static void ConstrainedCopy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConstrainedCopy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConstrainedCopy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConstrainedCopy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="925c9-471">包含要複製資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-471">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="sourceIndex"><span data-ttu-id="925c9-472">32 位元的整數，代表 <c>sourceArray</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-472">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="925c9-473">接收資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-473">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="925c9-474">32 位元的整數，代表 <c>destinationArray</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-474">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-475">32 位元整數，表示要複製的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-475">A 32-bit integer that represents the number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="925c9-476">從 <see cref="T:System.Array" /> 複製某範圍的項目 (從指定的來源索引開始)，並且將它們貼至另一個 <see cref="T:System.Array" /> (從指定的目的索引開始)。</span><span class="sxs-lookup"><span data-stu-id="925c9-476">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span></span>  <span data-ttu-id="925c9-477">如果此複本未完全成功，則保證所有的變更一定未完成。</span><span class="sxs-lookup"><span data-stu-id="925c9-477">Guarantees that all changes are undone if the copy does not succeed completely.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-478">`sourceArray`和`destinationArray`參數必須有相同的維度數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-478">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span>  <span data-ttu-id="925c9-479">`sourceArray`類型必須相同，或衍生自`destinationArray`輸入; 否則<xref:System.ArrayTypeMismatchException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-479">The `sourceArray` type must be the same as or derived from the `destinationArray` type; otherwise, an <xref:System.ArrayTypeMismatchException> is thrown.</span></span>  <span data-ttu-id="925c9-480">不同於<xref:System.Array.Copy%2A>，<xref:System.Array.ConstrainedCopy%2A>執行任何作業之前先確認陣列類型的相容性。</span><span class="sxs-lookup"><span data-stu-id="925c9-480">Unlike <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> verifies the compatibility of the array types before performing any operation.</span></span>  
  
 <span data-ttu-id="925c9-481">多維陣列之間進行複製，當陣列的行為如同長的一維陣列，其中資料列 （或資料行） 會在概念上排列端對端。</span><span class="sxs-lookup"><span data-stu-id="925c9-481">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="925c9-482">例如，如果陣列有三個資料列 （或資料行） 使用四個元素陣列的開頭，複製六個項目會複製全部的四個元素的第一個資料列 （或資料行） 和第二個資料列 （或資料行） 的前兩個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-482">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="925c9-483">若要開始複製的第三個資料列 （或資料行），第二個項目從`sourceIndex`必須第一個資料列 （或資料行） 的上限加上第二個資料列 （或資料行） 的長度再加上兩個。</span><span class="sxs-lookup"><span data-stu-id="925c9-483">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="925c9-484">如果`sourceArray`和`destinationArray`重疊，這個方法的行為如同的原始值`sourceArray`已保留在暫存位置之前`destinationArray`會覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-484">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="925c9-485">[C++]</span><span class="sxs-lookup"><span data-stu-id="925c9-485">[C++]</span></span>  
  
 <span data-ttu-id="925c9-486">這個方法相當於標準的 C/c + + 函式`memmove`，而非`memcpy`。</span><span class="sxs-lookup"><span data-stu-id="925c9-486">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="925c9-487">陣列可以是參考類型的陣列或實值型別陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-487">The arrays can be reference-type arrays or value-type arrays.</span></span>  <span data-ttu-id="925c9-488">如果`sourceArray`和`destinationArray`有兩個參考類型的陣列或類型的兩個陣列<xref:System.Object>，會執行的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-488">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="925c9-489">淺層複本<xref:System.Array>新<xref:System.Array>包含相同項目與原始參考<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-489">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="925c9-490">項目不會複製本身或項目所參考的任何項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-490">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="925c9-491">相反地，深層複製的<xref:System.Array>複製項目，並直接或間接參考之元素的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-491">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="925c9-492">如果此方法會擲回的例外狀況，正在複製`destinationArray`仍維持不變; 因此，<xref:System.Array.ConstrainedCopy%2A>可用於限制的執行區域 (<xref:System.Runtime.ConstrainedExecution.Cer>)。</span><span class="sxs-lookup"><span data-stu-id="925c9-492">If this method throws an exception while copying, the `destinationArray` remains unchanged; therefore, <xref:System.Array.ConstrainedCopy%2A> can be used within a constrained execution region (<xref:System.Runtime.ConstrainedExecution.Cer>).</span></span>  
  
 <span data-ttu-id="925c9-493">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-493">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-494"><paramref name="sourceArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-494"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-495">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-495">-or-</span></span>  
  
 <span data-ttu-id="925c9-496"><paramref name="destinationArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-496"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-497"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 的順位不同。</span><span class="sxs-lookup"><span data-stu-id="925c9-497"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="925c9-498"><paramref name="sourceArray" /> 類型不同於、也非衍生自 <paramref name="destinationArray" /> 類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-498">The <paramref name="sourceArray" /> type is neither the same as nor derived from the <paramref name="destinationArray" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="925c9-499"><paramref name="sourceArray" /> 至少有一個項目無法轉換成 <paramref name="destinationArray" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-499">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-500"><paramref name="sourceIndex" /> 小於 <paramref name="sourceArray" /> 的第一個維度下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-500"><paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-501">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-501">-or-</span></span>  
  
 <span data-ttu-id="925c9-502"><paramref name="destinationIndex" /> 小於 <paramref name="destinationArray" /> 的第一個維度下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-502"><paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span></span>  
  
 <span data-ttu-id="925c9-503">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-503">-or-</span></span>  
  
 <span data-ttu-id="925c9-504"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-504"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-505"><paramref name="length" /> 大於從 <paramref name="sourceIndex" /> 到 <paramref name="sourceArray" /> 結尾的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-505"><paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-506">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-506">-or-</span></span>  
  
 <span data-ttu-id="925c9-507"><paramref name="length" /> 大於從 <paramref name="destinationIndex" /> 到 <paramref name="destinationArray" /> 結尾的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-507"><paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.Clone" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.Cer" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput[] ConvertAll&lt;TInput,TOutput&gt; (TInput[] array, Converter&lt;TInput,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput[] ConvertAll&lt;TInput, TOutput&gt;(!!TInput[] array, class System.Converter`2&lt;!!TInput, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConvertAll``2(``0[],System.Converter{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertAll(Of TInput, TOutput) (array As TInput(), converter As Converter(Of TInput, TOutput)) As TOutput()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static cli::array &lt;TOutput&gt; ^ ConvertAll(cli::array &lt;TInput&gt; ^ array, Converter&lt;TInput, TOutput&gt; ^ converter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TInput[]" />
        <Parameter Name="converter" Type="System.Converter&lt;TInput,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="925c9-508">來源陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-508">The type of the elements of the source array.</span></span></typeparam>
        <typeparam name="TOutput"><span data-ttu-id="925c9-509">目標陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-509">The type of the elements of the target array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-510">要轉換成目標類型之以零為起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-510">The one-dimensional, zero-based <see cref="T:System.Array" /> to convert to a target type.</span></span></param>
        <param name="converter"><span data-ttu-id="925c9-511"><see cref="T:System.Converter`2" />，可將某一個類型的每一個項目轉換成另一個類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-511">A <see cref="T:System.Converter`2" /> that converts each element from one type to another type.</span></span></param>
        <summary><span data-ttu-id="925c9-512">將某一個類型的陣列轉換成另一個類型的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-512">Converts an array of one type to an array of another type.</span></span></summary>
        <returns><span data-ttu-id="925c9-513">目標類型的陣列，其中包含來源陣列中已轉換的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-513">An array of the target type containing the converted elements from the source array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-514"><xref:System.Converter%602>是將物件轉換成目標型別方法委派。</span><span class="sxs-lookup"><span data-stu-id="925c9-514">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="925c9-515">項目`array`分別傳遞至<xref:System.Converter%602>，和已轉換的項目會儲存在新的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-515">The elements of `array` are individually passed to the <xref:System.Converter%602>, and the converted elements are saved in the new array.</span></span>  
  
 <span data-ttu-id="925c9-516">來源`array`維持不變。</span><span class="sxs-lookup"><span data-stu-id="925c9-516">The source `array` remains unchanged.</span></span>  
  
 <span data-ttu-id="925c9-517">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-517">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-518">下列程式碼範例會定義方法，名為`PointFToPoint`將轉換<xref:System.Drawing.PointF>結構以<xref:System.Drawing.Point>結構。</span><span class="sxs-lookup"><span data-stu-id="925c9-518">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="925c9-519">這個範例會建立的陣列<xref:System.Drawing.PointF>結構、 建立`Converter<PointF, Point>`委派 (`Converter(Of PointF, Point)`在 Visual Basic 中) 來代表`PointFToPoint`方法，並傳遞至委派<xref:System.Array.ConvertAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-519">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="925c9-520"><xref:System.Array.ConvertAll%2A>方法會將傳遞的輸入清單的每個項目`PointFToPoint`方法並將已轉換的項目放入新的清單<xref:System.Drawing.Point>結構。</span><span class="sxs-lookup"><span data-stu-id="925c9-520">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="925c9-521">這兩份清單會顯示。</span><span class="sxs-lookup"><span data-stu-id="925c9-521">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-522"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-522"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-523">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-523">-or-</span></span>  
  
 <span data-ttu-id="925c9-524"><paramref name="converter" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-524"><paramref name="converter" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-525">將一個 <see cref="T:System.Array" /> 中某範圍的元素複製到另一個 <see cref="T:System.Array" />，並在必要時執行型別轉換和 Boxing。</span><span class="sxs-lookup"><span data-stu-id="925c9-525">Copies a range of elements in one <see cref="T:System.Array" /> to another <see cref="T:System.Array" /> and performs type casting and boxing as required.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="925c9-526">包含要複製資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-526">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="925c9-527">接收資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-527">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-528">32 位元整數，表示要複製的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-528">A 32-bit integer that represents the number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="925c9-529">從 <see cref="T:System.Array" /> 複製某範圍的項目 (從第一個項目開始)，並且將它們貼至另一個 <see cref="T:System.Array" /> (從第一個項目開始)。</span><span class="sxs-lookup"><span data-stu-id="925c9-529">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span></span> <span data-ttu-id="925c9-530">長度已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-530">The length is specified as a 32-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-531">`sourceArray`和`destinationArray`參數必須有相同的維度數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-531">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="925c9-532">此外，`destinationArray`必須已有已建立維度，必須有足夠數目的項目，以容納所複製的資料。</span><span class="sxs-lookup"><span data-stu-id="925c9-532">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="925c9-533">多維陣列之間進行複製，當陣列的行為如同長的一維陣列，其中資料列 （或資料行） 會在概念上排列端對端。</span><span class="sxs-lookup"><span data-stu-id="925c9-533">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="925c9-534">例如，如果陣列有三個資料列 （或資料行） 使用四個元素陣列的開頭，複製六個項目會複製全部的四個元素的第一個資料列 （或資料行） 和第二個資料列 （或資料行） 的前兩個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-534">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="925c9-535">如果`sourceArray`和`destinationArray`重疊，這個方法的行為如同的原始值`sourceArray`已保留在暫存位置之前`destinationArray`會覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-535">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="925c9-536">[C++]</span><span class="sxs-lookup"><span data-stu-id="925c9-536">[C++]</span></span>  
  
 <span data-ttu-id="925c9-537">這個方法相當於標準的 C/c + + 函式`memmove`，而非`memcpy`。</span><span class="sxs-lookup"><span data-stu-id="925c9-537">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="925c9-538">陣列可以是參考類型的陣列或實值型別陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-538">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="925c9-539">執行類型向下轉型時，視需要而定。</span><span class="sxs-lookup"><span data-stu-id="925c9-539">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="925c9-540">當複製到實值類型陣列的參考型別陣列，每個項目會進行 unboxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-540">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="925c9-541">當實值型別陣列中複製到參考型別陣列，每個項目會進行 boxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-541">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="925c9-542">從參考類型或實值類型陣列到<xref:System.Object>陣列、<xref:System.Object>建立來保存每個值或參考，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-542">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="925c9-543">從複製時<xref:System.Object>陣列是參考類型或實值型別陣列和指派，則不可能<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-543">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="925c9-544">如果`sourceArray`和`destinationArray`有兩個參考類型的陣列或類型的兩個陣列<xref:System.Object>，會執行的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-544">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="925c9-545">淺層複本<xref:System.Array>新<xref:System.Array>包含相同項目與原始參考<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-545">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="925c9-546">項目不會複製本身或項目所參考的任何項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-546">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="925c9-547">相反地，深層複製的<xref:System.Array>複製項目，並直接或間接參考之元素的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-547">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="925c9-548"><xref:System.ArrayTypeMismatchException>如果陣列不相容的型別會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-548">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="925c9-549">型別相容性的定義方式如下：</span><span class="sxs-lookup"><span data-stu-id="925c9-549">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="925c9-550">類型為與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-550">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="925c9-551">實值類型會與相容<xref:System.Object>和該實值型別所實作的介面型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-551">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="925c9-552">連接至介面，它會直接實作該介面時，才視為實值類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-552">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="925c9-553">已中斷連線的類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-553">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="925c9-554">兩個內建函式 （預先定義） 的實值型別都相容，是否從來源類型複製到目的地類型進行擴展轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-554">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="925c9-555">擴展轉換不會遺失資訊，而縮小轉換可能會遺失資訊。</span><span class="sxs-lookup"><span data-stu-id="925c9-555">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="925c9-556">例如，將 32 位元帶正負號的整數轉換為 64 位元帶正負號的整數擴展轉換，並將 64 位元帶正負號的整數轉換為 32 位元帶正負號的整數是縮小轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-556">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="925c9-557">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-557">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="925c9-558">在非內建 （使用者定義） 的實值類型是只與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-558">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="925c9-559">列舉值有隱含轉換成<xref:System.Enum>以及其基礎類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-559">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="925c9-560">如果在每個項目`sourceArray`需要向下轉型 （比方說，從基底類別衍生的類別或介面的物件） 以及一或多個項目無法轉換成對應的型別中`destinationArray`、<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-560">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="925c9-561">如果此方法會擲回的例外狀況，同時將複製的狀態`destinationArray`是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-561">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="925c9-562">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-562">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-563"><paramref name="sourceArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-563"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-564">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-564">-or-</span></span>  
  
 <span data-ttu-id="925c9-565"><paramref name="destinationArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-565"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-566"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 的順位不同。</span><span class="sxs-lookup"><span data-stu-id="925c9-566"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="925c9-567"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-567"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="925c9-568"><paramref name="sourceArray" /> 至少有一個項目無法轉換成 <paramref name="destinationArray" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-568">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-569"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-569"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-570"><paramref name="length" /> 大於 <paramref name="sourceArray" /> 的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-570"><paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-571">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-571">-or-</span></span>  
  
 <span data-ttu-id="925c9-572"><paramref name="length" /> 大於 <paramref name="destinationArray" /> 的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-572"><paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="925c9-573">包含要複製資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-573">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="925c9-574">接收資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-574">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-575">64 位元整數，表示要複製的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-575">A 64-bit integer that represents the number of elements to copy.</span></span> <span data-ttu-id="925c9-576">這個整數必須在零和 <see cref="F:System.Int32.MaxValue" /> 之間 (包含頭尾)。</span><span class="sxs-lookup"><span data-stu-id="925c9-576">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span></span></param>
        <summary><span data-ttu-id="925c9-577">從 <see cref="T:System.Array" /> 複製某範圍的項目 (從第一個項目開始)，並且將它們貼至另一個 <see cref="T:System.Array" /> (從第一個項目開始)。</span><span class="sxs-lookup"><span data-stu-id="925c9-577">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span></span> <span data-ttu-id="925c9-578">長度已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-578">The length is specified as a 64-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-579">`sourceArray`和`destinationArray`參數必須有相同的維度數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-579">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="925c9-580">此外，`destinationArray`必須已有已建立維度，必須有足夠數目的項目，以容納所複製的資料。</span><span class="sxs-lookup"><span data-stu-id="925c9-580">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="925c9-581">多維陣列之間進行複製，當陣列的行為如同長的一維陣列，其中資料列 （或資料行） 會在概念上排列端對端。</span><span class="sxs-lookup"><span data-stu-id="925c9-581">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="925c9-582">例如，如果陣列有三個資料列 （或資料行） 使用四個元素陣列的開頭，複製六個項目會複製全部的四個元素的第一個資料列 （或資料行） 和第二個資料列 （或資料行） 的前兩個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-582">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="925c9-583">如果`sourceArray`和`destinationArray`重疊，這個方法的行為如同的原始值`sourceArray`已保留在暫存位置之前`destinationArray`會覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-583">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="925c9-584">[C++]</span><span class="sxs-lookup"><span data-stu-id="925c9-584">[C++]</span></span>  
  
 <span data-ttu-id="925c9-585">這個方法相當於標準的 C/c + + 函式`memmove`，而非`memcpy`。</span><span class="sxs-lookup"><span data-stu-id="925c9-585">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="925c9-586">陣列可以是參考類型的陣列或實值型別陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-586">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="925c9-587">執行類型向下轉型時，視需要而定。</span><span class="sxs-lookup"><span data-stu-id="925c9-587">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="925c9-588">當複製到實值類型陣列的參考型別陣列，每個項目會進行 unboxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-588">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="925c9-589">當實值型別陣列中複製到參考型別陣列，每個項目會進行 boxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-589">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="925c9-590">從參考類型或實值類型陣列到<xref:System.Object>陣列、<xref:System.Object>建立來保存每個值或參考，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-590">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="925c9-591">從複製時<xref:System.Object>陣列是參考類型或實值型別陣列和指派，則不可能<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-591">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="925c9-592">如果`sourceArray`和`destinationArray`有兩個參考類型的陣列或類型的兩個陣列<xref:System.Object>，會執行的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-592">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="925c9-593">淺層複本<xref:System.Array>新<xref:System.Array>包含相同項目與原始參考<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-593">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="925c9-594">項目不會複製本身或項目所參考的任何項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-594">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="925c9-595">相反地，深層複製的<xref:System.Array>複製項目，並直接或間接參考之元素的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-595">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="925c9-596"><xref:System.ArrayTypeMismatchException>如果陣列不相容的型別會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-596">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="925c9-597">型別相容性的定義方式如下：</span><span class="sxs-lookup"><span data-stu-id="925c9-597">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="925c9-598">類型為與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-598">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="925c9-599">實值類型會與相容<xref:System.Object>和該實值型別所實作的介面型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-599">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="925c9-600">連接至介面，它會直接實作該介面時，才視為實值類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-600">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="925c9-601">已中斷連線的類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-601">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="925c9-602">兩個內建函式 （預先定義） 的實值型別都相容，是否從來源類型複製到目的地類型進行擴展轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-602">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="925c9-603">擴展轉換不會遺失資訊，而縮小轉換可能會遺失資訊。</span><span class="sxs-lookup"><span data-stu-id="925c9-603">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="925c9-604">例如，將 32 位元帶正負號的整數轉換為 64 位元帶正負號的整數擴展轉換，並將 64 位元帶正負號的整數轉換為 32 位元帶正負號的整數是縮小轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-604">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="925c9-605">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-605">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="925c9-606">在非內建 （使用者定義） 的實值類型是只與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-606">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="925c9-607">列舉值有隱含轉換成<xref:System.Enum>以及其基礎類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-607">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="925c9-608">如果在每個項目`sourceArray`需要向下轉型 （比方說，從基底類別衍生的類別或介面的物件） 以及一或多個項目無法轉換成對應的型別中`destinationArray`、<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-608">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="925c9-609">如果此方法會擲回的例外狀況，同時將複製的狀態`destinationArray`是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-609">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="925c9-610">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-610">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-611"><paramref name="sourceArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-611"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-612">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-612">-or-</span></span>  
  
 <span data-ttu-id="925c9-613"><paramref name="destinationArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-613"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-614"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 的順位不同。</span><span class="sxs-lookup"><span data-stu-id="925c9-614"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="925c9-615"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-615"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="925c9-616"><paramref name="sourceArray" /> 至少有一個項目無法轉換成 <paramref name="destinationArray" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-616">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-617"><paramref name="length" /> 小於 0 或大於 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-617"><paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-618"><paramref name="length" /> 大於 <paramref name="sourceArray" /> 的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-618"><paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-619">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-619">-or-</span></span>  
  
 <span data-ttu-id="925c9-620"><paramref name="length" /> 大於 <paramref name="destinationArray" /> 的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-620"><paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="925c9-621">包含要複製資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-621">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="sourceIndex"><span data-ttu-id="925c9-622">32 位元的整數，代表 <c>sourceArray</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-622">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="925c9-623">接收資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-623">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="925c9-624">32 位元的整數，代表 <c>destinationArray</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-624">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-625">32 位元整數，表示要複製的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-625">A 32-bit integer that represents the number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="925c9-626">從 <see cref="T:System.Array" /> 複製某範圍的項目 (從指定的來源索引開始)，並且將它們貼至另一個 <see cref="T:System.Array" /> (從指定的目的索引開始)。</span><span class="sxs-lookup"><span data-stu-id="925c9-626">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span></span> <span data-ttu-id="925c9-627">長度與索引都指定為 32 位元的整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-627">The length and the indexes are specified as 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-628">`sourceArray`和`destinationArray`參數必須有相同的維度數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-628">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="925c9-629">此外，`destinationArray`必須已有已建立維度，必須有足夠數目的項目從開始`destinationIndex`以容納所複製的資料的位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-629">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="925c9-630">多維陣列之間進行複製，當陣列的行為如同長的一維陣列，其中資料列 （或資料行） 會在概念上排列端對端。</span><span class="sxs-lookup"><span data-stu-id="925c9-630">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="925c9-631">例如，如果陣列有三個資料列 （或資料行） 使用四個元素陣列的開頭，複製六個項目會複製全部的四個元素的第一個資料列 （或資料行） 和第二個資料列 （或資料行） 的前兩個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-631">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="925c9-632">若要開始複製的第三個資料列 （或資料行），第二個項目從`sourceIndex`必須第一個資料列 （或資料行） 的上限加上第二個資料列 （或資料行） 的長度再加上兩個。</span><span class="sxs-lookup"><span data-stu-id="925c9-632">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="925c9-633">如果`sourceArray`和`destinationArray`重疊，這個方法的行為如同的原始值`sourceArray`已保留在暫存位置之前`destinationArray`會覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-633">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="925c9-634">[C++]</span><span class="sxs-lookup"><span data-stu-id="925c9-634">[C++]</span></span>  
  
 <span data-ttu-id="925c9-635">這個方法相當於標準的 C/c + + 函式`memmove`，而非`memcpy`。</span><span class="sxs-lookup"><span data-stu-id="925c9-635">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="925c9-636">陣列可以是參考類型的陣列或實值型別陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-636">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="925c9-637">執行類型向下轉型時，視需要而定。</span><span class="sxs-lookup"><span data-stu-id="925c9-637">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="925c9-638">當複製到實值類型陣列的參考型別陣列，每個項目會進行 unboxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-638">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="925c9-639">當實值型別陣列中複製到參考型別陣列，每個項目會進行 boxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-639">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="925c9-640">從參考類型或實值類型陣列到<xref:System.Object>陣列、<xref:System.Object>建立來保存每個值或參考，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-640">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="925c9-641">從複製時<xref:System.Object>陣列是參考類型或實值型別陣列和指派，則不可能<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-641">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="925c9-642">如果`sourceArray`和`destinationArray`有兩個參考類型的陣列或類型的兩個陣列<xref:System.Object>，會執行的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-642">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="925c9-643">淺層複本<xref:System.Array>新<xref:System.Array>包含相同項目與原始參考<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-643">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="925c9-644">項目不會複製本身或項目所參考的任何項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-644">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="925c9-645">相反地，深層複製的<xref:System.Array>複製項目，並直接或間接參考之元素的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-645">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="925c9-646"><xref:System.ArrayTypeMismatchException>如果陣列不相容的型別會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-646">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="925c9-647">型別相容性的定義方式如下：</span><span class="sxs-lookup"><span data-stu-id="925c9-647">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="925c9-648">類型為與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-648">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="925c9-649">實值類型會與相容<xref:System.Object>和該實值型別所實作的介面型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-649">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="925c9-650">連接至介面，它會直接實作該介面時，才視為實值類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-650">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="925c9-651">已中斷連線的類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-651">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="925c9-652">兩個內建函式 （預先定義） 的實值型別都相容，是否從來源類型複製到目的地類型進行擴展轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-652">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="925c9-653">擴展轉換不會遺失資訊，而縮小轉換可能會遺失資訊。</span><span class="sxs-lookup"><span data-stu-id="925c9-653">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="925c9-654">例如，將 32 位元帶正負號的整數轉換為 64 位元帶正負號的整數擴展轉換，並將 64 位元帶正負號的整數轉換為 32 位元帶正負號的整數是縮小轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-654">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="925c9-655">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-655">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="925c9-656">在非內建 （使用者定義） 的實值類型是只與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-656">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="925c9-657">列舉值有隱含轉換成<xref:System.Enum>以及其基礎類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-657">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="925c9-658">如果在每個項目`sourceArray`需要向下轉型 （比方說，從基底類別衍生的類別或介面的物件） 以及一或多個項目無法轉換成對應的型別中`destinationArray`、<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-658">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="925c9-659">如果此方法會擲回的例外狀況，同時將複製的狀態`destinationArray`是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-659">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="925c9-660">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-660">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-661">下列程式碼範例示範如何從一個複製<xref:System.Array>型別的<xref:System.Object>到另一個<xref:System.Array>類型為整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-661">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-662"><paramref name="sourceArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-662"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-663">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-663">-or-</span></span>  
  
 <span data-ttu-id="925c9-664"><paramref name="destinationArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-664"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-665"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 的順位不同。</span><span class="sxs-lookup"><span data-stu-id="925c9-665"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="925c9-666"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-666"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="925c9-667"><paramref name="sourceArray" /> 至少有一個項目無法轉換成 <paramref name="destinationArray" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-667">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-668"><paramref name="sourceIndex" /> 小於 <paramref name="sourceArray" /> 的第一個維度下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-668"><paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-669">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-669">-or-</span></span>  
  
 <span data-ttu-id="925c9-670"><paramref name="destinationIndex" /> 小於 <paramref name="destinationArray" /> 的第一個維度下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-670"><paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span></span>  
  
 <span data-ttu-id="925c9-671">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-671">-or-</span></span>  
  
 <span data-ttu-id="925c9-672"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-672"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-673"><paramref name="length" /> 大於從 <paramref name="sourceIndex" /> 到 <paramref name="sourceArray" /> 結尾的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-673"><paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-674">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-674">-or-</span></span>  
  
 <span data-ttu-id="925c9-675"><paramref name="length" /> 大於從 <paramref name="destinationIndex" /> 到 <paramref name="destinationArray" /> 結尾的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-675"><paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, long sourceIndex, Array destinationArray, long destinationIndex, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int64 sourceIndex, class System.Array destinationArray, int64 destinationIndex, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Long, destinationArray As Array, destinationIndex As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, long sourceIndex, Array ^ destinationArray, long destinationIndex, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int64" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="925c9-676">包含要複製資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-676">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="sourceIndex"><span data-ttu-id="925c9-677">64 位元的整數，代表 <c>sourceArray</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-677">A 64-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="925c9-678">接收資料的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-678">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="925c9-679">64 位元的整數，代表 <c>destinationArray</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-679">A 64-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-680">64 位元整數，表示要複製的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-680">A 64-bit integer that represents the number of elements to copy.</span></span> <span data-ttu-id="925c9-681">這個整數必須在零和 <see cref="F:System.Int32.MaxValue" /> 之間 (包含頭尾)。</span><span class="sxs-lookup"><span data-stu-id="925c9-681">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span></span></param>
        <summary><span data-ttu-id="925c9-682">從 <see cref="T:System.Array" /> 複製某範圍的項目 (從指定的來源索引開始)，並且將它們貼至另一個 <see cref="T:System.Array" /> (從指定的目的索引開始)。</span><span class="sxs-lookup"><span data-stu-id="925c9-682">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span></span> <span data-ttu-id="925c9-683">長度與索引都指定為 64 位元的整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-683">The length and the indexes are specified as 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-684">`sourceArray`和`destinationArray`參數必須有相同的維度數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-684">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="925c9-685">此外，`destinationArray`必須已有已建立維度，必須有足夠數目的項目從開始`destinationIndex`以容納所複製的資料的位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-685">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="925c9-686">多維陣列之間進行複製，當陣列的行為如同長的一維陣列，其中資料列 （或資料行） 會在概念上排列端對端。</span><span class="sxs-lookup"><span data-stu-id="925c9-686">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="925c9-687">例如，如果陣列有三個資料列 （或資料行） 使用四個元素陣列的開頭，複製六個項目會複製全部的四個元素的第一個資料列 （或資料行） 和第二個資料列 （或資料行） 的前兩個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-687">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="925c9-688">若要開始複製的第三個資料列 （或資料行），第二個項目從`sourceIndex`必須第一個資料列 （或資料行） 的上限加上第二個資料列 （或資料行） 的長度再加上兩個。</span><span class="sxs-lookup"><span data-stu-id="925c9-688">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="925c9-689">如果`sourceArray`和`destinationArray`重疊，這個方法的行為如同的原始值`sourceArray`已保留在暫存位置之前`destinationArray`會覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-689">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="925c9-690">[C++]</span><span class="sxs-lookup"><span data-stu-id="925c9-690">[C++]</span></span>  
  
 <span data-ttu-id="925c9-691">這個方法相當於標準的 C/c + + 函式`memmove`，而非`memcpy`。</span><span class="sxs-lookup"><span data-stu-id="925c9-691">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="925c9-692">陣列可以是參考類型的陣列或實值型別陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-692">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="925c9-693">執行類型向下轉型時，視需要而定。</span><span class="sxs-lookup"><span data-stu-id="925c9-693">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="925c9-694">當複製到實值類型陣列的參考型別陣列，每個項目會進行 unboxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-694">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="925c9-695">當實值型別陣列中複製到參考型別陣列，每個項目會進行 boxed 處理，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-695">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="925c9-696">從參考類型或實值類型陣列到<xref:System.Object>陣列、<xref:System.Object>建立來保存每個值或參考，然後再複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-696">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="925c9-697">從複製時<xref:System.Object>陣列是參考類型或實值型別陣列和指派，則不可能<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-697">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="925c9-698">如果`sourceArray`和`destinationArray`有兩個參考類型的陣列或類型的兩個陣列<xref:System.Object>，會執行的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-698">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="925c9-699">淺層複本<xref:System.Array>新<xref:System.Array>包含相同項目與原始參考<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-699">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="925c9-700">項目不會複製本身或項目所參考的任何項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-700">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="925c9-701">相反地，深層複製的<xref:System.Array>複製項目，並直接或間接參考之元素的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-701">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="925c9-702"><xref:System.ArrayTypeMismatchException>如果陣列不相容的型別會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-702">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="925c9-703">型別相容性的定義方式如下：</span><span class="sxs-lookup"><span data-stu-id="925c9-703">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="925c9-704">類型為與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-704">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="925c9-705">實值類型會與相容<xref:System.Object>和該實值型別所實作的介面型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-705">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="925c9-706">連接至介面，它會直接實作該介面時，才視為實值類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-706">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="925c9-707">已中斷連線的類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-707">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="925c9-708">兩個內建函式 （預先定義） 的實值型別都相容，是否從來源類型複製到目的地類型進行擴展轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-708">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="925c9-709">擴展轉換不會遺失資訊，而縮小轉換可能會遺失資訊。</span><span class="sxs-lookup"><span data-stu-id="925c9-709">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="925c9-710">例如，將 32 位元帶正負號的整數轉換為 64 位元帶正負號的整數擴展轉換，並將 64 位元帶正負號的整數轉換為 32 位元帶正負號的整數是縮小轉換。</span><span class="sxs-lookup"><span data-stu-id="925c9-710">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="925c9-711">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-711">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="925c9-712">在非內建 （使用者定義） 的實值類型是只與其本身相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-712">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="925c9-713">列舉值有隱含轉換成<xref:System.Enum>以及其基礎類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-713">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="925c9-714">如果在每個項目`sourceArray`需要向下轉型 （比方說，從基底類別衍生的類別或介面的物件） 以及一或多個項目無法轉換成對應的型別中`destinationArray`、<xref:System.InvalidCastException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="925c9-714">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="925c9-715">如果此方法會擲回的例外狀況，同時將複製的狀態`destinationArray`是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-715">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="925c9-716">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-716">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-717">下列程式碼範例示範如何從一個複製<xref:System.Array>型別的<xref:System.Object>到另一個<xref:System.Array>類型為整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-717">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-718"><paramref name="sourceArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-718"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-719">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-719">-or-</span></span>  
  
 <span data-ttu-id="925c9-720"><paramref name="destinationArray" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-720"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-721"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 的順位不同。</span><span class="sxs-lookup"><span data-stu-id="925c9-721"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="925c9-722"><paramref name="sourceArray" /> 和 <paramref name="destinationArray" /> 類型不相容。</span><span class="sxs-lookup"><span data-stu-id="925c9-722"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="925c9-723"><paramref name="sourceArray" /> 至少有一個項目無法轉換成 <paramref name="destinationArray" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-723">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-724"><paramref name="sourceIndex" /> 超出 <paramref name="sourceArray" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-724"><paramref name="sourceIndex" /> is outside the range of valid indexes for the <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-725">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-725">-or-</span></span>  
  
 <span data-ttu-id="925c9-726"><paramref name="destinationIndex" /> 超出 <paramref name="destinationArray" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-726"><paramref name="destinationIndex" /> is outside the range of valid indexes for the <paramref name="destinationArray" />.</span></span>  
  
 <span data-ttu-id="925c9-727">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-727">-or-</span></span>  
  
 <span data-ttu-id="925c9-728"><paramref name="length" /> 小於 0 或大於 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-728"><paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-729"><paramref name="length" /> 大於從 <paramref name="sourceIndex" /> 到 <paramref name="sourceArray" /> 結尾的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-729"><paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="925c9-730">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-730">-or-</span></span>  
  
 <span data-ttu-id="925c9-731"><paramref name="length" /> 大於從 <paramref name="destinationIndex" /> 到 <paramref name="destinationArray" /> 結尾的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-731"><paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-732">將目前一維陣列的所有項目複製到指定的一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-732">Copies all the elements of the current one-dimensional array to the specified one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-733">一維陣列，從目前陣列複製過來的項目之目的端。</span><span class="sxs-lookup"><span data-stu-id="925c9-733">The one-dimensional array that is the destination of the elements copied from the current array.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-734">32 位元的整數，代表 <c>array</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-734">A 32-bit integer that represents the index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="925c9-735">將目前一維陣列的所有項目複製到指定的一維陣列 (從指定的目的陣列索引開始)。</span><span class="sxs-lookup"><span data-stu-id="925c9-735">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span></span> <span data-ttu-id="925c9-736">索引已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-736">The index is specified as a 32-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-737">這個方法會複製到目前的陣列執行個體的所有項目`array`索引處開始的目的陣列`index`。</span><span class="sxs-lookup"><span data-stu-id="925c9-737">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="925c9-738">`array`目的陣列必須已經有尚未建立維度，而且必須具有足夠容納複製之元素的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-738">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="925c9-739">否則，方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-739">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="925c9-740">這個方法支援<xref:System.Collections.ICollection?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-740">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="925c9-741">如果實作<xref:System.Collections.ICollection?displayProperty=nameWithType>是不明確的需求，使用<xref:System.Array.Copy%2A>以避免額外的間接取值。</span><span class="sxs-lookup"><span data-stu-id="925c9-741">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="925c9-742">如果此方法會擲回的例外狀況，同時將複製的狀態`array`是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-742">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="925c9-743">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>。它會執行淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-743">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-744">下列程式碼範例示範如何將複製<xref:System.Array>到另一個<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-744">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="925c9-745">下列程式碼範例示範如何將複製<xref:System.Array>到另一個<xref:System.Array>，則為非零的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-745">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="925c9-746">請注意，整個來源<xref:System.Array>複製時，包括覆寫現有的項目在目標中的空項目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-746">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-747"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-747"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-748"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-748"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-749"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-749"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="925c9-750">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-750">-or-</span></span>  
  
 <span data-ttu-id="925c9-751">來源陣列中的項目數大於從 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-751">The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="925c9-752">來源 <see cref="T:System.Array" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-752">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="925c9-753">該來源陣列為多維。</span><span class="sxs-lookup"><span data-stu-id="925c9-753">The source array is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="925c9-754">來源 <see cref="T:System.Array" /> 中至少有一個項目無法轉換成目的 <paramref name="array" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-754">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-755">一維陣列，從目前陣列複製過來的項目之目的端。</span><span class="sxs-lookup"><span data-stu-id="925c9-755">The one-dimensional array that is the destination of the elements copied from the current array.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-756">64 位元的整數，代表 <c>array</c> 中的索引，由此開始複製。</span><span class="sxs-lookup"><span data-stu-id="925c9-756">A 64-bit integer that represents the index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="925c9-757">將目前一維陣列的所有項目複製到指定的一維陣列 (從指定的目的陣列索引開始)。</span><span class="sxs-lookup"><span data-stu-id="925c9-757">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span></span> <span data-ttu-id="925c9-758">索引已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-758">The index is specified as a 64-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-759">這個方法會複製到目前的陣列執行個體的所有項目`array`索引處開始的目的陣列`index`。</span><span class="sxs-lookup"><span data-stu-id="925c9-759">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="925c9-760">`array`目的陣列必須已經有尚未建立維度，而且必須具有足夠容納複製之元素的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-760">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="925c9-761">否則，方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-761">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="925c9-762">這個方法支援<xref:System.Collections.ICollection?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-762">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="925c9-763">如果實作<xref:System.Collections.ICollection?displayProperty=nameWithType>是不明確的需求，使用<xref:System.Array.Copy%2A>以避免額外的間接取值。</span><span class="sxs-lookup"><span data-stu-id="925c9-763">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="925c9-764">如果此方法會擲回的例外狀況，同時將複製的狀態`array`是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-764">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="925c9-765">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>。它會執行淺層複本。</span><span class="sxs-lookup"><span data-stu-id="925c9-765">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-766">下列程式碼範例示範如何將複製<xref:System.Array>到另一個<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-766">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="925c9-767">下列程式碼範例示範如何將複製<xref:System.Array>到另一個<xref:System.Array>，則為非零的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-767">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="925c9-768">請注意，整個來源<xref:System.Array>複製時，包括覆寫現有的項目在目標中的空項目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-768">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-769"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-769"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-770"><paramref name="index" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-770"><paramref name="index" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-771"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-771"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="925c9-772">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-772">-or-</span></span>  
  
 <span data-ttu-id="925c9-773">來源陣列中的項目數大於從 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-773">The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="925c9-774">來源 <see cref="T:System.Array" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-774">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="925c9-775">來源 <see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-775">The source <see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="925c9-776">來源 <see cref="T:System.Array" /> 中至少有一個項目無法轉換成目的 <paramref name="array" /> 的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-776">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-777">初始化 <see cref="T:System.Array" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="925c9-777">Initializes a new instance of the <see cref="T:System.Array" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="925c9-778">要建立之 <see cref="T:System.Array" /> 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-778">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-779">要建立的 <see cref="T:System.Array" /> 的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-779">The size of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="925c9-780">建立指定 <see cref="T:System.Array" /> 和長度的一維 <see cref="T:System.Type" /> (具有以零起始的索引)。</span><span class="sxs-lookup"><span data-stu-id="925c9-780">Creates a one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and length, with zero-based indexing.</span></span></summary>
        <returns><span data-ttu-id="925c9-781">新的一維 <see cref="T:System.Array" />，具有指定的長度和指定的 <see cref="T:System.Type" />，並使用以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-781">A new one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-782">不同於大部分的類別，<xref:System.Array>提供<xref:System.Array.CreateInstance%2A>方法，而不是公用建構函式，以允許晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="925c9-782">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="925c9-783">參考類型的項目會初始化為`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-783">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="925c9-784">實值型別元素會初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-784">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="925c9-785">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-785">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-786">下列程式碼範例示範如何建立和初始化一維<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-786">The following code example shows how to create and initialize a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-787"><paramref name="elementType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-787"><paramref name="elementType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-788"><paramref name="elementType" /> 不是有效的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-788"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="925c9-789">不支援 <paramref name="elementType" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-789"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="925c9-790">例如，<see cref="T:System.Void" /> 不受支援。</span><span class="sxs-lookup"><span data-stu-id="925c9-790">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="925c9-791">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-791">-or-</span></span>  
  
 <span data-ttu-id="925c9-792"><paramref name="elementType" /> 是開放式泛型類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-792"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-793"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-793"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params int[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;int&gt; ^ lengths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="925c9-794">要建立之 <see cref="T:System.Array" /> 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-794">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lengths"><span data-ttu-id="925c9-795">32 位元整數的陣列，代表 <see cref="T:System.Array" /> 所建立之每個維度的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-795">An array of 32-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="925c9-796">建立指定 <see cref="T:System.Array" /> 和維度長度的多維 <see cref="T:System.Type" /> (具有以零起始的索引)。</span><span class="sxs-lookup"><span data-stu-id="925c9-796">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span> <span data-ttu-id="925c9-797">維度長度已指定在 32 位元整數的陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-797">The dimension lengths are specified in an array of 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-798">新的多維 <see cref="T:System.Array" />，具有指定的 <see cref="T:System.Type" /> 且每個維度具有指定的長度，並使用以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-798">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-799">不同於大部分的類別，<xref:System.Array>提供<xref:System.Array.CreateInstance%2A>方法，而不是公用建構函式，以允許晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="925c9-799">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="925c9-800">中的項目數`lengths`陣列必須等於在新的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-800">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="925c9-801">每個項目`lengths`陣列必須指定之相對應維度的長度，在新<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-801">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-802">參考類型的項目會初始化為`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-802">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="925c9-803">實值型別元素會初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-803">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="925c9-804">這個方法是 O (`n`) 作業，其中`n`是中的所有值的乘積`lengths`。</span><span class="sxs-lookup"><span data-stu-id="925c9-804">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-805">下列程式碼範例示範如何建立和初始化多維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-805">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-806"><paramref name="elementType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-806"><paramref name="elementType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-807">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-807">-or-</span></span>  
  
 <span data-ttu-id="925c9-808"><paramref name="lengths" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-808"><paramref name="lengths" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-809"><paramref name="elementType" /> 不是有效的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-809"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="925c9-810">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-810">-or-</span></span>  
  
 <span data-ttu-id="925c9-811"><paramref name="lengths" /> 陣列包含少於一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-811">The <paramref name="lengths" /> array contains less than one element.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="925c9-812">不支援 <paramref name="elementType" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-812"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="925c9-813">例如，<see cref="T:System.Void" /> 不受支援。</span><span class="sxs-lookup"><span data-stu-id="925c9-813">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="925c9-814">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-814">-or-</span></span>  
  
 <span data-ttu-id="925c9-815"><paramref name="elementType" /> 是開放式泛型型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-815"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-816"><paramref name="lengths" /> 中的任何值小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-816">Any value in <paramref name="lengths" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params long[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int64[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Long()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;long&gt; ^ lengths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="925c9-817">要建立之 <see cref="T:System.Array" /> 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-817">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lengths"><span data-ttu-id="925c9-818">64 位元整數的陣列，代表要建立的 <see cref="T:System.Array" /> 的每個維度大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-818">An array of 64-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span></span> <span data-ttu-id="925c9-819">陣列中的每一個整數必須在零和 <see cref="F:System.Int32.MaxValue" /> 之間 (包含頭尾)。</span><span class="sxs-lookup"><span data-stu-id="925c9-819">Each integer in the array must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span></span></param>
        <summary><span data-ttu-id="925c9-820">建立指定 <see cref="T:System.Array" /> 和維度長度的多維 <see cref="T:System.Type" /> (具有以零起始的索引)。</span><span class="sxs-lookup"><span data-stu-id="925c9-820">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span> <span data-ttu-id="925c9-821">維度長度已指定在 64 位元整數的陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-821">The dimension lengths are specified in an array of 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-822">新的多維 <see cref="T:System.Array" />，具有指定的 <see cref="T:System.Type" /> 且每個維度具有指定的長度，並使用以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-822">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-823">不同於大部分的類別，<xref:System.Array>提供<xref:System.Array.CreateInstance%2A>方法，而不是公用建構函式，以允許晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="925c9-823">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="925c9-824">中的項目數`lengths`陣列必須等於在新的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-824">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="925c9-825">每個項目`lengths`陣列必須指定之相對應維度的長度，在新<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-825">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-826">參考類型的項目會初始化為`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-826">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="925c9-827">實值型別元素會初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-827">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="925c9-828">這個方法是 O (`n`) 作業，其中`n`是中的所有值的乘積`lengths`。</span><span class="sxs-lookup"><span data-stu-id="925c9-828">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-829">下列程式碼範例示範如何建立和初始化多維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-829">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-830"><paramref name="elementType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-830"><paramref name="elementType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-831">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-831">-or-</span></span>  
  
 <span data-ttu-id="925c9-832"><paramref name="lengths" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-832"><paramref name="lengths" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-833"><paramref name="elementType" /> 不是有效的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-833"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="925c9-834">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-834">-or-</span></span>  
  
 <span data-ttu-id="925c9-835"><paramref name="lengths" /> 陣列包含少於一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-835">The <paramref name="lengths" /> array contains less than one element.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="925c9-836">不支援 <paramref name="elementType" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-836"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="925c9-837">例如，<see cref="T:System.Void" /> 不受支援。</span><span class="sxs-lookup"><span data-stu-id="925c9-837">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="925c9-838">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-838">-or-</span></span>  
  
 <span data-ttu-id="925c9-839"><paramref name="elementType" /> 是開放式泛型類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-839"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-840"><paramref name="lengths" /> 中的任何值小於零或大於 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-840">Any value in <paramref name="lengths" /> is less than zero or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="925c9-841">要建立之 <see cref="T:System.Array" /> 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-841">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length1"><span data-ttu-id="925c9-842">要建立之 <see cref="T:System.Array" /> 的第一個維度大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-842">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length2"><span data-ttu-id="925c9-843">要建立之 <see cref="T:System.Array" /> 的第二個維度大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-843">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="925c9-844">建立指定 <see cref="T:System.Type" /> 和維度長度的二維 <see cref="T:System.Array" /> (具有以零為起始的索引)。</span><span class="sxs-lookup"><span data-stu-id="925c9-844">Creates a two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span></summary>
        <returns><span data-ttu-id="925c9-845">新的二維 <see cref="T:System.Array" />，具有指定的 <see cref="T:System.Type" /> 且每個維度具有指定的長度，並使用以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-845">A new two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-846">不同於大部分的類別，<xref:System.Array>提供<xref:System.Array.CreateInstance%2A>方法，而不是公用建構函式，以允許晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="925c9-846">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="925c9-847">參考類型的項目會初始化為`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-847">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="925c9-848">實值型別元素會初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-848">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="925c9-849">這個方法是 O (`n`) 作業，其中`n`的產品`length1`和`length2`。</span><span class="sxs-lookup"><span data-stu-id="925c9-849">This method is an O(`n`) operation, where `n` is the product of `length1` and `length2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-850">下列程式碼範例示範如何建立和初始化二維<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-850">The following code example shows how to create and initialize a two-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-851"><paramref name="elementType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-851"><paramref name="elementType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-852"><paramref name="elementType" /> 不是有效的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-852"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="925c9-853">不支援 <paramref name="elementType" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-853"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="925c9-854">例如，<see cref="T:System.Void" /> 不受支援。</span><span class="sxs-lookup"><span data-stu-id="925c9-854">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="925c9-855">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-855">-or-</span></span>  
  
 <span data-ttu-id="925c9-856"><paramref name="elementType" /> 是開放式泛型類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-856"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-857"><paramref name="length1" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-857"><paramref name="length1" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-858">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-858">-or-</span></span>  
  
 <span data-ttu-id="925c9-859"><paramref name="length2" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-859"><paramref name="length2" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int[] lengths, int[] lowerBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths, int32[] lowerBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, lengths As Integer(), lowerBounds As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, cli::array &lt;int&gt; ^ lengths, cli::array &lt;int&gt; ^ lowerBounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]" />
        <Parameter Name="lowerBounds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="925c9-860">要建立之 <see cref="T:System.Array" /> 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-860">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lengths"><span data-ttu-id="925c9-861">一維陣列，包含要建立的 <see cref="T:System.Array" /> 的每個維度大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-861">A one-dimensional array that contains the size of each dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lowerBounds"><span data-ttu-id="925c9-862">一維陣列，包含要建立的 <see cref="T:System.Array" /> 的每個維度下限 (起始索引)。</span><span class="sxs-lookup"><span data-stu-id="925c9-862">A one-dimensional array that contains the lower bound (starting index) of each dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="925c9-863">建立指定 <see cref="T:System.Type" /> 和維度長度的多維 <see cref="T:System.Array" /> (具有指定的下限)。</span><span class="sxs-lookup"><span data-stu-id="925c9-863">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with the specified lower bounds.</span></span></summary>
        <returns><span data-ttu-id="925c9-864">新的多維 <see cref="T:System.Array" />，具有指定的 <see cref="T:System.Type" /> 且每個維度具有指定的長度和下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-864">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length and lower bound for each dimension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-865">不同於大部分的類別，<xref:System.Array>提供<xref:System.Array.CreateInstance%2A>方法，而不是公用建構函式，以允許晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="925c9-865">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="925c9-866">`lengths`和`lowerBounds`陣列必須有相同數目的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-866">The `lengths` and `lowerBounds` arrays must have the same number of elements.</span></span> <span data-ttu-id="925c9-867">中的項目數`lengths`陣列必須等於在新的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-867">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-868">每個項目`lengths`陣列必須指定之相對應維度的長度，在新<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-868">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-869">每個項目`lowerBounds`陣列必須在新指定的相對應維度的下限<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-869">Each element of the `lowerBounds` array must specify the lower bound of the corresponding dimension in the new <xref:System.Array>.</span></span> <span data-ttu-id="925c9-870">一般而言，.NET Framework 類別庫和許多程式語言不處理非零的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-870">Generally, the .NET Framework class library and many programming languages do not handle nonzero lower bounds.</span></span>  
  
 <span data-ttu-id="925c9-871">參考類型的項目會初始化為`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-871">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="925c9-872">實值型別元素會初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-872">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="925c9-873">這個方法是 O (`n`) 作業，其中`n`是中的所有值的乘積`lengths`。</span><span class="sxs-lookup"><span data-stu-id="925c9-873">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-874">下列程式碼範例示範如何建立和初始化多維度<xref:System.Array>與指定的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-874">The following code example shows how to create and initialize a multidimensional <xref:System.Array> with specified lower bounds.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-875"><paramref name="elementType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-875"><paramref name="elementType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-876">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-876">-or-</span></span>  
  
 <span data-ttu-id="925c9-877"><paramref name="lengths" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-877"><paramref name="lengths" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-878">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-878">-or-</span></span>  
  
 <span data-ttu-id="925c9-879"><paramref name="lowerBounds" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-879"><paramref name="lowerBounds" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-880"><paramref name="elementType" /> 不是有效的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-880"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="925c9-881">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-881">-or-</span></span>  
  
 <span data-ttu-id="925c9-882"><paramref name="lengths" /> 陣列包含少於一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-882">The <paramref name="lengths" /> array contains less than one element.</span></span>  
  
 <span data-ttu-id="925c9-883">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-883">-or-</span></span>  
  
 <span data-ttu-id="925c9-884"><paramref name="lengths" /> 和 <paramref name="lowerBounds" /> 陣列未包含相同數目的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-884">The <paramref name="lengths" /> and <paramref name="lowerBounds" /> arrays do not contain the same number of elements.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="925c9-885">不支援 <paramref name="elementType" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-885"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="925c9-886">例如，<see cref="T:System.Void" /> 不受支援。</span><span class="sxs-lookup"><span data-stu-id="925c9-886">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="925c9-887">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-887">-or-</span></span>  
  
 <span data-ttu-id="925c9-888"><paramref name="elementType" /> 是開放式泛型型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-888"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-889"><paramref name="lengths" /> 中的任何值小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-889">Any value in <paramref name="lengths" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-890">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-890">-or-</span></span>  
  
 <span data-ttu-id="925c9-891"><paramref name="lowerBounds" /> 中的任何值非常大，使用維度的下限和長度總和大於 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-891">Any value in <paramref name="lowerBounds" /> is very large, such that the sum of a dimension's lower bound and length is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2, int length3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2, int32 length3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer, length3 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2, int length3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="925c9-892">要建立之 <see cref="T:System.Array" /> 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-892">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length1"><span data-ttu-id="925c9-893">要建立之 <see cref="T:System.Array" /> 的第一個維度大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-893">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length2"><span data-ttu-id="925c9-894">要建立的 <see cref="T:System.Array" /> 的第二個維度大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-894">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length3"><span data-ttu-id="925c9-895">要建立的 <see cref="T:System.Array" /> 的第三個維度大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-895">The size of the third dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="925c9-896">建立指定 <see cref="T:System.Type" /> 和維度長度的三維 <see cref="T:System.Array" /> (具有以零為起始的索引)。</span><span class="sxs-lookup"><span data-stu-id="925c9-896">Creates a three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span></summary>
        <returns><span data-ttu-id="925c9-897">指定之 <see cref="T:System.Type" /> 的新三維 <see cref="T:System.Array" />，且每個維度具有指定的長度，並使用以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-897">A new three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-898">不同於大部分的類別，<xref:System.Array>提供<xref:System.Array.CreateInstance%2A>方法，而不是公用建構函式，以允許晚期繫結的存取。</span><span class="sxs-lookup"><span data-stu-id="925c9-898">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="925c9-899">參考類型的項目會初始化為`null`。</span><span class="sxs-lookup"><span data-stu-id="925c9-899">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="925c9-900">實值型別元素會初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-900">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="925c9-901">這個方法是 O (`n`) 作業，其中`n`的產品`length1`， `length2`，和`length3`。</span><span class="sxs-lookup"><span data-stu-id="925c9-901">This method is an O(`n`) operation, where `n` is the product of `length1`, `length2`, and `length3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-902">下列程式碼範例示範如何建立和初始化 3d <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-902">The following code example shows how to create and initialize a three-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-903"><paramref name="elementType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-903"><paramref name="elementType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-904"><paramref name="elementType" /> 不是有效的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-904"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="925c9-905">不支援 <paramref name="elementType" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-905"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="925c9-906">例如，<see cref="T:System.Void" /> 不受支援。</span><span class="sxs-lookup"><span data-stu-id="925c9-906">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="925c9-907">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-907">-or-</span></span>  
  
 <span data-ttu-id="925c9-908"><paramref name="elementType" /> 是開放式泛型類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-908"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-909"><paramref name="length1" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-909"><paramref name="length1" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-910">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-910">-or-</span></span>  
  
 <span data-ttu-id="925c9-911"><paramref name="length2" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-911"><paramref name="length2" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-912">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-912">-or-</span></span>  
  
 <span data-ttu-id="925c9-913"><paramref name="length3" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-913"><paramref name="length3" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] Empty&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] Empty&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty(Of T) () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ Empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-914">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-914">The type of the elements of the array.</span></span></typeparam>
        <summary><span data-ttu-id="925c9-915">傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-915">Returns an empty array.</span></span></summary>
        <returns><span data-ttu-id="925c9-916">傳回空的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-916">Returns an empty <see cref="T:System.Array" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exists&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool Exists(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-917">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-917">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-918">要搜尋的以零為起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-918">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-919">定義搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-919">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-920">判斷指定的陣列是否包含符合指定之述詞 (Predicate) 所定義的條件之項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-920">Determines whether the specified array contains elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns>
          <span data-ttu-id="925c9-921">如果 <paramref name="array" /> 包含的一或多個項目符合指定述詞所定義的條件，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-921"><see langword="true" /> if <paramref name="array" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-922"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-922">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-923">項目`array`分別傳遞至<xref:System.Predicate%601>，並在找到相符項目時，會停止處理。</span><span class="sxs-lookup"><span data-stu-id="925c9-923">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when a match is found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-924">在 C# 和 Visual Basic 中，就不需要建立<xref:System.Predicate%601>明確委派。</span><span class="sxs-lookup"><span data-stu-id="925c9-924">In C# and Visual Basic, it is not necessary to create the <xref:System.Predicate%601> delegate explicitly.</span></span> <span data-ttu-id="925c9-925">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-925">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-926">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-926">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-927">下列範例會指定比對條件<xref:System.Array.Exists%2A>方法 usinglambda 運算式，以檢查是否憑藉開頭為指定的字母或世界各地是否位於指定的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-927">The following example specifies the match conditions for the <xref:System.Array.Exists%2A> method usinglambda expressions to check whether a planet starts with a given letter or whether the planet is found on the given array.</span></span>  
  
 [!code-csharp[System.Array.Exists#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists3.cs#3)]
 [!code-vb[System.Array.Exists#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists3.vb#3)]  
  
 <span data-ttu-id="925c9-928">下列範例會使用<xref:System.Array.Exists%2A>方法，指出是否將字串陣列中的任何名稱開頭為指定的字元。</span><span class="sxs-lookup"><span data-stu-id="925c9-928">The following example uses the <xref:System.Array.Exists%2A> method to indicate whether any names in a string array begin with a specified character.</span></span> <span data-ttu-id="925c9-929">此範例會具現化`StringSearcher`物件，並傳遞要搜尋其類別建構函式的字串。</span><span class="sxs-lookup"><span data-stu-id="925c9-929">The example instantiates a `StringSearcher` object by passing the string to search for to its class constructor.</span></span> <span data-ttu-id="925c9-930">`StringSearcher.StartsWith`方法具有相同的簽章<xref:System.Predicate%601>委派。</span><span class="sxs-lookup"><span data-stu-id="925c9-930">The `StringSearcher.StartsWith` method has same signature as the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="925c9-931">當<xref:System.Array.Exists%2A>方法呼叫，直到傳回陣列的每個成員會傳遞給委派`true`或會逐一查看陣列中的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-931">When the <xref:System.Array.Exists%2A> method is called, each member of the array is passed to the delegate until it returns `true` or iterates all the elements in the array.</span></span>  
  
 [!code-csharp[System.Array.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists1.cs#1)]
 [!code-vb[System.Array.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists1.vb#1)]  
  
 <span data-ttu-id="925c9-932">您可以也使用 lambda 運算式而非明確定義其簽章對應的方法委派。</span><span class="sxs-lookup"><span data-stu-id="925c9-932">You can also use a lambda expression rather than explicitly define a method whose signature corresponds to that of the delegate.</span></span> <span data-ttu-id="925c9-933">下列範例會取代`StringSearcher`類別和其`StartsWith`方法與 lambda 運算式。</span><span class="sxs-lookup"><span data-stu-id="925c9-933">The following example replaces the `StringSearcher` class and its `StartsWith` method with a lambda expression.</span></span>  
  
 [!code-csharp[System.Array.Exists#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists2.cs#2)]
 [!code-vb[System.Array.Exists#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-934"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-934"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-935">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-935">-or-</span></span>  
  
 <span data-ttu-id="925c9-936"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-936"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Find&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Find&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Find(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Find(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-937">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-937">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-938">要搜尋的一維、以零為起始的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-938">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-939">定義要搜尋項目之條件的述詞。</span><span class="sxs-lookup"><span data-stu-id="925c9-939">The predicate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-940">搜尋符合指定之述詞所定義的條件之項目，並傳回整個 <see cref="T:System.Array" /> 內第一個相符的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-940">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-941">第一個符合指定之述詞所定義的條件之項目 (如有找到)，否則為類型 <paramref name="T" /> 的預設值。</span><span class="sxs-lookup"><span data-stu-id="925c9-941">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-942"><xref:System.Predicate%601>是一種委派的方法或 lambda 運算式以傳回`true`傳送至的物件是否符合委派或 lambda 運算式中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-942">The <xref:System.Predicate%601> is a delegate to a method or a lambda expression that returns `true` if the object passed to it matches the conditions defined in the delegate or lambda expression.</span></span>  <span data-ttu-id="925c9-943">項目`array`分別傳遞至<xref:System.Predicate%601>、 第一個元素開始和結尾最後一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-943">The elements of `array` are individually passed to the <xref:System.Predicate%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="925c9-944">找到相符項目時，會停止處理。</span><span class="sxs-lookup"><span data-stu-id="925c9-944">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="925c9-945">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-945">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-946">下列範例會使用<xref:System.Predicate%601>委派與<xref:System.Array.Find%2A>泛型的方法來搜尋的陣列<xref:System.Drawing.Point>結構。</span><span class="sxs-lookup"><span data-stu-id="925c9-946">The following example uses a <xref:System.Predicate%601> delegate with the <xref:System.Array.Find%2A> generic method to search an array of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="925c9-947">委派所表示的方法`ProductGT10`，傳回`true`產品 X 和 Y 欄位是否大於 100000。</span><span class="sxs-lookup"><span data-stu-id="925c9-947">The method the delegate represents, `ProductGT10`, returns `true` if the product of the X and Y fields is greater than 100,000.</span></span> <span data-ttu-id="925c9-948"><xref:System.Array.Find%2A>方法會呼叫委派的陣列，傳回符合測試條件的第一個點的每個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-948">The <xref:System.Array.Find%2A> method calls the delegate for each element of the array, returning the first point that meets the test condition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-949">Visual Basic 和 C# 使用者不必明確地建立委派，或指定之泛型方法的型別引數。</span><span class="sxs-lookup"><span data-stu-id="925c9-949">Visual Basic and C# users do not have to create the delegate explicitly or specify the type argument of the generic method.</span></span> <span data-ttu-id="925c9-950">在編譯器判斷您提供的方法引數的必要型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-950">The compilers determine the necessary types from the method arguments you supply.</span></span>  
  
 [!code-csharp[System.Array.Find#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/source.cs#1)]
 [!code-vb[System.Array.Find#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/source.vb#1)]  
  
 <span data-ttu-id="925c9-951">而不是具有所需的簽章的方法中明確定義具現化<xref:System.Predicate%601>委派，並傳遞至委派<xref:System.Array.Find%2A>方法，您就可使用 lambda 運算式。</span><span class="sxs-lookup"><span data-stu-id="925c9-951">Rather than explicitly defining a method with the necessary signature, instantiating a <xref:System.Predicate%601> delegate, and passing the delegate to the <xref:System.Array.Find%2A> method, it is customary to use a lambda expression.</span></span> <span data-ttu-id="925c9-952">下列範例等同於前一個，不同之處在於它會使用 lambda 運算式，當做`match`引數。</span><span class="sxs-lookup"><span data-stu-id="925c9-952">The following example is identical to the previous one, except that it uses a lambda expression as the `match` argument.</span></span>  
  
 [!code-csharp[System.Array.Find#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/lambda.cs#2)]
 [!code-vb[System.Array.Find#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/lambda.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-953"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-953"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-954">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-954">-or-</span></span>  
  
 <span data-ttu-id="925c9-955"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-955"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] FindAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] FindAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAll(Of T) (array As T(), match As Predicate(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ FindAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-956">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-956">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-957">要搜尋的以零為起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-957">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-958">定義搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-958">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-959">擷取符合指定之述詞所定義的條件之所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-959">Retrieves all the elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="925c9-960"><see cref="T:System.Array" />，其中包含符合指定之述詞所定義的條件之所有元素 (如果有找到的話)，否則為空的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-960">An <see cref="T:System.Array" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-961"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-961">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-962">項目`array`分別傳遞至<xref:System.Predicate%601>，和符合之條件的項目會儲存在傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-962">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and the elements that match the conditions are saved in the returned array.</span></span>  
  
 <span data-ttu-id="925c9-963">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-963">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-964">下列範例會建立 50 的隨機數字的陣列，範圍從 0 到 1000 的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-964">The following example creates an array of 50 random numbers with values that can range from 0 to 1,000.</span></span> <span data-ttu-id="925c9-965">然後它會呼叫<xref:System.Array.FindAll%2A>方法與 lambda 運算式的傳回值範圍從 300 為 600。</span><span class="sxs-lookup"><span data-stu-id="925c9-965">It then calls the <xref:System.Array.FindAll%2A> method with a lambda expression that returns the values that range from 300 to 600.</span></span> <span data-ttu-id="925c9-966">請注意，lambda 運算式傳遞參數，名為`x`; 這代表傳遞至個別的陣列成員<xref:System.Predicate%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-966">Note that the lambda expression is passed a parameter named `x`;  this represents the individual array member that is passed to the <xref:System.Predicate%601>.</span></span> <span data-ttu-id="925c9-967">也請注意，本機`lBound`和`uBound`變數是 lambda 運算式內存取。</span><span class="sxs-lookup"><span data-stu-id="925c9-967">Also note that the local `lBound` and `uBound` variables are accessible within the lambda expression.</span></span>  
  
 [!code-csharp[System.Array.FindAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.findall/cs/findall.cs#1)]
 [!code-vb[System.Array.FindAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.findall/vb/findall.vb#1)]  
  
 <span data-ttu-id="925c9-968">下列程式碼範例示範<xref:System.Array.Find%2A>， <xref:System.Array.FindLast%2A>，和<xref:System.Array.FindAll%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-968">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="925c9-969">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-969">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-970">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-970">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-971"><xref:System.Array.Find%2A>泛型方法會從開始，接著為傳遞每個項目來周遊陣列`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-971">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-972">搜尋會停止時`EndsWithSaurus`方法會傳回`true`"Amargasaurus"的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-972">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-973">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-973">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-974">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-974">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-975"><xref:System.Array.FindLast%2A>泛型的方法用來搜尋從結尾回溯陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-975">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="925c9-976">它會找到項目 」 Dilophosaurus 」 在位置 5。</span><span class="sxs-lookup"><span data-stu-id="925c9-976">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="925c9-977"><xref:System.Array.FindAll%2A>泛型的方法用來傳回陣列，其中包含 「 saurus"結尾的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-977">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="925c9-978">所顯示的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-978">The elements are displayed.</span></span>  
  
 <span data-ttu-id="925c9-979">程式碼範例也示範<xref:System.Array.Exists%2A>和<xref:System.Array.TrueForAll%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-979">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-980"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-980"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-981">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-981">-or-</span></span>  
  
 <span data-ttu-id="925c9-982"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-982"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-983">搜尋符合指定之述詞所定義的條件之元素，並傳回 <see cref="T:System.Array" /> 內或它的一部分中第一個相符項目之以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-983">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within an <see cref="T:System.Array" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-984">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-984">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-985">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-985">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-986">定義要搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-986">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-987">搜尋符合指定之述詞所定義的條件之項目，並傳回整個 <see cref="T:System.Array" /> 內第一次出現之以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-987">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-988">第一次出現符合 <paramref name="match" /> 所定義之條件的項目以零為起始的索引 (如有找到)；否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-988">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-989"><xref:System.Array>搜尋向前第一個項目開始和結束時間的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-989">The <xref:System.Array> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="925c9-990"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-990">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-991">項目`array`分別傳遞至<xref:System.Predicate%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-991">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="925c9-992">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-992">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-993">下列程式碼範例示範的所有三個多載<xref:System.Array.FindIndex%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-993">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="925c9-994">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-994">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-995">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-995">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-996"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>方法多載會從開始，接著為傳遞每個項目來周遊陣列`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-996">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-997">搜尋會停止時`EndsWithSaurus`方法會傳回`true`位置 1 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-997">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-998">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-998">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-999">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-999">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-1000"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋位置 2 開始，延續至陣列結尾的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1000">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="925c9-1001">它會找到 5 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1001">It finds the element at position 5.</span></span> <span data-ttu-id="925c9-1002">最後，<xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋的位置 2 開始的三個項目範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1002">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="925c9-1003">因為沒有在該範圍內恐龍名稱結尾是"saurus"，它會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1003">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1004"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1004"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1005">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1005">-or-</span></span>  
  
 <span data-ttu-id="925c9-1006"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1006"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1007">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1007">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1008">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1008">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1009">搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1009">The zero-based starting index of the search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-1010">定義要搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1010">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-1011">搜尋符合指定之述詞所定義的條件之項目，並傳回 <see cref="T:System.Array" /> 內 (從指定之索引延伸到最後一個項目)，於某項目範圍中第一次出現之以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1011">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="925c9-1012">第一次出現符合 <paramref name="match" /> 所定義之條件的項目以零為起始的索引 (如有找到)；否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1012">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1013"><xref:System.Array>開始向前搜尋`startIndex`和結束時間的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-1013">The <xref:System.Array> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="925c9-1014"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1014">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-1015">項目`array`分別傳遞至<xref:System.Predicate%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1015">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="925c9-1016">這個方法是 O (`n`) 作業，其中`n`是從元素數目`startIndex`結尾`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1016">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1017">下列程式碼範例示範的所有三個多載<xref:System.Array.FindIndex%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1017">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="925c9-1018">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-1018">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-1019">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1019">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-1020"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>方法多載會從開始，接著為傳遞每個項目來周遊陣列`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1020">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-1021">搜尋會停止時`EndsWithSaurus`方法會傳回`true`位置 1 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1021">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1022">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-1022">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-1023">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-1023">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-1024"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋位置 2 開始，延續至陣列結尾的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1024">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="925c9-1025">它會找到 5 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1025">It finds the element at position 5.</span></span> <span data-ttu-id="925c9-1026">最後，<xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋的位置 2 開始的三個項目範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1026">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="925c9-1027">因為沒有在該範圍內恐龍名稱結尾是"saurus"，它會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1027">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1028"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1028"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1029">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1029">-or-</span></span>  
  
 <span data-ttu-id="925c9-1030"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1030"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1031"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1031"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1032">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1032">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1033">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1033">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1034">搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1034">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="925c9-1035">區段中要搜尋的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1035">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-1036">定義要搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1036">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-1037">搜尋符合指定之述詞所定義的條件之項目，並傳回 <see cref="T:System.Array" /> 中從指定之索引開始，且包含指定之項目數目的項目範圍內第一個符合項目之以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1037">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="925c9-1038">第一次出現符合 <paramref name="match" /> 所定義之條件的項目以零為起始的索引 (如有找到)；否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1038">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1039"><xref:System.Array>開始向前搜尋`startIndex`結束為`startIndex`加上`count`減 1，如果`count`大於 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1039">The <xref:System.Array> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="925c9-1040"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1040">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-1041">項目`array`分別傳遞至<xref:System.Predicate%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1041">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="925c9-1042">這個方法是 O (`n`) 作業，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1042">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1043">下列程式碼範例示範的所有三個多載<xref:System.Array.FindIndex%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1043">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="925c9-1044">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-1044">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-1045">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1045">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-1046"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>方法多載會從開始，接著為傳遞每個項目來周遊陣列`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1046">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-1047">搜尋會停止時`EndsWithSaurus`方法會傳回`true`位置 1 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1047">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1048">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-1048">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-1049">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-1049">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-1050"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋位置 2 開始，延續至陣列結尾的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1050">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="925c9-1051">它會找到 5 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1051">It finds the element at position 5.</span></span> <span data-ttu-id="925c9-1052">最後，<xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋的位置 2 開始的三個項目範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1052">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="925c9-1053">因為沒有在該範圍內恐龍名稱結尾是"saurus"，它會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1053">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1054"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1054"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1055">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1055">-or-</span></span>  
  
 <span data-ttu-id="925c9-1056"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1056"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1057"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1057"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1058">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1058">-or-</span></span>  
  
 <span data-ttu-id="925c9-1059"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1059"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1060">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1060">-or-</span></span>  
  
 <span data-ttu-id="925c9-1061"><paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <paramref name="array" /> 中的有效區段。</span><span class="sxs-lookup"><span data-stu-id="925c9-1061"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FindLast&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindLast&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLast(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T FindLast(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1062">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1062">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1063">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1063">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-1064">定義要搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1064">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-1065">搜尋符合指定之述詞所定義的條件之項目，並傳回整個 <see cref="T:System.Array" /> 內最後一個相符的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1065">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-1066">最後一個符合指定之述詞所定義的條件之項目 (如有找到)，否則為類型 <paramref name="T" /> 的預設值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1066">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1067"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1067">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-1068">項目`array`分別傳遞至<xref:System.Predicate%601>、 移動中回溯<xref:System.Array>、 最後一個元素開始和結束的第一個元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-1068">The elements of `array` are individually passed to the <xref:System.Predicate%601>, moving backward in the <xref:System.Array>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="925c9-1069">找到相符項目時，會停止處理。</span><span class="sxs-lookup"><span data-stu-id="925c9-1069">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="925c9-1070">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1070">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1071">下列程式碼範例示範<xref:System.Array.Find%2A>， <xref:System.Array.FindLast%2A>，和<xref:System.Array.FindAll%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1071">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="925c9-1072">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-1072">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-1073">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1073">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-1074"><xref:System.Array.Find%2A>泛型方法會從開始，接著為傳遞每個項目來周遊陣列`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1074">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-1075">搜尋會停止時`EndsWithSaurus`方法會傳回`true`"Amargasaurus"的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1075">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1076">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-1076">In C# and Visual Basic, it is not necessary to create the`Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-1077">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-1077">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-1078"><xref:System.Array.FindLast%2A>泛型的方法用來搜尋從結尾回溯陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1078">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="925c9-1079">它會找到項目 」 Dilophosaurus 」 在位置 5。</span><span class="sxs-lookup"><span data-stu-id="925c9-1079">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="925c9-1080"><xref:System.Array.FindAll%2A>泛型的方法用來傳回陣列，其中包含 「 saurus"結尾的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1080">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="925c9-1081">所顯示的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1081">The elements are displayed.</span></span>  
  
 <span data-ttu-id="925c9-1082">程式碼範例也示範<xref:System.Array.Exists%2A>和<xref:System.Array.TrueForAll%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1082">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1083"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1083"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1084">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1084">-or-</span></span>  
  
 <span data-ttu-id="925c9-1085"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1085"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-1086">搜尋符合指定之述詞所定義的條件之元素，並傳回 <see cref="T:System.Array" /> 內或它的一部分中最後一個相符項目之以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1086">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within an <see cref="T:System.Array" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1087">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1087">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1088">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1088">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-1089">定義要搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1089">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-1090">搜尋符合指定之述詞所定義的條件之項目，並傳回整個 <see cref="T:System.Array" /> 內最後一次出現之以為零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1090">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-1091">符合 <paramref name="match" /> 所定義之條件且最後一次出現之項目的以零為起始的索引 (如有找到)，如未找到則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1091">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1092"><xref:System.Array>向後的最後一個項目開始和結束時間的第一個項目中搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-1092">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="925c9-1093"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1093">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-1094">項目`array`分別傳遞至<xref:System.Predicate%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1094">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="925c9-1095">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1095">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1096">下列程式碼範例示範的所有三個多載<xref:System.Array.FindLastIndex%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1096">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="925c9-1097">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-1097">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-1098">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1098">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-1099"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>方法多載周遊回溯陣列結束時，依序為傳遞每個項目從`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1099">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-1100">搜尋會停止時`EndsWithSaurus`方法會傳回`true`位置 5 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1100">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1101">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-1101">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-1102">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-1102">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-1103"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋位置 4 開始，並繼續向後陣列開頭的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1103">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="925c9-1104">它會尋找在位置 1 的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1104">It finds the element at position 1.</span></span> <span data-ttu-id="925c9-1105">最後，<xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋的三個項目範圍從 4 位置開始並回溯 （也就是項目 4、 3 和 2）。</span><span class="sxs-lookup"><span data-stu-id="925c9-1105">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="925c9-1106">因為沒有在該範圍內恐龍名稱結尾是"saurus"，它會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1106">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1107"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1107"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1108">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1108">-or-</span></span>  
  
 <span data-ttu-id="925c9-1109"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1109"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1110">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1110">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1111">要搜尋的以零為起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1111">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1112">向後搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1112">The zero-based starting index of the backward search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-1113">定義要搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1113">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-1114">搜尋符合指定之述詞所定義的條件之項目，並傳回 <see cref="T:System.Array" /> 中從第一個項目延伸到指定之索引的項目範圍內，最後一個符合項目之以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1114">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="925c9-1115">符合 <paramref name="match" /> 所定義之條件且最後一次出現之項目的以零為起始的索引 (如有找到)，如未找到則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1115">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1116"><xref:System.Array>是搜尋回溯開始`startIndex`和結束時間的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1116">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="925c9-1117"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1117">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-1118">項目`array`分別傳遞至<xref:System.Predicate%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1118">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="925c9-1119">這個方法是 O (`n`) 作業，其中`n`是從開頭的項目數`array`至`startIndex`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1119">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1120">下列程式碼範例示範的所有三個多載<xref:System.Array.FindLastIndex%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1120">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="925c9-1121">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-1121">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-1122">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1122">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-1123"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>方法多載周遊回溯陣列結束時，依序為傳遞每個項目從`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1123">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-1124">搜尋會停止時`EndsWithSaurus`方法會傳回`true`位置 5 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1124">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1125">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-1125">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-1126">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-1126">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-1127"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋位置 4 開始，並繼續向後陣列開頭的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1127">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="925c9-1128">它會尋找在位置 1 的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1128">It finds the element at position 1.</span></span> <span data-ttu-id="925c9-1129">最後，<xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋的三個項目範圍從 4 位置開始並回溯 （也就是項目 4、 3 和 2）。</span><span class="sxs-lookup"><span data-stu-id="925c9-1129">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="925c9-1130">因為沒有在該範圍內恐龍名稱結尾是"saurus"，它會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1130">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1131"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1131"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1132">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1132">-or-</span></span>  
  
 <span data-ttu-id="925c9-1133"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1133"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1134"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1134"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1135">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1135">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1136">要搜尋的以零為起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1136">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1137">向後搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1137">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="925c9-1138">區段中要搜尋的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1138">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-1139">定義要搜尋項目之條件的 <see cref="T:System.Predicate`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1139">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="925c9-1140">搜尋符合指定之述詞所定義的條件之項目，並傳回 <see cref="T:System.Array" /> 中包含指定之項目數目，且結束於指定之索引的項目範圍內最後一個符合項目之以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1140">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="925c9-1141">符合 <paramref name="match" /> 所定義之條件且最後一次出現之項目的以零為起始的索引 (如有找到)，如未找到則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1141">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1142"><xref:System.Array>是搜尋回溯開始`startIndex`結束為`startIndex`減去`count`再加上 1，如果`count`大於 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1142">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="925c9-1143"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1143">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-1144">項目`array`分別傳遞至<xref:System.Predicate%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1144">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="925c9-1145">這個方法是 O (`n`) 作業，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1145">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1146">下列程式碼範例示範的所有三個多載<xref:System.Array.FindLastIndex%2A>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1146">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="925c9-1147">會建立字串陣列，包含 8 恐龍名稱，兩個 （在位置 1 和 5） 」 saurus 」 以結束。</span><span class="sxs-lookup"><span data-stu-id="925c9-1147">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="925c9-1148">程式碼範例也會定義名為的搜尋述詞方法`EndsWithSaurus`、 可接受字串參數和傳回布林值，指出是否"saurus"輸入的字串結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1148">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="925c9-1149"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>方法多載周遊回溯陣列結束時，依序為傳遞每個項目從`EndsWithSaurus`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1149">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="925c9-1150">搜尋會停止時`EndsWithSaurus`方法會傳回`true`位置 5 處的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1150">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1151">在 C# 和 Visual Basic 中，就不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-1151">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-1152">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-1152">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="925c9-1153"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋位置 4 開始，並繼續向後陣列開頭的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1153">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="925c9-1154">它會尋找在位置 1 的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1154">It finds the element at position 1.</span></span> <span data-ttu-id="925c9-1155">最後，<xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>方法多載用來搜尋的三個項目範圍從 4 位置開始並回溯 （也就是項目 4、 3 和 2）。</span><span class="sxs-lookup"><span data-stu-id="925c9-1155">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="925c9-1156">因為沒有在該範圍內恐龍名稱結尾是"saurus"，它會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1156">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1157"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1157"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1158">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1158">-or-</span></span>  
  
 <span data-ttu-id="925c9-1159"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1159"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1160"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1160"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1161">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1161">-or-</span></span>  
  
 <span data-ttu-id="925c9-1162"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1162"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1163">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1163">-or-</span></span>  
  
 <span data-ttu-id="925c9-1164"><paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <paramref name="array" /> 中的有效區段。</span><span class="sxs-lookup"><span data-stu-id="925c9-1164"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ForEach&lt;T&gt; (T[] array, Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForEach&lt;T&gt;(!!T[] array, class System.Action`1&lt;!!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ForEach``1(``0[],System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ForEach(Of T) (array As T(), action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void ForEach(cli::array &lt;T&gt; ^ array, Action&lt;T&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1165">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1165">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1166">以零起始的一維 <see cref="T:System.Array" />，要在其元素上執行動作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1166">The one-dimensional, zero-based <see cref="T:System.Array" /> on whose elements the action is to be performed.</span></span></param>
        <param name="action"><span data-ttu-id="925c9-1167">要在 <c>array</c> 的每一個元素上執行的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1167">The <see cref="T:System.Action`1" /> to perform on each element of <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="925c9-1168">在指定之陣列的每一個項目上執行指定之動作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1168">Performs the specified action on each element of the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1169"><xref:System.Action%601>物件執行的動作方法的委派傳遞給它。</span><span class="sxs-lookup"><span data-stu-id="925c9-1169">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="925c9-1170">項目`array`分別傳遞至<xref:System.Action%601>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1170">The elements of `array` are individually passed to the <xref:System.Action%601>.</span></span>  
  
 <span data-ttu-id="925c9-1171">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1171">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1172">下列範例示範如何使用<xref:System.Array.ForEach%2A>顯示整數陣列中的每個項目的平方。</span><span class="sxs-lookup"><span data-stu-id="925c9-1172">The following example shows how to use <xref:System.Array.ForEach%2A> to display the squares of each element in an integer array.</span></span>  
  
 [!code-cpp[System.Array.ForEach#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.foreach/cpp/source.cpp#1)]
 [!code-csharp[System.Array.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.foreach/cs/source.cs#1)]
 [!code-vb[System.Array.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.foreach/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1173"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1173"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-1174">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1174">-or-</span></span>  
  
 <span data-ttu-id="925c9-1175"><paramref name="action" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1175"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="925c9-1176">傳回 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1176">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-1177"><see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1177">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1178">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="925c9-1178">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="925c9-1179">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1179">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="925c9-1180">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1180">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="925c9-1181">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="925c9-1181">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="925c9-1182">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="925c9-1182">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="925c9-1183"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1183"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="925c9-1184">在這個位置上，<xref:System.Collections.IEnumerator.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1184">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="925c9-1185">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1185">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="925c9-1186"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1186"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="925c9-1187"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1187"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="925c9-1188">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1188">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="925c9-1189">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1189">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="925c9-1190">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1190">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="925c9-1191">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1191">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="925c9-1192">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="925c9-1192">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="925c9-1193">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1193">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="925c9-1194">列舉值對集合並沒有獨佔存取，因此列舉集合在本質上並非安全執行緒的程序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1194">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="925c9-1195">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="925c9-1195">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="925c9-1196">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="925c9-1196">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="925c9-1197">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1197">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1198">下列程式碼範例示範如何使用<xref:System.Array.GetEnumerator%2A>陣列的項目列出。</span><span class="sxs-lookup"><span data-stu-id="925c9-1198">The following code example shows how to use <xref:System.Array.GetEnumerator%2A> to list the elements of an array.</span></span>  
  
 [!code-cpp[System.Array_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CPP/array_getenumerator.cpp#1)]
 [!code-csharp[System.Array_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CS/array_getenumerator.cs#1)]
 [!code-vb[System.Array_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetEnumerator/VB/array_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public int GetLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLength (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLength(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="925c9-1199">需要決定長度之 <see cref="T:System.Array" /> 的以零起始維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1199">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span></span></param>
        <summary><span data-ttu-id="925c9-1200">取得代表 <see cref="T:System.Array" /> 指定維度之元素數目的 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1200">Gets a 32-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-1201">32 位元的整數，代表指定維度的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1201">A 32-bit integer that represents the number of elements in the specified dimension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1202">舉例來說，<xref:System.Array.GetLength%2A>是`GetLength(0)`，它會傳回的項目數的第一個維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1202">An example of <xref:System.Array.GetLength%2A> is `GetLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1203">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1203">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1204">下列範例示範如何使用<xref:System.Array.GetLength%2A>來顯示不同等級的兩個陣列的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1204">The following example shows how to use <xref:System.Array.GetLength%2A> to display the dimensions of two arrays with different ranks.</span></span>  
  
 [!code-cpp[System.Array.GetLength#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getlength/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetLength#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getlength/cs/source.cs#1)]
 [!code-vb[System.Array.GetLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getlength/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1205"><paramref name="dimension" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1205"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1206">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1206">-or-</span></span>  
  
 <span data-ttu-id="925c9-1207"><paramref name="dimension" /> 等於或大於 <see cref="P:System.Array.Rank" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1207"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLongLength">
      <MemberSignature Language="C#" Value="public long GetLongLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLongLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLongLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLongLength (dimension As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetLongLength(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="925c9-1208">需要決定長度之 <see cref="T:System.Array" /> 的以零起始維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1208">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span></span></param>
        <summary><span data-ttu-id="925c9-1209">取得代表 <see cref="T:System.Array" /> 指定維度之元素數目的 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1209">Gets a 64-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-1210">64 位元的整數，代表指定維度的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1210">A 64-bit integer that represents the number of elements in the specified dimension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1211">舉例來說，<xref:System.Array.GetLongLength%2A>是`GetLongLength(0)`，它會傳回的項目數的第一個維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1211">An example of <xref:System.Array.GetLongLength%2A> is `GetLongLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1212">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1212">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1213"><paramref name="dimension" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1213"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1214">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1214">-or-</span></span>  
  
 <span data-ttu-id="925c9-1215"><paramref name="dimension" /> 等於或大於 <see cref="P:System.Array.Rank" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1215"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLowerBound">
      <MemberSignature Language="C#" Value="public int GetLowerBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLowerBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLowerBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLowerBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLowerBound(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="925c9-1216">需要決定開始索引之陣列的以零為起始的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1216">A zero-based dimension of the array whose starting index needs to be determined.</span></span></param>
        <summary><span data-ttu-id="925c9-1217">取得陣列中指定之維度的第一個項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1217">Gets the index of the first element of the specified dimension in the array.</span></span></summary>
        <returns><span data-ttu-id="925c9-1218">陣列中指定之維度的第一個項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1218">The index of the first element of the specified dimension in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1219">`GetLowerBound(0)` 傳回陣列的第一個維度的起始索引和`GetLowerBound(Rank - 1)`傳回陣列的最後一個維度的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1219">`GetLowerBound(0)` returns the starting index of the first dimension of the array, and `GetLowerBound(Rank - 1)` returns the starting index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="925c9-1220"><xref:System.Array.GetLowerBound%2A>方法一律會傳回值，指出索引陣列的下限即使陣列是空的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1220">The <xref:System.Array.GetLowerBound%2A> method always returns a value that indicates the index of the lower bound of the array, even if the array is empty.</span></span>  
  
 <span data-ttu-id="925c9-1221">請注意，雖然大部分的陣列，在.NET Framework 是以零為起始 (也就是<xref:System.Array.GetLowerBound%2A>方法會傳回零的陣列，每個維度)，.NET Framework 支援不是以零為起始的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1221">Note that, although most arrays in the .NET Framework are zero-based (that is, the <xref:System.Array.GetLowerBound%2A> method returns zero for each dimension of an array), the .NET Framework does support arrays that are not zero-based.</span></span> <span data-ttu-id="925c9-1222">您可以使用建立這類陣列<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29>方法，和也會傳回從 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="925c9-1222">Such arrays can be created with the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> method, and can also be returned from unmanaged code.</span></span>  
  
 <span data-ttu-id="925c9-1223">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1223">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1224">下列範例會使用<xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法以顯示一維和二維陣列的界限，並顯示其陣列元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1224">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1225"><paramref name="dimension" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1225"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1226">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1226">-or-</span></span>  
  
 <span data-ttu-id="925c9-1227"><paramref name="dimension" /> 等於或大於 <see cref="P:System.Array.Rank" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1227"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetUpperBound">
      <MemberSignature Language="C#" Value="public int GetUpperBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetUpperBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetUpperBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpperBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetUpperBound(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="925c9-1228">需要決定上限之陣列的以零為起始的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1228">A zero-based dimension of the array whose upper bound needs to be determined.</span></span></param>
        <summary><span data-ttu-id="925c9-1229">取得陣列中指定之維度的最後一個項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1229">Gets the index of the last element of the specified dimension in the array.</span></span></summary>
        <returns><span data-ttu-id="925c9-1230">陣列中指定之維度的最後一個項目的索引，如果指定之維度是空的則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1230">The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1231">`GetUpperBound(0)` 傳回陣列的第一個維度中的最後一個索引和`GetUpperBound(Rank - 1)`傳回陣列的最後一個維度的最後一個索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1231">`GetUpperBound(0)` returns the last index in the first dimension of the array, and `GetUpperBound(Rank - 1)` returns the last index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="925c9-1232">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1232">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1233">下列範例會使用<xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法以顯示一維和二維陣列的界限，並顯示其陣列元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1233">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1234"><paramref name="dimension" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1234"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1235">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1235">-or-</span></span>  
  
 <span data-ttu-id="925c9-1236"><paramref name="dimension" /> 等於或大於 <see cref="P:System.Array.Rank" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1236"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-1237">取得目前 <see cref="T:System.Array" /> 中指定元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1237">Gets the value of the specified element in the current <see cref="T:System.Array" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="925c9-1238">32 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1238">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1239">取得一維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1239">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1240">索引已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1240">The index is specified as a 32-bit integer.</span></span></summary>
        <returns><span data-ttu-id="925c9-1241">一維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1241">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1242"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否值`index`超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1242">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1243">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1243">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1244">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1244">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1245">目前的 <see cref="T:System.Array" /> 不具有剛好一維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1245">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1246"><paramref name="index" /> 在目前 <see cref="T:System.Array" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="925c9-1246"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Integer()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;int&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices"><span data-ttu-id="925c9-1247">32 位元整數的一維陣列，代表索引，指定要取得的 <see cref="T:System.Array" /> 元素的位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1247">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1248">取得多維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1248">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1249">索引已指定為 32 位元整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1249">The indexes are specified as an array of 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-1250">多維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1250">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1251">中的項目數`indices`必須等於中的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1251">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="925c9-1252">中的所有項目`indices`陣列必須共同指定所需項目的位置，以多維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1252">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1253"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1253">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1254">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1254">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1255">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1255">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1256"><paramref name="indices" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1256"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1257">目前 <see cref="T:System.Array" /> 中的維度數目不等於 <paramref name="indices" /> 中的元素數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1257">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="925c9-1258"><paramref name="indices" /> 中的任一元素超過目前 <see cref="T:System.Array" /> 中對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1258">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="925c9-1259">64 位元整數，代表要取得之 <see cref="T:System.Array" /> 元素的位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1259">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1260">取得一維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1260">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1261">索引已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1261">The index is specified as a 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="925c9-1262">一維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1262">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1263"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否值`index`超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1263">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1264">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1264">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1265">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1265">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1266">目前的 <see cref="T:System.Array" /> 不具有剛好一維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1266">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1267"><paramref name="index" /> 在目前 <see cref="T:System.Array" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="925c9-1267"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Long()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;long&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices"><span data-ttu-id="925c9-1268">64 位元整數的一維陣列，代表指定要取得之 <see cref="T:System.Array" /> 元素位置的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1268">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1269">取得多維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1269">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1270">索引已指定為 64 位元整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1270">The indexes are specified as an array of 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-1271">多維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1271">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1272">中的項目數`indices`必須等於中的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1272">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="925c9-1273">中的所有項目`indices`陣列必須共同指定所需項目的位置，以多維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1273">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1274"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1274">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1275">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1275">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1276">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1276">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1277"><paramref name="indices" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1277"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1278">目前 <see cref="T:System.Array" /> 中的維度數目不等於 <paramref name="indices" /> 中的元素數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1278">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-1279"><paramref name="indices" /> 中的任一元素超過目前 <see cref="T:System.Array" /> 中對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1279">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="925c9-1280">32 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1280">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1281">32 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1281">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1282">取得二維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1282">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1283">索引已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1283">The indexes are specified as 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-1284">二維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1284">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1285"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1285">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1286">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1286">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1287">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1287">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1288">目前的 <see cref="T:System.Array" /> 不具有剛好二維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1288">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="925c9-1289"><paramref name="index1" /> 或 <paramref name="index2" /> 超過目前 <see cref="T:System.Array" /> 之對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1289">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="925c9-1290">64 位元整數，代表要取得的 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1290">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1291">64 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1291">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1292">取得二維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1292">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1293">索引已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1293">The indexes are specified as 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-1294">二維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1294">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1295"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1295">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1296">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1296">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1297">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1297">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1298">目前的 <see cref="T:System.Array" /> 不具有剛好二維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1298">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-1299"><paramref name="index1" /> 或 <paramref name="index2" /> 超過目前 <see cref="T:System.Array" /> 之對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1299">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer, index3 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2, int index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="925c9-1300">32 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1300">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1301">32 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1301">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index3"><span data-ttu-id="925c9-1302">32 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第三維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1302">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1303">取得三維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1303">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1304">索引已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1304">The indexes are specified as 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-1305">三維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1305">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1306"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1306">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1307">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1307">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1308">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1308">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1309">目前的 <see cref="T:System.Array" /> 不具有剛好三維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1309">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1310"><paramref name="index1" /> 或 <paramref name="index2" /> 或 <paramref name="index3" /> 超過目前 <see cref="T:System.Array" /> 對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1310"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long, index3 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2, long index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="925c9-1311">64 位元整數，代表要取得的 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1311">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1312">64 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1312">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index3"><span data-ttu-id="925c9-1313">64 位元整數，表示要取得的 <see cref="T:System.Array" /> 元素的第三維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1313">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="925c9-1314">取得三維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1314">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1315">索引已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1315">The indexes are specified as 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="925c9-1316">三維 <see cref="T:System.Array" /> 中位於指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1316">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1317"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1317">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1318">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1318">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1319">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1319">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1320">目前的 <see cref="T:System.Array" /> 不具有剛好三維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1320">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1321"><paramref name="index1" /> 或 <paramref name="index2" /> 或 <paramref name="index3" /> 超過目前 <see cref="T:System.Array" /> 對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1321"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-1322">搜尋指定的物件，並傳回其在一維陣列或陣列中某個項目範圍內第一次出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1322">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array or in a range of elements in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1323">要搜尋的一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1323">The one-dimensional array to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1324">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1324">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="925c9-1325">搜尋指定的物件，並傳回一維陣列中第一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1325">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span></span></summary>
        <returns><span data-ttu-id="925c9-1326">如有找到，則為 <paramref name="array" /> 中 <paramref name="value" /> 第一個相符項目的索引；否則為陣列的下限減 1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1326">The index of the first occurrence of <paramref name="value" /> in <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1327">這個方法會搜尋的一維 arrayfor 的所有項目`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1327">This method searches all the elements of a one-dimensional arrayfor `value`.</span></span> <span data-ttu-id="925c9-1328">若要判斷是否`value`存在於`array`，此方法會藉由呼叫每個項目執行相等比較`Equals`方法，直到找到相符項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1328">To determine whether `value` exists in `array`, the method performs an equality comparison by calling each element's `Equals` method until it finds a match.</span></span> <span data-ttu-id="925c9-1329">這表示，如果項目會覆寫<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>呼叫方法，覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-1329">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="925c9-1330">因為大部分的陣列都具有下限為零，這個方法通常會傳回 – 1 如果`value`找不到。</span><span class="sxs-lookup"><span data-stu-id="925c9-1330">Because most arrays have a lower bound of zero, this method generally returns –1 if`value` isn’t found.</span></span> <span data-ttu-id="925c9-1331">在少數情況下，陣列的下限等於<xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) 和`value`找不到，這個方法會傳回<xref:System.Int32.MaxValue?displayProperty=nameWithType>(0x7FFFFFFF)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1331">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="925c9-1332">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1332">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1333">此範例會呼叫下列三個多載的<xref:System.Array.IndexOf%2A>方法來尋找字串陣列中字串的索引：</span><span class="sxs-lookup"><span data-stu-id="925c9-1333">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="925c9-1334"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>以判斷第一個符合的字串"the"字串陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-1334"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="925c9-1335"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>以判斷第一個符合的字串"the"中的第四個字串陣列的最後一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1335"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="925c9-1336"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>以判斷第一個符合的字串"the"中的字串陣列從陣列結尾後面次成功比對的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1336"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1337"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1337"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1338"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1338"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1339">要搜尋的一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1339">The one-dimensional array to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1340">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1340">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1341">搜尋的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1341">The starting index of the search.</span></span> <span data-ttu-id="925c9-1342">0 (零) 在空白陣列中有效。</span><span class="sxs-lookup"><span data-stu-id="925c9-1342">0 (zero) is valid in an empty array.</span></span></param>
        <summary><span data-ttu-id="925c9-1343">在一維陣列的項目範圍中搜尋指定的物件，並傳回其第一次出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1343">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span></span> <span data-ttu-id="925c9-1344">此範圍從指定的索引延伸到陣列的結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1344">The range extends from a specified index to the end of the array.</span></span></summary>
        <returns><span data-ttu-id="925c9-1345">如有找到，則為 <paramref name="array" /> 中從 <paramref name="startIndex" /> 延伸至最後一個元素的元素範圍內，<paramref name="value" /> 第一個發生的索引；否則為陣列的下限減 1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1345">The index of the first occurrence of <paramref name="value" />, if it’s found, within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1346">這個方法會搜尋索引處的項目從一維陣列`startIndex`最後一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1346">This method searches a one-dimensional array from the element at index `startIndex` to the last element.</span></span> <span data-ttu-id="925c9-1347">若要判斷是否`value`存在於`array`，此方法會藉由呼叫執行相等比較`Equals`方法的每個項目，直到找到相符項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1347">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="925c9-1348">這表示，如果項目會覆寫<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>呼叫方法，覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-1348">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="925c9-1349">因為大部分的陣列都具有下限為零，這個方法通常會傳回 – 1 如果`value`找不到。</span><span class="sxs-lookup"><span data-stu-id="925c9-1349">Because most arrays have a lower bound of zero, this method generally returns –1 if `value` isn’t found.</span></span> <span data-ttu-id="925c9-1350">在少數情況下，陣列的下限等於<xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) 和`value`找不到，這個方法會傳回<xref:System.Int32.MaxValue?displayProperty=nameWithType>(0x7FFFFFFF)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1350">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="925c9-1351">如果`startIndex`等於<xref:System.Array.Length%2A?displayProperty=nameWithType>，方法會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1351">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>,the method returns -1.</span></span> <span data-ttu-id="925c9-1352">如果`startIndex`大於<xref:System.Array.Length%2A?displayProperty=nameWithType>，方法會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1352">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="925c9-1353">這個方法是 O (`n`) 作業，其中`n`是從元素數目`startIndex`結尾`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1353">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1354">此範例會呼叫下列三個多載的<xref:System.Array.IndexOf%2A>方法來尋找字串陣列中字串的索引：</span><span class="sxs-lookup"><span data-stu-id="925c9-1354">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="925c9-1355"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>以判斷第一個符合的字串"the"字串陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-1355"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="925c9-1356"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>以判斷第一個符合的字串"the"中的第四個字串陣列的最後一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1356"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="925c9-1357"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>以判斷第一個符合的字串"the"中的字串陣列從陣列結尾後面次成功比對的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1357"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1358"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1358"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1359"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1359"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1360"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1360"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1361">要搜尋的一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1361">The one-dimensional array to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1362">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1362">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1363">搜尋的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1363">The starting index of the search.</span></span> <span data-ttu-id="925c9-1364">0 (零) 在空白陣列中有效。</span><span class="sxs-lookup"><span data-stu-id="925c9-1364">0 (zero) is valid in an empty array.</span></span></param>
        <param name="count"><span data-ttu-id="925c9-1365">要搜尋的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1365">The number of elements to search.</span></span></param>
        <summary><span data-ttu-id="925c9-1366">在一維陣列的項目範圍中搜尋指定的物件，並傳回其第一次出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1366">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of ifs first occurrence.</span></span> <span data-ttu-id="925c9-1367">此範圍的延伸起點為指定項目數的指定索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1367">The range extends from a specified index for a specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="925c9-1368">如有找到，則為 <paramref name="array" /> 中從索引 <paramref name="startIndex" /> 到 <paramref name="startIndex" /> + <paramref name="count" /> -1 的範圍內，<paramref name="value" /> 第一個相符項目的索引；否則為陣列的下限減 1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1368">The index of the first occurrence of <paramref name="value" />, if it’s found in the <paramref name="array" /> from index <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1369">這個方法會搜尋的一維 arrayfrom 項目`startIndex`至`startIndex`加上`count`減 1，如果`count`大於 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1369">This method searches the elements of a one-dimensional arrayfrom `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="925c9-1370">若要判斷是否`value`存在於`array`，此方法會藉由呼叫執行相等比較`Equals`方法的每個項目，直到找到相符項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1370">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="925c9-1371">這表示，如果項目會覆寫<xref:System.Object.Equals%2A?displayProperty=nameWithType>呼叫方法，覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-1371">This means that if the element overrides the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="925c9-1372">Becausemost 陣列的下限為零，這個方法通常會傳回-1 時`value`找不到。</span><span class="sxs-lookup"><span data-stu-id="925c9-1372">Becausemost arrays have a lower bound of zero, this method generally returns –1 when `value` isn’t found.</span></span> <span data-ttu-id="925c9-1373">在少數情況下，陣列的下限等於<xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) 和`value`找不到，這個方法會傳回<xref:System.Int32.MaxValue?displayProperty=nameWithType>(0x7FFFFFFF)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1373">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> (0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="925c9-1374">如果`startindex`等於<xref:System.Array.Length%2A?displayProperty=nameWithType>，方法會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1374">If `startindex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span> <span data-ttu-id="925c9-1375">如果`startIndex`大於<xref:System.Array.Length%2A?displayProperty=nameWithType>，方法會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1375">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="925c9-1376">這個方法是 O (`n`) 作業，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1376">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1377">此範例會呼叫下列三個多載的<xref:System.Array.IndexOf%2A>方法來尋找字串陣列中字串的索引：</span><span class="sxs-lookup"><span data-stu-id="925c9-1377">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="925c9-1378"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>以判斷第一個符合的字串"the"字串陣列中。</span><span class="sxs-lookup"><span data-stu-id="925c9-1378"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="925c9-1379"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>以判斷第一個符合的字串"the"中的第四個字串陣列的最後一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1379"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="925c9-1380"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>以判斷第一個符合的字串"the"中的字串陣列從陣列結尾後面次成功比對的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1380"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span> <span data-ttu-id="925c9-1381">若要判斷的值`count`引數，它減去從起始的索引陣列的上限，並新增一個。</span><span class="sxs-lookup"><span data-stu-id="925c9-1381">To determine the value of the `count` argument, it subtracts the upper bound of the array from the starting index and adds one.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1382"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1382"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1383"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1383"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1384">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1384">-or-</span></span>  
  
 <span data-ttu-id="925c9-1385"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1385"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1386">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1386">-or-</span></span>  
  
 <span data-ttu-id="925c9-1387"><paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <paramref name="array" /> 中的有效區段。</span><span class="sxs-lookup"><span data-stu-id="925c9-1387"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1388"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1388"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1389">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1389">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1390">要搜尋的一維、以零為起始的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1390">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1391">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1391">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="925c9-1392">搜尋指定的物件，並傳回一維陣列中第一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1392">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span></span></summary>
        <returns><span data-ttu-id="925c9-1393">整個 <paramref name="array" /> 中第一個出現 <paramref name="value" /> 之以零為起始的索引 (如有找到)，如未找到則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1393">The zero-based index of the first occurrence of <paramref name="value" /> in the entire <paramref name="array" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1394">這個方法會搜尋的一維陣列的所有項目`value`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1394">This method searches all the elements of a one-dimensional array for `value`.</span></span> <span data-ttu-id="925c9-1395">若要判斷是否`value`存在於`array`，此方法會藉由呼叫執行相等比較`T.Equals`每個項目上的方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1395">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="925c9-1396">這表示如果`T`會覆寫<xref:System.Object.Equals%2A>呼叫方法，覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-1396">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="925c9-1397">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1397">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1398">下列範例將示範三種一般的所有多載<xref:System.Array.IndexOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1398">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="925c9-1399">將建立字串陣列，一個會出現兩次，在索引位置 0 和 5 的索引位置的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1399">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="925c9-1400"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>方法多載開始時，從陣列中搜尋和尋找字串的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1400">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="925c9-1401"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>方法多載用於搜尋的索引位置 3 開頭的陣列和陣列的結尾繼續，並尋找字串的第二個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1401">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="925c9-1402">最後，<xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>方法多載用來搜尋指定範圍的開頭的索引位置 2 的兩個項目; 它會傳回 – 1，因為沒有在該範圍內的搜尋字串的執行個體。</span><span class="sxs-lookup"><span data-stu-id="925c9-1402">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1403"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1403"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1404">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1404">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1405">要搜尋的一維、以零為起始的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1405">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1406">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1406">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1407">搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1407">The zero-based starting index of the search.</span></span> <span data-ttu-id="925c9-1408">0 (零) 在空白陣列中有效。</span><span class="sxs-lookup"><span data-stu-id="925c9-1408">0 (zero) is valid in an empty array.</span></span></param>
        <summary><span data-ttu-id="925c9-1409">在一維陣列的項目範圍中搜尋指定的物件，並傳回其第一次出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1409">Searches for the specified object in a range of elements of a one dimensional array, and returns the index of its first occurrence.</span></span> <span data-ttu-id="925c9-1410">此範圍從指定的索引延伸到陣列的結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1410">The range extends from a specified index to the end of the array.</span></span></summary>
        <returns><span data-ttu-id="925c9-1411">在 <paramref name="value" /> 中從 <paramref name="array" /> 延伸到最後一個項目的元素範圍內，<paramref name="startIndex" /> 的第一個相符項目之以零起始的索引 (如果找到的話)，否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1411">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1412">這個方法會搜尋處的項目從一維陣列`startIndex`陣列的結尾。</span><span class="sxs-lookup"><span data-stu-id="925c9-1412">This method searches a one-dimensional array from the element at `startIndex` to the end of the array.</span></span> <span data-ttu-id="925c9-1413">若要判斷是否`value`存在於`array`，此方法會藉由呼叫執行相等比較`T.Equals`每個項目上的方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1413">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="925c9-1414">這表示如果`T`會覆寫<xref:System.Object.Equals%2A>呼叫方法，覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-1414">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="925c9-1415">如果`startIndex`等於<xref:System.Array.Length%2A>，方法會傳回-1.If`startIndex`大於<xref:System.Array.Length%2A?displayProperty=nameWithType>，方法會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1415">If `startIndex` equals <xref:System.Array.Length%2A>,the method returns -1.If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="925c9-1416">這個方法是 O (`n`) 作業，其中`n`是從元素數目`startIndex`結尾`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1416">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1417">下列範例將示範三種一般的所有多載<xref:System.Array.IndexOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1417">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="925c9-1418">將建立字串陣列，一個會出現兩次，在索引位置 0 和 5 的索引位置的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1418">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="925c9-1419"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>方法多載開始時，從陣列中搜尋和尋找字串的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1419">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="925c9-1420"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>方法多載用於搜尋的索引位置 3 開頭的陣列和陣列的結尾繼續，並尋找字串的第二個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1420">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="925c9-1421">最後，<xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>方法多載用來搜尋指定範圍的開頭的索引位置 2 的兩個項目; 它會傳回 – 1，因為沒有在該範圍內的搜尋字串的執行個體。</span><span class="sxs-lookup"><span data-stu-id="925c9-1421">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1422"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1422"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1423"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1423"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1424">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1424">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1425">要搜尋的一維、以零為起始的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1425">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1426">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1426">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1427">搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1427">The zero-based starting index of the search.</span></span> <span data-ttu-id="925c9-1428">0 (零) 在空白陣列中有效。</span><span class="sxs-lookup"><span data-stu-id="925c9-1428">0 (zero) is valid in an empty array.</span></span></param>
        <param name="count"><span data-ttu-id="925c9-1429">區段中要搜尋的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1429">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="925c9-1430">在一維陣列的項目範圍中搜尋指定的物件，並傳回其第一次出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1430">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span></span> <span data-ttu-id="925c9-1431">此範圍的延伸起點為指定項目數的指定索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1431">The range extends from a specified index for a specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="925c9-1432">在 <paramref name="value" /> 中從 <paramref name="array" /> 開始且包含 <paramref name="startIndex" /> 內指定之元素數的元素範圍內之 <paramref name="count" /> 的第一個相符項目之以零起始的索引 (如果有找到)，否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1432">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1433">這個方法 searchesthe 項目從一維陣列的`startIndex`至`startIndex`加上`count`減 1，如果`count`大於 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1433">This method searchesthe elements of a one-dimensional array from `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="925c9-1434">若要判斷是否`value`存在於`array`，此方法會藉由呼叫執行相等比較`T.Equals`每個項目上的方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1434">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="925c9-1435">這表示如果`T`會覆寫<xref:System.Object.Equals%2A>呼叫方法，覆寫。</span><span class="sxs-lookup"><span data-stu-id="925c9-1435">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="925c9-1436">如果`startIndex`等於<xref:System.Array.Length%2A?displayProperty=nameWithType>，方法會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1436">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span>  <span data-ttu-id="925c9-1437">如果`startIndex`大於<xref:System.Array.Length%2A?displayProperty=nameWithType>，方法會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1437">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="925c9-1438">這個方法是 O (`n`) 作業，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1438">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1439">下列範例將示範三種一般的所有多載<xref:System.Array.IndexOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1439">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="925c9-1440">將建立字串陣列，一個會出現兩次，在索引位置 0 和 5 的索引位置的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1440">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="925c9-1441"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>方法多載開始時，從陣列中搜尋和尋找字串的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1441">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="925c9-1442"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>方法多載用於搜尋的索引位置 3 開頭的陣列和陣列的結尾繼續，並尋找字串的第二個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1442">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="925c9-1443">最後，<xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>方法多載用來搜尋指定範圍的開頭的索引位置 2 的兩個項目; 它會傳回 – 1，因為沒有在該範圍內的搜尋字串的執行個體。</span><span class="sxs-lookup"><span data-stu-id="925c9-1443">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1444"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1444"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1445"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1445"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1446">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1446">-or-</span></span>  
  
 <span data-ttu-id="925c9-1447"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1447"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1448">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1448">-or-</span></span>  
  
 <span data-ttu-id="925c9-1449"><paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <paramref name="array" /> 中的有效區段。</span><span class="sxs-lookup"><span data-stu-id="925c9-1449"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="925c9-1450">呼叫實值型別的預設建構函式，初始化實值型別 <see cref="T:System.Array" /> 的每個元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-1450">Initializes every element of the value-type <see cref="T:System.Array" /> by calling the default constructor of the value type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1451">這個方法被設計來協助編譯器支援實值型別陣列。大部分的使用者不需要這個方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1451">This method is designed to help compilers support value-type arrays; most users do not need this method.</span></span> <span data-ttu-id="925c9-1452">它必須不能參考型別陣列上。</span><span class="sxs-lookup"><span data-stu-id="925c9-1452">It must not be used on reference-type arrays.</span></span>  
  
 <span data-ttu-id="925c9-1453">如果<xref:System.Array>不是實值類型<xref:System.Array>或實值型別沒有預設建構函式，如果<xref:System.Array>則不會修改。</span><span class="sxs-lookup"><span data-stu-id="925c9-1453">If the <xref:System.Array> is not a value-type <xref:System.Array> or if the value type does not have a default constructor, the <xref:System.Array> is not modified.</span></span>  
  
 <span data-ttu-id="925c9-1454">實值型別<xref:System.Array>可以有任何的下限和任何數目的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1454">The value-type <xref:System.Array> can have any lower bound and any number of dimensions.</span></span>  
  
 <span data-ttu-id="925c9-1455">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1455">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="925c9-1456">您可以使用這個方法只能在具有建構函式; 實值類型上不過，原生 C# 的實值類型沒有建構函式。</span><span class="sxs-lookup"><span data-stu-id="925c9-1456">You can use this method only on value types that have constructors; however, value types that are native to C# do not have constructors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-1457">取得值，指出 <see cref="T:System.Array" /> 是否有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-1457">Gets a value indicating whether the <see cref="T:System.Array" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="925c9-1458">所有陣列的這個屬性永遠為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1458">This property is always <see langword="true" /> for all arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1459"><xref:System.Array> 實作<xref:System.Array.IsFixedSize%2A>屬性因為的需要<xref:System.Collections.IList?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1459"><xref:System.Array> implements the <xref:System.Array.IsFixedSize%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="925c9-1460">具有固定大小陣列不允許在建立陣列，但允許修改現有的項目後新增或移除項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1460">An array with a fixed size does not allow the addition or removal of elements after the array is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="925c9-1461">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1461">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-1462">取得值，指出 <see cref="T:System.Array" /> 是否唯讀。</span><span class="sxs-lookup"><span data-stu-id="925c9-1462">Gets a value indicating whether the <see cref="T:System.Array" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="925c9-1463">所有陣列的這個屬性永遠為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1463">This property is always <see langword="false" /> for all arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1464"><xref:System.Array> 實作<xref:System.Array.IsReadOnly%2A>屬性因為的需要<xref:System.Collections.IList?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1464"><xref:System.Array> implements the <xref:System.Array.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="925c9-1465">陣列是唯讀的不允許陣列建立後增加、 移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1465">An array that is read-only does not allow the addition, removal, or modification of elements after the array is created.</span></span>  
  
 <span data-ttu-id="925c9-1466">如果您需要唯讀集合，使用<xref:System.Collections>類別可實作<xref:System.Collections.IList?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1466">If you require a read-only collection, use a <xref:System.Collections> class that implements the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="925c9-1467">如果您轉型或轉換至陣列<xref:System.Collections.IList>介面物件<xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType>屬性會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1467">If you cast or convert an array to an <xref:System.Collections.IList> interface object, the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property returns `false`.</span></span> <span data-ttu-id="925c9-1468">不過，如果您轉型或轉換至陣列<xref:System.Collections.Generic.IList%601>介面，`IsReadOnly`屬性會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1468">However, if you cast or convert an array to a <xref:System.Collections.Generic.IList%601> interface, the `IsReadOnly` property returns `true`.</span></span>  
  
 <span data-ttu-id="925c9-1469">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1469">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="N:System.Collections" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="N:System.Collections.Generic" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-1470">取得值，這個值表示對 <see cref="T:System.Array" /> 的存取是否同步 (安全執行緒)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1470">Gets a value indicating whether access to the <see cref="T:System.Array" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="925c9-1471">所有陣列的這個屬性永遠為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1471">This property is always <see langword="false" /> for all arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1472"><xref:System.Array> 實作<xref:System.Array.IsSynchronized%2A>屬性因為的需要<xref:System.Collections.ICollection?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1472"><xref:System.Array> implements the <xref:System.Array.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="925c9-1473">.NET framework 類別根據<xref:System.Array>提供自己的集合的同步化的版本<xref:System.Array.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-1473">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="925c9-1474">使用陣列的類別也可以實作自己的同步處理使用<xref:System.Array.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-1474">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="925c9-1475">同步處理的程式碼必須在上執行作業`SyncRoot`的集合，而不是直接在集合。</span><span class="sxs-lookup"><span data-stu-id="925c9-1475">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="925c9-1476">如此可確保衍生自其他物件的集合可以正常運作，</span><span class="sxs-lookup"><span data-stu-id="925c9-1476">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="925c9-1477">具體而言，保持正常的同步處理與其他可能同時修改集合的執行緒。</span><span class="sxs-lookup"><span data-stu-id="925c9-1477">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="925c9-1478">請注意，某些實作<xref:System.Array.SyncRoot%2A>可能會傳回<xref:System.Array>本身。</span><span class="sxs-lookup"><span data-stu-id="925c9-1478">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="925c9-1479">透過集合進行列舉在本質上並不是執行緒安全的程序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1479">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="925c9-1480">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-1480">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="925c9-1481">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-1481">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="925c9-1482">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1482">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1483">下列程式碼範例示範如何在整個列舉過程中鎖定陣列使用<xref:System.Array.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-1483">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-1484">傳回一維 <see cref="T:System.Array" /> 或 <see cref="T:System.Array" /> 的某部分中數值的最後一個相符項目索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1484">Returns the index of the last occurrence of a value in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1485">要搜尋的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1485">The one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1486">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1486">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="925c9-1487">搜尋指定物件，並且傳回整個一維 <see cref="T:System.Array" /> 中最後一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1487">Searches for the specified object and returns the index of the last occurrence within the entire one-dimensional <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-1488">如果找到的話，則為整個 <paramref name="value" /> 中 <paramref name="array" /> 的最後一個相符項目的索引，否則為陣列的下限減 1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1488">The index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1489">一維<xref:System.Array>向後的最後一個項目開始和結束時間的第一個項目中搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-1489">The one-dimensional <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="925c9-1490">項目與指定的值使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1490">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="925c9-1491">如果項目類型為非內建 （使用者定義） 的類型，`Equals`會使用該類型的實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1491">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="925c9-1492">因為大部分的陣列都有下限為零，所以這個方法通常會傳回-1 時`value`找不到。</span><span class="sxs-lookup"><span data-stu-id="925c9-1492">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="925c9-1493">在少數情況下，陣列的下限等於<xref:System.Int32.MinValue?displayProperty=nameWithType>和`value`找不到，這個方法會傳回<xref:System.Int32.MaxValue?displayProperty=nameWithType>，也就是`System.Int32.MinValue - 1`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1493">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="925c9-1494">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1494">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="925c9-1495">在.NET Framework 2.0 版中，這個方法會使用<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法<xref:System.Array>來判斷是否<xref:System.Object>所指定`value`參數存在。</span><span class="sxs-lookup"><span data-stu-id="925c9-1495">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="925c9-1496">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`value`<xref:System.Object>本身。</span><span class="sxs-lookup"><span data-stu-id="925c9-1496">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
 <span data-ttu-id="925c9-1497"><xref:System.IComparable.CompareTo%2A> 方法的`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1497"><xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1498">下列程式碼範例示範如何判斷陣列中指定的項目，最後一個出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1498">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1499"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1499"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1500"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1500"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1501">要搜尋的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1501">The one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1502">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1502">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1503">反向搜尋的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1503">The starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="925c9-1504">搜尋指定的物件，並傳回一維 <see cref="T:System.Array" /> 內從第一個元素延伸至指定之索引的元素範圍中，最後一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1504">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="925c9-1505">如果找到的話，則為 <paramref name="value" /> 中從第一個元素延伸到 <paramref name="array" /> 的元素範圍內，<paramref name="startIndex" /> 的最後一個相符項目的索引，否則為陣列的下限減 1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1505">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1506">一維<xref:System.Array>是搜尋回溯開始`startIndex`和結束時間的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1506">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="925c9-1507">項目與指定的值使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1507">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="925c9-1508">如果項目類型為非內建 （使用者定義） 的類型，`Equals`會使用該類型的實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1508">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="925c9-1509">因為大部分的陣列都有下限為零，所以這個方法通常會傳回-1 時`value`找不到。</span><span class="sxs-lookup"><span data-stu-id="925c9-1509">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="925c9-1510">在少數情況下，陣列的下限等於<xref:System.Int32.MinValue?displayProperty=nameWithType>和`value`找不到，這個方法會傳回<xref:System.Int32.MaxValue?displayProperty=nameWithType>，也就是`System.Int32.MinValue - 1`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1510">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="925c9-1511">這個方法是 O (`n`) 作業，其中`n`是從開頭的項目數`array`至`startIndex`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1511">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
 <span data-ttu-id="925c9-1512">在.NET Framework 2.0 版中，這個方法會使用<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法<xref:System.Array>來判斷是否<xref:System.Object>所指定`value`參數存在。</span><span class="sxs-lookup"><span data-stu-id="925c9-1512">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="925c9-1513">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`value`<xref:System.Object>本身。</span><span class="sxs-lookup"><span data-stu-id="925c9-1513">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1514">下列程式碼範例示範如何判斷陣列中指定的項目，最後一個出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1514">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1515"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1515"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1516"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1516"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1517"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1517"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1518">要搜尋的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1518">The one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1519">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1519">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1520">反向搜尋的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1520">The starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="925c9-1521">區段中要搜尋的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1521">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="925c9-1522">搜尋指定的物件，並傳回一維 <see cref="T:System.Array" /> 中包含指定之元素數且結束於指定之索引的元素範圍內，最後一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1522">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="925c9-1523">如果找到的話，則為在 <paramref name="value" /> 中包含 <paramref name="array" /> 內指定之元素數且結束於 <paramref name="count" /> 的元素範圍內，<paramref name="startIndex" /> 的最後一個相符項目之索引，否則為陣列的下限減 1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1523">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1524">一維<xref:System.Array>是搜尋回溯開始`startIndex`結束為`startIndex`減去`count`再加上 1，如果`count`大於 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1524">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="925c9-1525">項目與指定的值使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1525">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="925c9-1526">如果項目類型為非內建 （使用者定義） 的類型，`Equals`會使用該類型的實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1526">If the element type is a nonintrinsic (user-defined) type, the`Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="925c9-1527">因為大部分的陣列都有下限為零，所以這個方法通常會傳回-1 時`value`找不到。</span><span class="sxs-lookup"><span data-stu-id="925c9-1527">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="925c9-1528">在少數情況下，陣列的下限等於<xref:System.Int32.MinValue?displayProperty=nameWithType>和`value`找不到，這個方法會傳回<xref:System.Int32.MaxValue?displayProperty=nameWithType>，也就是`System.Int32.MinValue - 1`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1528">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="925c9-1529">這個方法是 O (`n`) 作業，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1529">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="925c9-1530">在.NET Framework 2.0 版中，這個方法會使用<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法<xref:System.Array>來判斷是否<xref:System.Object>所指定`value`參數存在。</span><span class="sxs-lookup"><span data-stu-id="925c9-1530">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="925c9-1531">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`value`<xref:System.Object>本身。</span><span class="sxs-lookup"><span data-stu-id="925c9-1531">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1532">下列程式碼範例示範如何判斷陣列中指定的項目，最後一個出現的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1532">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span> <span data-ttu-id="925c9-1533">請注意，<xref:System.Array.LastIndexOf%2A>方法是向後搜尋; 因此，`count`必須小於或等於 (`startIndex`陣列加 1 的下限減)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1533">Note that the <xref:System.Array.LastIndexOf%2A> method is a backward search; therefore, `count` must be less than or equal to (`startIndex` minus the lower bound of the array plus 1).</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1534"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1534"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1535"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1535"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1536">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1536">-or-</span></span>  
  
 <span data-ttu-id="925c9-1537"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1537"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1538">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1538">-or-</span></span>  
  
 <span data-ttu-id="925c9-1539"><paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <paramref name="array" /> 中的有效區段。</span><span class="sxs-lookup"><span data-stu-id="925c9-1539"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1540"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1540"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1541">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1541">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1542">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1542">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1543">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1543">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="925c9-1544">搜尋指定的物件，並傳回整個 <see cref="T:System.Array" /> 中最後一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1544">Searches for the specified object and returns the index of the last occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-1545">如果有找到，則是在整個 <paramref name="value" /> 內，<paramref name="array" /> 最後一次出現的以零起始的索引，否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1545">The zero-based index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1546"><xref:System.Array>向後的最後一個項目開始和結束時間的第一個項目中搜尋。</span><span class="sxs-lookup"><span data-stu-id="925c9-1546">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="925c9-1547">項目與指定的值使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1547">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="925c9-1548">如果項目類型為非內建 （使用者定義） 的類型，`Equals`會使用該類型的實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1548">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="925c9-1549">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1549">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1550">下列程式碼範例示範三種一般的所有多載<xref:System.Array.LastIndexOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1550">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="925c9-1551">將建立字串陣列，一個會出現兩次，在索引位置 0 和 5 的索引位置的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1551">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="925c9-1552"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>方法多載整個結束時，從陣列中搜尋和尋找字串的第二個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1552">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="925c9-1553"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>方法多載用來與索引位置 3 回溯開始的陣列和陣列的開頭繼續搜尋和尋找字串的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1553">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="925c9-1554">最後，<xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>方法多載用於範圍之四個項目，索引位置 4 開始，並擴充向後搜尋 （也就是說，它會搜尋的項目在位置 4、 3、 2 和 1）; 此搜尋會傳回 – 1，因為沒有搜尋的執行個體在該範圍內的字串。</span><span class="sxs-lookup"><span data-stu-id="925c9-1554">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1555"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1555"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1556">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1556">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1557">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1557">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1558">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1558">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1559">向後搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1559">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="925c9-1560">搜尋指定的物件，並傳回在 <see cref="T:System.Array" /> 內從第一個元素延伸至指定之索引的元素範圍中，最後一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1560">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="925c9-1561">在 <paramref name="value" /> 中從第一個元素延伸到 <paramref name="array" /> 的元素範圍內，<paramref name="startIndex" /> 的最後一個相符項目之以零起始的索引 (如果找到的話)，否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1561">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1562"><xref:System.Array>是搜尋回溯開始`startIndex`和結束時間的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1562">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="925c9-1563">項目與指定的值使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1563">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="925c9-1564">如果項目類型為非內建 （使用者定義） 的類型，`Equals`會使用該類型的實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1564">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="925c9-1565">這個方法是 O (`n`) 作業，其中`n`是從開頭的項目數`array`至`startIndex`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1565">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1566">下列程式碼範例示範三種一般的所有多載<xref:System.Array.LastIndexOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1566">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="925c9-1567">將建立字串陣列，一個會出現兩次，在索引位置 0 和 5 的索引位置的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1567">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="925c9-1568"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>方法多載整個結束時，從陣列中搜尋和尋找字串的第二個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1568">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="925c9-1569"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>方法多載用來與索引位置 3 回溯開始的陣列和陣列的開頭繼續搜尋和尋找字串的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1569">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="925c9-1570">最後，<xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>方法多載用於範圍之四個項目，索引位置 4 開始，並擴充向後搜尋 （也就是說，它會搜尋的項目在位置 4、 3、 2 和 1）; 此搜尋會傳回 – 1，因為沒有搜尋的執行個體在該範圍內的字串。</span><span class="sxs-lookup"><span data-stu-id="925c9-1570">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1571"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1571"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1572"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1572"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1573">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1573">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1574">要搜尋的一維且以零為起始的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1574">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-1575">要在 <c>array</c> 中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1575">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="925c9-1576">向後搜尋之以零為起始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1576">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="925c9-1577">區段中要搜尋的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1577">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="925c9-1578">搜尋指定的物件，並傳回 <see cref="T:System.Array" /> 中包含指定之元素數且結束於指定之索引的元素範圍內，最後一個相符項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1578">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="925c9-1579">在 <paramref name="value" /> 中包含 <paramref name="array" /> 內指定之元素數且結束於 <paramref name="count" /> 的元素範圍內，<paramref name="startIndex" /> 的最後一個相符項目之以零起始的索引 (如果有找到)，否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1579">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1580"><xref:System.Array>是搜尋回溯開始`startIndex`結束為`startIndex`減去`count`再加上 1，如果`count`大於 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1580">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="925c9-1581">項目與指定的值使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1581">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="925c9-1582">如果項目類型為非內建 （使用者定義） 的類型，`Equals`會使用該類型的實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1582">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="925c9-1583">這個方法是 O (`n`) 作業，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1583">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1584">下列程式碼範例示範三種一般的所有多載<xref:System.Array.LastIndexOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1584">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="925c9-1585">將建立字串陣列，一個會出現兩次，在索引位置 0 和 5 的索引位置的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1585">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="925c9-1586"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>方法多載整個結束時，從陣列中搜尋和尋找字串的第二個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1586">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="925c9-1587"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>方法多載用來與索引位置 3 回溯開始的陣列和陣列的開頭繼續搜尋和尋找字串的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1587">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="925c9-1588">最後，<xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>方法多載用於範圍之四個項目，索引位置 4 開始，並擴充向後搜尋 （也就是說，它會搜尋的項目在位置 4、 3、 2 和 1）; 此搜尋會傳回 – 1，因為沒有搜尋的執行個體在該範圍內的字串。</span><span class="sxs-lookup"><span data-stu-id="925c9-1588">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1589"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1589"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1590"><paramref name="startIndex" /> 超出 <paramref name="array" /> 的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1590"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1591">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1591">-or-</span></span>  
  
 <span data-ttu-id="925c9-1592"><paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1592"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-1593">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1593">-or-</span></span>  
  
 <span data-ttu-id="925c9-1594"><paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <paramref name="array" /> 中的有效區段。</span><span class="sxs-lookup"><span data-stu-id="925c9-1594"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Array.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-1595">取得 <see cref="T:System.Array" /> 所有維度的元素總數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1595">Gets the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="925c9-1596">所有維度的項目總數<see cref="T:System.Array" />，則為零的陣列中有任何項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1596">The total number of elements in all the dimensions of the <see cref="T:System.Array" />; zero if there are no elements in the array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1597">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1597">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1598">下列範例會使用<xref:System.Array.Length%2A>屬性來取得陣列中的項目總數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1598">The following example uses the                                 <xref:System.Array.Length%2A> property to get the total number of elements in an array.</span></span> <span data-ttu-id="925c9-1599">它也會使用<xref:System.Array.GetUpperBound%2A>方法，以判斷每個維度的多維陣列中的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1599">It also uses the                                 <xref:System.Array.GetUpperBound%2A> method to determine the number of elements in each dimension of a multidimensional array.</span></span>  
  
 [!code-csharp[System.Array.Length#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.length/cs/length1.cs#1)]
 [!code-vb[System.Array.Length#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.length/vb/length1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="925c9-1600">陣列是多維的且包含多個<see cref="F:System.Int32.MaxValue" />項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1600">The array is multidimensional and contains more than <see cref="F:System.Int32.MaxValue" /> elements.</span></span></exception>
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="LongLength">
      <MemberSignature Language="C#" Value="public long LongLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LongLength" />
      <MemberSignature Language="DocId" Value="P:System.Array.LongLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LongLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LongLength { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-1601">取得代表 <see cref="T:System.Array" /> 所有維度的元素總數之 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1601">Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="925c9-1602">64 位元的整數，代表 <see cref="T:System.Array" /> 所有維度的元素總數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1602">A 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1603">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1603">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Array.Length" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:System.Array.Rank" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-1604">取得 <see cref="T:System.Array" /> 的陣序 (維度數目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1604">Gets the rank (number of dimensions) of the <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1605">例如，一維陣列傳回 1，二維陣列傳回 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="925c9-1605">For example, a one-dimensional array returns 1, a two-dimensional array returns 2, and so on.</span></span></summary>
        <value><span data-ttu-id="925c9-1606"><see cref="T:System.Array" /> 的陣序規範 (維度數目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1606">The rank (number of dimensions) of the <see cref="T:System.Array" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1607">例如，Visual Basic 程式碼</span><span class="sxs-lookup"><span data-stu-id="925c9-1607">For example, the Visual Basic code</span></span>  
  
```  
Dim TDArray(0,0,0) As Integer  
```  
  
 <span data-ttu-id="925c9-1608">和 C# 程式碼</span><span class="sxs-lookup"><span data-stu-id="925c9-1608">and the C# code</span></span>  
  
```  
int[,,] TDArray = new int[1,1,1];  
```  
  
 <span data-ttu-id="925c9-1609">建立具有三個維度的陣列<xref:System.Array.Rank%2A>屬性值為 3。</span><span class="sxs-lookup"><span data-stu-id="925c9-1609">create an array of three dimensions with a <xref:System.Array.Rank%2A> property whose value is 3.</span></span>  
  
 <span data-ttu-id="925c9-1610">不規則的陣列 （陣列的陣列） 是一維陣列。值及其<xref:System.Array.Rank%2A>屬性為 1。</span><span class="sxs-lookup"><span data-stu-id="925c9-1610">A jagged array (an array of arrays) is a one-dimensional array; the value of its <xref:System.Array.Rank%2A> property is 1.</span></span>  
  
 <span data-ttu-id="925c9-1611">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1611">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1612">下列範例會初始化一維陣列、 二維陣列和不規則的陣列，並擷取<xref:System.Array.Rank%2A>每個屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-1612">The following example initializes a one-dimensional array, a two-dimensional array, and a jagged array, and retrieves the <xref:System.Array.Rank%2A> property of each.</span></span>  
  
 [!code-csharp[System.Array.Rank#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.rank/cs/rank1.cs#1)]
 [!code-vb[System.Array.Rank#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.rank/vb/rank1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Resize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Resize&lt;T&gt; (ref T[] array, int newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Resize&lt;T&gt;(!!T[]&amp; array, int32 newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Resize``1(``0[]@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Resize(Of T) (ByRef array As T(), newSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Resize(cli::array &lt;T&gt; ^ % array, int newSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]&amp;" RefType="ref" />
        <Parameter Name="newSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-1613">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-1613">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-1614">要調整大小之以零為起始的一維陣列，或是 <see langword="null" />，表示要以指定之大小建立新陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1614">The one-dimensional, zero-based array to resize, or <see langword="null" /> to create a new array with the specified size.</span></span></param>
        <param name="newSize"><span data-ttu-id="925c9-1615">新陣列的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-1615">The size of the new array.</span></span></param>
        <summary><span data-ttu-id="925c9-1616">將一維陣列中的項目數目變更為指定的新大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-1616">Changes the number of elements of a one-dimensional array to the specified new size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1617">這個方法會配置新的陣列，以指定的大小、 從舊的陣列項目複製到新的專案，，然後以新的取代舊的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1617">This method allocates a new array with the specified size, copies elements from the old array to the new one, and then replaces the old array with the new one.</span></span> <span data-ttu-id="925c9-1618">`array` 必須是一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1618">`array` must be a one-dimensional array.</span></span>  
  
 <span data-ttu-id="925c9-1619">如果`array`是`null`，這個方法會建立新的陣列，以指定的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-1619">If `array` is `null`, this method creates a new array with the specified size.</span></span>  
  
 <span data-ttu-id="925c9-1620">如果`newSize`大於<xref:System.Array.Length%2A>的舊的陣列，會配置新的陣列和所有項目會從舊的陣列複製到新的專案。</span><span class="sxs-lookup"><span data-stu-id="925c9-1620">If `newSize` is greater than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and all the elements are copied from the old array to the new one.</span></span>  <span data-ttu-id="925c9-1621">如果`newSize`是小於<xref:System.Array.Length%2A>的舊的陣列，會配置新的陣列和項目複製從舊的陣列轉換為新直到新的填滿; 舊陣列中元素的其餘部分會被忽略。</span><span class="sxs-lookup"><span data-stu-id="925c9-1621">If `newSize` is less than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and elements are copied from the old array to the new one until the new one is filled; the rest of the elements in the old array are ignored.</span></span>  <span data-ttu-id="925c9-1622">如果`newSize`等於<xref:System.Array.Length%2A>的舊的陣列，這個方法不會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1622">If `newSize` is equal to the <xref:System.Array.Length%2A> of the old array, this method does nothing.</span></span>  
  
 <span data-ttu-id="925c9-1623">這個方法是 O (`n`) 作業，其中`n`是`newSize`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1623">This method is an O(`n`) operation, where `n` is `newSize`.</span></span>  
  
 <span data-ttu-id="925c9-1624"><xref:System.Array.Resize%2A>方法調整大小，只是一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1624">The <xref:System.Array.Resize%2A> method resizes a one-dimensional array only.</span></span> <span data-ttu-id="925c9-1625"><xref:System.Array>類別不包含調整大小的多維陣列的方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1625">The <xref:System.Array> class does not include a method for resizing multi-dimensional arrays.</span></span> <span data-ttu-id="925c9-1626">若要這樣做，您必須提供自己的程式碼，或呼叫協力廠商的文件庫中的特殊用途的方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1626">To do this, you must either provide your own code or call a special-purpose method in a third-party library.</span></span> <span data-ttu-id="925c9-1627">下列程式碼將說明可能會調整大小的陣列方法實作*n*維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1627">The following code illustrates one possible implementation for a method that resizes an array of *n* dimensions.</span></span>  
  
 [!code-csharp[System.Array.Resize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/resizexd.cs#2)]
 [!code-vb[System.Array.Resize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/resizexd.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1628">下列範例顯示如何調整大小會影響陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1628">The following example shows how resizing affects the array.</span></span>  
  
 [!code-cpp[System.Array.Resize#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Resize/CPP/System.Array.Resize.cpp#1)]
 [!code-csharp[System.Array.Resize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/arrayresize.cs#1)]
 [!code-vb[System.Array.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/arrayresize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1629"><paramref name="newSize" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1629"><paramref name="newSize" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-1630">反轉一維 <see cref="T:System.Array" /> 或 <see cref="T:System.Array" /> 某部分中的元素順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1630">Reverses the order of the elements in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1631">要反轉的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1631">The one-dimensional <see cref="T:System.Array" /> to reverse.</span></span></param>
        <summary><span data-ttu-id="925c9-1632">反轉整個一維 <see cref="T:System.Array" /> 中的元素順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1632">Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1633">呼叫這個方法，處的項目之後`myArray[i]`，其中`i`是陣列中的任何索引，將移至`myArray[j]`，其中`j`等於`(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1633">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="925c9-1634">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1634">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="925c9-1635">如下列範例所示，<xref:System.Array.Reverse%2A>方法可用來反向不規則的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1635">As the following example shows, the <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span> <span data-ttu-id="925c9-1636">它會初始化今年目前文化特性的日曆中的每個月的不規則的陣列，含有一個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1636">It initializes a jagged array with one element for each month of the current year in the current culture's calendar.</span></span> <span data-ttu-id="925c9-1637">每個項目包含與該月有天的元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1637">Each element contains an array with as many elements as that month has days.</span></span> <span data-ttu-id="925c9-1638">此範例會顯示為陣列，呼叫的內容<xref:System.Array.Reverse%2A>方法，然後按一下 顯示反轉陣列的內容。</span><span class="sxs-lookup"><span data-stu-id="925c9-1638">The example displays the contents of the array, calls the <xref:System.Array.Reverse%2A> method, and then displays the contents of the reversed array.</span></span>  
  
 [!code-csharp[System.Array.Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.reverse/cs/reversejagged.cs#1)]
 [!code-vb[System.Array.Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.reverse/vb/reversejagged.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1639">下列程式碼範例示範如何反向中值的排序<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1639">The following code example shows how to reverse the sort of the values in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1640"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1640"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1641"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1641"><paramref name="array" /> is multidimensional.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1642">要反轉的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1642">The one-dimensional <see cref="T:System.Array" /> to reverse.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-1643">要反轉之區段的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1643">The starting index of the section to reverse.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-1644">區段中要反轉的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1644">The number of elements in the section to reverse.</span></span></param>
        <summary><span data-ttu-id="925c9-1645">將一維 <see cref="T:System.Array" /> 中某個範圍的元素之元素順序顛倒。</span><span class="sxs-lookup"><span data-stu-id="925c9-1645">Reverses the sequence of the elements in a range of elements in the one-dimensional <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1646">呼叫這個方法，處的項目之後`myArray[i]`，其中`i`是陣列中的任何索引，將移至`myArray[j]`，其中`j`等於`(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1646">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="925c9-1647"><xref:System.Array.Reverse%2A>方法可用來反向不規則的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1647">The <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span>  
  
 <span data-ttu-id="925c9-1648">這個方法是 O (`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1648">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1649">下列程式碼範例示範如何反向範圍中的項目中的值排序<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1649">The following code example shows how to reverse the sort of the values in a range of elements in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1650"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1650"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1651"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1651"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1652"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-1652"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1653">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1653">-or-</span></span>  
  
 <span data-ttu-id="925c9-1654"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1654"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-1655"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1655"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-1656">將目前 <see cref="T:System.Array" /> 中的指定元素設定為指定的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1656">Sets the specified element in the current <see cref="T:System.Array" /> to the specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1657">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1657">The new value for the specified element.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-1658">32 位元整數，表示要設定的 <see cref="T:System.Array" /> 元素的位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1658">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1659">設定一維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1659">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1660">索引已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1660">The index is specified as a 32-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1661"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否值`index`超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1661">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1662">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1662">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1663">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1663">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1664">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1664">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1665">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1665">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1666">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1666">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1667">目前的 <see cref="T:System.Array" /> 不具有剛好一維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1667">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1668">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1668"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1669"><paramref name="index" /> 在目前 <see cref="T:System.Array" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="925c9-1669"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;int&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1670">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1670">The new value for the specified element.</span></span></param>
        <param name="indices"><span data-ttu-id="925c9-1671">32 位元整數的一維陣列，代表指定要設定之項目位置的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1671">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1672">設定多維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1672">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1673">索引已指定為 32 位元整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1673">The indexes are specified as an array of 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1674">中的項目數`indices`必須等於中的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1674">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="925c9-1675">中的所有項目`indices`陣列必須共同指定所需項目的位置，以多維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1675">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1676"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何值的`indices`陣列超出界限。</span><span class="sxs-lookup"><span data-stu-id="925c9-1676">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1677">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1677">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1678">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1678">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1679">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1679">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1680">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1680">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1681">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1681">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1682"><paramref name="indices" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1682"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1683">目前 <see cref="T:System.Array" /> 中的維度數目不等於 <paramref name="indices" /> 中的元素數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1683">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1684">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1684"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="925c9-1685"><paramref name="indices" /> 中的任一元素超過目前 <see cref="T:System.Array" /> 中對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1685">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1686">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1686">The new value for the specified element.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-1687">64 位元整數，表示要設定的 <see cref="T:System.Array" /> 元素的位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1687">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1688">設定一維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1688">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1689">索引已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1689">The index is specified as a 64-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1690"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否值`index`超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1690">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1691">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1691">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1692">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1692">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1693">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1693">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1694">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1694">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1695">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1695">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1696">目前的 <see cref="T:System.Array" /> 不具有剛好一維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1696">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1697">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1697"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1698"><paramref name="index" /> 在目前 <see cref="T:System.Array" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="925c9-1698"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Long())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;long&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1699">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1699">The new value for the specified element.</span></span></param>
        <param name="indices"><span data-ttu-id="925c9-1700">64 位元整數的一維陣列，代表指定要設定之項目位置的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1700">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1701">設定多維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1701">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1702">索引已指定為 64 位元整數的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1702">The indexes are specified as an array of 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1703">中的項目數`indices`必須等於中的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1703">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="925c9-1704">中的所有項目`indices`陣列必須共同指定所需項目的位置，以多維度<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1704">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1705"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何值的`indices`陣列超出界限。</span><span class="sxs-lookup"><span data-stu-id="925c9-1705">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1706">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1706">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1707">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1707">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1708">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1708">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1709">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1709">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1710">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1710">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1711"><paramref name="indices" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1711"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1712">目前 <see cref="T:System.Array" /> 中的維度數目不等於 <paramref name="indices" /> 中的元素數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1712">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1713">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1713"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-1714"><paramref name="indices" /> 中的任一元素超過目前 <see cref="T:System.Array" /> 中對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1714">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1715">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1715">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="925c9-1716">32 位元整數，表示要設定的 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1716">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1717">32 位元整數，表示要設定的 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1717">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1718">設定二維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1718">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1719">索引已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1719">The indexes are specified as 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1720"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1720">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1721">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1721">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1722">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1722">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1723">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1723">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1724">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1724">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1725">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1725">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1726">目前的 <see cref="T:System.Array" /> 不具有剛好二維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1726">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1727">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1727"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="925c9-1728"><paramref name="index1" /> 或 <paramref name="index2" /> 超過目前 <see cref="T:System.Array" /> 之對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1728">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1729">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1729">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="925c9-1730">64 位元整數，表示要設定之 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1730">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1731">64 位元整數，表示要設定之 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1731">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1732">設定二維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1732">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1733">索引已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1733">The indexes are specified as 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1734"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1734">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1735">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1735">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1736">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1736">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1737">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1737">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1738">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1738">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1739">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1739">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1740">目前的 <see cref="T:System.Array" /> 不具有剛好二維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1740">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1741">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1741"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-1742"><paramref name="index1" /> 或 <paramref name="index2" /> 超過目前 <see cref="T:System.Array" /> 之對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1742">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer, index3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2, int index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1743">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1743">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="925c9-1744">32 位元整數，表示要設定的 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1744">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1745">32 位元整數，表示要設定的 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1745">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index3"><span data-ttu-id="925c9-1746">32 位元整數，表示要設定的 <see cref="T:System.Array" /> 元素的第三維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1746">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1747">設定三維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1747">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1748">索引已指定為 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1748">The indexes are specified as 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1749"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1749">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1750">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1750">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1751">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1751">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1752">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1752">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1753">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1753">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1754">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1754">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1755">目前的 <see cref="T:System.Array" /> 不具有剛好三維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1755">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1756">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1756"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="925c9-1757"><paramref name="index1" /> 或 <paramref name="index2" /> 或 <paramref name="index3" /> 超過目前 <see cref="T:System.Array" /> 對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1757"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long, index3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2, long index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-1758">指定項目的新值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1758">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="925c9-1759">64 位元整數，表示要設定之 <see cref="T:System.Array" /> 元素的第一維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1759">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="925c9-1760">64 位元整數，表示要設定之 <see cref="T:System.Array" /> 元素的第二維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1760">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index3"><span data-ttu-id="925c9-1761">64 位元整數，表示要設定之 <see cref="T:System.Array" /> 元素的第三維索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1761">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="925c9-1762">設定三維 <see cref="T:System.Array" /> 中指定位置之元素的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1762">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="925c9-1763">索引已指定為 64 位元整數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1763">The indexes are specified as 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1764"><xref:System.Array.GetLowerBound%2A>和<xref:System.Array.GetUpperBound%2A>方法可以判斷是否有任何索引超出範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1764">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="925c9-1765">如需有關轉換的詳細資訊，請參閱<xref:System.Convert>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1765">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="925c9-1766">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-1766">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-1767">如果<xref:System.Array.SetValue%2A>用來指派`null`實值類型陣列的項目，項目的所有欄位都初始化為零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1767">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="925c9-1768">元素的值不是 null 參考，並無法找到所搜尋的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-1768">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1769">下列程式碼範例示範如何設定並取得一維或多維陣列中的特定值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1769">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1770">目前的 <see cref="T:System.Array" /> 不具有剛好三維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1770">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="925c9-1771">不可以將 <paramref name="value" /> 轉換成目前 <see cref="T:System.Array" /> 的項目型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-1771"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1772"><paramref name="index1" /> 或 <paramref name="index2" /> 或 <paramref name="index3" /> 超過目前 <see cref="T:System.Array" /> 對應維度的有效索引範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1772"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="925c9-1773">排序一維陣列中的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1773">Sorts the elements in a one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1774">要排序的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1774">The one-dimensional <see cref="T:System.Array" /> to sort.</span></span></param>
        <summary><span data-ttu-id="925c9-1775">使用 <see cref="T:System.Array" /> 的每個元素的 <see cref="T:System.IComparable" /> 實作，排序整個一維 <see cref="T:System.Array" /> 中的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-1775">Sorts the elements in an entire one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1776">每個項目`array`必須實作<xref:System.IComparable>介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1776">Each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-1777">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1777">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-1778">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-1778">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-1779">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1779">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1780">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1780">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1781">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1781">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-1782">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1782">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-1783">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1783">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-1784">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1784">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1785">下列程式碼範例示範如何排序值<xref:System.Array>使用預設比較子和自訂比較子，會反轉排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1785">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="925c9-1786">請注意，結果可能會有所不同目前<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1786">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1787"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1787"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1788"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1788"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-1789"><paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1789">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="925c9-1790">一維 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-1790">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-1791">一維 <see cref="T:System.Array" />，包含對應至 <c>keys</c><see cref="T:System.Array" /> 中每個索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1791">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-1792">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1792">-or-</span></span>  
  
 <span data-ttu-id="925c9-1793"><see langword="null" /> 表示只排序 <c>keys</c><see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1793"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <summary><span data-ttu-id="925c9-1794">使用每個索引鍵的 <see cref="T:System.Array" /> 實作，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對一維的 <see cref="T:System.IComparable" /> 物件 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1794">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1795">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1795">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-1796">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1796">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-1797">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1797">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1798">在每個索引鍵`keys`<xref:System.Array>必須實作<xref:System.IComparable>介面若要能夠與每個索引鍵的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1798">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-1799">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1799">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-1800">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1800">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-1801">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1801">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-1802">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-1802">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-1803">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1803">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1804">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1804">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1805">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1805">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-1806">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1806">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-1807">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1807">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-1808">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`keys`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1808">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1809">下列範例會示範如何排序兩個相關聯的陣列，其中的第一個陣列包含的索引鍵，而第二個陣列包含的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1809">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="925c9-1810">完成排序使用預設比較子和自訂比較子，會反轉排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1810">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="925c9-1811">請注意，結果可能會有所不同目前<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1811">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1812"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1812"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="925c9-1813"><paramref name="keys" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1813">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="925c9-1814">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1814">-or-</span></span>  
  
 <span data-ttu-id="925c9-1815"><paramref name="items" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1815">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-1816"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1816"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-1817"><paramref name="keys" /><see cref="T:System.Array" /> 中的一或多個元素不會實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1817">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1818">要排序的一維陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1818">The one-dimensional array to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-1819">比較項目時所要使用的實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1819">The implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-1820">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1820">-or-</span></span>  
  
 <span data-ttu-id="925c9-1821"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1821"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-1822">使用指定的 <see cref="T:System.Array" />，排序一維 <see cref="T:System.Collections.IComparer" /> 中的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-1822">Sorts the elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1823">如果`comparer`是`null`，每個項目`array`必須實作<xref:System.IComparable>介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1823">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-1824">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1824">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-1825">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-1825">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-1826">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1826">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1827">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1827">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1828">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1828">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-1829">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1829">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-1830">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1830">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-1831">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1831">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="925c9-1832">.NET Framework 包含預先定義<xref:System.Collections.IComparer>實作如下表所示。</span><span class="sxs-lookup"><span data-stu-id="925c9-1832">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="925c9-1833">實作</span><span class="sxs-lookup"><span data-stu-id="925c9-1833">Implementation</span></span>|<span data-ttu-id="925c9-1834">描述</span><span class="sxs-lookup"><span data-stu-id="925c9-1834">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="925c9-1835">比較任何兩個物件，但是執行不區分大小寫的字串比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1835">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="925c9-1836">使用目前文化特性的排序慣例來比較任意兩個物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1836">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="925c9-1837">比較任意兩個物件所使用的排序慣例的文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="925c9-1837">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="925c9-1838">比較兩個物件的型別`T`使用類型的預設排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1838">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="925c9-1839">您也可以藉由提供您自己的執行個體來支援自訂比較<xref:System.Collections.IComparer>實作`comparer`參數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1839">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="925c9-1840">這個範例會藉由定義`ReverseComparer`反轉的預設排序順序的類別類型的執行個體和執行不區分大小寫字串的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1840">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1841">下列範例會排序中使用預設比較子字串 arrayby 的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1841">The following example sorts the values in a string arrayby using the default comparer.</span></span> <span data-ttu-id="925c9-1842">它也會定義自訂<xref:System.Collections.IComparer>實作名為`ReverseComparer`，反轉執行不區分大小寫字串比較物件的預設排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1842">It also defines a custom <xref:System.Collections.IComparer> implementation named `ReverseComparer` that reverses an object's default sort order while performing a case-insensitive string comparison.</span></span> <span data-ttu-id="925c9-1843">請注意，輸出可能會根據目前文化特性而有所不同。</span><span class="sxs-lookup"><span data-stu-id="925c9-1843">Note that the output might vary depending on the current culture.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1844"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1844"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1845"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1845"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-1846"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1846"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-1847"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-1847">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-1848">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1848">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-1849">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1849">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-1850">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-1850">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-1851">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-1851">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-1852">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1852">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="925c9-1853">一維 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-1853">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-1854">一維 <see cref="T:System.Array" />，包含對應至 <c>keys</c><see cref="T:System.Array" /> 中每個索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1854">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-1855">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1855">-or-</span></span>  
  
 <span data-ttu-id="925c9-1856"><see langword="null" /> 表示只排序 <c>keys</c><see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1856"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-1857">比較項目時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1857">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-1858">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1858">-or-</span></span>  
  
 <span data-ttu-id="925c9-1859"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1859"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-1860">使用指定的 <see cref="T:System.Array" />，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對一維的<see cref="T:System.Collections.IComparer" /> 物件 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1860">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1861">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1861">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-1862">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1862">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-1863">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1863">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1864">如果`comparer`是`null`，每個索引鍵中`keys`<xref:System.Array>必須實作<xref:System.IComparable>介面若要能夠與每個索引鍵的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1864">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-1865">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1865">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-1866">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1866">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-1867">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1867">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-1868">.NET Framework 包含預先定義<xref:System.Collections.IComparer>實作如下表所示。</span><span class="sxs-lookup"><span data-stu-id="925c9-1868">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="925c9-1869">實作</span><span class="sxs-lookup"><span data-stu-id="925c9-1869">Implementation</span></span>|<span data-ttu-id="925c9-1870">描述</span><span class="sxs-lookup"><span data-stu-id="925c9-1870">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="925c9-1871">比較任何兩個物件，但是執行不區分大小寫的字串比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1871">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="925c9-1872">使用目前文化特性的排序慣例來比較任意兩個物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1872">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="925c9-1873">比較任意兩個物件所使用的排序慣例的文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="925c9-1873">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="925c9-1874">比較兩個物件的型別`T`使用類型的預設排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1874">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="925c9-1875">您也可以藉由提供您自己的執行個體來支援自訂比較<xref:System.Collections.IComparer>實作`comparer`參數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1875">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="925c9-1876">這個範例會藉由定義<xref:System.Collections.IComparer>的實作，保留預設排序順序，並執行不區分大小寫字串的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1876">The example does this by defining an <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="925c9-1877">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-1877">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-1878">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1878">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1879">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1879">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1880">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1880">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-1881">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1881">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-1882">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1882">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-1883">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`keys`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1883">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1884">下列範例會示範如何排序兩個相關聯的陣列，其中的第一個陣列包含的索引鍵，而第二個陣列包含的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1884">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="925c9-1885">完成排序使用預設比較子和自訂比較子，會反轉排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1885">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="925c9-1886">請注意，結果可能會有所不同目前<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1886">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1887"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1887"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="925c9-1888"><paramref name="keys" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1888">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="925c9-1889">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1889">-or-</span></span>  
  
 <span data-ttu-id="925c9-1890"><paramref name="items" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1890">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-1891"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1891"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-1892">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1892">-or-</span></span>  
  
 <span data-ttu-id="925c9-1893"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-1893">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-1894">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1894">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-1895"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="keys" /><see cref="T:System.Array" /> 中的一或多個元素不會實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1895"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-1896">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1896">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-1897">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-1897">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-1898">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能的排序作業該 previouslythrew<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-1898">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previouslythrew <see cref="T:System.ArgumentException" /> will not throw an exception, becausethe insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-1899">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1899">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1900">要排序的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1900">The one-dimensional <see cref="T:System.Array" /> to sort.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-1901">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1901">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-1902">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1902">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="925c9-1903">使用 <see cref="T:System.Array" /> 的每個元素的 <see cref="T:System.IComparable" /> 實作，排序一維 <see cref="T:System.Array" /> 中某個元素範圍內的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-1903">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1904">中的項目指定的範圍內的每個項目`array`必須實作<xref:System.IComparable>介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1904">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-1905">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1905">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-1906">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-1906">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-1907">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1907">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1908">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1908">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1909">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1909">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-1910">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1910">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-1911">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1911">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-1912">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1912">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1913">下列程式碼範例示範如何排序值<xref:System.Array>使用預設比較子和自訂比較子，會反轉排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1913">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="925c9-1914">請注意，結果可能會有所不同目前<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1914">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1915"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1915"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1916"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1916"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1917"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-1917"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1918">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1918">-or-</span></span>  
  
 <span data-ttu-id="925c9-1919"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1919"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-1920"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1920"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-1921"><paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1921">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="925c9-1922">一維 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-1922">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-1923">一維 <see cref="T:System.Array" />，包含對應至 <c>keys</c><see cref="T:System.Array" /> 中每個索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1923">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-1924">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1924">-or-</span></span>  
  
 <span data-ttu-id="925c9-1925"><see langword="null" /> 表示只排序 <c>keys</c><see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1925"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-1926">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1926">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-1927">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1927">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="925c9-1928">使用每個索引鍵的 <see cref="T:System.Array" /> 實作，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對一維的 <see cref="T:System.IComparable" /> 物件中某個範圍的元素 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-1928">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1929">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1929">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-1930">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-1930">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-1931">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1931">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-1932">每個索引鍵的項目中指定的範圍內`keys`<xref:System.Array>必須實作<xref:System.IComparable>介面若要能夠與每個索引鍵的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1932">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-1933">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1933">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-1934">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1934">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-1935">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1935">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-1936">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-1936">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-1937">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1937">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1938">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1938">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1939">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1939">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-1940">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1940">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-1941">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1941">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-1942">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1942">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1943">下列程式碼範例示範如何排序兩個相關聯的陣列，其中的第一個陣列包含的索引鍵，而第二個陣列包含的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-1943">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="925c9-1944">完成排序使用預設比較子和自訂比較子，會反轉排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1944">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="925c9-1945">請注意，結果可能會有所不同目前<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1945">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1946"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1946"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="925c9-1947"><paramref name="keys" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1947">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="925c9-1948">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1948">-or-</span></span>  
  
 <span data-ttu-id="925c9-1949"><paramref name="items" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1949">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1950"><paramref name="index" /> 小於 <paramref name="keys" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-1950"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="925c9-1951">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1951">-or-</span></span>  
  
 <span data-ttu-id="925c9-1952"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1952"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-1953"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-1953"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-1954">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1954">-or-</span></span>  
  
 <span data-ttu-id="925c9-1955"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="keys" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1955"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-1956">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1956">-or-</span></span>  
  
 <span data-ttu-id="925c9-1957"><paramref name="items" /> 不是 <see langword="null" />，且 <paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="items" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1957"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-1958"><paramref name="keys" /><see cref="T:System.Array" /> 中的一或多個元素不會實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1958">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="925c9-1959">要排序的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1959">The one-dimensional <see cref="T:System.Array" /> to sort.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-1960">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-1960">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-1961">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-1961">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-1962">比較項目時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1962">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-1963">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1963">-or-</span></span>  
  
 <span data-ttu-id="925c9-1964"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-1964"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-1965">使用指定的 <see cref="T:System.Array" />，排序一維 <see cref="T:System.Collections.IComparer" /> 中元素範圍內的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-1965">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-1966">如果`comparer`是`null`，每個項目中的項目指定的範圍內`array`必須實作<xref:System.IComparable>介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1966">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-1967">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-1967">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-1968">.NET Framework 包含預先定義<xref:System.Collections.IComparer>實作如下表所示。</span><span class="sxs-lookup"><span data-stu-id="925c9-1968">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="925c9-1969">實作</span><span class="sxs-lookup"><span data-stu-id="925c9-1969">Implementation</span></span>|<span data-ttu-id="925c9-1970">描述</span><span class="sxs-lookup"><span data-stu-id="925c9-1970">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="925c9-1971">比較任何兩個物件，但是執行不區分大小寫的字串比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1971">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="925c9-1972">使用目前文化特性的排序慣例來比較任意兩個物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-1972">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="925c9-1973">比較任意兩個物件所使用的排序慣例的文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="925c9-1973">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="925c9-1974">比較兩個物件的型別`T`使用類型的預設排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1974">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="925c9-1975">您也可以藉由提供您自己的執行個體來支援自訂比較<xref:System.Collections.IComparer>實作`comparer`參數。</span><span class="sxs-lookup"><span data-stu-id="925c9-1975">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="925c9-1976">這個範例會藉由定義`ReverseComparer`反轉的預設排序順序的類別類型的執行個體和執行不區分大小寫字串的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-1976">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="925c9-1977">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-1977">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-1978">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1978">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1979">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1979">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-1980">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1980">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-1981">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1981">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-1982">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1982">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-1983">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-1983">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-1984">下列程式碼範例示範如何排序值<xref:System.Array>使用預設比較子和自訂比較子，會反轉排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-1984">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="925c9-1985">請注意，結果可能會有所不同目前<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="925c9-1985">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-1986"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-1986"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="925c9-1987"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-1987"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-1988"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-1988"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1989">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1989">-or-</span></span>  
  
 <span data-ttu-id="925c9-1990"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-1990"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-1991"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-1991"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-1992">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-1992">-or-</span></span>  
  
 <span data-ttu-id="925c9-1993"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-1993">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-1994">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-1994">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-1995"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-1995"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-1996">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-1996">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-1997">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-1997">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-1998">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-1998">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-1999">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-1999">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="925c9-2000">一維 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-2000">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-2001">一維 <see cref="T:System.Array" />，包含對應至 <c>keys</c><see cref="T:System.Array" /> 中每個索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2001">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-2002">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2002">-or-</span></span>  
  
 <span data-ttu-id="925c9-2003"><see langword="null" /> 表示只排序 <c>keys</c><see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2003"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-2004">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2004">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-2005">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2005">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-2006">比較項目時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-2006">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="925c9-2007">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2007">-or-</span></span>  
  
 <span data-ttu-id="925c9-2008"><see langword="null" /> 表示會使用每個項目的 <see cref="T:System.IComparable" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-2008"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-2009">使用指定的 <see cref="T:System.Array" />，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對一維的 <see cref="T:System.Collections.IComparer" /> 物件中某範圍的元素 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-2009">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2010">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2010">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-2011">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-2011">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-2012">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2012">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-2013">如果`comparer`是`null`，每個索引鍵的項目中指定的範圍內`keys`<xref:System.Array>必須實作<xref:System.IComparable>介面若要能夠與每個索引鍵的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-2013">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-2014">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2014">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-2015">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2015">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-2016">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2016">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2017">.NET Framework 包含預先定義<xref:System.Collections.IComparer>實作如下表所示。</span><span class="sxs-lookup"><span data-stu-id="925c9-2017">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="925c9-2018">實作</span><span class="sxs-lookup"><span data-stu-id="925c9-2018">Implementation</span></span>|<span data-ttu-id="925c9-2019">描述</span><span class="sxs-lookup"><span data-stu-id="925c9-2019">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="925c9-2020">比較任何兩個物件，但是執行不區分大小寫的字串比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-2020">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="925c9-2021">使用目前文化特性的排序慣例來比較任意兩個物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2021">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="925c9-2022">比較任意兩個物件所使用的排序慣例的文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="925c9-2022">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="925c9-2023">比較兩個物件的型別`T`使用類型的預設排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2023">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="925c9-2024">您也可以藉由提供您自己的執行個體來支援自訂比較<xref:System.Collections.IComparer>實作`comparer`參數。</span><span class="sxs-lookup"><span data-stu-id="925c9-2024">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="925c9-2025">這個範例會藉由定義自訂<xref:System.Collections.IComparer>的實作，保留預設排序順序，並執行不區分大小寫字串的比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-2025">The example does this by defining a custom <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="925c9-2026">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2026">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2027">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2027">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2028">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2028">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2029">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2029">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2030">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2030">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2031">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2031">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2032">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2032">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2033">下列程式碼範例示範如何排序兩個相關聯的陣列，其中的第一個陣列包含的索引鍵，而第二個陣列包含的值。</span><span class="sxs-lookup"><span data-stu-id="925c9-2033">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="925c9-2034">完成排序使用預設比較子和自訂比較子，會反轉排序順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2034">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="925c9-2035">請注意，結果可能會有所不同目前<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2035">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2036"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2036"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="925c9-2037"><paramref name="keys" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-2037">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="925c9-2038">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2038">-or-</span></span>  
  
 <span data-ttu-id="925c9-2039"><paramref name="items" /><see cref="T:System.Array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="925c9-2039">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-2040"><paramref name="index" /> 小於 <paramref name="keys" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-2040"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="925c9-2041">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2041">-or-</span></span>  
  
 <span data-ttu-id="925c9-2042"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-2042"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-2043"><paramref name="items" /> 不是 <see langword="null" />，並且 <paramref name="keys" /> 的下限和 <paramref name="items" /> 的下限不相符。</span><span class="sxs-lookup"><span data-stu-id="925c9-2043"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2044">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2044">-or-</span></span>  
  
 <span data-ttu-id="925c9-2045"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-2045"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2046">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2046">-or-</span></span>  
  
 <span data-ttu-id="925c9-2047"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="keys" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2047"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-2048">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2048">-or-</span></span>  
  
 <span data-ttu-id="925c9-2049"><paramref name="items" /> 不是 <see langword="null" />，且 <paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="items" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2049"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-2050">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2050">-or-</span></span>  
  
 <span data-ttu-id="925c9-2051"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-2051">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-2052">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-2052">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-2053"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="keys" /><see cref="T:System.Array" /> 中的一或多個元素不會實作 <see cref="T:System.IComparable" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2053"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-2054">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2054">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-2055">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-2055">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-2056">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-2056">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-2057">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2057">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-2058">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2058">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-2059">要排序之以零起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2059">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span></span></param>
        <summary><span data-ttu-id="925c9-2060">使用 <see cref="T:System.Array" /> 的每個元素之 <see cref="T:System.IComparable`1" /> 泛型介面實作，排序整個 <see cref="T:System.Array" /> 中的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-2060">Sorts the elements in an entire <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2061">每個項目`array`必須實作<xref:System.IComparable%601>泛型介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2061">Each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-2062">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2062">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2063">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2063">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2064">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2064">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2065">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2065">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2066">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2066">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2067">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2067">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2068">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2068">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2069">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2069">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2070">下列程式碼範例示範<xref:System.Array.Sort%60%601%28%60%600%5B%5D%29>泛型方法的多載而<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>泛型方法的多載。</span><span class="sxs-lookup"><span data-stu-id="925c9-2070">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="925c9-2071">建立字串陣列，不依特定順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2071">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="925c9-2072">陣列會顯示、 已排序，並且會再次顯示。</span><span class="sxs-lookup"><span data-stu-id="925c9-2072">The array is displayed, sorted, and displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2073">若要呼叫<xref:System.Array.Sort%2A>和<xref:System.Array.BinarySearch%2A>泛型方法看起來不任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的第一個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2073">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="925c9-2074">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2074">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="925c9-2075"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>泛型方法的多載然後來搜尋兩個字串，而非在陣列與其中一個，為。</span><span class="sxs-lookup"><span data-stu-id="925c9-2075">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="925c9-2076">陣列和傳回值<xref:System.Array.BinarySearch%2A>方法會傳遞至`ShowWhere`泛型的方法，如果找到字串，否則項目搜尋字串會介於陣列中時顯示的索引值。</span><span class="sxs-lookup"><span data-stu-id="925c9-2076">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="925c9-2077">索引是負值，如果字串不是 n 陣列，所以`ShowWhere`方法會採用的位元補數 (~ 運算子，在 C# 和 Visual c + +，`Xor`在 Visual Basic 中的為-1) 取得第一個元素大於搜尋 stri 清單中的索引ng。</span><span class="sxs-lookup"><span data-stu-id="925c9-2077">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2078"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2078"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-2079"><paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2079">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-2080">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2080">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-2081">要排序之以零起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2081">The one-dimensional, zero-base <see cref="T:System.Array" /> to sort</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-2082">在比較項目時所使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型介面實作，或是 <see langword="null" /> 以使用每個項目的 <see cref="T:System.IComparable`1" /> 泛型介面實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-2082">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-2083">使用指定的 <see cref="T:System.Array" /> 泛型介面，排序 <see cref="T:System.Collections.Generic.IComparer`1" /> 中的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-2083">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2084">如果`comparer`是`null`，每個項目`array`必須實作<xref:System.IComparable%601>泛型介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2084">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-2085">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2085">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2086">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2086">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2087">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2087">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2088">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2088">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2089">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2089">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2090">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2090">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2091">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2091">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2092">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2092">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2093">下列程式碼範例示範<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載而<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載。</span><span class="sxs-lookup"><span data-stu-id="925c9-2093">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="925c9-2094">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2094">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-2095">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2095">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-2096">陣列會顯示、 已排序，並且會再次顯示。</span><span class="sxs-lookup"><span data-stu-id="925c9-2096">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="925c9-2097">必須排序陣列，才能使用<xref:System.Array.BinarySearch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2097">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2098">若要呼叫<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>和<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法看起來不任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的第一個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2098">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="925c9-2099">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2099">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="925c9-2100"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載然後來搜尋兩個字串，而非在陣列與其中一個，為。</span><span class="sxs-lookup"><span data-stu-id="925c9-2100">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="925c9-2101">陣列和傳回值<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>方法會傳遞至`ShowWhere`泛型的方法，如果找到字串，否則項目搜尋字串會介於陣列中時顯示的索引值。</span><span class="sxs-lookup"><span data-stu-id="925c9-2101">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="925c9-2102">索引是負值，如果字串不是 n 陣列，所以`ShowWhere`方法會採用的位元補數 (~ 運算子，在 C# 和 Visual c + +，`Xor`在 Visual Basic 中的為-1) 取得第一個元素大於搜尋 stri 清單中的索引ng。</span><span class="sxs-lookup"><span data-stu-id="925c9-2102">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2103"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2103"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-2104"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2104"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-2105"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-2105">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-2106">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-2106">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-2107">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2107">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-2108">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-2108">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-2109">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-2109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-2110">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2110">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Comparison`1&lt;!!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-2111">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2111">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-2112">要排序之以零起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2112">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span></span></param>
        <param name="comparison"><span data-ttu-id="925c9-2113">比較項目時所要使用的 <see cref="T:System.Comparison`1" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2113">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span></span></param>
        <summary><span data-ttu-id="925c9-2114">使用指定的 <see cref="T:System.Array" />，排序 <see cref="T:System.Comparison`1" /> 中的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-2114">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Comparison`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2115">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2115">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2116">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2116">This method uses introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2117">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2117">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2118">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2118">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2119">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2119">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2120">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2120">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2121">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2121">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2122">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2122">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2123">下列程式碼範例示範<xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="925c9-2123">The following code example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="925c9-2124">程式碼範例會定義具名字串的替代的比較方法`CompareDinosByLength`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2124">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="925c9-2125">這個方法的運作方式如下： comparandsare 先，測試`null`，而且 null 的參考被視為小於一個非 null。</span><span class="sxs-lookup"><span data-stu-id="925c9-2125">This method works as follows: First, the comparandsare tested for`null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="925c9-2126">第二，進行比較的字串長度，以及較長的字串會視為大於。</span><span class="sxs-lookup"><span data-stu-id="925c9-2126">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="925c9-2127">第三，如果長度相等，則使用一般的字串比較。</span><span class="sxs-lookup"><span data-stu-id="925c9-2127">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="925c9-2128">建立並填入不依特定順序中的四個字串的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2128">A array of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="925c9-2129">清單也會包含空字串和 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-2129">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="925c9-2130">清單會顯示使用排序<xref:System.Comparison%601>代表的泛型委派`CompareDinosByLength`方法，並顯示一次。</span><span class="sxs-lookup"><span data-stu-id="925c9-2130">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[Array_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[Array_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortComparison/cs/source.cs#1)]
 [!code-vb[Array_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2131"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2131"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-2132">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2132">-or-</span></span>  
  
 <span data-ttu-id="925c9-2133"><paramref name="comparison" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2133"><paramref name="comparison" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-2134"><paramref name="comparison" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-2134">The implementation of <paramref name="comparison" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-2135">例如，在將項目與其本身比較時，<paramref name="comparison" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-2135">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-2136">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2136">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-2137">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-2137">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-2138">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-2138">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-2139">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2139">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Comparison`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-2140">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2140">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-2141">要排序之以零起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2141">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span></span></param>
        <param name="index"><span data-ttu-id="925c9-2142">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2142">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-2143">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2143">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="925c9-2144">使用 <see cref="T:System.Array" /> 的每個元素之 <see cref="T:System.IComparable`1" /> 泛型介面實作，排序 <see cref="T:System.Array" /> 中某個元素範圍中的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-2144">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2145">中的項目指定的範圍內的每個項目`array`必須實作<xref:System.IComparable%601>泛型介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2145">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-2146">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2146">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2147">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2147">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2148">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2148">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2149">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2149">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2150">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2150">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2151">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2151">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2152">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2152">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2153">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2153">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2154">下列程式碼範例示範<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>泛型方法的多載而<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載來排序陣列中的範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2154">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="925c9-2155">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2155">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-2156">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2156">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-2157">程式碼範例會建立，並顯示恐龍名稱，後面接著三個肉食性恐龍 (更明確地說 tyrannosaurids) 的三個草食所組成的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2157">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="925c9-2158"><xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>泛型方法的多載會用來排序的陣列，接著會顯示最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2158">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="925c9-2159"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載會搭配`ReverseCompare`以相反順序排序的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2159">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="925c9-2160">恐龍會再次顯示。</span><span class="sxs-lookup"><span data-stu-id="925c9-2160">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2161">若要呼叫<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>和<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法看起來不任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的第一個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2161">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="925c9-2162">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2162">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2163"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2163"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-2164"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-2164"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-2165">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2165">-or-</span></span>  
  
 <span data-ttu-id="925c9-2166"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-2166"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-2167"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2167"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-2168"><paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2168">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-2169">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2169">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-2170">要排序之以零起始的一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2170">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-2171">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2171">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-2172">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2172">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-2173">在比較項目時所使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型介面實作，或是 <see langword="null" /> 以使用每個項目的 <see cref="T:System.IComparable`1" /> 泛型介面實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-2173">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-2174">使用指定的 <see cref="T:System.Array" /> 泛型介面，對 <see cref="T:System.Collections.Generic.IComparer`1" /> 中的某個元素範圍內的元素進行排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2174">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2175">如果`comparer`是`null`，每個項目中的項目指定的範圍內`array`必須實作<xref:System.IComparable%601>泛型介面中的項目比較能夠`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2175">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="925c9-2176">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2176">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2177">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2177">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2178">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2178">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2179">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2179">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2180">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2180">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2181">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2181">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2182">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2182">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2183">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2183">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2184">下列程式碼範例示範<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>泛型方法的多載而<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載來排序陣列中的範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2184">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="925c9-2185">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2185">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-2186">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2186">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-2187">程式碼範例會建立，並顯示恐龍名稱，後面接著三個肉食性恐龍 (更明確地說 tyrannosaurids) 的三個草食所組成的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2187">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="925c9-2188"><xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>泛型方法的多載會用來排序的陣列，接著會顯示最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2188">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="925c9-2189"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載會搭配`ReverseCompare`以相反順序排序的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2189">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="925c9-2190">恐龍會再次顯示。</span><span class="sxs-lookup"><span data-stu-id="925c9-2190">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2191">若要呼叫<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>和<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法看起來不任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的第一個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2191">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="925c9-2192">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2192">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2193"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2193"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-2194"><paramref name="index" /> 小於 <paramref name="array" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-2194"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-2195">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2195">-or-</span></span>  
  
 <span data-ttu-id="925c9-2196"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-2196"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-2197"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2197"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="925c9-2198">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2198">-or-</span></span>  
  
 <span data-ttu-id="925c9-2199"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-2199">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-2200">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-2200">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-2201"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="array" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2201"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-2202">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2202">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-2203">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-2203">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-2204">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-2204">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-2205">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2205">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="925c9-2206">索引鍵陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2206">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="925c9-2207">項目陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2207">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="925c9-2208">一維、以零起始的 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-2208">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-2209">包含 <c>keys</c> 中的索引鍵對應項目，且以零為起始的一維 <see cref="T:System.Array" />；<see langword="null" /> 則表示只會排序 <c>keys</c>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2209">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <summary><span data-ttu-id="925c9-2210">使用每個索引鍵的 <see cref="T:System.Array" /> 泛型介面實作，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對 <see cref="T:System.IComparable`1" /> 物件 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-2210">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2211">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2211">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-2212">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-2212">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-2213">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2213">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-2214">在每個索引鍵`keys`<xref:System.Array>必須實作<xref:System.IComparable%601>能夠與每個索引鍵比較的泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2214">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-2215">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2215">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-2216">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2216">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-2217">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2217">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2218">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2218">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2219">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2219">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2220">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2220">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2221">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2221">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2222">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2222">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2223">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2223">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2224">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2224">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2225">下列程式碼範例示範<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>， <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>， <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>，和<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載，來排序的陣列，代表索引鍵和值組。</span><span class="sxs-lookup"><span data-stu-id="925c9-2225">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="925c9-2226">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2226">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-2227">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2227">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-2228">程式碼範例會建立，並顯示恐龍名稱 （索引鍵） 的陣列，表示每個恐龍以公尺為單位 （值） 的最大長度的整數陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2228">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="925c9-2229">然後排序和顯示數次的陣列：</span><span class="sxs-lookup"><span data-stu-id="925c9-2229">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="925c9-2230"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>多載會用來排序順序中的第一個陣列恐龍名稱的兩個陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2230">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="925c9-2231"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>多載和執行個體`ReverseCompare`用來反轉排序次序的配對的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2231">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2232"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>多載會用來排序的兩個陣列的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2232">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2233"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>多載用來以相反順序排序的兩個陣列的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2233">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2234">與泛型方法的呼叫不要尋找任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的前兩個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2234">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="925c9-2235">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2235">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2236"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2236"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-2237"><paramref name="items" /> 不是 <see langword="null" />，並且 <paramref name="keys" /> 的下限和 <paramref name="items" /> 的下限不相符。</span><span class="sxs-lookup"><span data-stu-id="925c9-2237"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2238">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2238">-or-</span></span>  
  
 <span data-ttu-id="925c9-2239"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-2239"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-2240"><paramref name="keys" /><see cref="T:System.Array" /> 中的一個或多個元素不會實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2240">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="925c9-2241">索引鍵陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2241">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="925c9-2242">項目陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2242">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="925c9-2243">一維、以零起始的 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-2243">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-2244">包含 <c>keys</c> 中的索引鍵對應項目，且以零為起始的一維 <see cref="T:System.Array" />；<see langword="null" /> 則表示只會排序 <c>keys</c>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2244">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-2245">在比較項目時所使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型介面實作，或是 <see langword="null" /> 以使用每個項目的 <see cref="T:System.IComparable`1" /> 泛型介面實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-2245">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-2246">使用指定的 <see cref="T:System.Array" /> 泛型介面，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對 <see cref="T:System.Collections.Generic.IComparer`1" /> 物件 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-2246">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2247">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2247">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-2248">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-2248">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-2249">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2249">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-2250">如果`comparer`是`null`，每個索引鍵中`keys`<xref:System.Array>必須實作<xref:System.IComparable%601>能夠與每個索引鍵比較的泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2250">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-2251">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2251">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-2252">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2252">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-2253">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2253">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2254">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2254">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2255">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2255">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2256">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2256">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2257">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2257">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2258">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2258">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2259">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2259">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2260">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2260">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2261">下列程式碼範例示範<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>，[\]，Tvalue>\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 >，<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>，和<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載，來排序的陣列，代表索引鍵和值組。</span><span class="sxs-lookup"><span data-stu-id="925c9-2261">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="925c9-2262">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2262">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-2263">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2263">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-2264">程式碼範例會建立，並顯示恐龍名稱 （索引鍵） 的陣列，表示每個恐龍以公尺為單位 （值） 的最大長度的整數陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2264">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="925c9-2265">然後排序和顯示數次的陣列：</span><span class="sxs-lookup"><span data-stu-id="925c9-2265">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="925c9-2266"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>多載會用來排序順序中的第一個陣列恐龍名稱的兩個陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2266">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="925c9-2267">[\]，Tvalue>\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > 多載和執行個體`ReverseCompare`用來反轉排序次序配對的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2267">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2268"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>多載會用來排序的兩個陣列的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2268">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2269"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>多載用來以相反順序排序的兩個陣列的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2269">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2270">與泛型方法的呼叫不要尋找任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的前兩個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2270">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="925c9-2271">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2271">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2272"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2272"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-2273"><paramref name="items" /> 不是 <see langword="null" />，並且 <paramref name="keys" /> 的下限和 <paramref name="items" /> 的下限不相符。</span><span class="sxs-lookup"><span data-stu-id="925c9-2273"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2274">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2274">-or-</span></span>  
  
 <span data-ttu-id="925c9-2275"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-2275"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2276">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2276">-or-</span></span>  
  
 <span data-ttu-id="925c9-2277"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-2277">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-2278">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-2278">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-2279"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="keys" /><see cref="T:System.Array" /> 中的一或多個元素未實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2279"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-2280">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2280">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-2281">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-2281">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-2282">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-2282">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-2283">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2283">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="925c9-2284">索引鍵陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2284">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="925c9-2285">項目陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2285">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="925c9-2286">一維、以零起始的 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-2286">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-2287">包含 <c>keys</c> 中的索引鍵對應項目，且以零為起始的一維 <see cref="T:System.Array" />；<see langword="null" /> 則表示只會排序 <c>keys</c>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2287">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-2288">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2288">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-2289">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2289">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="925c9-2290">使用每個索引鍵的 <see cref="T:System.Array" /> 泛型介面實作，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對 <see cref="T:System.IComparable`1" /> 物件中某個範圍的元素 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-2290">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2291">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2291">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-2292">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-2292">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-2293">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2293">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-2294">每個索引鍵的項目中指定的範圍內`keys`<xref:System.Array>必須實作<xref:System.IComparable%601>能夠與每個索引鍵比較的泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2294">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-2295">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2295">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-2296">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2296">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-2297">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2297">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2298">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2298">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2299">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2299">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2300">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2300">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2301">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2301">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2302">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2302">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2303">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2303">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2304">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2304">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2305">下列程式碼範例示範<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>， <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>，[\]，Tvalue>\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 >，並<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>泛型方法的多載，排序的陣列，代表索引鍵和值組。</span><span class="sxs-lookup"><span data-stu-id="925c9-2305">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="925c9-2306">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2306">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-2307">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2307">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-2308">程式碼範例會建立，並顯示恐龍名稱 （索引鍵） 的陣列，表示每個恐龍以公尺為單位 （值） 的最大長度的整數陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2308">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="925c9-2309">然後排序和顯示數次的陣列：</span><span class="sxs-lookup"><span data-stu-id="925c9-2309">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="925c9-2310"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>多載會用來排序順序中的第一個陣列恐龍名稱的兩個陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2310">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="925c9-2311"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>多載和執行個體`ReverseCompare`用來反轉排序次序的配對的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2311">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2312">[\]，Tvalue>\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 > 多載會用來排序的兩個陣列的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2312">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2313"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>多載用來以相反順序排序的兩個陣列的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2313">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2314">與泛型方法的呼叫不要尋找任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的前兩個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2314">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="925c9-2315">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2315">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2316"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2316"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-2317"><paramref name="index" /> 小於 <paramref name="keys" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-2317"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="925c9-2318">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2318">-or-</span></span>  
  
 <span data-ttu-id="925c9-2319"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-2319"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-2320"><paramref name="items" /> 不是 <see langword="null" />，並且 <paramref name="keys" /> 的下限和 <paramref name="items" /> 的下限不相符。</span><span class="sxs-lookup"><span data-stu-id="925c9-2320"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2321">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2321">-or-</span></span>  
  
 <span data-ttu-id="925c9-2322"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-2322"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2323">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2323">-or-</span></span>  
  
 <span data-ttu-id="925c9-2324"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="keys" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2324"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-2325">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2325">-or-</span></span>  
  
 <span data-ttu-id="925c9-2326"><paramref name="items" /> 不是 <see langword="null" />，且 <paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="items" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2326"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="925c9-2327"><paramref name="keys" /><see cref="T:System.Array" /> 中的一個或多個元素不會實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2327">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="925c9-2328">索引鍵陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2328">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="925c9-2329">項目陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2329">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="925c9-2330">一維、以零起始的 <see cref="T:System.Array" />，包含要排序的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="925c9-2330">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="925c9-2331">包含 <c>keys</c> 中的索引鍵對應項目，且以零為起始的一維 <see cref="T:System.Array" />；<see langword="null" /> 則表示只會排序 <c>keys</c>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2331">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <param name="index"><span data-ttu-id="925c9-2332">要排序之範圍的起始索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2332">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="925c9-2333">區段中要排序的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2333">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-2334">在比較項目時所使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型介面實作，或是 <see langword="null" /> 以使用每個項目的 <see cref="T:System.IComparable`1" /> 泛型介面實作。</span><span class="sxs-lookup"><span data-stu-id="925c9-2334">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="925c9-2335">使用指定的 <see cref="T:System.Array" /> 泛型介面，根據第一個 <see cref="T:System.Array" /> 中的索引鍵，排序一對 <see cref="T:System.Collections.Generic.IComparer`1" /> 物件中某範圍的元素 (一個物件包含索引鍵，另一個物件包含對應的項目)。</span><span class="sxs-lookup"><span data-stu-id="925c9-2335">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2336">在每個索引鍵`keys`<xref:System.Array>中有對應的項目`items` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2336">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="925c9-2337">索引鍵排序期間，在對應的項目時重新定位`items`<xref:System.Array>同樣會重新調整位置。</span><span class="sxs-lookup"><span data-stu-id="925c9-2337">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="925c9-2338">因此， `items` <xref:System.Array>根據對應中的索引鍵的排列方式排序`keys` <xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2338">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="925c9-2339">如果`comparer`是`null`，每個索引鍵的項目中指定的範圍內`keys`<xref:System.Array>必須實作<xref:System.IComparable%601>能夠與每個索引鍵比較的泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2339">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="925c9-2340">如果有多個項目與索引鍵，但不含對應的索引鍵的項目將不會排序，您可以排序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2340">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="925c9-2341">如果有多個索引鍵項目，比無法排序如此一來，這會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="925c9-2341">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="925c9-2342">如果未順利完成排序，則結果會是未定義。</span><span class="sxs-lookup"><span data-stu-id="925c9-2342">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="925c9-2343">這個方法會使用內省式排序 (introsort) 演算法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="925c9-2343">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="925c9-2344">如果磁碟分割大小是 16 個元素，它會使用[插入排序](https://en.wikipedia.org/wiki/Insertion_sort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2344">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2345">如果資料分割數目超過 2 \* 記錄<sup>N</sup>，其中*N*為範圍之輸入的陣列，它會使用[Heapsort](https://en.wikipedia.org/wiki/Heapsort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2345">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="925c9-2346">否則，它會使用[快速排序](https://en.wikipedia.org/wiki/Quicksort)演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2346">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="925c9-2347">此實作會執行不穩定的排序。也就是說，如果兩個項目相同，可能不會保留它們的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2347">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="925c9-2348">相較之下，穩定的排序會保留相同的項目的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2348">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="925c9-2349">對於使用 Heapsort 和快速排序演算法，最壞的情況下會排序的陣列，這個方法是 O (`n`記錄`n`) 作業，其中`n`是`length`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2349">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2350">下列程式碼範例示範<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>， <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>， <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>，和 [\]，Tvalue>\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > 泛型方法的多載，來排序的陣列，代表索引鍵和值組。</span><span class="sxs-lookup"><span data-stu-id="925c9-2350">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="925c9-2351">程式碼範例定義的替代的比較子字串，名為`ReverseCompare`，它會實作`IComparer<string>`(`IComparer(Of String)`在 Visual Basic 中`IComparer<String^>`Visual c + +) 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2351">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>`(`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="925c9-2352">比較子的呼叫<xref:System.String.CompareTo%28System.String%29>方法，使字串排序高-到-低而不是低到高反轉比較元的順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2352">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="925c9-2353">程式碼範例會建立，並顯示恐龍名稱 （索引鍵） 的陣列，表示每個恐龍以公尺為單位 （值） 的最大長度的整數陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2353">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="925c9-2354">然後排序和顯示數次的陣列：</span><span class="sxs-lookup"><span data-stu-id="925c9-2354">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="925c9-2355"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>多載會用來排序順序中的第一個陣列恐龍名稱的兩個陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2355">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="925c9-2356"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>多載和執行個體`ReverseCompare`用來反轉排序次序的配對的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2356">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2357"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>多載會用來排序的兩個陣列的最後三個項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2357">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="925c9-2358">[\]，Tvalue>\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > 用來排序最後三個多載兩者的項目陣列以反向順序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2358">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2359">與泛型方法的呼叫不要尋找任何不同於呼叫其非泛型對應項目，因為 Visual Basic、 C# 和 c + + 推斷的前兩個引數類型的泛型型別參數的型別。</span><span class="sxs-lookup"><span data-stu-id="925c9-2359">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="925c9-2360">如果您使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)若要檢查的 Microsoft intermediate language (MSIL)，您可以查看呼叫泛型方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2360">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2361"><paramref name="keys" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2361"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-2362"><paramref name="index" /> 小於 <paramref name="keys" /> 的下限。</span><span class="sxs-lookup"><span data-stu-id="925c9-2362"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="925c9-2363">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2363">-or-</span></span>  
  
 <span data-ttu-id="925c9-2364"><paramref name="length" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-2364"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="925c9-2365"><paramref name="items" /> 不是 <see langword="null" />，並且 <paramref name="keys" /> 的下限和 <paramref name="items" /> 的下限不相符。</span><span class="sxs-lookup"><span data-stu-id="925c9-2365"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2366">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2366">-or-</span></span>  
  
 <span data-ttu-id="925c9-2367"><paramref name="items" /> 不是 <see langword="null" />，而且 <paramref name="keys" /> 的長度大於 <paramref name="items" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="925c9-2367"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="925c9-2368">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2368">-or-</span></span>  
  
 <span data-ttu-id="925c9-2369"><paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="keys" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2369"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-2370">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2370">-or-</span></span>  
  
 <span data-ttu-id="925c9-2371"><paramref name="items" /> 不是 <see langword="null" />，且 <paramref name="index" /> 和 <paramref name="length" /> 未指定 <paramref name="items" /><see cref="T:System.Array" /> 中的有效範圍。</span><span class="sxs-lookup"><span data-stu-id="925c9-2371"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="925c9-2372">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2372">-or-</span></span>  
  
 <span data-ttu-id="925c9-2373"><paramref name="comparer" /> 的實作在排序期間造成錯誤。</span><span class="sxs-lookup"><span data-stu-id="925c9-2373">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="925c9-2374">例如，在將項目與其本身比較時，<paramref name="comparer" /> 可能不會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="925c9-2374">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="925c9-2375"><paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="keys" /><see cref="T:System.Array" /> 中的一或多個元素未實作 <see cref="T:System.IComparable`1" /> 泛型介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2375"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="925c9-2376">.NET Framework 4 和舊版使用快速排序演算法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2376">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="925c9-2377">快速排序識別無效的比較子，在某些情況下，排序作業擲回<see cref="T:System.IndexOutOfRangeException" />例外狀況，並擲回<see cref="T:System.ArgumentException" />例外狀況至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="925c9-2377">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="925c9-2378">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，很可能擲回的先前排序作業<see cref="T:System.ArgumentException" />不會擲回例外狀況，因為插入排序和 heapsort 演算法則不會偵測無效的比較子。</span><span class="sxs-lookup"><span data-stu-id="925c9-2378">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="925c9-2379">大部分的情況下，這適用於具有 16 個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2379">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-2380">取得可用以同步存取 <see cref="T:System.Array" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2380">Gets an object that can be used to synchronize access to the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="925c9-2381">可用以同步存取 <see cref="T:System.Array" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2381">An object that can be used to synchronize access to the <see cref="T:System.Array" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2382">這個屬性會實作<xref:System.Collections.ICollection?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="925c9-2382">This property implements the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="925c9-2383">.NET framework 類別根據<xref:System.Array>提供自己的集合的同步化的版本<xref:System.Array.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-2383">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="925c9-2384">使用陣列的類別也可以實作自己的同步處理使用<xref:System.Array.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-2384">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="925c9-2385">同步處理的程式碼必須在上執行作業`SyncRoot`的集合，而不是直接在集合。</span><span class="sxs-lookup"><span data-stu-id="925c9-2385">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="925c9-2386">如此可確保衍生自其他物件的集合可以正常運作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2386">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="925c9-2387">具體而言，保持正常的同步處理與其他可能同時修改集合的執行緒。</span><span class="sxs-lookup"><span data-stu-id="925c9-2387">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="925c9-2388">請注意，某些實作<xref:System.Array.SyncRoot%2A>可能會傳回<xref:System.Array>本身。</span><span class="sxs-lookup"><span data-stu-id="925c9-2388">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="925c9-2389">透過集合進行列舉在本質上並不是執行緒安全的程序。</span><span class="sxs-lookup"><span data-stu-id="925c9-2389">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="925c9-2390">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-2390">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="925c9-2391">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-2391">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="925c9-2392">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="925c9-2392">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2393">下列程式碼範例示範如何在整個列舉過程中鎖定陣列使用<xref:System.Array.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="925c9-2393">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="925c9-2394">取得 <see cref="T:System.Array" /> 中所包含的項目數。</span><span class="sxs-lookup"><span data-stu-id="925c9-2394">Gets the number of elements contained in the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="925c9-2395">集合中所包含的項目數目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2395">The number of elements contained in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2396">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2396">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2397">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2397">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-2398">要加入 <see cref="T:System.Collections.IList" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2398">The object to be added to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="925c9-2399">呼叫這個方法一律會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-2399">Calling this method always throws a <see cref="T:System.NotSupportedException" /> exception.</span></span></summary>
        <returns><span data-ttu-id="925c9-2400">不支援將值加入陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2400">Adding a value to an array is not supported.</span></span> <span data-ttu-id="925c9-2401">沒有傳回值。</span><span class="sxs-lookup"><span data-stu-id="925c9-2401">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2402">一般情況下，<xref:System.Collections.IList.Add%2A?displayProperty=nameWithType>實作會將成員新增至集合。</span><span class="sxs-lookup"><span data-stu-id="925c9-2402">Ordinarily, an <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implementation adds a member to a collection.</span></span> <span data-ttu-id="925c9-2403">不過，因為陣列有固定的大小 (<xref:System.Array.IsFixedSize%2A>屬性一律會傳回`true`)，這個方法一律會擲回<xref:System.NotSupportedException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925c9-2403">However, because arrays have a fixed size (the <xref:System.Array.IsFixedSize%2A> property always returns `true`), this method always throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 <span data-ttu-id="925c9-2404">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2404">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2405">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2405">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="925c9-2406"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-2406">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="925c9-2407">從 <see cref="T:System.Collections.IList" /> 中移除所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2407">Removes all items from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2408">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2408">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2409">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2409">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="925c9-2410"><see cref="T:System.Collections.IList" /> 是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="925c9-2410">The <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-2411">要在目前清單中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2411">The object to locate in the current list.</span></span> <span data-ttu-id="925c9-2412">對於參考型別而言，要尋找的元素可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2412">The element to locate can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="925c9-2413">判斷某項目是否在 <see cref="T:System.Collections.IList" /> 中。</span><span class="sxs-lookup"><span data-stu-id="925c9-2413">Determines whether an element is in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns>
          <span data-ttu-id="925c9-2414">如果在 <see langword="true" /> 中找到 <paramref name="value" />，則為 <see cref="T:System.Collections.IList" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2414"><see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2415">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2415">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2416">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2416">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-2417">要在目前清單中尋找的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2417">The object to locate in the current list.</span></span></param>
        <summary><span data-ttu-id="925c9-2418">判斷 <see cref="T:System.Collections.IList" /> 中指定項目的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2418">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="925c9-2419">如果在清單中有找到，則為值的索引，否則為 -1。</span><span class="sxs-lookup"><span data-stu-id="925c9-2419">The index of value if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2420">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2420">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2421">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2421">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="925c9-2422">應該插入 <c>value</c> 的索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2422">The index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="925c9-2423">要插入的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2423">The object to insert.</span></span></param>
        <summary><span data-ttu-id="925c9-2424">將項目插入位於指定索引的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2424">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2425">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2425">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2426">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2426">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-2427"><paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2427"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="925c9-2428"><see cref="T:System.Collections.IList" /> 是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="925c9-2428">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="925c9-2429">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2429">-or-</span></span>  
  
 <span data-ttu-id="925c9-2430"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-2430">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="925c9-2431"><paramref name="value" /> 是 <see cref="T:System.Collections.IList" /> 中的 null 參考。</span><span class="sxs-lookup"><span data-stu-id="925c9-2431"><paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="925c9-2432">要取得或設定的項目之索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2432">The index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="925c9-2433">在指定的索引位置上取得或設定項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2433">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="925c9-2434">在指定索引上的項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2434">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2435">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2435">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2436">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2436">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="925c9-2437"><paramref name="index" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="925c9-2437"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="925c9-2438">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2438">-or-</span></span>  
  
 <span data-ttu-id="925c9-2439"><paramref name="index" /> 等於或大於 <see cref="P:System.Collections.ICollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2439"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="925c9-2440">目前的 <see cref="T:System.Array" /> 不具有剛好一維的維度。</span><span class="sxs-lookup"><span data-stu-id="925c9-2440">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="925c9-2441">要從 <see cref="T:System.Collections.IList" /> 移除的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2441">The object to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="925c9-2442">從 <see cref="T:System.Collections.IList" /> 移除特定物件之第一個符合的元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-2442">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2443">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2443">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2444">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2444">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="925c9-2445"><see cref="T:System.Collections.IList" /> 是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="925c9-2445">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="925c9-2446">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2446">-or-</span></span>  
  
 <span data-ttu-id="925c9-2447"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-2447">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="925c9-2448">要移除的項目索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2448">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="925c9-2449">移除在指定索引處的 <see cref="T:System.Collections.IList" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2449">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2450">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2450">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2451">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2451">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="925c9-2452">索引不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="925c9-2452">index is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="925c9-2453"><see cref="T:System.Collections.IList" /> 是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="925c9-2453">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="925c9-2454">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2454">-or-</span></span>  
  
 <span data-ttu-id="925c9-2455"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="925c9-2455">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="925c9-2456">要與目前執行個體比較的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2456">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-2457">將目前的物件與 <c>other</c> 相比較的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2457">An object that compares the current object and <c>other</c>.</span></span></param>
        <summary><span data-ttu-id="925c9-2458">判斷目前的集合物件在排序次序中位於另一個物件之前、相同位置或之後。</span><span class="sxs-lookup"><span data-stu-id="925c9-2458">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="925c9-2459">整數，表示目前集合物件與 other 的關聯性，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="925c9-2459">An integer that indicates the relationship of the current collection object to other, as shown in the following table.</span></span>  
  
 <span data-ttu-id="925c9-2460"><list type="table"><listheader><term>傳回值</span><span class="sxs-lookup"><span data-stu-id="925c9-2460"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="925c9-2461"></term><description>描述</span><span class="sxs-lookup"><span data-stu-id="925c9-2461"></term><description> Description</span></span>  
  
 <span data-ttu-id="925c9-2462"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="925c9-2462"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="925c9-2463"></term><description> 目前的執行個體在 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="925c9-2463"></term><description> The current instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="925c9-2464"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="925c9-2464"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="925c9-2465"></term><description> 目前的執行個體與 <paramref name="other" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="925c9-2465"></term><description> The current instance and <paramref name="other" /> are equal.</span></span>  
  
 <span data-ttu-id="925c9-2466"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="925c9-2466"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="925c9-2467"></term><description>目前的執行個體在 <paramref name="other" /> 之後。</span><span class="sxs-lookup"><span data-stu-id="925c9-2467"></term><description> The current instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2468">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2468">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2469">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IStructuralComparable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2469">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="925c9-2470">要與目前執行個體比較的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2470">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="925c9-2471">判斷目前的執行個體與 <c>other</c> 是否相等的物件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2471">An object that determines whether the current instance and <c>other</c> are equal.</span></span></param>
        <summary><span data-ttu-id="925c9-2472">判斷物件與目前的執行個體是否相等。</span><span class="sxs-lookup"><span data-stu-id="925c9-2472">Determines whether an object is equal to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="925c9-2473">如果兩個物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2473"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2474">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2474">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2475">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IStructuralEquatable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2475">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="925c9-2476">物件，會計算目前物件的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="925c9-2476">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="925c9-2477">傳回目前執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="925c9-2477">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="925c9-2478">目前執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="925c9-2478">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2479">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="925c9-2479">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="925c9-2480">只有在 <xref:System.Array> 執行個體轉換成 <xref:System.Collections.IStructuralEquatable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="925c9-2480">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueForAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TrueForAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TrueForAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrueForAll(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TrueForAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925c9-2481">陣列項目的類型。</span><span class="sxs-lookup"><span data-stu-id="925c9-2481">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="925c9-2482">要檢查之以零起始的一維 <see cref="T:System.Array" /> 所根據的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2482">The one-dimensional, zero-based <see cref="T:System.Array" /> to check against the conditions.</span></span></param>
        <param name="match"><span data-ttu-id="925c9-2483">述詞，可定義檢查項目所根據的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2483">The predicate that defines the conditions to check against the elements.</span></span></param>
        <summary><span data-ttu-id="925c9-2484">判斷陣列中的每一個項目是否符合指定之述詞所定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2484">Determines whether every element in the array matches the conditions defined by the specified predicate.</span></span></summary>
        <returns>
          <span data-ttu-id="925c9-2485">如果 <paramref name="array" /> 中的每一個元素都符合指定之述詞所定義的條件，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2485"><see langword="true" /> if every element in <paramref name="array" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="925c9-2486">如果陣列中沒有元素，則傳回值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2486">If there are no elements in the array, the return value is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c9-2487"><xref:System.Predicate%601>委派的方法會傳回以`true`傳送至的物件是否符合在委派中定義的條件。</span><span class="sxs-lookup"><span data-stu-id="925c9-2487">The <xref:System.Predicate%601> is a delegate to a method that returns`true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="925c9-2488">項目`array`分別傳遞至<xref:System.Predicate%601>，並停止處理在委派傳回時`false`的任何項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2488">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when the delegate returns `false` for any element.</span></span>  
  
 <span data-ttu-id="925c9-2489">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Array.Length%2A>的`array`。</span><span class="sxs-lookup"><span data-stu-id="925c9-2489">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c9-2490">下列範例會判斷是否將字串陣列中每個元素的最後一個字元是數字。</span><span class="sxs-lookup"><span data-stu-id="925c9-2490">The following example determines whether the last character of each element in a string array is a number.</span></span> <span data-ttu-id="925c9-2491">它會建立兩個字串陣列。</span><span class="sxs-lookup"><span data-stu-id="925c9-2491">It creates two string arrays.</span></span> <span data-ttu-id="925c9-2492">第一個 arrayincludes 字串結尾為英數字元和字串與數字字元結尾。第二個陣列只包含結尾的數字字元的字串。</span><span class="sxs-lookup"><span data-stu-id="925c9-2492">The first arrayincludes both strings that end with alphabetic characters and strings that end with numeric characters.The second array consists only of strings that end with numeric characters.</span></span> <span data-ttu-id="925c9-2493">此範例也會定義`EndWithANumber`方法的簽章符合<xref:System.Predicate%601>委派。</span><span class="sxs-lookup"><span data-stu-id="925c9-2493">The example also defines an `EndWithANumber` method whose signature matches the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="925c9-2494">此範例會傳遞至每個陣列<xref:System.Array.TrueForAll%2A>方法表示的委派，以及`EndsWithANumber`方法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2494">The example passes each array to the <xref:System.Array.TrueForAll%2A> method along with a delegate that represents the `EndsWithANumber` method.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall2.cs#2)]
 [!code-vb[System.Array.TrueForAll#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall2.vb#2)]  
  
 <span data-ttu-id="925c9-2495">下列範例是類似於第一個，不同之處在於它會將字串陣列，以傳遞<xref:System.Array.TrueForAll%2A>方法以及 lambda 運算式以判斷特定的陣列項目是否結束之數字的字串表示法。</span><span class="sxs-lookup"><span data-stu-id="925c9-2495">The following example is similar to the first, except that it passes the string array to the <xref:System.Array.TrueForAll%2A> method along with  a lambda expression that determines whether a particular array element ends with the string representation of a number.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall1.cs#1)]
 [!code-vb[System.Array.TrueForAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall1.vb#1)]  
  
 <span data-ttu-id="925c9-2496">在這兩種情況下，<xref:System.Array.TrueForAll%2A>方法會傳回`false`只要遇到結尾不是數字的第一個陣列元素。</span><span class="sxs-lookup"><span data-stu-id="925c9-2496">In both cases, the <xref:System.Array.TrueForAll%2A> method returns `false` as soon as it encounters the first array element that does not end in a number.</span></span> <span data-ttu-id="925c9-2497">否則，它會傳回`true`後逐一查看陣列中的所有項目。</span><span class="sxs-lookup"><span data-stu-id="925c9-2497">Otherwise, it returns `true` after iterating all the elements in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="925c9-2498">如這兩個範例所示，在 C# 和 Visual Basic 中，不需要建立`Predicate<string>`委派 (`Predicate(Of String)`在 Visual Basic 中) 明確。</span><span class="sxs-lookup"><span data-stu-id="925c9-2498">As both examples show, in C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="925c9-2499">這些語言推斷正確的委派，從內容，並自動建立。</span><span class="sxs-lookup"><span data-stu-id="925c9-2499">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="925c9-2500"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2500"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="925c9-2501">-或-</span><span class="sxs-lookup"><span data-stu-id="925c9-2501">-or-</span></span>  
  
 <span data-ttu-id="925c9-2502"><paramref name="match" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="925c9-2502"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>