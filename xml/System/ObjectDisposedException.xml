<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectDisposedException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a71fbb299abe0b22f28b60b101f6c94366f6784c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a71fbb299abe0b22f28b60b101f6c94366f6784c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>The exception that is thrown when an operation is performed on a disposed object.</source>
          <target state="translated">當作業在處置的物件上執行時所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>An <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> is thrown when you try to access a member of an object that implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface, and that object has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph>您嘗試存取該物件會實作的成員時，會擲回<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>介面，以及該物件已被處置。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this exception is caused by one of the following conditions:</source>
          <target state="translated">一般而言，此例外狀況被因下列條件的其中一個：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">您已呼叫物件的<ph id="ph1">`Dispose`</ph>方法，而且您正嘗試存取的執行個體成員，可取得或設定物件的狀態。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> that is thrown when you try to reset the frequency of timer notifications after you call the <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">下列範例說明<ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph>當您嘗試重設的計時器通知的頻率之後您呼叫, 時擲回<ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Close`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">您已呼叫物件的<ph id="ph1">`Close`</ph>方法，而且您正嘗試存取的執行個體成員，可取得或設定物件的狀態。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Often, the <ph id="ph1">`Close`</ph> method provides a type's public implementation of the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">通常，<ph id="ph1">`Close`</ph>方法提供類型的公用實作<ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method multiple times.</source>
          <target state="translated">您已呼叫物件的<ph id="ph1">`Dispose`</ph>方法多次。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this doesn’t throw an exception.</source>
          <target state="translated">一般而言，這不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>However, depending on how a type implements <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>, it may not allow multiple calls to <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">不過，根據型別如何實作<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>，它可能不允許多次呼叫<ph id="ph2">`Dispose`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>In most cases, this exception results from developer error.</source>
          <target state="translated">在大部分情況下，從開發人員錯誤使得此例外狀況。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Instead of handling the error in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block, you should correct the error, typically by reinstantiating the object.</source>
          <target state="translated">而不是處理中的錯誤<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>區塊中，您應該要更正錯誤，通常，reinstantiating 物件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example demonstrates an error that causes the <ph id="ph1">`ObjectDisposedException`</ph> exception to be thrown.</source>
          <target state="translated">下列範例會示範造成的錯誤<ph id="ph1">`ObjectDisposedException`</ph>擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>This code produces the following output:</source>
          <target state="translated">此程式碼會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">字串，包含處置物件的名稱。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a string containing the name of the disposed object.</source>
          <target state="translated">使用含有處置物件的名稱來初始化 <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property is initialized to a system-supplied message that describes the error and includes the <ph id="ph2">`objectName`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph>屬性會初始化為系統提供的訊息會描述錯誤並包含<ph id="ph2">`objectName`</ph>參數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此訊息會考量目前的系統文化特性。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`InnerException`</ph>的新執行個體的屬性會初始化為<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">如果<ph id="ph1">`objectName`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">`Message`</ph>屬性包含僅為錯誤訊息。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，包含所擲回之例外狀況的相關序列化物件資料。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">包含有關來源或目的端內容資訊的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 不是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則目前的例外狀況會在處理內部例外的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 區塊中引發。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中包含對前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>屬性會傳回相同的值傳遞到建構函式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The name of the disposed object.</source>
          <target state="translated">已配置物件的名稱。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with the specified object name and message.</source>
          <target state="translated">使用指定的物件名稱和訊息來初始化 <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`InnerException`</ph>的新執行個體的屬性會初始化為<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">如果<ph id="ph1">`objectName`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">`Message`</ph>屬性包含僅為錯誤訊息。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，包含所擲回之例外狀況的相關序列化物件資料。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">包含有關來源或目的端內容資訊的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the parameter name and additional exception information.</source>
          <target state="translated">擷取具有參數名稱和額外例外狀況資訊的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">提供序列化服務。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>安全性動作： <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.Message">
          <source>Gets the message that describes the error.</source>
          <target state="translated">取得描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>A string that describes the error.</source>
          <target state="translated">描述錯誤的字串。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>If the <ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, the message includes the name of the object.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph>屬性不是<ph id="ph2">`null`</ph>，訊息會包含物件的名稱。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個屬性會覆寫<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.ObjectName">
          <source>Gets the name of the disposed object.</source>
          <target state="translated">取得處置物件的名稱。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">字串，包含處置物件的名稱。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>If the current property is not <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, the value of this property is included in the string returned by the <ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property.</source>
          <target state="translated">如果目前的屬性不是<ph id="ph1">`null`</ph>或<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>，這個屬性的值包含在所傳回的字串<ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph>屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>