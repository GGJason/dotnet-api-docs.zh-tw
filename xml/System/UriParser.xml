<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UriParser.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac518211f47087f208e898b72272d14ecd78771eb8c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18211f47087f208e898b72272d14ecd78771eb8c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.UriParser">
          <source>Parses a new URI scheme.</source>
          <target state="translated">剖析新的 URI 配置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.UriParser">
          <source>This is an abstract class.</source>
          <target state="translated">這是 abstract 類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>The UriParser class enables you to create parsers for new URI schemes.</source>
          <target state="translated">UriParser 類別可讓您建立新的 URI 配置的剖析器。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).</source>
          <target state="translated">您可以撰寫這些剖析器，或剖析器可以衍生自已知的配置 （HTTP、 FTP 和其他網路通訊協定為基礎的配置）。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>If you want to create a completely new parser, inherit from <ph id="ph1">&lt;xref:System.GenericUriParser&gt;</ph>.</source>
          <target state="translated">如果您想要建立全新的剖析器，繼承自<ph id="ph1">&lt;xref:System.GenericUriParser&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>If you want to create a parser that extends a well-known URI scheme, inherit from <ph id="ph1">&lt;xref:System.FtpStyleUriParser&gt;</ph>, <ph id="ph2">&lt;xref:System.HttpStyleUriParser&gt;</ph>, <ph id="ph3">&lt;xref:System.FileStyleUriParser&gt;</ph>, <ph id="ph4">&lt;xref:System.GopherStyleUriParser&gt;</ph>, or <ph id="ph5">&lt;xref:System.LdapStyleUriParser&gt;</ph>.</source>
          <target state="translated">如果您想要建立擴充的已知的 URI 配置的剖析器，繼承自<ph id="ph1">&lt;xref:System.FtpStyleUriParser&gt;</ph>， <ph id="ph2">&lt;xref:System.HttpStyleUriParser&gt;</ph>， <ph id="ph3">&lt;xref:System.FileStyleUriParser&gt;</ph>， <ph id="ph4">&lt;xref:System.GopherStyleUriParser&gt;</ph>，或<ph id="ph5">&lt;xref:System.LdapStyleUriParser&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>Microsoft strongly recommends that you use a parser shipped with .NET.</source>
          <target state="translated">Microsoft 強烈建議您使用隨附於.NET 的剖析器。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.</source>
          <target state="translated">建置您自己的剖析器會增加應用程式的複雜性，以及隨附的剖析器將不會執行。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.UriParser.#ctor">
          <source>Constructs a default URI parser.</source>
          <target state="translated">建構預設 URI 剖析器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>The URI to parse.</source>
          <target state="translated">要剖析的 URI。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph> to retrieve from <bpt id="p1">&lt;c&gt;</bpt>uri<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要從 <bpt id="p1">&lt;c&gt;</bpt>uri<ept id="p1">&lt;/c&gt;</ept> 擷取的 <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> values that controls how special characters are escaped.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> 值之一，控制特殊字元的逸出方式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>Gets the components from a URI.</source>
          <target state="translated">從 URI 取得元件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>A string that contains the components.</source>
          <target state="translated">包含元件的字串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>Use the <ph id="ph1">&lt;xref:System.UriParser.GetComponents%2A&gt;</ph> method to determine the value of various parts of the URI, such as the <ph id="ph2">&lt;xref:System.UriComponents.Scheme&gt;</ph>, <ph id="ph3">&lt;xref:System.UriComponents.Host&gt;</ph>, or <ph id="ph4">&lt;xref:System.UriComponents.Port&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.UriParser.GetComponents%2A&gt;</ph>方法，以決定值的不同部分的 URI，例如<ph id="ph2">&lt;xref:System.UriComponents.Scheme&gt;</ph>， <ph id="ph3">&lt;xref:System.UriComponents.Host&gt;</ph>，或<ph id="ph4">&lt;xref:System.UriComponents.Port&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>The components are returned in the order that they appear in the URI.</source>
          <target state="translated">元件會出現在 URI 中的順序傳回。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>For example, if <ph id="ph1">&lt;xref:System.UriComponents.Scheme&gt;</ph> is specified, it appears first.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.UriComponents.Scheme&gt;</ph>指定，則第一個出現。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uriFormat" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriFormat" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uriComponents" /&gt;</ph> is not a combination of valid <ph id="ph2">&lt;see cref="T:System.UriComponents" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriComponents" /&gt;</ph> 不是有效 <ph id="ph2">&lt;see cref="T:System.UriComponents" /&gt;</ph> 值的結合。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> requires user-driven parsing</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 需要使用者驅動的剖析。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is not an absolute URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 不是絕對 URI。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>Relative URIs cannot be used with this method.</source>
          <target state="translated">相對 URI 不能用於這個方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>The T:System.Uri to validate.</source>
          <target state="translated">要驗證的 T:System.Uri。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>Validation errors, if any.</source>
          <target state="translated">驗證錯誤，如果有的話。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>Initialize the state of the parser and validate the URI.</source>
          <target state="translated">初始化剖析器狀態並驗證 URI。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>The <ph id="ph1">&lt;xref:System.UriParser.InitializeAndValidate%2A&gt;</ph> method is called every time a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriParser.InitializeAndValidate%2A&gt;</ph>每次呼叫方法<ph id="ph2">&lt;xref:System.Uri&gt;</ph>具現化。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source>The base URI.</source>
          <target state="translated">基底 URI。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source>The URI to test.</source>
          <target state="translated">要測試的 URI。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source>Determines whether <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is a base URI for <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> 是否為 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> 的基底 URI。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="baseUri" /&gt;</ph> is a base URI for <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="baseUri" /&gt;</ph> 是 <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph> 的基底 URI，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>The scheme name to check.</source>
          <target state="translated">要進行檢查的配置名稱。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>Indicates whether the parser for a scheme is registered.</source>
          <target state="translated">指出配置的剖析器是否已註冊。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="schemeName" /&gt;</ph> has been registered; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="schemeName" /&gt;</ph> 已經註冊，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 參數為 null。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 參數無效。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The URI to check.</source>
          <target state="translated">要進行檢查的 URI。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>Indicates whether a URI is well-formed.</source>
          <target state="translated">指出 URI 是否語式正確。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="uri" /&gt;</ph> is well-formed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="uri" /&gt;</ph> 語式正確，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.UriParser.IsWellFormedOriginalString%2A&gt;</ph> method will return false if:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriParser.IsWellFormedOriginalString%2A&gt;</ph>方法會傳回 false，如果：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string is not correctly escaped per RFC 2396.</source>
          <target state="translated">未正確逸出字串每個 RFC 2396。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string represents an absolute URI that references an implicit file URI.</source>
          <target state="translated">字串表示參考的隱含檔案 URI 的絕對 URI。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string represents an absolute URI that is missing a forward slash before the path component.</source>
          <target state="translated">字串表示遺漏斜線之前的路徑元件的絕對 URI。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string contains unescaped backslashes, even if they will be treated as forward slashes.</source>
          <target state="translated">此字串會包含未逸出反斜線，即使它們會被視為正斜線。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnNewUri">
          <source>Invoked by a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> constructor to get a <ph id="ph2">&lt;see cref="T:System.UriParser" /&gt;</ph> instance</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 建構函式以取得 <ph id="ph2">&lt;see cref="T:System.UriParser" /&gt;</ph> 執行個體</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnNewUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> for the constructed <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">建構之 <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.OnNewUri">
          <source>The default implementation returns the same <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> instance.</source>
          <target state="translated">預設實作會傳回相同<ph id="ph1">&lt;xref:System.UriParser&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.OnNewUri">
          <source>You may need to override this method and return a different <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> for each invocation if you are operating in a multithreaded environment.</source>
          <target state="translated">您可能需要覆寫這個方法，並傳回不同<ph id="ph1">&lt;xref:System.UriParser&gt;</ph>如果您要在多執行緒環境中操作每次叫用。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnRegister(System.String,System.Int32)">
          <source>The scheme that is associated with this <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph>.</source>
          <target state="translated">與這個 <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> 相關聯的配置。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnRegister(System.String,System.Int32)">
          <source>The port number of the scheme.</source>
          <target state="translated">配置的連接埠編號。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnRegister(System.String,System.Int32)">
          <source>Invoked by the Framework when a <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> method is registered.</source>
          <target state="translated">當 <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> 方法已註冊時，由 Framework 叫用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The URI parser to register.</source>
          <target state="translated">要註冊的 URI 剖析器。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The name of the scheme that is associated with this parser.</source>
          <target state="translated">與這個剖析器相關聯的配置名稱。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The default port number for the specified scheme.</source>
          <target state="translated">指定配置的預設連接埠編號。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>Associates a scheme and port number with a <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph>.</source>
          <target state="translated">使配置和連接埠編號與 <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> 產生關聯。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>If the <ph id="ph1">`defaultPort`</ph> parameter is set to -1, the <ph id="ph2">&lt;xref:System.UriParser.Register%2A&gt;</ph> method registers no default value for the port number.</source>
          <target state="translated">如果<ph id="ph1">`defaultPort`</ph>參數設定為-1，<ph id="ph2">&lt;xref:System.UriParser.Register%2A&gt;</ph>方法註冊的通訊埠編號沒有預設值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="uriParser" /&gt;</ph> parameter is null</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriParser" /&gt;</ph> 參數為 Null</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 參數為 Null。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is not valid</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 參數無效。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> 參數無效。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> parameter is less than -1 or greater than 65,534.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> 參數小於 -1 或大於 65,534。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>A base URI.</source>
          <target state="translated">基底 URI。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>A relative URI.</source>
          <target state="translated">相對 URI。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>Errors during the resolve process, if any.</source>
          <target state="translated">解析處理序期間發生的錯誤，如果有的話。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>Called by <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> constructors and <ph id="ph2">&lt;see cref="Overload:System.Uri.TryCreate" /&gt;</ph> to resolve a relative URI.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 建構函式和 <ph id="ph2">&lt;see cref="Overload:System.Uri.TryCreate" /&gt;</ph> 呼叫，以解析相對 URI。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>The string of the resolved relative <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">已解析相對 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 的字串。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">&lt;xref:System.Uri&gt;</ph> constructors and <ph id="ph2">&lt;xref:System.Uri.TryCreate%2A?displayProperty=nameWithType&gt;</ph> use <ph id="ph3">&lt;xref:System.UriParser.Resolve%2A&gt;</ph> to construct a URI from <ph id="ph4">`baseUri`</ph> and <ph id="ph5">`relativeUri`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph> 建構函式和<ph id="ph2">&lt;xref:System.Uri.TryCreate%2A?displayProperty=nameWithType&gt;</ph>使用<ph id="ph3">&lt;xref:System.UriParser.Resolve%2A&gt;</ph>來建構從 URI<ph id="ph4">`baseUri`</ph>和<ph id="ph5">`relativeUri`</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>If a parsing error occurs, the returned string for the resolved relative <ph id="ph1">&lt;xref:System.Uri&gt;</ph> is null.</source>
          <target state="translated">如果剖析發生錯誤，則傳回的字串，用於解析相對<ph id="ph1">&lt;xref:System.Uri&gt;</ph>為 null。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> parameter is not an absolute <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> 參數不是絕對 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> parameter requires user-driven parsing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> 參數需要使用者驅動的剖析。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>