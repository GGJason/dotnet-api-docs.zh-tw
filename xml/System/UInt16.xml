<Type Name="UInt16" FullName="System.UInt16">
  <TypeSignature Language="C#" Value="public struct UInt16 : IComparable, IComparable&lt;ushort&gt;, IConvertible, IEquatable&lt;ushort&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt16" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt16&#xA;Implements IComparable, IComparable(Of UShort), IConvertible, IEquatable(Of UShort), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt16 : IComparable, IComparable&lt;System::UInt16&gt;, IConvertible, IEquatable&lt;System::UInt16&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="119a1-101">表示 16 位元不帶正負號的整數 (Unsigned Integer)。</span><span class="sxs-lookup"><span data-stu-id="119a1-101">Represents a 16-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-102"><xref:System.UInt16>實值類型代表不帶正負號的整數值範圍從 0 到 65535 之間。</span><span class="sxs-lookup"><span data-stu-id="119a1-102">The <xref:System.UInt16> value type represents unsigned integers with values ranging from 0 to 65535.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="119a1-103"><xref:System.UInt16>類型不符合 CLS 標準。</span><span class="sxs-lookup"><span data-stu-id="119a1-103">The <xref:System.UInt16> type is not CLS-compliant.</span></span> <span data-ttu-id="119a1-104">符合 CLS 標準的替代類型是<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="119a1-104">The CLS-compliant alternative type is <xref:System.Int32>.</span></span> <span data-ttu-id="119a1-105"><xref:System.Int16> 可以用來取代改為<xref:System.UInt16>值，範圍從零至<xref:System.Int16.MaxValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="119a1-105"><xref:System.Int16> can be used instead to replace a <xref:System.UInt16> value that ranges from zero to <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="119a1-106">如需 cls 符合性的詳細資訊，請參閱[語言獨立性以及與語言無關的元件](~/docs/standard/language-independence-and-language-independent-components.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="119a1-107"><xref:System.UInt16>結構提供方法來比較此類型的執行個體、 執行個體的值轉換為其字串表示，並將數字的字串表示轉換成此類型的執行個體。</span><span class="sxs-lookup"><span data-stu-id="119a1-107">The <xref:System.UInt16> structure provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 <span data-ttu-id="119a1-108">格式規格的程式碼控制實值類型的字串表示方式的相關資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-108">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="119a1-109">這個型別的所有成員都是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="119a1-109">All members of this type are thread safe.</span></span> <span data-ttu-id="119a1-110">修改執行個體狀態會顯示的成員實際上會傳回新的值初始化的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="119a1-110">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="119a1-111">做為任何其他類型，以讀取和寫入至共用的變數，其中包含此類型的執行個體必須受到鎖定來保證的執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="119a1-111">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int32" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119a1-112">將這個執行個體與指定的物件或 <see cref="T:System.UInt16" /> 相比較，並傳回它們的相對值指示。</span><span class="sxs-lookup"><span data-stu-id="119a1-112">Compares this instance to a specified object or <see cref="T:System.UInt16" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="119a1-113">要比較的物件或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-113">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="119a1-114">將這個執行個體與指定的物件相比較，並傳回它們的相對值指示。</span><span class="sxs-lookup"><span data-stu-id="119a1-114">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="119a1-115">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span><span class="sxs-lookup"><span data-stu-id="119a1-115">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="119a1-116"><list type="table"><listheader><term> 傳回值</span><span class="sxs-lookup"><span data-stu-id="119a1-116"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="119a1-117"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="119a1-117"></term><description> Description</span></span>  
  
 <span data-ttu-id="119a1-118"></description></listheader><item><term>小於零</span><span class="sxs-lookup"><span data-stu-id="119a1-118"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="119a1-119"></term><description> 這個執行個體小於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-119"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="119a1-120"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="119a1-120"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="119a1-121"></term><description> 這個執行個體等於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-121"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="119a1-122"></description></item><item><term> 大於零</span><span class="sxs-lookup"><span data-stu-id="119a1-122"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="119a1-123"></term><description>這個執行個體大於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-123"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="119a1-124">-或-</span><span class="sxs-lookup"><span data-stu-id="119a1-124">-or-</span></span>  
  
 <span data-ttu-id="119a1-125"><paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-125"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-126">任何執行個體<xref:System.UInt16>，不論其值會被視為大於`null`。</span><span class="sxs-lookup"><span data-stu-id="119a1-126">Any instance of <xref:System.UInt16>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="119a1-127">`value` 必須是`null`或執行個體<xref:System.UInt16>，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="119a1-127">`value` must be `null` or an instance of <xref:System.UInt16>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-128">下列範例會示範<xref:System.UInt16.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-128">The following example demonstrates the <xref:System.UInt16.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt16 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt16 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16 Example/CS/source.cs#3)]
 [!code-vb[UInt16 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119a1-129"><paramref name="value" /> 不是 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-129"><paramref name="value" /> is not a <see cref="T:System.UInt16" />.</span></span></exception>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="119a1-130">要比較的不帶正負號整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-130">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="119a1-131">將這個執行個體與指定的 16 位元不帶正負號的整數相比較，並傳回它們的相對值指示。</span><span class="sxs-lookup"><span data-stu-id="119a1-131">Compares this instance to a specified 16-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="119a1-132">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span><span class="sxs-lookup"><span data-stu-id="119a1-132">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="119a1-133"><list type="table"><listheader><term> 傳回值</span><span class="sxs-lookup"><span data-stu-id="119a1-133"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="119a1-134"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="119a1-134"></term><description> Description</span></span>  
  
 <span data-ttu-id="119a1-135"></description></listheader><item><term>小於零</span><span class="sxs-lookup"><span data-stu-id="119a1-135"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="119a1-136"></term><description> 這個執行個體小於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-136"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="119a1-137"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="119a1-137"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="119a1-138"></term><description> 這個執行個體等於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-138"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="119a1-139"></description></item><item><term> 大於零</span><span class="sxs-lookup"><span data-stu-id="119a1-139"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="119a1-140"></term><description>這個執行個體大於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-140"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-141">這個方法會實作<xref:System.IComparable%601?displayProperty=nameWithType>介面並執行稍微優於<xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType>方法因為並沒有轉換`value`參數物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-141">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="119a1-142">根據您的程式語言，可能會以程式碼<xref:System.UInt16.CompareTo%2A>方法的參數型別具有較少的位元的位置 （較窄） 與執行個體類型。</span><span class="sxs-lookup"><span data-stu-id="119a1-142">Depending on your programming language, it might be possible to code a <xref:System.UInt16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="119a1-143">這可能是因為有些程式語言會執行隱含擴展轉換，表示參數為型別與相同位元數與執行個體。</span><span class="sxs-lookup"><span data-stu-id="119a1-143">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="119a1-144">例如，假設執行個體類型是<xref:System.Int32>和參數類型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="119a1-144">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="119a1-145">Microsoft C# 編譯器會產生代表做為參數的值指示<xref:System.Int32>物件，然後產生<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比較的值的方法<xref:System.Int32>執行個體和<xref:System.Int32>參數表示法。</span><span class="sxs-lookup"><span data-stu-id="119a1-145">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="119a1-146">請參閱您的程式語言的文件，以判斷其編譯器是否數值類型上執行隱含的擴展轉換。</span><span class="sxs-lookup"><span data-stu-id="119a1-146">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-147">下列範例示範泛型和非泛型版本<xref:System.UInt16.CompareTo%2A>的數個值和參考類型的方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-147">The following example demonstrates generic and nongeneric versions of the <xref:System.UInt16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119a1-148">傳回表示這個執行個體是否等於指定物件或 <see cref="T:System.UInt16" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="119a1-148">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="119a1-149">與這個執行個體相比較的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-149">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="119a1-150">傳回值，指出這個執行個體 (Instance) 是否和指定的物件相等。</span><span class="sxs-lookup"><span data-stu-id="119a1-150">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="119a1-151">如果 <see langword="true" /> 是 <paramref name="obj" /> 的執行個體，並且等於這個執行個體的值，則為 <see cref="T:System.UInt16" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-151"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="119a1-152">下列範例會示範<xref:System.UInt16.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-152">The following example demonstrates the <xref:System.UInt16.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16_Equals/CPP/uint16_equals.cpp#1)]
 [!code-csharp[UInt16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16_Equals/CS/uint16_equals.cs#1)]
 [!code-vb[UInt16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16_Equals/VB/uint16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119a1-153">編譯器的多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.UInt16.Equals(System.UInt16)" />方法多載。</span><span class="sxs-lookup"><span data-stu-id="119a1-153">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="119a1-154">如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.UInt16" />定義及引數未當做輸入<see cref="T:System.Object" />，編譯器會執行隱含轉換並呼叫<see cref="M:System.UInt16.Equals(System.UInt16)" />方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-154">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="119a1-155">否則，呼叫<see cref="M:System.UInt16.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.UInt16" />值。</span><span class="sxs-lookup"><span data-stu-id="119a1-155">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="119a1-156">下列範例說明這兩個方法多載之間的行為差異。</span><span class="sxs-lookup"><span data-stu-id="119a1-156">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="119a1-157">如果是<see cref="T:System.Byte" />值，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換，並呼叫<see cref="M:System.UInt16.Equals(System.UInt16)" />方法，而第二個比較傳回<see langword="false" />因為編譯器呼叫<see cref="M:System.UInt16.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-157">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ushort obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt16 obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="119a1-158">和這個執行個體比較之 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-158">A 16-bit unsigned integer to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="119a1-159">傳回值，表示這個執行個體是否等於指定的 <see cref="T:System.UInt16" /> 值。</span><span class="sxs-lookup"><span data-stu-id="119a1-159">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt16" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="119a1-160">如果 <paramref name="obj" /> 與這個執行個體 (Instance) 具有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-160"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-161">這個方法會實作<xref:System.IEquatable%601?displayProperty=nameWithType>介面，並執行稍微優於<xref:System.UInt16.Equals%2A>因為並沒有轉換`obj`參數物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-161">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119a1-162">編譯器的多載解析可能會說明行為中的兩個明顯的差別<see cref="M:System.UInt16.Equals(System.UInt16)" />方法多載。</span><span class="sxs-lookup"><span data-stu-id="119a1-162">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="119a1-163">如果之間的隱含轉換<paramref name="obj" />引數和<see cref="T:System.UInt16" />定義及引數未當做輸入<see cref="T:System.Object" />，編譯器會執行隱含轉換並呼叫<see cref="M:System.UInt16.Equals(System.UInt16)" />方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-163">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="119a1-164">否則，呼叫<see cref="M:System.UInt16.Equals(System.Object)" />方法，它一定會傳回<see langword="false" />如果其<paramref name="obj" />引數不是<see cref="T:System.UInt16" />值。</span><span class="sxs-lookup"><span data-stu-id="119a1-164">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="119a1-165">下列範例說明這兩個方法多載之間的行為差異。</span><span class="sxs-lookup"><span data-stu-id="119a1-165">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="119a1-166">如果是<see cref="T:System.Byte" />值，傳回第一個比較<see langword="true" />因為編譯器會自動執行擴展轉換，並呼叫<see cref="M:System.UInt16.Equals(System.UInt16)" />方法，而第二個比較傳回<see langword="false" />因為編譯器呼叫<see cref="M:System.UInt16.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-166">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="119a1-167">傳回這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="119a1-167">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="119a1-168">32 位元帶正負號的整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="119a1-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="119a1-169">傳回實值類型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-169">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-170">列舉常數 <see cref="F:System.TypeCode.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-170">The enumerated constant, <see cref="F:System.TypeCode.UInt16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ushort MaxValue = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MaxValue = unsigned int16(65535)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As UShort  = 65535" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MaxValue = 65535;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary><span data-ttu-id="119a1-171">代表 <see cref="T:System.UInt16" /> 最大的可能值。</span><span class="sxs-lookup"><span data-stu-id="119a1-171">Represents the largest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="119a1-172">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="119a1-172">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-173">這個常數的值為 65535。也就是十六進位 0xFFFF。</span><span class="sxs-lookup"><span data-stu-id="119a1-173">The value of this constant is 65535; that is, hexadecimal 0xFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-174">下列範例會使用<xref:System.UInt16.MaxValue?displayProperty=nameWithType>和<xref:System.UInt16.MinValue?displayProperty=nameWithType>屬性，以確保<xref:System.Int32>範圍中的值是<xref:System.UInt16>類型，再將其轉換成<xref:System.UInt16>值。</span><span class="sxs-lookup"><span data-stu-id="119a1-174">The following example uses the <xref:System.UInt16.MaxValue?displayProperty=nameWithType> and <xref:System.UInt16.MinValue?displayProperty=nameWithType> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="119a1-175">這可避免擲回的轉換作業<xref:System.OverflowException>如果整數值不在範圍內的<xref:System.UInt16>型別。</span><span class="sxs-lookup"><span data-stu-id="119a1-175">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ushort MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MinValue = unsigned int16(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As UShort  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MinValue = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="119a1-176">代表 <see cref="T:System.UInt16" /> 最小的可能值。</span><span class="sxs-lookup"><span data-stu-id="119a1-176">Represents the smallest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="119a1-177">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="119a1-177">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-178">這個常數的值為 0。</span><span class="sxs-lookup"><span data-stu-id="119a1-178">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-179">下列範例會使用<xref:System.UInt16.MinValue>和<xref:System.UInt16.MaxValue>屬性，以確保<xref:System.Int32>範圍中的值是<xref:System.UInt16>類型，再將其轉換成<xref:System.UInt16>值。</span><span class="sxs-lookup"><span data-stu-id="119a1-179">The following example uses the <xref:System.UInt16.MinValue> and <xref:System.UInt16.MaxValue> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="119a1-180">這可避免擲回的轉換作業<xref:System.OverflowException>如果整數值不在範圍內的<xref:System.UInt16>型別。</span><span class="sxs-lookup"><span data-stu-id="119a1-180">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119a1-181">將數字的字串表示轉換成它的對等 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-181">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="119a1-182">字串，表示要轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-182">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="119a1-183">將數字的字串表示轉換成它的對等 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-183">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="119a1-184">16 位元不帶正負號的整數，與 <paramref name="s" /> 中所包含的數字相等。</span><span class="sxs-lookup"><span data-stu-id="119a1-184">A 16-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-185">`s`參數應該是下列格式之數字的字串表示。</span><span class="sxs-lookup"><span data-stu-id="119a1-185">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="119a1-186">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-186">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="119a1-187">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-187">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="119a1-188">下表描述每個項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-188">The following table describes each element.</span></span>  
  
|<span data-ttu-id="119a1-189">元素</span><span class="sxs-lookup"><span data-stu-id="119a1-189">Element</span></span>|<span data-ttu-id="119a1-190">描述</span><span class="sxs-lookup"><span data-stu-id="119a1-190">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="119a1-191">*ws*</span><span class="sxs-lookup"><span data-stu-id="119a1-191">*ws*</span></span>|<span data-ttu-id="119a1-192">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-192">Optional white space.</span></span>|  
|<span data-ttu-id="119a1-193">*簽署*</span><span class="sxs-lookup"><span data-stu-id="119a1-193">*sign*</span></span>|<span data-ttu-id="119a1-194">選擇性的符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-194">An optional sign.</span></span> <span data-ttu-id="119a1-195">有效的符號字元由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="119a1-195">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="119a1-196">不過，使用負號，只使用零，否則，方法會擲回<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="119a1-196">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="119a1-197">*digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-197">*digits*</span></span>|<span data-ttu-id="119a1-198">範圍從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-198">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="119a1-199">會忽略任何前置零。</span><span class="sxs-lookup"><span data-stu-id="119a1-199">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="119a1-200">所指定的字串`s`參數會使用解譯<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="119a1-200">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="119a1-201">它不能包含任何群組分隔符號或小數分隔符號，而且不得有小數部分。</span><span class="sxs-lookup"><span data-stu-id="119a1-201">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="119a1-202">`s`參數使用的格式設定資訊中會剖析<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>初始化目前的系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-202">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="119a1-203">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="119a1-203">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="119a1-204">若要將字串剖析所使用之特定文化特性格式資訊，請使用<xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-204">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-205">下列範例會呼叫<xref:System.UInt16.Parse%28System.String%29>方法，將字串陣列中的每個項目轉換成不帶正負號的 16 位元整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-205">The following example calls the <xref:System.UInt16.Parse%28System.String%29> method to convert each element in a string array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex5.cs#5)]
 [!code-vb[System.UInt16.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex5.vb#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119a1-206"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-206"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="119a1-207"><paramref name="s" /> 的格式不正確。</span><span class="sxs-lookup"><span data-stu-id="119a1-207"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="119a1-208"><paramref name="s" /> 表示小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-208"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="119a1-209">字串，表示要轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-209">A string that represents the number to convert.</span></span> <span data-ttu-id="119a1-210">這個字串使用 <c>style</c> 參數指定的樣式來解譯。</span><span class="sxs-lookup"><span data-stu-id="119a1-210">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="119a1-211">指定 <c>s</c> 可以使用的格式之列舉值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="119a1-211">A bitwise combination of the enumeration values that specify the permitted format of <c>s</c>.</span></span> <span data-ttu-id="119a1-212">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-212">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="119a1-213">將指定樣式之數字的字串表示轉換成其對等 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-213">Converts the string representation of a number in a specified style to its 16-bit unsigned integer equivalent.</span></span>  
  
 <span data-ttu-id="119a1-214">此方法不符合 CLS 標準。</span><span class="sxs-lookup"><span data-stu-id="119a1-214">This method is not CLS-compliant.</span></span> <span data-ttu-id="119a1-215">符合 CLS 標準的替代項目為 <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-215">The CLS-compliant alternative is <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-216">16 位元不帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span><span class="sxs-lookup"><span data-stu-id="119a1-216">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-217">`style`參數定義中允許的樣式項目 （例如空格、 正或負號、 群組分隔符號或小數點符號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="119a1-217">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="119a1-218">`style` 必須是從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="119a1-218">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="119a1-219">`style`參數，會使這個方法多載有用時`s`包含在十六進位值的字串表示時數字系統 （十進位或十六進位） 由`s`已知只能在執行階段，或當您不允許空白字元或正負號符號中`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-219">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="119a1-220">值而定`style`、`s`參數可以包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="119a1-220">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="119a1-221">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-221">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="119a1-222">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-222">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="119a1-223">如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`參數可能包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="119a1-223">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="119a1-224">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-224">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="119a1-225">下表描述每個項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-225">The following table describes each element.</span></span>  
  
|<span data-ttu-id="119a1-226">元素</span><span class="sxs-lookup"><span data-stu-id="119a1-226">Element</span></span>|<span data-ttu-id="119a1-227">描述</span><span class="sxs-lookup"><span data-stu-id="119a1-227">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="119a1-228">*ws*</span><span class="sxs-lookup"><span data-stu-id="119a1-228">*ws*</span></span>|<span data-ttu-id="119a1-229">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-229">Optional white space.</span></span> <span data-ttu-id="119a1-230">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，而且可以出現在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-230">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="119a1-231">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-231">A culture-specific currency symbol.</span></span> <span data-ttu-id="119a1-232">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="119a1-232">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="119a1-233">目前文化特性的貨幣符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-233">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-234">*簽署*</span><span class="sxs-lookup"><span data-stu-id="119a1-234">*sign*</span></span>|<span data-ttu-id="119a1-235">選擇性的符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-235">An optional sign.</span></span> <span data-ttu-id="119a1-236">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，而且可以出現在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-236">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="119a1-237">括號可用於`s`來表示負數的值，如果`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-237">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="119a1-238">不過，使用負號，只使用零，否則，方法會擲回<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="119a1-238">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="119a1-239">*digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-239">*digits*</span></span><br /><br /> <span data-ttu-id="119a1-240">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-240">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="119a1-241">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-241">*exponential_digits*</span></span>|<span data-ttu-id="119a1-242">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-242">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="119a1-243">如*fractional_digits*，只為 0 的數字會有效。</span><span class="sxs-lookup"><span data-stu-id="119a1-243">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="119a1-244">*、*</span><span class="sxs-lookup"><span data-stu-id="119a1-244">*,*</span></span>|<span data-ttu-id="119a1-245">特定文化特性的群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-245">A culture-specific group separator symbol.</span></span> <span data-ttu-id="119a1-246">目前的文化特性群組分隔符號可出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-246">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-247">*.*</span><span class="sxs-lookup"><span data-stu-id="119a1-247">*.*</span></span>|<span data-ttu-id="119a1-248">特定文化特性的小數點符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-248">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="119a1-249">目前的文化特性小數點符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-249">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="119a1-250">只有數字 0 會顯示為小數位數才能成功;，剖析作業如果*fractional_digits*包含任何其他數字、<xref:System.FormatException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="119a1-250">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="119a1-251">E</span><span class="sxs-lookup"><span data-stu-id="119a1-251">E</span></span>|<span data-ttu-id="119a1-252">"E"或者"E"字元，表示此值會表示指數 （科學記號） 表示法。</span><span class="sxs-lookup"><span data-stu-id="119a1-252">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="119a1-253">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-253">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-254">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="119a1-254">*hexdigits*</span></span>|<span data-ttu-id="119a1-255">從 0 到 f 或 0 到 f 的十六進位數字的序列</span><span class="sxs-lookup"><span data-stu-id="119a1-255">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="119a1-256">只有數字的字串 (對應於<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="119a1-256">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="119a1-257">在其餘的大部分<xref:System.Globalization.NumberStyles>成員控制可能存在，但不一定要出現在輸入字串中的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-257">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="119a1-258">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響的項目可能會出現在`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-258">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="119a1-259">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="119a1-259">`NumberStyles` value</span></span>|<span data-ttu-id="119a1-260">在允許的項目`s`除了數字</span><span class="sxs-lookup"><span data-stu-id="119a1-260">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="119a1-261">*位數*只有項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-261">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="119a1-262">小數點 （.） 和*小數點後數字*項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-262">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="119a1-263">"E"或"E"字元，表示指數標記法，連同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="119a1-263">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="119a1-264">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-264">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="119a1-265">*Ws*結尾處的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-265">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="119a1-266">*登*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-266">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="119a1-267">*登*結尾處的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-267">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="119a1-268">*登*括住的數字值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-268">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="119a1-269">群組分隔符號 （，） 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-269">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="119a1-270">貨幣 （$） 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-270">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="119a1-271">所有項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-271">All elements.</span></span> <span data-ttu-id="119a1-272">不過，`s`無法表示的十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-272">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="119a1-273">*Ws*開頭或結尾的項目`s`，*登*開頭`s`，並在小數點 (*。*) 符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-273">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="119a1-274">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="119a1-274">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="119a1-275">`ws`， `sign`、 群組分隔符號 (*，*)，和小數點 (*。*) 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-275">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="119a1-276">所有項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-276">All elements.</span></span> <span data-ttu-id="119a1-277">不過，`s`無法表示的十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-277">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="119a1-278">不同於其他<xref:System.Globalization.NumberStyles>值、 允許，但不是需要，在特定的樣式項目是否存在`s`、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>樣式值表示，在個別的數字字元`s`一律解譯為十六進位字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-278">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="119a1-279">有效的十六進位字元為 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="119a1-279">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="119a1-280">前置詞，例如 「 0x 」，不支援，而且會使剖析作業失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-280">A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="119a1-281">只有其他旗標可以結合`style`參數<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="119a1-281">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="119a1-282">(<xref:System.Globalization.NumberStyles>列舉會包含複合的數字樣式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含這兩個空格旗標。)</span><span class="sxs-lookup"><span data-stu-id="119a1-282">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119a1-283">如果`s`的字串表示法的十六進位數字，它無法前面的任何裝飾 (例如`0x`或`&h`)，區隔其十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-283">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="119a1-284">這會導致轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-284">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="119a1-285">`s`參數使用的格式設定資訊中會剖析<xref:System.Globalization.NumberFormatInfo>初始化目前的系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-285">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="119a1-286">若要指定的文化特性，剖析作業使用的格式資訊，請呼叫<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>多載。</span><span class="sxs-lookup"><span data-stu-id="119a1-286">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-287">下列範例會嘗試剖析使用的數字的字串陣列中的每個項目<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="119a1-287">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex2.cs#6)]
 [!code-vb[System.UInt16.Parse#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119a1-288"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-288"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119a1-289"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="119a1-289"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="119a1-290">-或-</span><span class="sxs-lookup"><span data-stu-id="119a1-290">-or-</span></span>  
  
 <span data-ttu-id="119a1-291"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span><span class="sxs-lookup"><span data-stu-id="119a1-291"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="119a1-292"><paramref name="s" /> 的格式與 <paramref name="style" /> 不相容。</span><span class="sxs-lookup"><span data-stu-id="119a1-292"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="119a1-293"><paramref name="s" /> 表示小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-293"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="119a1-294">-或-</span><span class="sxs-lookup"><span data-stu-id="119a1-294">-or-</span></span>  
  
 <span data-ttu-id="119a1-295"><paramref name="s" /> 包含非零的小數數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-295"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="119a1-296">字串，表示要轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-296">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="119a1-297">物件，提供關於 <c>s</c> 的文化特性特定格式資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-297">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="119a1-298">將指定之特定文化特性格式數字的字串表示轉換成它的對等 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-298">Converts the string representation of a number in a specified culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="119a1-299">16 位元不帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span><span class="sxs-lookup"><span data-stu-id="119a1-299">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-300">`s`參數包含數字的格式：</span><span class="sxs-lookup"><span data-stu-id="119a1-300">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="119a1-301">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-301">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="119a1-302">在方括號 （[和]） 是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-302">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="119a1-303">下表描述每個項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-303">The following table describes each element.</span></span>  
  
|<span data-ttu-id="119a1-304">元素</span><span class="sxs-lookup"><span data-stu-id="119a1-304">Element</span></span>|<span data-ttu-id="119a1-305">描述</span><span class="sxs-lookup"><span data-stu-id="119a1-305">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="119a1-306">ws</span><span class="sxs-lookup"><span data-stu-id="119a1-306">ws</span></span>|<span data-ttu-id="119a1-307">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-307">Optional white space.</span></span>|  
|<span data-ttu-id="119a1-308">Sign</span><span class="sxs-lookup"><span data-stu-id="119a1-308">sign</span></span>|<span data-ttu-id="119a1-309">選擇性的正負號或負號如果`s`代表零的值。</span><span class="sxs-lookup"><span data-stu-id="119a1-309">An optional sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="119a1-310">digits</span><span class="sxs-lookup"><span data-stu-id="119a1-310">digits</span></span>|<span data-ttu-id="119a1-311">範圍從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-311">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="119a1-312">使用解譯 s 參數<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="119a1-312">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="119a1-313">除了位元組值的十進位數字，只允許前置和尾端空白以及前置正負號是。</span><span class="sxs-lookup"><span data-stu-id="119a1-313">In addition to the byte value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="119a1-314">(如果存在，負號`s`必須代表的值為零或方法會擲回<xref:System.OverflowException>。)若要明確定義的樣式項目中可以存在的特定文化特性格式資訊以及`s`，使用<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-314">(If the negative sign is present, `s` must represent a value of zero or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="119a1-315">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性格式資訊`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-315">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="119a1-316">若要使用的三種方式`provider`參數來提供自訂的格式設定資訊給剖析作業：</span><span class="sxs-lookup"><span data-stu-id="119a1-316">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="119a1-317">您可以傳遞的實際<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-317">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="119a1-318">(它的實作<xref:System.IFormatProvider.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="119a1-318">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="119a1-319">您可以傳遞<xref:System.Globalization.CultureInfo>物件，指定其格式設定為要使用的文化特性。</span><span class="sxs-lookup"><span data-stu-id="119a1-319">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="119a1-320">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>屬性提供格式設定資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-320">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="119a1-321">您可以傳遞自訂<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="119a1-321">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="119a1-322">其<xref:System.IFormatProvider.GetFormat%2A>方法必須具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-322">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="119a1-323">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="119a1-323">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-324">下列範例會具現化會使用兩個加上其正號當做簽署 （+ +） 的自訂文化特性。</span><span class="sxs-lookup"><span data-stu-id="119a1-324">The following example instantiates a custom culture that uses two plus signs (++) as its positive sign.</span></span> <span data-ttu-id="119a1-325">然後它會呼叫<xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29>方法來剖析字串的陣列，使用<xref:System.Globalization.CultureInfo>物件，代表此自訂文化特性和文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="119a1-325">It then calls the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method to parse an array of strings by using <xref:System.Globalization.CultureInfo> objects that represent both this custom culture and the invariant culture.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex3.cs#3)]
 [!code-vb[System.UInt16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119a1-326"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-326"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="119a1-327"><paramref name="s" /> 的格式不正確。</span><span class="sxs-lookup"><span data-stu-id="119a1-327"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="119a1-328"><paramref name="s" /> 表示小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-328"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As UShort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="119a1-329">字串，表示要轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-329">A string that represents the number to convert.</span></span> <span data-ttu-id="119a1-330">這個字串使用 <c>style</c> 參數指定的樣式來解譯。</span><span class="sxs-lookup"><span data-stu-id="119a1-330">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="119a1-331">列舉值的位元組合，表示 <c>s</c> 中可以存在的樣式元素。</span><span class="sxs-lookup"><span data-stu-id="119a1-331">A bitwise combination of enumeration values that indicate the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="119a1-332">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-332">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="119a1-333">物件，提供關於 <c>s</c> 的文化特性特定格式資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-333">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="119a1-334">將指定樣式和特定文化特性格式之數字的字串表示轉換成其對等 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-334">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="119a1-335">16 位元不帶正負號的整數，與 <paramref name="s" /> 中所指定的數字相等。</span><span class="sxs-lookup"><span data-stu-id="119a1-335">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-336">`style`參數定義中允許的樣式項目 （例如空白字元或正或負號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="119a1-336">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="119a1-337">它必須從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="119a1-337">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="119a1-338">值而定`style`、`s`參數可以包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="119a1-338">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="119a1-339">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-339">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="119a1-340">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-340">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="119a1-341">如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`參數可以包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="119a1-341">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="119a1-342">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-342">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="119a1-343">下表描述每個項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-343">The following table describes each element.</span></span>  
  
|<span data-ttu-id="119a1-344">元素</span><span class="sxs-lookup"><span data-stu-id="119a1-344">Element</span></span>|<span data-ttu-id="119a1-345">描述</span><span class="sxs-lookup"><span data-stu-id="119a1-345">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="119a1-346">*ws*</span><span class="sxs-lookup"><span data-stu-id="119a1-346">*ws*</span></span>|<span data-ttu-id="119a1-347">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-347">Optional white space.</span></span> <span data-ttu-id="119a1-348">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，而且可以出現在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-348">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="119a1-349">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-349">A culture-specific currency symbol.</span></span> <span data-ttu-id="119a1-350">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>屬性<xref:System.Globalization.NumberFormatInfo>所傳回的物件<xref:System.IFormatProvider.GetFormat%2A>方法`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="119a1-350">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="119a1-351">貨幣符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-351">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-352">*簽署*</span><span class="sxs-lookup"><span data-stu-id="119a1-352">*sign*</span></span>|<span data-ttu-id="119a1-353">選擇性的符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-353">An optional sign.</span></span> <span data-ttu-id="119a1-354">(此方法會擲回<xref:System.OverflowException>如果`s`包含負號，並代表非零的數字。)符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，而且可以出現的結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-354">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="119a1-355">括號可用於`s`來表示負數的值，如果`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-355">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-356">*digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-356">*digits*</span></span>|<span data-ttu-id="119a1-357">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-357">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="119a1-358">*.*</span><span class="sxs-lookup"><span data-stu-id="119a1-358">*.*</span></span>|<span data-ttu-id="119a1-359">特定文化特性的小數點符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-359">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="119a1-360">目前的文化特性小數點符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-360">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-361">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-361">*fractional_digits*</span></span>|<span data-ttu-id="119a1-362">數字 0-9 的一個或多個如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標，或是數字 0，如果不存在的一個或多個相符項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-362">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="119a1-363">小數點後數字才會出現在`s`才`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-363">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-364">E</span><span class="sxs-lookup"><span data-stu-id="119a1-364">E</span></span>|<span data-ttu-id="119a1-365">"E"或者"E"字元，表示此值會表示指數 （科學記號） 表示法。</span><span class="sxs-lookup"><span data-stu-id="119a1-365">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="119a1-366">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-366">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-367">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-367">*exponential_digits*</span></span>|<span data-ttu-id="119a1-368">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-368">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="119a1-369">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-369">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="119a1-370">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="119a1-370">*hexdigits*</span></span>|<span data-ttu-id="119a1-371">從 0 到 f 或 0 到 f 的十六進位數字的序列</span><span class="sxs-lookup"><span data-stu-id="119a1-371">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="119a1-372">十進位數字的字串 (對應於<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>樣式) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="119a1-372">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="119a1-373">在其餘的大部分<xref:System.Globalization.NumberStyles>成員控制可能存在，但不一定要在此輸入字串中出現的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-373">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="119a1-374">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響的項目可能會出現在`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-374">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="119a1-375">非複合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="119a1-375">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="119a1-376">在允許的項目`s`除了數字</span><span class="sxs-lookup"><span data-stu-id="119a1-376">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="119a1-377">只有十進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-377">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="119a1-378">小數點 (*。*) 和*fractional_digits*項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-378">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="119a1-379">不過，如果樣式不包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標， *fractional_digits*必須只有一個或多個 0 的數字所組成，否則<xref:System.OverflowException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="119a1-379">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="119a1-380">"E"或"E"字元，表示指數標記法，連同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="119a1-380">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="119a1-381">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-381">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="119a1-382">*Ws*結尾處的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-382">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="119a1-383">前的一個符號*位數*。</span><span class="sxs-lookup"><span data-stu-id="119a1-383">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="119a1-384">一個符號之後*位數*。</span><span class="sxs-lookup"><span data-stu-id="119a1-384">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="119a1-385">括號之前和之後*位數*來表示負數的值。</span><span class="sxs-lookup"><span data-stu-id="119a1-385">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="119a1-386">群組分隔符號 (*，*) 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-386">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="119a1-387">貨幣 (*$*) 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-387">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="119a1-388">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用旗標，`s`必須是十六進位值。</span><span class="sxs-lookup"><span data-stu-id="119a1-388">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="119a1-389">有效的十六進位數字是 0 到 9，a 到 f，以及 A 到 f。前置詞，例如 「 0x 」，不支援，而且會使剖析作業失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-389">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="119a1-390">只有其他旗標可以結合<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="119a1-390">The only other flags that can be combined with <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="119a1-391">(<xref:System.Globalization.NumberStyles>列舉會包含複合的數字樣式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含這兩個空格旗標。)</span><span class="sxs-lookup"><span data-stu-id="119a1-391">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119a1-392">如果`s`參數為十六進位的數字的字串表示，不加任何裝飾 (例如`0x`或`&h`)，區隔其十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-392">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="119a1-393">這會導致擲回例外狀況，剖析作業。</span><span class="sxs-lookup"><span data-stu-id="119a1-393">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="119a1-394">`provider`參數是<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性格式資訊`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-394">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="119a1-395">若要使用的三種方式`provider`參數來提供自訂的格式設定資訊給剖析作業：</span><span class="sxs-lookup"><span data-stu-id="119a1-395">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="119a1-396">您可以傳遞的實際<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-396">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="119a1-397">(它的實作<xref:System.IFormatProvider.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="119a1-397">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="119a1-398">您可以傳遞<xref:System.Globalization.CultureInfo>物件，指定其格式設定為要使用的文化特性。</span><span class="sxs-lookup"><span data-stu-id="119a1-398">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="119a1-399">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>屬性提供格式設定資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-399">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="119a1-400">您可以傳遞自訂<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="119a1-400">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="119a1-401">其<xref:System.IFormatProvider.GetFormat%2A>方法必須具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-401">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="119a1-402">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>物件會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="119a1-402">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-403">下列範例會使用<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，將不同的數字的字串表示法轉換為 16 位元不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="119a1-403">The following example uses the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 16-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119a1-404"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-404"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119a1-405"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="119a1-405"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="119a1-406">-或-</span><span class="sxs-lookup"><span data-stu-id="119a1-406">-or-</span></span>  
  
 <span data-ttu-id="119a1-407"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span><span class="sxs-lookup"><span data-stu-id="119a1-407"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="119a1-408"><paramref name="s" /> 的格式與 <paramref name="style" /> 不相容。</span><span class="sxs-lookup"><span data-stu-id="119a1-408"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="119a1-409"><paramref name="s" /> 代表小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-409"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="119a1-410">-或-</span><span class="sxs-lookup"><span data-stu-id="119a1-410">-or-</span></span>  
  
 <span data-ttu-id="119a1-411"><paramref name="s" /> 包含非零的小數數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-411"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-412">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-412">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-413">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-413">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="119a1-414">如果目前執行個體的值不是零則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-414"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-415">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-415">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-416">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-416">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-417">建議的替代方式是呼叫<xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-417">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-418">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-418">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-419">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-419">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-420">目前執行個體的值，轉換為 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-420">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-421">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-421">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-422">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-422">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-423">建議的替代方式是呼叫<xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-423">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-424">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-424">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-425">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-425">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-426">目前執行個體的值，轉換為 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-426">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-427">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-427">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-428">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-428">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-429">建議的替代方式是呼叫<xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-429">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-430">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-431">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="119a1-431">This conversion is not supported.</span></span> <span data-ttu-id="119a1-432">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-432">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-433">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="119a1-433">This conversion is not supported.</span></span> <span data-ttu-id="119a1-434">沒有傳回值。</span><span class="sxs-lookup"><span data-stu-id="119a1-434">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="119a1-435">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="119a1-435">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-436">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-437">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-437">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-438">這個執行個體的目前值，轉換為 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-438">The current value of this instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-439">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-440">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-440">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-441">建議的替代方式是呼叫<xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-441">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-442">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-443">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-443">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-444">這個執行個體的目前值，轉換為 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-444">The current value of this instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-445">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-446">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-446">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-447">建議的替代方式是呼叫<xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-447">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-448">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-449">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-449">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-450">這個執行個體的目前值，轉換為 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-450">The current value of this instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-451">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-452">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-452">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-453">建議的替代方式是呼叫<xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-453">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-454">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-455">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-455">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-456">這個執行個體的值，已轉換成 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-456">The value of this instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-457">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-458">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-458">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-459">建議的替代方式是呼叫<xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-459">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-460">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-461">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-461">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-462">這個執行個體的目前值，轉換為 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-462">The current value of this instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-463">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-464">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-464">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-465">建議的替代方式是呼叫<xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-465">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-466">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-467">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-467">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-468">這個執行個體的目前值，轉換為 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-468">The current value of this instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-469">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-470">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-470">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-471">建議的替代方式是呼叫<xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-471">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-472">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-473">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-473">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-474">這個執行個體的目前值，已轉換成 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-474">The current value pf this instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-475">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-476">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-476">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-477">建議的替代方式是呼叫<xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-477">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="119a1-478">此 <see cref="T:System.UInt16" /> 值轉換所得的類型。</span><span class="sxs-lookup"><span data-stu-id="119a1-478">The type to which to convert this <see cref="T:System.UInt16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="119a1-479"><see cref="T:System.IFormatProvider" /> 實作，提供傳回值格式的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-479">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="119a1-480">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-480">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-481">這個執行個體的目前值，已轉換成 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-481">The current value of this instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-482">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-483">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-483">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-484">建議的替代方式是呼叫`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-484">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-485">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-486">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-486">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-487">這個執行個體的目前值，未變更。</span><span class="sxs-lookup"><span data-stu-id="119a1-487">The current value of this instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-488">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-488">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-489">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-489">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-490">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-490">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-491">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-491">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-492">這個執行個體的目前值，轉換為 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-492">The current value of this instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-493">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-493">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-494">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-494">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-495">建議的替代方式是呼叫<xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-495">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-496">這個參數已忽略。</span><span class="sxs-lookup"><span data-stu-id="119a1-496">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="119a1-497">如需這個成員的說明，請參閱 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-497">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="119a1-498">這個執行個體的目前值，轉換為 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-498">The current value of this instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-499">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="119a1-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="119a1-500">只有在 <xref:System.UInt16> 執行個體轉換成 <xref:System.IConvertible> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="119a1-500">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="119a1-501">建議的替代方式是呼叫<xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-501">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119a1-502">將這個執行個體的數值轉換為它的相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="119a1-502">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="119a1-503">將這個執行個體的數值轉換為它的相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="119a1-503">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="119a1-504">這個執行個體值的字串表示，由 0 到 9 的數字順序所組成，沒有正負號或為零的前置字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-504">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-505"><xref:System.UInt16.ToString>方法格式<xref:System.UInt16>預設值 （"G"或一般） 中的值使用的格式<xref:System.Globalization.NumberFormatInfo>目前文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-505">The <xref:System.UInt16.ToString> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="119a1-506">如果您想要指定不同的格式或文化特性，使用的其他多載<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="119a1-506">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="119a1-507">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="119a1-507">To use format</span></span>|<span data-ttu-id="119a1-508">文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-508">For culture</span></span>|<span data-ttu-id="119a1-509">使用的多載</span><span class="sxs-lookup"><span data-stu-id="119a1-509">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="119a1-510">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="119a1-510">Default ("G") format</span></span>|<span data-ttu-id="119a1-511">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-511">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="119a1-512">以特定格式</span><span class="sxs-lookup"><span data-stu-id="119a1-512">A specific format</span></span>|<span data-ttu-id="119a1-513">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-513">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="119a1-514">以特定格式</span><span class="sxs-lookup"><span data-stu-id="119a1-514">A specific format</span></span>|<span data-ttu-id="119a1-515">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-515">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="119a1-516">下列範例會顯示<xref:System.UInt16>使用預設值<xref:System.UInt16.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-516">The following example displays a <xref:System.UInt16> value by using the default <xref:System.UInt16.ToString> method.</span></span> <span data-ttu-id="119a1-517">它也會顯示的字串表示<xref:System.UInt16>使用某些標準格式規範產生的值。</span><span class="sxs-lookup"><span data-stu-id="119a1-517">It also displays the string representations of the <xref:System.UInt16> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="119a1-518">使用 EN-US 文化特性的格式化慣例來顯示範例。</span><span class="sxs-lookup"><span data-stu-id="119a1-518">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="119a1-519">物件，提供特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-519">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="119a1-520">使用指定的特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="119a1-520">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="119a1-521">這個執行個體值的字串表示，由 0 到 9 的數字順序所組成，沒有正負號或為零的前置字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-521">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-522"><xref:System.UInt16.ToString%28System.IFormatProvider%29>方法格式<xref:System.UInt16>預設值 （"G"或一般） 中的值使用的格式<xref:System.Globalization.NumberFormatInfo>指定文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-522">The <xref:System.UInt16.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="119a1-523">如果您想要指定不同的格式或目前的文化特性，使用的其他多載<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="119a1-523">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="119a1-524">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="119a1-524">To use format</span></span>|<span data-ttu-id="119a1-525">文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-525">For culture</span></span>|<span data-ttu-id="119a1-526">使用的多載</span><span class="sxs-lookup"><span data-stu-id="119a1-526">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="119a1-527">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="119a1-527">Default ("G") format</span></span>|<span data-ttu-id="119a1-528">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-528">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="119a1-529">以特定格式</span><span class="sxs-lookup"><span data-stu-id="119a1-529">A specific format</span></span>|<span data-ttu-id="119a1-530">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-530">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="119a1-531">以特定格式</span><span class="sxs-lookup"><span data-stu-id="119a1-531">A specific format</span></span>|<span data-ttu-id="119a1-532">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-532">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="119a1-533">`provider`參數是<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="119a1-533">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="119a1-534">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-534">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="119a1-535">不過，任何屬性的<xref:System.Globalization.NumberFormatInfo>可用時使用一般的數值格式規範 ("G") 格式。</span><span class="sxs-lookup"><span data-stu-id="119a1-535">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-536">下列範例使用數種格式提供者，包括個而異的文化特性來格式化 16 位元帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="119a1-536">The following example formats a 16-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="119a1-537">此範例的輸出說明所傳回的格式化的字串<xref:System.UInt16.ToString%28System.IFormatProvider%29>方法是相同的格式提供者。</span><span class="sxs-lookup"><span data-stu-id="119a1-537">The output from the example illustrates that the formatted string returned by the <xref:System.UInt16.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="119a1-538">數值格式字串。</span><span class="sxs-lookup"><span data-stu-id="119a1-538">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="119a1-539">使用指定的格式，將這個執行個體的數值轉換成它的相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="119a1-539">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="119a1-540">這個執行個體值的字串表示，如同 <paramref name="format" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="119a1-540">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-541"><xref:System.UInt16.ToString%28System.String%29>方法格式<xref:System.UInt16>中指定的格式，使用值<xref:System.Globalization.NumberFormatInfo>物件，代表目前的文化特性的慣例。</span><span class="sxs-lookup"><span data-stu-id="119a1-541">The <xref:System.UInt16.ToString%28System.String%29> method formats a <xref:System.UInt16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="119a1-542">如果您想要使用預設值 （"G"或一般） 格式或指定不同的文化特性，使用的其他多載<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="119a1-542">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="119a1-543">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="119a1-543">To use format</span></span>|<span data-ttu-id="119a1-544">文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-544">For culture</span></span>|<span data-ttu-id="119a1-545">使用的多載</span><span class="sxs-lookup"><span data-stu-id="119a1-545">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="119a1-546">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="119a1-546">Default ("G") format</span></span>|<span data-ttu-id="119a1-547">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-547">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="119a1-548">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="119a1-548">Default ("G") format</span></span>|<span data-ttu-id="119a1-549">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-549">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="119a1-550">以特定格式</span><span class="sxs-lookup"><span data-stu-id="119a1-550">A specific format</span></span>|<span data-ttu-id="119a1-551">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-551">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="119a1-552">`format`參數可以是任何有效[標準數值格式規範](~/docs/standard/base-types/standard-numeric-format-strings.md)，或任何組合[自訂數值格式規範](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-552">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="119a1-553">如果`format`等於<xref:System.String.Empty?displayProperty=nameWithType>或`null`，目前的傳回值<xref:System.UInt16>物件以一般格式規範格式化 ("G")。</span><span class="sxs-lookup"><span data-stu-id="119a1-553">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="119a1-554">如果`format`是任何其他值，則方法會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="119a1-554">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="119a1-555">.NET Framework 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="119a1-555">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="119a1-556">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-556">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="119a1-557">如需.NET Framework 中的格式化支援的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-557">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="119a1-558">傳回之字串的格式取決於<xref:System.Globalization.NumberFormatInfo>目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-558">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="119a1-559">取決於`format`參數，此物件控制符號，例如群組分隔符號和小數點符號，輸出字串中的。</span><span class="sxs-lookup"><span data-stu-id="119a1-559">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="119a1-560">若要提供目前的文化特性以外的文化特性格式資訊，請呼叫<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>多載。</span><span class="sxs-lookup"><span data-stu-id="119a1-560">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-561">下列範例會使用每個標準格式字串和一些自訂格式字串，以顯示 16 位元不帶正負號的整數值。</span><span class="sxs-lookup"><span data-stu-id="119a1-561">The following example displays a 16-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="119a1-562"><paramref name="format" /> 參數是無效的。</span><span class="sxs-lookup"><span data-stu-id="119a1-562">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="119a1-563">數值格式字串。</span><span class="sxs-lookup"><span data-stu-id="119a1-563">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="119a1-564">物件，提供特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-564">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="119a1-565">使用指定的格式和特定文化特性格式資訊，將這個執行個體的數值轉換成它的相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="119a1-565">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="119a1-566">這個執行個體值的字串表示，如同 <paramref name="format" /> 和 <paramref name="provider" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="119a1-566">The string representation of the value of this instance, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-567"><xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.UInt16>中指定的格式，使用值<xref:System.Globalization.NumberFormatInfo>指定文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-567">The <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="119a1-568">如果您想要使用預設格式或文化特性設定，請使用其他多載的<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="119a1-568">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="119a1-569">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="119a1-569">To use format</span></span>|<span data-ttu-id="119a1-570">文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-570">For culture</span></span>|<span data-ttu-id="119a1-571">使用的多載</span><span class="sxs-lookup"><span data-stu-id="119a1-571">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="119a1-572">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="119a1-572">Default ("G") format</span></span>|<span data-ttu-id="119a1-573">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-573">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="119a1-574">預設值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="119a1-574">Default ("G") format</span></span>|<span data-ttu-id="119a1-575">特定文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-575">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="119a1-576">以特定格式</span><span class="sxs-lookup"><span data-stu-id="119a1-576">A specific format</span></span>|<span data-ttu-id="119a1-577">預設值 （目前） 的文化特性</span><span class="sxs-lookup"><span data-stu-id="119a1-577">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
  
 <span data-ttu-id="119a1-578">`format`參數可以是任何有效[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或任何組合[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-578">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="119a1-579">如果`format`等於<xref:System.String.Empty?displayProperty=nameWithType>或`null`，目前的傳回值<xref:System.UInt16>物件以一般格式規範格式化 ("G")。</span><span class="sxs-lookup"><span data-stu-id="119a1-579">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="119a1-580">如果`format`是任何其他值，則方法會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="119a1-580">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="119a1-581">.NET Framework 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</span><span class="sxs-lookup"><span data-stu-id="119a1-581">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="119a1-582">如需有關數值格式規範的詳細資訊，請參閱[標準數值格式字串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自訂數值格式字串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-582">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="119a1-583">如需格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="119a1-583">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="119a1-584">`provider`參數是<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="119a1-584">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="119a1-585">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供這個方法所傳回的字串格式的相關特定文化特性資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-585">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="119a1-586">當<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>叫用方法時，它會呼叫`provider`參數的<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法並將其傳遞<xref:System.Type>物件，代表<xref:System.Globalization.NumberFormatInfo>型別。</span><span class="sxs-lookup"><span data-stu-id="119a1-586">When the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="119a1-587"><xref:System.IFormatProvider.GetFormat%2A>方法接著會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供資訊來格式化目前<xref:System.UInt16>值，例如群組分隔符號或小數點符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-587">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt16> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="119a1-588">若要使用的三種方式`provider`參數來提供格式設定資訊給<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>方法：</span><span class="sxs-lookup"><span data-stu-id="119a1-588">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="119a1-589">您可以傳遞<xref:System.Globalization.CultureInfo>代表的文化特性，提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-589">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="119a1-590">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供該文化特性的數值格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-590">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="119a1-591">您可以傳遞的實際<xref:System.Globalization.NumberFormatInfo>提供數值格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-591">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="119a1-592">(它的實作<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="119a1-592">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="119a1-593">您可以將自訂物件實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="119a1-593">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="119a1-594">其<xref:System.IFormatProvider.GetFormat%2A>方法具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-594">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="119a1-595">如果`provider`是`null`，傳回之字串的格式根據<xref:System.Globalization.NumberFormatInfo>目前文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-595">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-596">下列範例顯示使用標準數值格式規範和特定的數字的 16 位元不帶正負號的整數值<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-596">The following example displays a 16-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="119a1-597"><paramref name="format" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="119a1-597"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119a1-598">將數字的字串表示轉換成它的對等 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-598">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="119a1-599">傳回值會指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-599">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="119a1-600">字串，表示要轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-600">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="119a1-601">如果轉換成功，這個方法會傳回包含與 <c>s</c> 中內含數字相等的 16 位元不帶正負號整數，如果轉換失敗則為零。</span><span class="sxs-lookup"><span data-stu-id="119a1-601">When this method returns, contains the 16-bit unsigned integer value that is equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="119a1-602">如果 <c>s</c> 參數為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />，或者不是正確的格式，則轉換會失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-602">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in the correct format.</span></span> <span data-ttu-id="119a1-603">，或代表小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" /> 的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-603">, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="119a1-604">此參數會以未初始化的狀態來傳遞，並會覆寫任何原本在 <c>result</c> 中提供的值。</span><span class="sxs-lookup"><span data-stu-id="119a1-604">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="119a1-605">嘗試將數字的字串表示轉換為 16 位元不帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="119a1-605">Tries to convert the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="119a1-606">傳回值會指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-606">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="119a1-607">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-607"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-608"><xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29>方法就像<xref:System.UInt16.Parse%28System.String%29>方法，但是它不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-608">The <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="119a1-609">這個方法就不需要使用例外狀況處理來測試<xref:System.FormatException>如果`s`無效，無法成功剖析。</span><span class="sxs-lookup"><span data-stu-id="119a1-609">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="119a1-610">`s`參數應該是以下列形式的十進位數字的字串表示：</span><span class="sxs-lookup"><span data-stu-id="119a1-610">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="119a1-611">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-611">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="119a1-612">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-612">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="119a1-613">下表描述每個項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-613">The following table describes each element.</span></span>  
  
|<span data-ttu-id="119a1-614">元素</span><span class="sxs-lookup"><span data-stu-id="119a1-614">Element</span></span>|<span data-ttu-id="119a1-615">描述</span><span class="sxs-lookup"><span data-stu-id="119a1-615">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="119a1-616">*ws*</span><span class="sxs-lookup"><span data-stu-id="119a1-616">*ws*</span></span>|<span data-ttu-id="119a1-617">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-617">Optional white space.</span></span>|  
|<span data-ttu-id="119a1-618">*簽署*</span><span class="sxs-lookup"><span data-stu-id="119a1-618">*sign*</span></span>|<span data-ttu-id="119a1-619">選擇性的符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-619">An optional sign.</span></span> <span data-ttu-id="119a1-620">有效的符號字元由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>目前文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="119a1-620">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="119a1-621">*digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-621">*digits*</span></span>|<span data-ttu-id="119a1-622">範圍從 0 到 9 的十進位數字的序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-622">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="119a1-623">所指定的字串`s`參數不能包含任何群組分隔符號或小數分隔符號，而且不得有小數部分。</span><span class="sxs-lookup"><span data-stu-id="119a1-623">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="119a1-624">`s`參數會使用解譯<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="119a1-624">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="119a1-625">除了十進位數字，只允許前置和後端空格，有前置正負號。</span><span class="sxs-lookup"><span data-stu-id="119a1-625">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="119a1-626">若要明確地定義使用的文化特性特有格式設定資訊中可以存在的樣式項目`s`，呼叫<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-626">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method.</span></span>  
  
 <span data-ttu-id="119a1-627">`s`參數使用的格式設定資訊中會剖析<xref:System.Globalization.NumberFormatInfo>目前系統文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-627">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current system culture.</span></span> <span data-ttu-id="119a1-628">如需詳細資訊，請參閱<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="119a1-628">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="119a1-629">這個多載會解譯中的所有位數`s`參數做為十進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-629">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="119a1-630">若要剖析的十六進位數字的字串表示，呼叫<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>改為多載。</span><span class="sxs-lookup"><span data-stu-id="119a1-630">To parse the string representation of a hexadecimal number, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-631">下列範例會呼叫<xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29>針對字串陣列中每個項目執行一次的方法。</span><span class="sxs-lookup"><span data-stu-id="119a1-631">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="119a1-632">字串，表示要轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-632">A string that represents the number to convert.</span></span> <span data-ttu-id="119a1-633">這個字串使用 <c>style</c> 參數指定的樣式來解譯。</span><span class="sxs-lookup"><span data-stu-id="119a1-633">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="119a1-634">列舉值的位元組合，表示允許的 <c>s</c> 格式。</span><span class="sxs-lookup"><span data-stu-id="119a1-634">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="119a1-635">一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-635">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="119a1-636">物件，提供關於 <c>s</c> 的文化特性特定格式資訊。</span><span class="sxs-lookup"><span data-stu-id="119a1-636">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="119a1-637">如果轉換成功，這個方法會傳回包含與 <c>s</c> 中內含數字相等的 16 位元不帶正負號整數，如果轉換失敗則為零。</span><span class="sxs-lookup"><span data-stu-id="119a1-637">When this method returns, contains the 16-bit unsigned integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="119a1-638">轉換失敗的狀況包括：<c>s</c> 參數為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式與「樣式」<c></c>不相容，或是表示的數字小於 <see cref="F:System.UInt16.MinValue" /> 或大於 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-638">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="119a1-639">此參數會以未初始化的狀態來傳遞，並會覆寫任何原本在 <c>result</c> 中提供的值。</span><span class="sxs-lookup"><span data-stu-id="119a1-639">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="119a1-640">嘗試將指定之樣式及特定文化特性格式資訊數字的字串表示，轉換為它的 16 位元不帶正負號的整數對應項。</span><span class="sxs-lookup"><span data-stu-id="119a1-640">Tries to convert the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="119a1-641">傳回值會指出轉換成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-641">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="119a1-642">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="119a1-642"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119a1-643"><xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>方法就像<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，但是它不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-643">The <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="119a1-644">這個方法就不需要使用例外狀況處理來測試<xref:System.FormatException>如果`s`無效，無法順利剖析...</span><span class="sxs-lookup"><span data-stu-id="119a1-644">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully..</span></span>  
  
 <span data-ttu-id="119a1-645">`style`參數定義中允許的樣式項目 （例如空白字元或正或負號）`s`剖析作業成功的參數。</span><span class="sxs-lookup"><span data-stu-id="119a1-645">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="119a1-646">它必須從位元旗標的組合<xref:System.Globalization.NumberStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="119a1-646">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="119a1-647">值而定`style`、`s`參數可以包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="119a1-647">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="119a1-648">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-648">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="119a1-649">在方括號 （[和]） 是選擇性的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-649">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="119a1-650">或者，如果`style`參數包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier>、`s`參數可以包含下列項目：</span><span class="sxs-lookup"><span data-stu-id="119a1-650">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="119a1-651">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="119a1-651">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="119a1-652">下表描述每個項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-652">The following table describes each element.</span></span>  
  
 <span data-ttu-id="119a1-653">*ws*</span><span class="sxs-lookup"><span data-stu-id="119a1-653">*ws*</span></span>  
 <span data-ttu-id="119a1-654">選擇性的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="119a1-654">Optional white space.</span></span> <span data-ttu-id="119a1-655">空白字元可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>旗標，或結尾處`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-655">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>  
  
 *$*  
 <span data-ttu-id="119a1-656">特定文化特性的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-656">A culture-specific currency symbol.</span></span> <span data-ttu-id="119a1-657">在字串中的位置由定義<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>屬性<xref:System.Globalization.NumberFormatInfo>所傳回物件<xref:System.IFormatProvider.GetFormat%2A>方法`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="119a1-657">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="119a1-658">貨幣符號可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-658">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="119a1-659">*簽署*</span><span class="sxs-lookup"><span data-stu-id="119a1-659">*sign*</span></span>  
 <span data-ttu-id="119a1-660">選擇性的符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-660">An optional sign.</span></span> <span data-ttu-id="119a1-661">符號可以出現在開頭`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>旗標，而且可以出現在結尾`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-661">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="119a1-662">括號可用於`s`來表示負數的值，如果`style`包含<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-662">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="119a1-663">不過，如果負號存在，`s`只能表示剖析作業成功的零值。</span><span class="sxs-lookup"><span data-stu-id="119a1-663">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>  
  
 <span data-ttu-id="119a1-664">*digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-664">*digits*</span></span>  
 <span data-ttu-id="119a1-665">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-665">A sequence of digits from 0 through 9.</span></span>  
  
 <span data-ttu-id="119a1-666">*、*</span><span class="sxs-lookup"><span data-stu-id="119a1-666">*,*</span></span>  
 <span data-ttu-id="119a1-667">特定文化特性的群組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-667">A culture-specific group separator.</span></span> <span data-ttu-id="119a1-668">所指定的文化特性的群組分隔符號`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-668">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="119a1-669">*.*</span><span class="sxs-lookup"><span data-stu-id="119a1-669">*.*</span></span>  
 <span data-ttu-id="119a1-670">特定文化特性的小數點符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-670">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="119a1-671">所指定的文化特性的小數點符號`provider`可以出現在`s`如果`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-671">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="119a1-672">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-672">*fractional_digits*</span></span>  
 <span data-ttu-id="119a1-673">數字 0 的一或多個項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-673">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="119a1-674">小數點後數字才會出現在`s`才`style`包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-674">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="119a1-675">E</span><span class="sxs-lookup"><span data-stu-id="119a1-675">E</span></span>  
 <span data-ttu-id="119a1-676">"E"或者"E"字元，表示此值會表示指數 （科學記號） 表示法。</span><span class="sxs-lookup"><span data-stu-id="119a1-676">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="119a1-677">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-677">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="119a1-678">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="119a1-678">*exponential_digits*</span></span>  
 <span data-ttu-id="119a1-679">從 0 到 9 的數字序列。</span><span class="sxs-lookup"><span data-stu-id="119a1-679">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="119a1-680">`s`參數可代表指數標記法之數字，如果`style`包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="119a1-680">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="119a1-681">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="119a1-681">*hexdigits*</span></span>  
 <span data-ttu-id="119a1-682">從 0 到 f 或 0 到 f 的十六進位數字的序列</span><span class="sxs-lookup"><span data-stu-id="119a1-682">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>  
  
 <span data-ttu-id="119a1-683">十進位數字的字串 (對應於<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>旗標) 一律會成功剖析。</span><span class="sxs-lookup"><span data-stu-id="119a1-683">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="119a1-684">在其餘的大部分<xref:System.Globalization.NumberStyles>成員控制可能存在，但不一定要在此輸入字串中出現的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-684">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="119a1-685">下表指出如何個別<xref:System.Globalization.NumberStyles>成員會影響的項目可能會出現在`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-685">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="119a1-686">非複合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="119a1-686">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="119a1-687">除了數字的值中允許的項目</span><span class="sxs-lookup"><span data-stu-id="119a1-687">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="119a1-688">只有十進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-688">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="119a1-689">小數點 (*。*) 和*fractional_digits*項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-689">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="119a1-690">不過， *fractional_digits*必須包含只需要一個或多個 0 的數字或方法傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="119a1-690">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="119a1-691">"E"或"E"字元，表示指數標記法，連同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="119a1-691">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="119a1-692">如果`s`代表一個數字以指數標記法，它不能有非零的小數的元件。</span><span class="sxs-lookup"><span data-stu-id="119a1-692">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="119a1-693">*Ws*開頭的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-693">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="119a1-694">*Ws*結尾處的項目`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-694">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="119a1-695">*登*之前的項目*位數*。</span><span class="sxs-lookup"><span data-stu-id="119a1-695">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="119a1-696">*登*之後的項目*位數*。</span><span class="sxs-lookup"><span data-stu-id="119a1-696">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="119a1-697">*登*括住的零數值的形式的項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-697">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="119a1-698">群組分隔符號 (*，*) 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-698">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="119a1-699">貨幣 (*$*) 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-699">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="119a1-700">所有項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-700">All elements.</span></span> <span data-ttu-id="119a1-701">不過，`s`無法表示的十六進位數字或指數標記法之數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-701">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="119a1-702">*Ws*開頭或結尾的項目`s`，*登*開頭`s`，並在小數點 (*。*) 符號。</span><span class="sxs-lookup"><span data-stu-id="119a1-702">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="119a1-703">`s`參數也可以使用指數標記法。</span><span class="sxs-lookup"><span data-stu-id="119a1-703">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="119a1-704">*Ws*，*登*、 群組分隔符號 (*，*)，和小數點 (*。*) 項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-704">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="119a1-705">所有項目。</span><span class="sxs-lookup"><span data-stu-id="119a1-705">All elements.</span></span> <span data-ttu-id="119a1-706">不過，`s`無法表示的十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-706">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="119a1-707">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用旗標，`s`必須是十六進位值。</span><span class="sxs-lookup"><span data-stu-id="119a1-707">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="119a1-708">有效的十六進位數字是 0 到 9，a 到 f，以及 A 到 f。例如"0x"前置詞不支援，並造成剖析作業失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-708">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="119a1-709">只有其他旗標中可以存在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="119a1-709">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="119a1-710">(<xref:System.Globalization.NumberStyles>列舉型別的複合樣式<xref:System.Globalization.NumberStyles.HexNumber>，其中包含這兩個空格旗標。)</span><span class="sxs-lookup"><span data-stu-id="119a1-710">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119a1-711">如果`s`的字串表示法的十六進位數字，它無法前面的任何裝飾 (例如`0x`或`&h`)，區隔其十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="119a1-711">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="119a1-712">這會導致轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="119a1-712">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="119a1-713">`provider`參數是<xref:System.IFormatProvider>實作。</span><span class="sxs-lookup"><span data-stu-id="119a1-713">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="119a1-714">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>物件，提供特定文化特性格式資訊`s`。</span><span class="sxs-lookup"><span data-stu-id="119a1-714">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="119a1-715">`provider`參數可以是下列任何一個：</span><span class="sxs-lookup"><span data-stu-id="119a1-715">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="119a1-716">A<xref:System.Globalization.CultureInfo>代表的文化特性，提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-716">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="119a1-717">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法會傳回<xref:System.Globalization.NumberFormatInfo>提供該文化特性的數值格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-717">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="119a1-718">A<xref:System.Globalization.NumberFormatInfo>提供數值格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-718">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="119a1-719">(它的實作<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>只會傳回本身。)</span><span class="sxs-lookup"><span data-stu-id="119a1-719">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="119a1-720">自訂物件實作<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="119a1-720">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="119a1-721">其<xref:System.IFormatProvider.GetFormat%2A>方法具現化，並傳回<xref:System.Globalization.NumberFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="119a1-721">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="119a1-722">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>物件會使用目前文化特性。</span><span class="sxs-lookup"><span data-stu-id="119a1-722">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119a1-723">下列範例會呼叫<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>方法的不同字串數目和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="119a1-723">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119a1-724"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="119a1-724"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="119a1-725">-或-</span><span class="sxs-lookup"><span data-stu-id="119a1-725">-or-</span></span>  
  
 <span data-ttu-id="119a1-726"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的組合。</span><span class="sxs-lookup"><span data-stu-id="119a1-726"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>