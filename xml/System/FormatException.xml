<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FormatException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5041fd4b21ce035beb017a4f1a02285a70f983f8c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">041fd4b21ce035beb017a4f1a02285a70f983f8c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.FormatException">
          <source>The exception that is thrown when the format of an argument is invalid, or when a <bpt id="p1">[</bpt>composite format string<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> is not well formed.</source>
          <target state="translated">引數格式無效或<bpt id="p1">[</bpt>複合格式字串<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>格式不正確時所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception can be thrown for one of the following reasons:</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>可以擲回例外狀況，其中一個原因如下：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In a call to a method that converts a string to some other data type, the string doesn't conform to the required pattern.</source>
          <target state="translated">在將字串轉換成其他資料類型的方法呼叫中，字串不符合所需的模式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This typically occurs when calling some methods of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class and the <ph id="ph2">`Parse`</ph> and <ph id="ph3">`ParseExact`</ph> methods of some types.</source>
          <target state="translated">這通常發生在呼叫的一些方法<ph id="ph1">&lt;xref:System.Convert&gt;</ph>類別和<ph id="ph2">`Parse`</ph>和<ph id="ph3">`ParseExact`</ph>某些類型的方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In most cases, particularly if the string that you're converting is input by a user or read from a file, you should use a <ph id="ph1">`try/catch`</ph> block and handle the <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> exception if the conversion is unsuccessful.</source>
          <target state="translated">在大部分情況下，特別是當您要轉換的字串是由使用者輸入或從檔案讀取，您應該使用<ph id="ph1">`try/catch`</ph>封鎖及處理<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>如果轉換失敗的例外狀況。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>You can also replace the call to the conversion method with a call to a <ph id="ph1">`TryParse`</ph> or <ph id="ph2">`TryParseExact`</ph> method, if one exists.</source>
          <target state="translated">您也可以使用的呼叫取代轉換方法的呼叫<ph id="ph1">`TryParse`</ph>或<ph id="ph2">`TryParseExact`</ph>方法，如果有的話。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>However, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception that is thrown when you're trying to parse a predefined or hard-coded string indicates a program error.</source>
          <target state="translated">不過，<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>您正嘗試將預先定義或硬式編碼的字串剖析時，會擲回的例外狀況表示程式錯誤。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In this case, you should correct the error rather than handle the exception.</source>
          <target state="translated">在此情況下，您應該更正錯誤而處理例外狀況。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The conversion of a string to the following types in the <ph id="ph1">&lt;xref:System&gt;</ph> namespace can throw a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> exception:</source>
          <target state="translated">中的下列類型的字串轉換<ph id="ph1">&lt;xref:System&gt;</ph>命名空間可以擲回<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>例外狀況：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType&gt;</ph> methods require the string to be converted to be "True", "true", "False", or "false".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType&gt;</ph>方法都需要字串，以將其轉換為"True"，"true"、"False"false"。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Any other value throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception.</source>
          <target state="translated">任何其他值會擲回<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 和 <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>All date and time data is interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</source>
          <target state="translated">所有日期和時間資料會都解譯為根據的特定文化特性的格式化慣例： 可能是目前的執行緒文化特性 （或在某些情況下，目前的應用程式網域文化特性），而異的文化特性或指定的文化特性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>When you call the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph> methods, date and time data must also conform <bpt id="p1">*</bpt>exactly<ept id="p1">*</ept> to a pattern specified by one or more <bpt id="p2">[</bpt>standard format strings<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> or <bpt id="p3">[</bpt>custom format strings<ept id="p3">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> that are provided as arguments in the method call.</source>
          <target state="translated">當您呼叫<ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph>方法，也必須符合日期和時間資料<bpt id="p1">*</bpt>完全<ept id="p1">*</ept>指定一或多個模式<bpt id="p2">[</bpt>標準格式字串<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>或<bpt id="p3">[</bpt>自訂格式字串<ept id="p3">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>做為方法呼叫中引數所提供的。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>If it doesn't conform to an expected culture-specific pattern, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception is thrown.</source>
          <target state="translated">如果不符合預期的特定文化特性的模式，<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This means that date and time data saved in a culture-specific format on one system might not parse successfully on another system.</source>
          <target state="translated">這表示，一個系統上儲存之文化特性特定格式的日期和時間資料可能會無法成功剖析另一個系統上。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information about parsing dates and times, see <bpt id="p1">[</bpt>Parsing Date and Time Strings<ept id="p1">](~/docs/standard/base-types/parsing-datetime.md)</ept> and the documentation for the method that threw the exception.</source>
          <target state="translated">如需剖析日期和時間的詳細資訊，請參閱<bpt id="p1">[</bpt>剖析日期和時間字串<ept id="p1">](~/docs/standard/base-types/parsing-datetime.md)</ept>和擲回例外狀況之方法的文件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><bpt id="p1">**</bpt>GUIDs.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>GUIDs.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The string representation of a GUID must consist of 32 hexadecimal digits (0-F), and must be in one of the five formats output by the <ph id="ph1">&lt;xref:System.Guid.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">GUID 的字串表示法必須包含 32 十六進位數字 (0-F)，而且必須在所輸出的五個格式的其中一個<ph id="ph1">&lt;xref:System.Guid.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><bpt id="p1">**</bpt>Numeric types, including all signed integers, unsigned integers, and floating-point types.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>數值類型，包括所有帶正負號的整數、 不帶正負號的整數和浮點類型。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The string to be parsed must consist of the Latin digits 0-9.</source>
          <target state="translated">要剖析的字串必須包含拉丁文數字 0-9。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A positive or negative sign, decimal separator, group separators, and currency symbol may also be permitted.</source>
          <target state="translated">正或負號、 小數點、 群組分隔符號和貨幣符號也可能會允許。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Trying to parse a string that contains any other character always throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception.</source>
          <target state="translated">嘗試剖析字串，包含任何其他字元一律會擲回<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>All numeric strings are interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</source>
          <target state="translated">所有的數值字串都會解譯為根據的特定文化特性的格式化慣例： 可能是目前的執行緒文化特性 （或在某些情況下，目前的應用程式網域文化特性），而異的文化特性或指定的文化特性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>As a result, a numeric string that is parsed by using the conventions of one culture might fail when using the conventions of another.</source>
          <target state="translated">如此一來，使用另一個慣例時，可能會失敗數字的字串剖析使用一個文化特性的慣例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information about parsing numeric strings, see <bpt id="p1">[</bpt>Parsing Numeric Strings<ept id="p1">](~/docs/standard/base-types/parsing-numeric.md)</ept> and the documentation for the specific method that threw the exception.</source>
          <target state="translated">如需剖析數值字串的詳細資訊，請參閱<bpt id="p1">[</bpt>剖析數值字串<ept id="p1">](~/docs/standard/base-types/parsing-numeric.md)</ept>和擲回例外狀況的特定方法的文件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><bpt id="p1">**</bpt>Time intervals.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>時間間隔。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The string to be parsed must be either in fixed culture-insensitive format or in a culture-sensitive format defined by the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</source>
          <target state="translated">要剖析的字串必須是固定的不區分文化特性格式，或由目前執行緒文化特性 （或定義，在某些情況下，目前的應用程式網域文化特性），以區分文化特性的格式而異的文化特性或指定的文化特性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>If the string isn't in an appropriate format, or if, at the minimum, the days, hours, and minutes components of the time interval aren't present, the parsing method throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception.</source>
          <target state="translated">如果字串不處於適當的格式或如果，在最小值、 天、 小時、 分鐘的時間間隔的元件不存在於，剖析方法會擲回<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information, see the documentation for the <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> parsing method that threw the exception.</source>
          <target state="translated">如需詳細資訊，請參閱文件<ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>剖析方法擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A type implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, which supports format strings that define how an object is converted to its string representation, and an invalid format string is used.</source>
          <target state="translated">型別實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，可支援定義物件如何轉換成它的字串表示的格式字串，而且是格式字串無效。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This is most common in a formatting operation.</source>
          <target state="translated">這是在格式化作業中最常見。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In the following example, the "Q" standard format string is used in a composite format string to format a number.</source>
          <target state="translated">在下列範例中，"Q"標準格式字串用於複合格式字串來格式化數字。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>However, "Q" is not a valid <bpt id="p1">[</bpt>standard format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
          <target state="translated">不過，不是有效"Q"<bpt id="p1">[</bpt>標準格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This exception results from a coding error.</source>
          <target state="translated">從程式碼的錯誤會產生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct the error, either remove the format string or substitute a valid one.</source>
          <target state="translated">若要更正錯誤，請移除格式字串，或取代無效。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following example corrects the error by replacing the invalid format string with the "C" (currency) format string.</source>
          <target state="translated">下列範例會更正錯誤，無效的格式字串取代為"C"（貨幣） 格式字串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception can also be thrown by parsing methods, such as <ph id="ph2">&lt;xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Guid.ParseExact%2A?displayProperty=nameWithType&gt;</ph>, that require the string to be parsed to conform exactly to the pattern specified by a format string.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>例外狀況也會藉由剖析方法，例如擲回<ph id="ph2">&lt;xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Guid.ParseExact%2A?displayProperty=nameWithType&gt;</ph>，需要加以剖析才能完全符合指定的格式字串的模式字串。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In the following example, the string representation of a GUID is expected to conform to the pattern specified by the "G" standard format string.</source>
          <target state="translated">在下列範例中，GUID 的字串表示法必須符合"G"標準格式字串所指定的模式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>However, the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> structure's implementation of <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> does not support the "G" format string.</source>
          <target state="translated">不過，<ph id="ph1">&lt;xref:System.Guid&gt;</ph>結構的實作<ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>不支援"G"格式字串。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This exception also results from a coding error.</source>
          <target state="translated">這個例外狀況也會產生從程式碼的錯誤。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct it, call a parsing method that doesn’t require a precise format, such as <ph id="ph1">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph>, or substitute a valid format string.</source>
          <target state="translated">若要更正它，呼叫剖析方法時，不需要精確的格式，例如<ph id="ph1">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph>，或取代有效的格式字串。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following example corrects the error by calling the <ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">下列範例會藉由呼叫修正錯誤<ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>One or more of the indexes of the format items in a <bpt id="p1">[</bpt>composite format string<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> is greater than the indexes of the items in the object list or parameter array.</source>
          <target state="translated">一或多個格式項目中的索引<bpt id="p1">[</bpt>複合格式字串<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>大於物件的清單或參數陣列中項目的索引。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In the following example, the largest index of a format item in the format string is 3.</source>
          <target state="translated">在下列範例中，格式字串中的格式項目的最大索引為 3。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Because the indexes of items in the object list are zero-based, this format string would require the object list to have four items.</source>
          <target state="translated">物件清單中項目的索引是以零起始，因為此格式字串需要物件清單，有四個項目。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Instead, it has only three, <ph id="ph1">`dat`</ph>, <ph id="ph2">`temp`</ph>, and <ph id="ph3">`scale`</ph>, so the code results in a <ph id="ph4">&lt;xref:System.FormatException&gt;</ph> exception at run time:.</source>
          <target state="translated">相反地，它必須只有三個， <ph id="ph1">`dat`</ph>， <ph id="ph2">`temp`</ph>，和<ph id="ph3">`scale`</ph>，因此程式碼會產生<ph id="ph4">&lt;xref:System.FormatException&gt;</ph>在執行階段的例外狀況:。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In this case, the <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception is a result of developer error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>例外狀況是開發人員錯誤的結果。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>It should be corrected rather than handled in a <ph id="ph1">`try/catch`</ph> block by making sure that each item in the object list corresponds to the index of a format item.</source>
          <target state="translated">它應該已更正，而在處理<ph id="ph1">`try/catch`</ph>區塊，藉由確定在 [物件] 清單中的每個項目對應至格式項目的索引。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct this example, change the index of the second format item to refer to the <ph id="ph1">`dat`</ph> variable, and decrement the index of each subsequent format item by one.</source>
          <target state="translated">若要更正此範例中，變更要參考之第二個格式項目的索引<ph id="ph1">`dat`</ph>變數，並遞減一每個後續的格式項目的索引。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The composite format string isn't well-formed.</source>
          <target state="translated">複合格式字串的格式不正確。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception is always a result of developer error.</source>
          <target state="translated">當發生這種情況時，<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>例外狀況一律是開發人員錯誤的結果。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>It should be corrected rather than handled in a <ph id="ph1">`try/catch`</ph> block.</source>
          <target state="translated">它應該已更正，而在處理<ph id="ph1">`try/catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Trying to include literal braces in a string, as the following example does, will throw the exception.</source>
          <target state="translated">嘗試在字串中，包含常值的大括號，如下列範例不，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The recommended technique for including literal braces in a composite format string is to include them in the object list and use format items to insert them into the result string.</source>
          <target state="translated">複合格式字串中包括常值的大括號的建議的技術是將它們包含在物件清單，並使用插入結果字串的格式項目。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For example, you can modify the previous composite format string as shown here.</source>
          <target state="translated">例如，您可以修改先前的複合格式字串，如下所示。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The exception is also thrown if your format string contains a typo.</source>
          <target state="translated">如果格式字串包含拼字錯誤，也會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following call to the <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> method omits a closing brace and pairs an opening brace with a closing bracket.</source>
          <target state="translated">下列呼叫<ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>方法省略右括號，然後配對的右括號與左大括號。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct the error, ensure that all opening and closing braces correspond.</source>
          <target state="translated">若要更正這個錯誤，請確定所有左右大括號對應。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>You've supplied the object list in a composite formatting method as a strongly typed parameter array, and the <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception indicates that the index of one or more format items exceeds the number of arguments in the object list.</source>
          <target state="translated">您提供了 [物件] 清單中的複合格式方法，為強型別的參數陣列，而<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>例外狀況表示的一或多個格式項目索引超出物件清單中的引數數目。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This occurs because no explicit conversion between array types exists, so instead the compiler treats the array as a single argument rather than as a parameter array.</source>
          <target state="translated">這是因為沒有陣列型別之間的明確轉換存在，而編譯器會將陣列做為單一引數，而不是參數陣列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For example, the following call to the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> exception, although the highest index of the format items is 3, and the parameter array of type <ph id="ph3">&lt;xref:System.Int32&gt;</ph> has four elements.</source>
          <target state="translated">例如，下列呼叫<ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法會擲回<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>例外狀況，雖然最高的格式項目的索引是 3，且型別參數陣列<ph id="ph3">&lt;xref:System.Int32&gt;</ph>有四個項目。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Instead of handling this exception, you should eliminate its cause.</source>
          <target state="translated">而不是處理此例外狀況，您應該會排除其原因。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Because neither Visual Basic nor C# can convert an integer array to an object array, you have to perform the conversion yourself before calling the composite formatting method.</source>
          <target state="translated">Visual Basic 或 C# 都不可以轉換成物件陣列的整數陣列，所以您必須自行執行轉換，然後再呼叫複合格式方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following example provides one implementation.</source>
          <target state="translated">下列範例提供一個實作。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><ph id="ph1">&lt;xref:System.FormatException&gt;</ph> uses the HRESULT COR_E_FORMAT, which has the value 0x80131537.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 會使用 HRESULT COR_E_FORMAT，0x80131537 的值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> class derives from  <ph id="ph2">&lt;xref:System.Exception&gt;</ph> and adds no unique members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.FormatException&gt;</ph>類別衍生自<ph id="ph2">&lt;xref:System.Exception&gt;</ph>，並將任何唯一的成員。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.FormatException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">如需執行個體的初始屬性值的清單<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>，請參閱<ph id="ph2">&lt;xref:System.FormatException.%23ctor%2A&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.FormatException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Invalid format."</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>屬性的新執行個體的系統提供的訊息描述錯誤，例如 「 無效的格式 」。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此訊息會考量目前的系統文化特性。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">當地語系化的錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">使用指定的錯誤訊息，初始化 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>屬性的新的例外狀況使用<ph id="ph2">`message`</ph>參數。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 的內容必須能讓人了解。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 參考 (在 Visual Basic 中為 <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">存放序列物件資料的物件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">關於來源或目的端的內容資訊。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解釋例外狀況原因的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 參數不是 Null 參考 (在 Visual Basic 中為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)，則會在處理內部例外狀況的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 區塊中引發目前的例外狀況。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性中包含對前一個例外狀況的參考。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 屬性會傳回與傳入建構函式中相同的值；如果 <ph id="ph2">`Nothing`</ph> 屬性不提供內部例外值給建構函式，則傳回 null 參考 (在 Visual Basic 中為 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">下表顯示 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 執行個體的初始屬性值。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">屬性</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">內部例外狀況參考。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">錯誤訊息字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>