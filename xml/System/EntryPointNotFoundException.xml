<Type Name="EntryPointNotFoundException" FullName="System.EntryPointNotFoundException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b4bddb4be0b812c299618fbfe1380d4ff8b17db" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37728929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" />
  <TypeSignature Language="DocId" Value="T:System.EntryPointNotFoundException" />
  <TypeSignature Language="VB.NET" Value="Public Class EntryPointNotFoundException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type EntryPointNotFoundException = class&#xA;    inherit TypeLoadException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3776c-101">當試著載入類別卻因沒有進入方法而告失敗時，所擲回的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3776c-101">The exception that is thrown when an attempt to load a class fails due to the absence of an entry method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3776c-102"><xref:System.EntryPointNotFoundException> Common language runtime 無法載入組件，因為無法識別組件的進入點時，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3776c-102">An <xref:System.EntryPointNotFoundException> exception is thrown when the common language runtime is unable to load an assembly because it cannot identify the assembly's entry point.</span></span>  <span data-ttu-id="3776c-103">在下列情況下，可能會擲回這個例外狀況：</span><span class="sxs-lookup"><span data-stu-id="3776c-103">This exception can be thrown under the following conditions:</span></span>  
  
-   <span data-ttu-id="3776c-104">Common language runtime 會找不到應用程式進入點 (通常`Main`方法) 的可執行檔的組件中。</span><span class="sxs-lookup"><span data-stu-id="3776c-104">The common language runtime is unable to locate an application entry point (typically a `Main` method) in an executable assembly.</span></span> <span data-ttu-id="3776c-105">應用程式進入點必須是全域或`static`具有無參數或字串陣列做為其唯一參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3776c-105">The application entry point must be a global or `static` method that has either no parameters or a string array as its only parameter.</span></span> <span data-ttu-id="3776c-106">可以傳回的進入點`void`，或它可能會傳回<xref:System.Int32>或<xref:System.UInt32>結束代碼。</span><span class="sxs-lookup"><span data-stu-id="3776c-106">The entry point can return `void`, or it can return an <xref:System.Int32> or <xref:System.UInt32> exit code.</span></span> <span data-ttu-id="3776c-107">應用程式組件不能定義一個以上的進入點。</span><span class="sxs-lookup"><span data-stu-id="3776c-107">An application assembly cannot define more than one entry point.</span></span>  
  
-   <span data-ttu-id="3776c-108">無法解析 Windows DLL 中的函式呼叫，因為找不到函式。</span><span class="sxs-lookup"><span data-stu-id="3776c-108">The call to a function in a Windows DLL cannot be resolved because the function cannot be found.</span></span> <span data-ttu-id="3776c-109">在下列範例中，<xref:System.EntryPointNotFoundException>因為 User32.dll 中並未包含名為函式擲回例外狀況`GetMyNumber`。</span><span class="sxs-lookup"><span data-stu-id="3776c-109">In the following example, an <xref:System.EntryPointNotFoundException> exception is thrown because User32.dll does not include a function named `GetMyNumber`.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/nofunction1.cs#1)]
     [!code-vb[System.EntryPointNotFoundException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/nofunction1.vb#1)]  
  
-   <span data-ttu-id="3776c-110">無法解析 Windows DLL 中的函式呼叫，因為在方法呼叫中所使用的名稱與組件中找到的名稱不相符。</span><span class="sxs-lookup"><span data-stu-id="3776c-110">The call to a function in a Windows DLL cannot be resolved because the name used in the method call does not match a name found in the assembly.</span></span> <span data-ttu-id="3776c-111">通常，這是因為<xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType>欄位會以隱含或明確設定為`true`、 呼叫的方法包含一個或多個字串參數，而且為 ANSI 和 Unicode 版本和方法呼叫中使用的名稱則否對應至這個 ANSI 或 Unicode 版本的名稱。</span><span class="sxs-lookup"><span data-stu-id="3776c-111">Frequently, this occurs because the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> field is either implicitly or explicitly set to `true`, the called method includes one or more string parameters and has both an ANSI and a Unicode version, and the name used in the method call does not correspond to the name of this ANSI or Unicode version.</span></span> <span data-ttu-id="3776c-112">下列範例將進行示範，嘗試呼叫 Windows`MessageBox`在 User32.dll 中的函式。</span><span class="sxs-lookup"><span data-stu-id="3776c-112">The following example provides an illustration by attempting to call the Windows `MessageBox` function in User32.dll.</span></span> <span data-ttu-id="3776c-113">因為第一個方法定義會指定<xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>字串封送處理，常用的語言尋找函式，寬字元版本`MessageBoxW`，而不是在方法呼叫時，所使用的名稱`MessageBox`。</span><span class="sxs-lookup"><span data-stu-id="3776c-113">Because the first method definition specifies <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> for string marshaling, the common language looks for the wide-character version of the function, `MessageBoxW`, instead of the name used in the method call, `MessageBox`.</span></span>  <span data-ttu-id="3776c-114">第二個方法定義修正此問題，藉由呼叫`MessageBoxW`而不是`MessageBox`函式。</span><span class="sxs-lookup"><span data-stu-id="3776c-114">The second method definition corrects this problem by calling the `MessageBoxW` instead of the `MessageBox` function.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/badcall1.cs#2)]
     [!code-vb[System.EntryPointNotFoundException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/badcall1.vb#2)]  
  
-   <span data-ttu-id="3776c-115">您嘗試在動態連結程式庫中呼叫函式，其簡單的名稱，而不是其裝飾的名稱。</span><span class="sxs-lookup"><span data-stu-id="3776c-115">You are trying to call a function in a dynamic link library by its simple name rather than its decorated name.</span></span> <span data-ttu-id="3776c-116">一般而言，c + + 編譯器會產生 DLL 函式的裝飾的名稱。</span><span class="sxs-lookup"><span data-stu-id="3776c-116">Typically, the C++ compiler generates a decorated name for DLL functions.</span></span> <span data-ttu-id="3776c-117">例如，下列 c + + 程式碼會定義名為函式`Double`名為 TestDll.dll 文件庫中。</span><span class="sxs-lookup"><span data-stu-id="3776c-117">For example, the following C++ code defines a function named `Double` in a library named TestDll.dll.</span></span>  
  
     [!code-cpp[System.EntryPointNotFoundException.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cpp/testdll.cpp#6)]  
  
     <span data-ttu-id="3776c-118">下列範例中的程式碼嘗試呼叫函式中，當<xref:System.EntryPointNotFoundException>會擲回例外狀況，因為`Double`找不到函式。</span><span class="sxs-lookup"><span data-stu-id="3776c-118">When the code in the following example tries to call the function, an <xref:System.EntryPointNotFoundException> exception is thrown because the `Double` function cannot be found.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle1.cs#7)]
     [!code-vb[System.EntryPointNotFoundException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle1.vb#7)]  
  
     <span data-ttu-id="3776c-119">不過，如果呼叫的函式是使用裝飾的名稱 (在此情況下， `?Double@@YAHH@Z`)，函式呼叫成功，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="3776c-119">However, if the function is called by using its decorated name (in this case, `?Double@@YAHH@Z`), the function call succeeds, as the following example shows.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle2.cs#8)]
     [!code-vb[System.EntryPointNotFoundException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle2.vb#8)]  
  
     <span data-ttu-id="3776c-120">您可以找到使用 Dumpbin.exe 等公用程式 dll 匯出的函式的裝飾的名稱。</span><span class="sxs-lookup"><span data-stu-id="3776c-120">You can find the decorated names of functions exported by a DLL by using a utility such as Dumpbin.exe.</span></span>  
  
-   <span data-ttu-id="3776c-121">您嘗試呼叫至 managed 組件的方法，如同它是 unmanaged 動態連結程式庫。</span><span class="sxs-lookup"><span data-stu-id="3776c-121">You are attempting to call a method in a managed assembly as if it were an unmanaged dynamic link library.</span></span> <span data-ttu-id="3776c-122">若要查看此動作，請編譯至名為 StringUtilities.dll 組件的下列範例。</span><span class="sxs-lookup"><span data-stu-id="3776c-122">To see this in action, compile the following example to an assembly named StringUtilities.dll.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/stringutilities.cs#3)]
     [!code-vb[System.EntryPointNotFoundException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/stringutilities.vb#3)]  
  
     <span data-ttu-id="3776c-123">然後編譯並執行下列的範例中，嘗試呼叫`StringUtilities.SayGoodMorning`StringUtilities.dll 動態連結程式庫中的方法一樣 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="3776c-123">Then compile and execute the following example, which attempts to call the `StringUtilities.SayGoodMorning` method in the StringUtilities.dll dynamic link library as if it were unmanaged code.</span></span> <span data-ttu-id="3776c-124">結果是<xref:System.EntryPointNotFoundException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3776c-124">The result is an <xref:System.EntryPointNotFoundException> exception.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/importassembly1.cs#4)]
     [!code-vb[System.EntryPointNotFoundException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/importassembly1.vb#4)]  
  
     <span data-ttu-id="3776c-125">若要排除例外狀況，將參考加入至 managed 組件及存取`StringUtilities.SayGoodMorning`方法就像存取任何其他方法在 managed 程式碼，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="3776c-125">To eliminate the exception, add a reference to the managed assembly and access the `StringUtilities.SayGoodMorning` method just as you would access any other method in managed code, as the following example does.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/fiximportassembly1.cs#5)]
     [!code-vb[System.EntryPointNotFoundException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/fiximportassembly1.vb#5)]  
  
-   <span data-ttu-id="3776c-126">您嘗試在 COM DLL 中呼叫的方法，如同它是 Windows DLL。</span><span class="sxs-lookup"><span data-stu-id="3776c-126">You are trying to call a method in a COM DLL as if it were a Windows DLL.</span></span> <span data-ttu-id="3776c-127">若要存取 COM DLL，請選取**加入參考**以將參考加入專案，然後選取 [型別程式庫，從 Visual Studio 中的選項**COM** ] 索引標籤。</span><span class="sxs-lookup"><span data-stu-id="3776c-127">To access a COM DLL, select the **Add Reference** option in Visual Studio to add a reference to the project, and then select the type library from the **COM** tab.</span></span>  
  
 <span data-ttu-id="3776c-128">如需執行個體的初始屬性值的清單<xref:System.EntryPointNotFoundException>，請參閱<xref:System.EntryPointNotFoundException.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="3776c-128">For a list of initial property values for an instance of <xref:System.EntryPointNotFoundException>, see the <xref:System.EntryPointNotFoundException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3776c-129">初始化 <see cref="T:System.EntryPointNotFoundException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-129">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3776c-130">初始化 <see cref="T:System.EntryPointNotFoundException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-130">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3776c-131">這個建構函式初始化<xref:System.Exception.Message%2A>屬性的新執行個體的系統提供的訊息，說明錯誤，例如 「 進入點找不到。 」</span><span class="sxs-lookup"><span data-stu-id="3776c-131">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Entry point was not found."</span></span> <span data-ttu-id="3776c-132">此訊息會考量目前的系統文化特性。</span><span class="sxs-lookup"><span data-stu-id="3776c-132">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="3776c-133">下表顯示 <xref:System.EntryPointNotFoundException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="3776c-133">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="3776c-134">屬性</span><span class="sxs-lookup"><span data-stu-id="3776c-134">Property</span></span>|<span data-ttu-id="3776c-135">值</span><span class="sxs-lookup"><span data-stu-id="3776c-135">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3776c-136">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="3776c-136">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="3776c-137">當地語系化的錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="3776c-137">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3776c-138">解釋例外狀況原因的錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-138">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3776c-139">使用指定的錯誤訊息，初始化 <see cref="T:System.EntryPointNotFoundException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-139">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3776c-140">`message` 的內容必須能讓人了解。</span><span class="sxs-lookup"><span data-stu-id="3776c-140">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="3776c-141">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</span><span class="sxs-lookup"><span data-stu-id="3776c-141">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="3776c-142">下表顯示 <xref:System.EntryPointNotFoundException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="3776c-142">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="3776c-143">屬性</span><span class="sxs-lookup"><span data-stu-id="3776c-143">Property</span></span>|<span data-ttu-id="3776c-144">值</span><span class="sxs-lookup"><span data-stu-id="3776c-144">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3776c-145">null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="3776c-145">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="3776c-146">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="3776c-146">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EntryPointNotFoundException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="3776c-147">存放序列物件資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-147">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3776c-148">關於來源或目的端的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-148">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3776c-149">使用序列化資料，初始化 <see cref="T:System.EntryPointNotFoundException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-149">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3776c-150">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="3776c-150">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string * Exception -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3776c-151">解釋例外狀況原因的錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-151">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="3776c-152">做為目前例外狀況發生原因的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-152">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="3776c-153">如果 <c>inner</c> 參數不是 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，則會在處理內部例外狀況的 <see langword="catch" /> 區塊中引發目前的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-153">If the <c>inner</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3776c-154">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.EntryPointNotFoundException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3776c-154">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3776c-155">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <xref:System.Exception.InnerException%2A> 屬性中包含對前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="3776c-155">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="3776c-156"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `Nothing` 屬性不提供內部例外值給建構函式，則傳回 null 參考 (在 Visual Basic 中為 <xref:System.Exception.InnerException%2A>)。</span><span class="sxs-lookup"><span data-stu-id="3776c-156">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="3776c-157">下表顯示 <xref:System.EntryPointNotFoundException> 執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="3776c-157">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="3776c-158">屬性</span><span class="sxs-lookup"><span data-stu-id="3776c-158">Property</span></span>|<span data-ttu-id="3776c-159">值</span><span class="sxs-lookup"><span data-stu-id="3776c-159">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3776c-160">內部例外狀況參考。</span><span class="sxs-lookup"><span data-stu-id="3776c-160">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="3776c-161">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="3776c-161">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>